* (x) usize
** (x) Keep usize
  - usize typically is the incorrect choice to represent domain inputs.
  - In this case, it makes sense since our inputs represent indices, and any input
    will be casted to usize anyway.

* provided weights
  - weight arrays are variable length
  - could argue that we can interpret the dimensions the user passes based on
  -  match the length of the weight array to the length of the simplex array
  -- UB if the user passes a weight array with the same length as two same-length simplex arrays
  -- possibility of defaulting to the first array if the lengths are the same
  -- but the simpler solution is to require the user to pass the weight dimensions

* ( ) OPT complex validity
  $ OptComplex
  An OptComplex is a partially specified simplicial complex, where certain dimensions are left unspecified.

  - (?) opt complexes assume that if a dimension is provided, then that dimension is completely specified
  - might want to be able to partially specify all the simplices in a dimension.
  - bad idea: this creates ambiguity about the user's input. 
    -- we would like to enable the user to give duplicate simplices in their input.
  -- the opt complex should _*/ONLY/*_ be about only specifying the needed dimensions
  - (!) verify behavior when, for example, dimensions 0, 1, 3 are specified, but the 1-faces of 
        the 3-simplices is not the same set as the provided 1-simplices
  -- for example, what if the provieded 1-simplices are a subset.
   - a superset?
  -- (?) what should this behavior be?


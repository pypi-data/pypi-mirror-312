cloudflare:
  # Defines the Cloudflare zone ID
  # Multiple values can be passed via a comma-separated string, e.g., "zone1,zone2,etc."
  zoneIds: ""
  # Defines the Cloudflare API token
  apiToken: ""

# Defines how many lines to bulk insert into the database per transaction
chunkSize: "10000"  # Default to 10000

outputs:
  # Defines where to store the downloaded logs
  # Skipping this value will result in the logs being printed to the console
  dbConnStr: ""

replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: docker.io/mihaibojin/waf-downloader
  # This sets the pull policy for images.
  pullPolicy: Always

# This is for the secretes for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels:
  name: waf-downloader

podSecurityContext:
  runAsUser: 30000
  runAsGroup: 30000
  fsGroup: 30000

securityContext:
  allowPrivilegeEscalation: false
  # readOnlyRootFilesystem: true
  # runAsUser: 1000
  privileged: false
  runAsNonRoot: true
  capabilities:
    drop:
      - ALL

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts: []
  tls: []

resources:
  requests:
    cpu: 100m
    memory: 256Mi

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

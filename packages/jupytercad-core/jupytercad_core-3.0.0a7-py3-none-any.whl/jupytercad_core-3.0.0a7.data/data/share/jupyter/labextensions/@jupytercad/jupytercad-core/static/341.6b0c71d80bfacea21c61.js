"use strict";(self.webpackChunk_jupytercad_jupytercad_core=self.webpackChunk_jupytercad_jupytercad_core||[]).push([[341],{2341:(e,t,s)=>{var a,r,o;s.r(t),s.d(t,{IAnnotationToken:()=>m,IJCadExternalCommandRegistryToken:()=>b,IJCadFormSchemaRegistryToken:()=>S,IJCadWorkerRegistryToken:()=>y,IJupyterCadDocTracker:()=>_,JCadWorkerSupportedFormat:()=>o,JupyterCadDoc:()=>l,JupyterCadModel:()=>g,MainAction:()=>r,WorkerAction:()=>a}),function(e){e.DRY_RUN="DRY_RUN",e.LOAD_FILE="LOAD_FILE",e.SAVE_FILE="SAVE_FILE",e.REGISTER="REGISTER",e.POSTPROCESS="POSTPROCESS"}(a||(a={})),function(e){e.DISPLAY_SHAPE="DISPLAY_SHAPE",e.INITIALIZED="INITIALIZED",e.DISPLAY_POST="DISPLAY_POST",e.DRY_RUN_RESPONSE="DRY_RUN_RESPONSE"}(r||(r={})),function(e){e.BREP="BREP",e.GLTF="GLTF"}(o||(o={}));var i=s(4602),n=s(1601),d=s.n(n),h=s(8e3),c=s(7262),p=s(2206);class l extends h.YDocument{constructor(){super(),this.editable=!0,this._objectsObserver=e=>{const t=[];let s=!1;e.forEach((e=>{const a=e.target.get("name");a&&e.keys.forEach(((r,o)=>{s||"shapeMetadata"===o||(s=!0),t.push({name:a,key:o,newValue:c.JSONExt.deepCopy(e.target.toJSON())})}))})),s=0===t.length||s,s&&this._objectsChanged.emit({objectChange:t}),this._changed.emit({objectChange:t})},this._metaObserver=e=>{this._metadataChanged.emit(e.keys)},this._optionsObserver=e=>{this._optionsChanged.emit(e.keys)},this._metadataChanged=new i.Signal(this),this._optionsChanged=new i.Signal(this),this._objectsChanged=new i.Signal(this),this._options=this.ydoc.getMap("options"),this._objects=this.ydoc.getArray("objects"),this._metadata=this.ydoc.getMap("metadata"),this._outputs=this.ydoc.getMap("outputs"),this.undoManager.addToScope(this._objects),this._objects.observeDeep(this._objectsObserver),this._metadata.observe(this._metaObserver),this._options.observe(this._optionsObserver)}dispose(){super.dispose()}get version(){return"0.1.0"}get objects(){return this._objects.map((e=>c.JSONExt.deepCopy(e.toJSON())))}get options(){return c.JSONExt.deepCopy(this._options.toJSON())}get metadata(){return c.JSONExt.deepCopy(this._metadata.toJSON())}get outputs(){return c.JSONExt.deepCopy(this._outputs.toJSON())}get objectsChanged(){return this._objectsChanged}get optionsChanged(){return this._optionsChanged}getSource(){return{objects:this._objects.toJSON(),options:this._options.toJSON(),metadata:this._metadata.toJSON(),outputs:this._outputs.toJSON()}}setSource(e){e&&this.transact((()=>{var t,s,a,r;(null!==(t=e.objects)&&void 0!==t?t:[]).forEach((e=>{this._objects.push([new p.Map(Object.entries(e))])}));const o=null!==(s=e.options)&&void 0!==s?s:{};Object.entries(o).forEach((([e,t])=>this._options.set(e,t)));const i=null!==(a=e.metadata)&&void 0!==a?a:{};Object.entries(i).forEach((([e,t])=>this._metadata.set(e,t)));const n=null!==(r=e.outputs)&&void 0!==r?r:{};Object.entries(n).forEach((([e,t])=>this._outputs.set(e,t)))}))}get metadataChanged(){return this._metadataChanged}objectExists(e){return Boolean(this._getObjectAsYMapByName(e))}getObjectByName(e){const t=this._getObjectAsYMapByName(e);if(t)return c.JSONExt.deepCopy(t.toJSON())}getDependants(e){const t=[],s=new Map;for(const e of this._objects){const t=e.get("dependencies")||[],a=e.get("name");t.forEach((e=>{const t=s.get(e);t?t.add(a):s.set(e,new Set([a]))}))}const a=s.get(e);if(!a)return[];for(;a.size;)[...a].forEach((e=>{var r;t.push(e),a.delete(e),null===(r=s.get(e))||void 0===r||r.forEach((e=>a.add(e)))}));return t}removeObjects(e){this.transact((()=>{for(const t of e)this.removeObjectByName(t)}))}removeObjectByName(e){let t=0;for(const s of this._objects){if(s.get("name")===e)break;t++}this._objects.length>t&&(this._objects.delete(t),this.removeOutput(e))}addObject(e){this.addObjects([e])}addObjects(e){this.transact((()=>{e.map((e=>{this.objectExists(e.name)?console.error("There is already an object with the name:",e.name):this._objects.push([new p.Map(Object.entries(e))])}))}))}updateObjectByName(e,t){const s=this._getObjectAsYMapByName(e);if(!s)return;const{key:a,value:r}=t.data;this.transact((()=>{if("parameters"===a)switch(s.get("shape")){case"Part::Cut":s.set("dependencies",[r.Base,r.Tool]);break;case"Part::Extrusion":case"Part::Fillet":case"Part::Chamfer":s.set("dependencies",[r.Base]);break;case"Part::MultiCommon":case"Part::MultiFuse":s.set("dependencies",r.Shapes)}s.set(a,r),t.meta&&s.set("shapeMetadata",t.meta)}))}getOption(e){const t=this._options.get(e);if(t)return c.JSONExt.deepCopy(t)}setOption(e,t){this.transact((()=>{this._options.set(e,t)}))}setOptions(e){this.transact((()=>{for(const[t,s]of Object.entries(e))this._options.set(t,s)}))}getMetadata(e){return this._metadata.get(e)}setMetadata(e,t){this.transact((()=>{this._metadata.set(e,t)}))}removeMetadata(e){this._metadata.has(e)&&this._metadata.delete(e)}getOutput(e){return this._outputs.get(e)}setOutput(e,t){this.transact((()=>{this._outputs.set(e,t)}))}removeOutput(e){this._outputs.has(e)&&this._outputs.delete(e)}setShapeMeta(e,t){const s=this._getObjectAsYMapByName(e);t&&s&&this.transact((()=>{s.set("shapeMetadata",t)}))}static create(){return new l}_getObjectAsYMapByName(e){for(const t of this._objects)if(t.get("name")===e)return t}}const u=JSON.parse('{"type":"object","title":"IJCadContent","required":["objects"],"additionalProperties":false,"properties":{"objects":{"$ref":"#/definitions/jcadModel"},"options":{"$ref":"#/definitions/jcadOptions"},"metadata":{"type":"object","patternProperties":{"^.*$":{"type":"string"}},"additionalProperties":false},"outputs":{"type":"object","additionalProperties":false,"patternProperties":{"^.*$":{"type":"string"}}}},"definitions":{"parts":{"type":"string","enum":["Part::Any","Part::Box","Part::Cylinder","Part::Sphere","Part::Cone","Part::Torus","Part::Cut","Part::MultiFuse","Part::MultiCommon","Part::Extrusion","Part::Chamfer","Part::Fillet","Sketcher::SketchObject","Post::Operator"]},"shapeMetadata":{"title":"IShapeMetadata","type":"object","additionalProperties":false,"properties":{"shapeFormat":{"type":"string"},"workerId":{"type":"string"},"mass":{"type":"number"},"centerOfMass":{"type":"array","items":{"type":"number"}},"matrixOfInertia":{"type":"array","items":{"type":"array","items":{"type":"number"}}}}},"jcadObject":{"title":"IJCadObject","type":"object","additionalProperties":false,"required":["name","visible"],"properties":{"name":{"type":"string"},"visible":{"type":"boolean"},"shape":{"$ref":"#/definitions/parts"},"parameters":{"type":"object"},"shapeMetadata":{"$ref":"#/definitions/shapeMetadata"},"operators":{"type":"array","items":{"type":"object"}},"dependencies":{"type":"array","items":{"type":"string"}}}},"jcadModel":{"title":"IJCadModel","type":"array","default":[],"items":{"$ref":"#/definitions/jcadObject"}},"jcadOptions":{"title":"IJCadOptions","type":"object","default":{},"additionalProperties":false,"properties":{}}}}');class g{constructor(e){this._onSharedModelChanged=(e,t)=>{var s;t&&(null===(s=null==t?void 0:t.objectChange)||void 0===s?void 0:s.length)&&(this._contentChanged.emit(void 0),this.dirty=!0)},this.collaborative=void 0===document.querySelectorAll("[data-jupyter-lite-root]")[0],this._onClientStateChanged=e=>{const t=this.sharedModel.awareness.getStates();this._clientStateChanged.emit(t),this._sharedModel.awareness.on("change",(e=>{(e.added.length||e.removed.length)&&this._userChanged.emit(this.users)}))},this.defaultKernelName="",this.defaultKernelLanguage="",this._dirty=!1,this._readOnly=!1,this._isDisposed=!1,this._userChanged=new i.Signal(this),this._disposed=new i.Signal(this),this._contentChanged=new i.Signal(this),this._stateChanged=new i.Signal(this),this._themeChanged=new i.Signal(this),this._clientStateChanged=new i.Signal(this);const{annotationModel:t,sharedModel:s}=e;s?this._sharedModel=s:(this._sharedModel=this.createSharedModel(),this._sharedModel.changed.connect(this._onSharedModelChanged)),this.sharedModel.awareness.on("change",this._onClientStateChanged),this.annotationModel=t}createSharedModel(){return l.create()}get sharedModel(){return this._sharedModel}get isDisposed(){return this._isDisposed}get contentChanged(){return this._contentChanged}get stateChanged(){return this._stateChanged}get themeChanged(){return this._themeChanged}get currentUserId(){var e;return null===(e=this.sharedModel)||void 0===e?void 0:e.awareness.clientID}get users(){var e;this._usersMap=null===(e=this._sharedModel)||void 0===e?void 0:e.awareness.getStates();const t=[];return this._usersMap&&this._usersMap.forEach(((e,s)=>{t.push({userId:s,userData:e.user})})),t}get userChanged(){return this._userChanged}get dirty(){return this._dirty}set dirty(e){this._dirty=e}get readOnly(){return this._readOnly}set readOnly(e){this._readOnly=e}get localState(){return this.sharedModel.awareness.getLocalState()}get clientStateChanged(){return this._clientStateChanged}get sharedMetadataChanged(){return this.sharedModel.metadataChanged}get sharedOptionsChanged(){return this.sharedModel.optionsChanged}get sharedObjectsChanged(){return this.sharedModel.objectsChanged}get disposed(){return this._disposed}dispose(){this._isDisposed||(this._isDisposed=!0,this._sharedModel.dispose(),this._disposed.emit(),i.Signal.clearData(this))}toString(){return JSON.stringify(this.getContent(),null,2)}fromString(e){const t=JSON.parse(e);if(!(new(d())).compile(u)(t))throw Error("File format error");this.sharedModel.transact((()=>{var e;this.sharedModel.addObjects(t.objects),this.sharedModel.setOptions(null!==(e=t.options)&&void 0!==e?e:{})})),this.dirty=!0}toJSON(){return JSON.parse(this.toString())}fromJSON(e){}initialize(){}getWorker(){return g.worker}getContent(){return{objects:this.sharedModel.objects,options:this.sharedModel.options}}getAllObject(){return this.sharedModel.objects}syncPointer(e,t){this.sharedModel.awareness.setLocalStateField("pointer",{value:e,emitter:t})}syncCamera(e,t){this.sharedModel.awareness.setLocalStateField("camera",{value:e,emitter:t})}syncSelected(e,t){this.sharedModel.awareness.setLocalStateField("selected",{value:e,emitter:t})}syncSelectedPropField(e){this.sharedModel.awareness.setLocalStateField("selectedPropField",e)}setUserToFollow(e){this._sharedModel&&this._sharedModel.awareness.setLocalStateField("remoteUser",e)}syncFormData(e){this._sharedModel&&this._sharedModel.awareness.setLocalStateField("toolbarForm",e)}getClientId(){return this.sharedModel.awareness.clientID}addMetadata(e,t){this.sharedModel.setMetadata(e,t)}removeMetadata(e){this.sharedModel.removeMetadata(e)}}const _=new c.Token("jupyterCadDocTracker"),m=new c.Token("jupytercadAnnotationModel"),y=new c.Token("jupytercadWorkerRegistry"),S=new c.Token("jupytercadFormSchemaRegistry"),b=new c.Token("jupytercadExternalCommandRegistry")}}]);
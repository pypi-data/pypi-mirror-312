# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetAccessRegionsByDestRegionResult',
    'AwaitableGetAccessRegionsByDestRegionResult',
    'get_access_regions_by_dest_region',
    'get_access_regions_by_dest_region_output',
]

@pulumi.output_type
class GetAccessRegionsByDestRegionResult:
    """
    A collection of values returned by getAccessRegionsByDestRegion.
    """
    def __init__(__self__, access_region_sets=None, dest_region=None, id=None, ip_address_version=None, package_type=None, result_output_file=None):
        if access_region_sets and not isinstance(access_region_sets, list):
            raise TypeError("Expected argument 'access_region_sets' to be a list")
        pulumi.set(__self__, "access_region_sets", access_region_sets)
        if dest_region and not isinstance(dest_region, str):
            raise TypeError("Expected argument 'dest_region' to be a str")
        pulumi.set(__self__, "dest_region", dest_region)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if ip_address_version and not isinstance(ip_address_version, str):
            raise TypeError("Expected argument 'ip_address_version' to be a str")
        pulumi.set(__self__, "ip_address_version", ip_address_version)
        if package_type and not isinstance(package_type, str):
            raise TypeError("Expected argument 'package_type' to be a str")
        pulumi.set(__self__, "package_type", package_type)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)

    @property
    @pulumi.getter(name="accessRegionSets")
    def access_region_sets(self) -> Sequence['outputs.GetAccessRegionsByDestRegionAccessRegionSetResult']:
        """
        List of available acceleration zone information.
        """
        return pulumi.get(self, "access_region_sets")

    @property
    @pulumi.getter(name="destRegion")
    def dest_region(self) -> str:
        return pulumi.get(self, "dest_region")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="ipAddressVersion")
    def ip_address_version(self) -> Optional[str]:
        return pulumi.get(self, "ip_address_version")

    @property
    @pulumi.getter(name="packageType")
    def package_type(self) -> Optional[str]:
        return pulumi.get(self, "package_type")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")


class AwaitableGetAccessRegionsByDestRegionResult(GetAccessRegionsByDestRegionResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetAccessRegionsByDestRegionResult(
            access_region_sets=self.access_region_sets,
            dest_region=self.dest_region,
            id=self.id,
            ip_address_version=self.ip_address_version,
            package_type=self.package_type,
            result_output_file=self.result_output_file)


def get_access_regions_by_dest_region(dest_region: Optional[str] = None,
                                      ip_address_version: Optional[str] = None,
                                      package_type: Optional[str] = None,
                                      result_output_file: Optional[str] = None,
                                      opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetAccessRegionsByDestRegionResult:
    """
    Use this data source to query detailed information of gaap access regions by dest region

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    access_regions_by_dest_region = tencentcloud.Gaap.get_access_regions_by_dest_region(dest_region="SouthChina")
    ```
    <!--End PulumiCodeChooser -->


    :param str dest_region: Origin region.
    :param str ip_address_version: IP version, can be taken as IPv4 or IPv6, with a default value of IPv4.
    :param str package_type: Channel package type, where Thunder represents a standard proxy group, Accelerator represents a game accelerator proxy, and CrossBorder represents a cross-border proxy.
    :param str result_output_file: Used to save results.
    """
    __args__ = dict()
    __args__['destRegion'] = dest_region
    __args__['ipAddressVersion'] = ip_address_version
    __args__['packageType'] = package_type
    __args__['resultOutputFile'] = result_output_file
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('tencentcloud:Gaap/getAccessRegionsByDestRegion:getAccessRegionsByDestRegion', __args__, opts=opts, typ=GetAccessRegionsByDestRegionResult).value

    return AwaitableGetAccessRegionsByDestRegionResult(
        access_region_sets=pulumi.get(__ret__, 'access_region_sets'),
        dest_region=pulumi.get(__ret__, 'dest_region'),
        id=pulumi.get(__ret__, 'id'),
        ip_address_version=pulumi.get(__ret__, 'ip_address_version'),
        package_type=pulumi.get(__ret__, 'package_type'),
        result_output_file=pulumi.get(__ret__, 'result_output_file'))


@_utilities.lift_output_func(get_access_regions_by_dest_region)
def get_access_regions_by_dest_region_output(dest_region: Optional[pulumi.Input[str]] = None,
                                             ip_address_version: Optional[pulumi.Input[Optional[str]]] = None,
                                             package_type: Optional[pulumi.Input[Optional[str]]] = None,
                                             result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                                             opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetAccessRegionsByDestRegionResult]:
    """
    Use this data source to query detailed information of gaap access regions by dest region

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    access_regions_by_dest_region = tencentcloud.Gaap.get_access_regions_by_dest_region(dest_region="SouthChina")
    ```
    <!--End PulumiCodeChooser -->


    :param str dest_region: Origin region.
    :param str ip_address_version: IP version, can be taken as IPv4 or IPv6, with a default value of IPv4.
    :param str package_type: Channel package type, where Thunder represents a standard proxy group, Accelerator represents a game accelerator proxy, and CrossBorder represents a cross-border proxy.
    :param str result_output_file: Used to save results.
    """
    ...

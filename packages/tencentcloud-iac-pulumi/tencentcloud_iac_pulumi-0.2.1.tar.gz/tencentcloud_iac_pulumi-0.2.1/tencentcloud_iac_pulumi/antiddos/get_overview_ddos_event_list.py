# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetOverviewDdosEventListResult',
    'AwaitableGetOverviewDdosEventListResult',
    'get_overview_ddos_event_list',
    'get_overview_ddos_event_list_output',
]

@pulumi.output_type
class GetOverviewDdosEventListResult:
    """
    A collection of values returned by getOverviewDdosEventList.
    """
    def __init__(__self__, attack_status=None, end_time=None, event_lists=None, id=None, result_output_file=None, start_time=None):
        if attack_status and not isinstance(attack_status, str):
            raise TypeError("Expected argument 'attack_status' to be a str")
        pulumi.set(__self__, "attack_status", attack_status)
        if end_time and not isinstance(end_time, str):
            raise TypeError("Expected argument 'end_time' to be a str")
        pulumi.set(__self__, "end_time", end_time)
        if event_lists and not isinstance(event_lists, list):
            raise TypeError("Expected argument 'event_lists' to be a list")
        pulumi.set(__self__, "event_lists", event_lists)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)
        if start_time and not isinstance(start_time, str):
            raise TypeError("Expected argument 'start_time' to be a str")
        pulumi.set(__self__, "start_time", start_time)

    @property
    @pulumi.getter(name="attackStatus")
    def attack_status(self) -> Optional[str]:
        """
        Attack status, 0: Under attack; 1: End of attack.
        """
        return pulumi.get(self, "attack_status")

    @property
    @pulumi.getter(name="endTime")
    def end_time(self) -> str:
        """
        EndTime.
        """
        return pulumi.get(self, "end_time")

    @property
    @pulumi.getter(name="eventLists")
    def event_lists(self) -> Sequence['outputs.GetOverviewDdosEventListEventListResult']:
        """
        EventList.
        """
        return pulumi.get(self, "event_lists")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")

    @property
    @pulumi.getter(name="startTime")
    def start_time(self) -> str:
        """
        StartTime.
        """
        return pulumi.get(self, "start_time")


class AwaitableGetOverviewDdosEventListResult(GetOverviewDdosEventListResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetOverviewDdosEventListResult(
            attack_status=self.attack_status,
            end_time=self.end_time,
            event_lists=self.event_lists,
            id=self.id,
            result_output_file=self.result_output_file,
            start_time=self.start_time)


def get_overview_ddos_event_list(attack_status: Optional[str] = None,
                                 end_time: Optional[str] = None,
                                 result_output_file: Optional[str] = None,
                                 start_time: Optional[str] = None,
                                 opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetOverviewDdosEventListResult:
    """
    Use this data source to query detailed information of antiddos overview_ddos_event_list

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    overview_ddos_event_list = tencentcloud.Antiddos.get_overview_ddos_event_list(attack_status="end",
        end_time="2023-11-21 00:00:00",
        start_time="2023-11-20 00:00:00")
    ```
    <!--End PulumiCodeChooser -->


    :param str attack_status: filter event by attack status, start: attacking; end: attack end.
    :param str end_time: EndTime.
    :param str result_output_file: Used to save results.
    :param str start_time: StartTime.
    """
    __args__ = dict()
    __args__['attackStatus'] = attack_status
    __args__['endTime'] = end_time
    __args__['resultOutputFile'] = result_output_file
    __args__['startTime'] = start_time
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('tencentcloud:Antiddos/getOverviewDdosEventList:getOverviewDdosEventList', __args__, opts=opts, typ=GetOverviewDdosEventListResult).value

    return AwaitableGetOverviewDdosEventListResult(
        attack_status=pulumi.get(__ret__, 'attack_status'),
        end_time=pulumi.get(__ret__, 'end_time'),
        event_lists=pulumi.get(__ret__, 'event_lists'),
        id=pulumi.get(__ret__, 'id'),
        result_output_file=pulumi.get(__ret__, 'result_output_file'),
        start_time=pulumi.get(__ret__, 'start_time'))


@_utilities.lift_output_func(get_overview_ddos_event_list)
def get_overview_ddos_event_list_output(attack_status: Optional[pulumi.Input[Optional[str]]] = None,
                                        end_time: Optional[pulumi.Input[str]] = None,
                                        result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                                        start_time: Optional[pulumi.Input[str]] = None,
                                        opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetOverviewDdosEventListResult]:
    """
    Use this data source to query detailed information of antiddos overview_ddos_event_list

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    overview_ddos_event_list = tencentcloud.Antiddos.get_overview_ddos_event_list(attack_status="end",
        end_time="2023-11-21 00:00:00",
        start_time="2023-11-20 00:00:00")
    ```
    <!--End PulumiCodeChooser -->


    :param str attack_status: filter event by attack status, start: attacking; end: attack end.
    :param str end_time: EndTime.
    :param str result_output_file: Used to save results.
    :param str start_time: StartTime.
    """
    ...

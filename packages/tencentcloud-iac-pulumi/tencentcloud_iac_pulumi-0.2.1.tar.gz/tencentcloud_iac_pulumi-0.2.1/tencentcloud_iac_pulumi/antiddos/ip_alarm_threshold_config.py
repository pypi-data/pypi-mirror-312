# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = ['IpAlarmThresholdConfigArgs', 'IpAlarmThresholdConfig']

@pulumi.input_type
class IpAlarmThresholdConfigArgs:
    def __init__(__self__, *,
                 alarm_threshold: pulumi.Input[int],
                 alarm_type: pulumi.Input[int],
                 instance_id: pulumi.Input[str],
                 instance_ip: pulumi.Input[str]):
        """
        The set of arguments for constructing a IpAlarmThresholdConfig resource.
        :param pulumi.Input[int] alarm_threshold: Alarm threshold, in Mbps, with a value of&gt;=0; When used as an input parameter, setting 0 will delete the alarm threshold configuration;.
        :param pulumi.Input[int] alarm_type: Alarm threshold type, value [1 (incoming traffic alarm threshold) 2 (attack cleaning traffic alarm threshold)].
        :param pulumi.Input[str] instance_id: Instance id.
        :param pulumi.Input[str] instance_ip: Instance ip.
        """
        pulumi.set(__self__, "alarm_threshold", alarm_threshold)
        pulumi.set(__self__, "alarm_type", alarm_type)
        pulumi.set(__self__, "instance_id", instance_id)
        pulumi.set(__self__, "instance_ip", instance_ip)

    @property
    @pulumi.getter(name="alarmThreshold")
    def alarm_threshold(self) -> pulumi.Input[int]:
        """
        Alarm threshold, in Mbps, with a value of&gt;=0; When used as an input parameter, setting 0 will delete the alarm threshold configuration;.
        """
        return pulumi.get(self, "alarm_threshold")

    @alarm_threshold.setter
    def alarm_threshold(self, value: pulumi.Input[int]):
        pulumi.set(self, "alarm_threshold", value)

    @property
    @pulumi.getter(name="alarmType")
    def alarm_type(self) -> pulumi.Input[int]:
        """
        Alarm threshold type, value [1 (incoming traffic alarm threshold) 2 (attack cleaning traffic alarm threshold)].
        """
        return pulumi.get(self, "alarm_type")

    @alarm_type.setter
    def alarm_type(self, value: pulumi.Input[int]):
        pulumi.set(self, "alarm_type", value)

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> pulumi.Input[str]:
        """
        Instance id.
        """
        return pulumi.get(self, "instance_id")

    @instance_id.setter
    def instance_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "instance_id", value)

    @property
    @pulumi.getter(name="instanceIp")
    def instance_ip(self) -> pulumi.Input[str]:
        """
        Instance ip.
        """
        return pulumi.get(self, "instance_ip")

    @instance_ip.setter
    def instance_ip(self, value: pulumi.Input[str]):
        pulumi.set(self, "instance_ip", value)


@pulumi.input_type
class _IpAlarmThresholdConfigState:
    def __init__(__self__, *,
                 alarm_threshold: Optional[pulumi.Input[int]] = None,
                 alarm_type: Optional[pulumi.Input[int]] = None,
                 instance_id: Optional[pulumi.Input[str]] = None,
                 instance_ip: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering IpAlarmThresholdConfig resources.
        :param pulumi.Input[int] alarm_threshold: Alarm threshold, in Mbps, with a value of&gt;=0; When used as an input parameter, setting 0 will delete the alarm threshold configuration;.
        :param pulumi.Input[int] alarm_type: Alarm threshold type, value [1 (incoming traffic alarm threshold) 2 (attack cleaning traffic alarm threshold)].
        :param pulumi.Input[str] instance_id: Instance id.
        :param pulumi.Input[str] instance_ip: Instance ip.
        """
        if alarm_threshold is not None:
            pulumi.set(__self__, "alarm_threshold", alarm_threshold)
        if alarm_type is not None:
            pulumi.set(__self__, "alarm_type", alarm_type)
        if instance_id is not None:
            pulumi.set(__self__, "instance_id", instance_id)
        if instance_ip is not None:
            pulumi.set(__self__, "instance_ip", instance_ip)

    @property
    @pulumi.getter(name="alarmThreshold")
    def alarm_threshold(self) -> Optional[pulumi.Input[int]]:
        """
        Alarm threshold, in Mbps, with a value of&gt;=0; When used as an input parameter, setting 0 will delete the alarm threshold configuration;.
        """
        return pulumi.get(self, "alarm_threshold")

    @alarm_threshold.setter
    def alarm_threshold(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "alarm_threshold", value)

    @property
    @pulumi.getter(name="alarmType")
    def alarm_type(self) -> Optional[pulumi.Input[int]]:
        """
        Alarm threshold type, value [1 (incoming traffic alarm threshold) 2 (attack cleaning traffic alarm threshold)].
        """
        return pulumi.get(self, "alarm_type")

    @alarm_type.setter
    def alarm_type(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "alarm_type", value)

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> Optional[pulumi.Input[str]]:
        """
        Instance id.
        """
        return pulumi.get(self, "instance_id")

    @instance_id.setter
    def instance_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "instance_id", value)

    @property
    @pulumi.getter(name="instanceIp")
    def instance_ip(self) -> Optional[pulumi.Input[str]]:
        """
        Instance ip.
        """
        return pulumi.get(self, "instance_ip")

    @instance_ip.setter
    def instance_ip(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "instance_ip", value)


class IpAlarmThresholdConfig(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 alarm_threshold: Optional[pulumi.Input[int]] = None,
                 alarm_type: Optional[pulumi.Input[int]] = None,
                 instance_id: Optional[pulumi.Input[str]] = None,
                 instance_ip: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Provides a resource to create a antiddos ip_alarm_threshold_config

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        ip_alarm_threshold_config = tencentcloud.antiddos.IpAlarmThresholdConfig("ipAlarmThresholdConfig",
            alarm_threshold=2,
            alarm_type=1,
            instance_id="bgp-xxxxxx",
            instance_ip="xxx.xxx.xxx.xxx")
        ```
        <!--End PulumiCodeChooser -->

        ## Import

        antiddos ip_alarm_threshold_config can be imported using the id, e.g.

        ```sh
        $ pulumi import tencentcloud:Antiddos/ipAlarmThresholdConfig:IpAlarmThresholdConfig ip_alarm_threshold_config ${instanceId}#${instanceIp}#${alarmType}
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[int] alarm_threshold: Alarm threshold, in Mbps, with a value of&gt;=0; When used as an input parameter, setting 0 will delete the alarm threshold configuration;.
        :param pulumi.Input[int] alarm_type: Alarm threshold type, value [1 (incoming traffic alarm threshold) 2 (attack cleaning traffic alarm threshold)].
        :param pulumi.Input[str] instance_id: Instance id.
        :param pulumi.Input[str] instance_ip: Instance ip.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: IpAlarmThresholdConfigArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Provides a resource to create a antiddos ip_alarm_threshold_config

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        ip_alarm_threshold_config = tencentcloud.antiddos.IpAlarmThresholdConfig("ipAlarmThresholdConfig",
            alarm_threshold=2,
            alarm_type=1,
            instance_id="bgp-xxxxxx",
            instance_ip="xxx.xxx.xxx.xxx")
        ```
        <!--End PulumiCodeChooser -->

        ## Import

        antiddos ip_alarm_threshold_config can be imported using the id, e.g.

        ```sh
        $ pulumi import tencentcloud:Antiddos/ipAlarmThresholdConfig:IpAlarmThresholdConfig ip_alarm_threshold_config ${instanceId}#${instanceIp}#${alarmType}
        ```

        :param str resource_name: The name of the resource.
        :param IpAlarmThresholdConfigArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(IpAlarmThresholdConfigArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 alarm_threshold: Optional[pulumi.Input[int]] = None,
                 alarm_type: Optional[pulumi.Input[int]] = None,
                 instance_id: Optional[pulumi.Input[str]] = None,
                 instance_ip: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = IpAlarmThresholdConfigArgs.__new__(IpAlarmThresholdConfigArgs)

            if alarm_threshold is None and not opts.urn:
                raise TypeError("Missing required property 'alarm_threshold'")
            __props__.__dict__["alarm_threshold"] = alarm_threshold
            if alarm_type is None and not opts.urn:
                raise TypeError("Missing required property 'alarm_type'")
            __props__.__dict__["alarm_type"] = alarm_type
            if instance_id is None and not opts.urn:
                raise TypeError("Missing required property 'instance_id'")
            __props__.__dict__["instance_id"] = instance_id
            if instance_ip is None and not opts.urn:
                raise TypeError("Missing required property 'instance_ip'")
            __props__.__dict__["instance_ip"] = instance_ip
        super(IpAlarmThresholdConfig, __self__).__init__(
            'tencentcloud:Antiddos/ipAlarmThresholdConfig:IpAlarmThresholdConfig',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            alarm_threshold: Optional[pulumi.Input[int]] = None,
            alarm_type: Optional[pulumi.Input[int]] = None,
            instance_id: Optional[pulumi.Input[str]] = None,
            instance_ip: Optional[pulumi.Input[str]] = None) -> 'IpAlarmThresholdConfig':
        """
        Get an existing IpAlarmThresholdConfig resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[int] alarm_threshold: Alarm threshold, in Mbps, with a value of&gt;=0; When used as an input parameter, setting 0 will delete the alarm threshold configuration;.
        :param pulumi.Input[int] alarm_type: Alarm threshold type, value [1 (incoming traffic alarm threshold) 2 (attack cleaning traffic alarm threshold)].
        :param pulumi.Input[str] instance_id: Instance id.
        :param pulumi.Input[str] instance_ip: Instance ip.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _IpAlarmThresholdConfigState.__new__(_IpAlarmThresholdConfigState)

        __props__.__dict__["alarm_threshold"] = alarm_threshold
        __props__.__dict__["alarm_type"] = alarm_type
        __props__.__dict__["instance_id"] = instance_id
        __props__.__dict__["instance_ip"] = instance_ip
        return IpAlarmThresholdConfig(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="alarmThreshold")
    def alarm_threshold(self) -> pulumi.Output[int]:
        """
        Alarm threshold, in Mbps, with a value of&gt;=0; When used as an input parameter, setting 0 will delete the alarm threshold configuration;.
        """
        return pulumi.get(self, "alarm_threshold")

    @property
    @pulumi.getter(name="alarmType")
    def alarm_type(self) -> pulumi.Output[int]:
        """
        Alarm threshold type, value [1 (incoming traffic alarm threshold) 2 (attack cleaning traffic alarm threshold)].
        """
        return pulumi.get(self, "alarm_type")

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> pulumi.Output[str]:
        """
        Instance id.
        """
        return pulumi.get(self, "instance_id")

    @property
    @pulumi.getter(name="instanceIp")
    def instance_ip(self) -> pulumi.Output[str]:
        """
        Instance ip.
        """
        return pulumi.get(self, "instance_ip")


# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['ZoneVpcAttachmentArgs', 'ZoneVpcAttachment']

@pulumi.input_type
class ZoneVpcAttachmentArgs:
    def __init__(__self__, *,
                 zone_id: pulumi.Input[str],
                 account_vpc_set: Optional[pulumi.Input['ZoneVpcAttachmentAccountVpcSetArgs']] = None,
                 vpc_set: Optional[pulumi.Input['ZoneVpcAttachmentVpcSetArgs']] = None):
        """
        The set of arguments for constructing a ZoneVpcAttachment resource.
        :param pulumi.Input[str] zone_id: PrivateZone ID.
        :param pulumi.Input['ZoneVpcAttachmentAccountVpcSetArgs'] account_vpc_set: New add account vpc info.
        :param pulumi.Input['ZoneVpcAttachmentVpcSetArgs'] vpc_set: New add vpc info.
        """
        pulumi.set(__self__, "zone_id", zone_id)
        if account_vpc_set is not None:
            pulumi.set(__self__, "account_vpc_set", account_vpc_set)
        if vpc_set is not None:
            pulumi.set(__self__, "vpc_set", vpc_set)

    @property
    @pulumi.getter(name="zoneId")
    def zone_id(self) -> pulumi.Input[str]:
        """
        PrivateZone ID.
        """
        return pulumi.get(self, "zone_id")

    @zone_id.setter
    def zone_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "zone_id", value)

    @property
    @pulumi.getter(name="accountVpcSet")
    def account_vpc_set(self) -> Optional[pulumi.Input['ZoneVpcAttachmentAccountVpcSetArgs']]:
        """
        New add account vpc info.
        """
        return pulumi.get(self, "account_vpc_set")

    @account_vpc_set.setter
    def account_vpc_set(self, value: Optional[pulumi.Input['ZoneVpcAttachmentAccountVpcSetArgs']]):
        pulumi.set(self, "account_vpc_set", value)

    @property
    @pulumi.getter(name="vpcSet")
    def vpc_set(self) -> Optional[pulumi.Input['ZoneVpcAttachmentVpcSetArgs']]:
        """
        New add vpc info.
        """
        return pulumi.get(self, "vpc_set")

    @vpc_set.setter
    def vpc_set(self, value: Optional[pulumi.Input['ZoneVpcAttachmentVpcSetArgs']]):
        pulumi.set(self, "vpc_set", value)


@pulumi.input_type
class _ZoneVpcAttachmentState:
    def __init__(__self__, *,
                 account_vpc_set: Optional[pulumi.Input['ZoneVpcAttachmentAccountVpcSetArgs']] = None,
                 vpc_set: Optional[pulumi.Input['ZoneVpcAttachmentVpcSetArgs']] = None,
                 zone_id: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering ZoneVpcAttachment resources.
        :param pulumi.Input['ZoneVpcAttachmentAccountVpcSetArgs'] account_vpc_set: New add account vpc info.
        :param pulumi.Input['ZoneVpcAttachmentVpcSetArgs'] vpc_set: New add vpc info.
        :param pulumi.Input[str] zone_id: PrivateZone ID.
        """
        if account_vpc_set is not None:
            pulumi.set(__self__, "account_vpc_set", account_vpc_set)
        if vpc_set is not None:
            pulumi.set(__self__, "vpc_set", vpc_set)
        if zone_id is not None:
            pulumi.set(__self__, "zone_id", zone_id)

    @property
    @pulumi.getter(name="accountVpcSet")
    def account_vpc_set(self) -> Optional[pulumi.Input['ZoneVpcAttachmentAccountVpcSetArgs']]:
        """
        New add account vpc info.
        """
        return pulumi.get(self, "account_vpc_set")

    @account_vpc_set.setter
    def account_vpc_set(self, value: Optional[pulumi.Input['ZoneVpcAttachmentAccountVpcSetArgs']]):
        pulumi.set(self, "account_vpc_set", value)

    @property
    @pulumi.getter(name="vpcSet")
    def vpc_set(self) -> Optional[pulumi.Input['ZoneVpcAttachmentVpcSetArgs']]:
        """
        New add vpc info.
        """
        return pulumi.get(self, "vpc_set")

    @vpc_set.setter
    def vpc_set(self, value: Optional[pulumi.Input['ZoneVpcAttachmentVpcSetArgs']]):
        pulumi.set(self, "vpc_set", value)

    @property
    @pulumi.getter(name="zoneId")
    def zone_id(self) -> Optional[pulumi.Input[str]]:
        """
        PrivateZone ID.
        """
        return pulumi.get(self, "zone_id")

    @zone_id.setter
    def zone_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "zone_id", value)


class ZoneVpcAttachment(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 account_vpc_set: Optional[pulumi.Input[pulumi.InputType['ZoneVpcAttachmentAccountVpcSetArgs']]] = None,
                 vpc_set: Optional[pulumi.Input[pulumi.InputType['ZoneVpcAttachmentVpcSetArgs']]] = None,
                 zone_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Provides a resource to create a PrivateDns zone_vpc_attachment

        > **NOTE:**  If you need to bind account A to account B's VPC resources, you need to first grant role authorization to account A.

        ## Example Usage

        ### Append VPC associated with private dns zone

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        example_zone = tencentcloud.private_dns.Zone("exampleZone",
            domain="domain.com",
            remark="remark.",
            dns_forward_status="DISABLED",
            cname_speedup_status="ENABLED",
            tags={
                "createdBy": "terraform",
            })
        vpc = tencentcloud.vpc.Instance("vpc", cidr_block="10.0.0.0/16")
        example_zone_vpc_attachment = tencentcloud.private_dns.ZoneVpcAttachment("exampleZoneVpcAttachment",
            zone_id=example_zone.id,
            vpc_set=tencentcloud.private_dns.ZoneVpcAttachmentVpcSetArgs(
                uniq_vpc_id=vpc.id,
                region="ap-guangzhou",
            ))
        ```
        <!--End PulumiCodeChooser -->

        ### Add VPC information for associated accounts in the private dns zone

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        example = tencentcloud.private_dns.ZoneVpcAttachment("example",
            zone_id=tencentcloud_private_dns_zone["example"]["id"],
            account_vpc_set=tencentcloud.private_dns.ZoneVpcAttachmentAccountVpcSetArgs(
                uniq_vpc_id="vpc-82znjzn3",
                region="ap-guangzhou",
                uin="100017155920",
            ))
        ```
        <!--End PulumiCodeChooser -->

        ## Import

        PrivateDns zone_vpc_attachment can be imported using the id, e.g.

        ```sh
        $ pulumi import tencentcloud:PrivateDns/zoneVpcAttachment:ZoneVpcAttachment example zone-6t11lof0#vpc-jdx11z0t
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[pulumi.InputType['ZoneVpcAttachmentAccountVpcSetArgs']] account_vpc_set: New add account vpc info.
        :param pulumi.Input[pulumi.InputType['ZoneVpcAttachmentVpcSetArgs']] vpc_set: New add vpc info.
        :param pulumi.Input[str] zone_id: PrivateZone ID.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: ZoneVpcAttachmentArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Provides a resource to create a PrivateDns zone_vpc_attachment

        > **NOTE:**  If you need to bind account A to account B's VPC resources, you need to first grant role authorization to account A.

        ## Example Usage

        ### Append VPC associated with private dns zone

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        example_zone = tencentcloud.private_dns.Zone("exampleZone",
            domain="domain.com",
            remark="remark.",
            dns_forward_status="DISABLED",
            cname_speedup_status="ENABLED",
            tags={
                "createdBy": "terraform",
            })
        vpc = tencentcloud.vpc.Instance("vpc", cidr_block="10.0.0.0/16")
        example_zone_vpc_attachment = tencentcloud.private_dns.ZoneVpcAttachment("exampleZoneVpcAttachment",
            zone_id=example_zone.id,
            vpc_set=tencentcloud.private_dns.ZoneVpcAttachmentVpcSetArgs(
                uniq_vpc_id=vpc.id,
                region="ap-guangzhou",
            ))
        ```
        <!--End PulumiCodeChooser -->

        ### Add VPC information for associated accounts in the private dns zone

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        example = tencentcloud.private_dns.ZoneVpcAttachment("example",
            zone_id=tencentcloud_private_dns_zone["example"]["id"],
            account_vpc_set=tencentcloud.private_dns.ZoneVpcAttachmentAccountVpcSetArgs(
                uniq_vpc_id="vpc-82znjzn3",
                region="ap-guangzhou",
                uin="100017155920",
            ))
        ```
        <!--End PulumiCodeChooser -->

        ## Import

        PrivateDns zone_vpc_attachment can be imported using the id, e.g.

        ```sh
        $ pulumi import tencentcloud:PrivateDns/zoneVpcAttachment:ZoneVpcAttachment example zone-6t11lof0#vpc-jdx11z0t
        ```

        :param str resource_name: The name of the resource.
        :param ZoneVpcAttachmentArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(ZoneVpcAttachmentArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 account_vpc_set: Optional[pulumi.Input[pulumi.InputType['ZoneVpcAttachmentAccountVpcSetArgs']]] = None,
                 vpc_set: Optional[pulumi.Input[pulumi.InputType['ZoneVpcAttachmentVpcSetArgs']]] = None,
                 zone_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = ZoneVpcAttachmentArgs.__new__(ZoneVpcAttachmentArgs)

            __props__.__dict__["account_vpc_set"] = account_vpc_set
            __props__.__dict__["vpc_set"] = vpc_set
            if zone_id is None and not opts.urn:
                raise TypeError("Missing required property 'zone_id'")
            __props__.__dict__["zone_id"] = zone_id
        super(ZoneVpcAttachment, __self__).__init__(
            'tencentcloud:PrivateDns/zoneVpcAttachment:ZoneVpcAttachment',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            account_vpc_set: Optional[pulumi.Input[pulumi.InputType['ZoneVpcAttachmentAccountVpcSetArgs']]] = None,
            vpc_set: Optional[pulumi.Input[pulumi.InputType['ZoneVpcAttachmentVpcSetArgs']]] = None,
            zone_id: Optional[pulumi.Input[str]] = None) -> 'ZoneVpcAttachment':
        """
        Get an existing ZoneVpcAttachment resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[pulumi.InputType['ZoneVpcAttachmentAccountVpcSetArgs']] account_vpc_set: New add account vpc info.
        :param pulumi.Input[pulumi.InputType['ZoneVpcAttachmentVpcSetArgs']] vpc_set: New add vpc info.
        :param pulumi.Input[str] zone_id: PrivateZone ID.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _ZoneVpcAttachmentState.__new__(_ZoneVpcAttachmentState)

        __props__.__dict__["account_vpc_set"] = account_vpc_set
        __props__.__dict__["vpc_set"] = vpc_set
        __props__.__dict__["zone_id"] = zone_id
        return ZoneVpcAttachment(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="accountVpcSet")
    def account_vpc_set(self) -> pulumi.Output[Optional['outputs.ZoneVpcAttachmentAccountVpcSet']]:
        """
        New add account vpc info.
        """
        return pulumi.get(self, "account_vpc_set")

    @property
    @pulumi.getter(name="vpcSet")
    def vpc_set(self) -> pulumi.Output[Optional['outputs.ZoneVpcAttachmentVpcSet']]:
        """
        New add vpc info.
        """
        return pulumi.get(self, "vpc_set")

    @property
    @pulumi.getter(name="zoneId")
    def zone_id(self) -> pulumi.Output[str]:
        """
        PrivateZone ID.
        """
        return pulumi.get(self, "zone_id")


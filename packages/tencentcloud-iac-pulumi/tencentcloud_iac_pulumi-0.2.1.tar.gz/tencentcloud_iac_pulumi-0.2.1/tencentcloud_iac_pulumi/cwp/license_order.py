# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = ['LicenseOrderArgs', 'LicenseOrder']

@pulumi.input_type
class LicenseOrderArgs:
    def __init__(__self__, *,
                 alias: Optional[pulumi.Input[str]] = None,
                 license_num: Optional[pulumi.Input[int]] = None,
                 license_type: Optional[pulumi.Input[int]] = None,
                 project_id: Optional[pulumi.Input[int]] = None,
                 region_id: Optional[pulumi.Input[int]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, Any]]] = None):
        """
        The set of arguments for constructing a LicenseOrder resource.
        :param pulumi.Input[str] alias: Resource alias.
        :param pulumi.Input[int] license_num: License quantity, Quantity to be purchased.Default is 1.
        :param pulumi.Input[int] license_type: LicenseType, 0 CWP Pro - Pay as you go, 1 CWP Pro - Monthly subscription, 2 CWP Ultimate - Monthly subscription. Default is 0.
        :param pulumi.Input[int] project_id: Project ID. Default is 0.
        :param pulumi.Input[int] region_id: Purchase order region, only 1 Guangzhou, 9 Singapore is supported here. Guangzhou is recommended. Singapore is whitelisted. Default is 1.
        :param pulumi.Input[Mapping[str, Any]] tags: Tags of the license order.
        """
        if alias is not None:
            pulumi.set(__self__, "alias", alias)
        if license_num is not None:
            pulumi.set(__self__, "license_num", license_num)
        if license_type is not None:
            pulumi.set(__self__, "license_type", license_type)
        if project_id is not None:
            pulumi.set(__self__, "project_id", project_id)
        if region_id is not None:
            pulumi.set(__self__, "region_id", region_id)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)

    @property
    @pulumi.getter
    def alias(self) -> Optional[pulumi.Input[str]]:
        """
        Resource alias.
        """
        return pulumi.get(self, "alias")

    @alias.setter
    def alias(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "alias", value)

    @property
    @pulumi.getter(name="licenseNum")
    def license_num(self) -> Optional[pulumi.Input[int]]:
        """
        License quantity, Quantity to be purchased.Default is 1.
        """
        return pulumi.get(self, "license_num")

    @license_num.setter
    def license_num(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "license_num", value)

    @property
    @pulumi.getter(name="licenseType")
    def license_type(self) -> Optional[pulumi.Input[int]]:
        """
        LicenseType, 0 CWP Pro - Pay as you go, 1 CWP Pro - Monthly subscription, 2 CWP Ultimate - Monthly subscription. Default is 0.
        """
        return pulumi.get(self, "license_type")

    @license_type.setter
    def license_type(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "license_type", value)

    @property
    @pulumi.getter(name="projectId")
    def project_id(self) -> Optional[pulumi.Input[int]]:
        """
        Project ID. Default is 0.
        """
        return pulumi.get(self, "project_id")

    @project_id.setter
    def project_id(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "project_id", value)

    @property
    @pulumi.getter(name="regionId")
    def region_id(self) -> Optional[pulumi.Input[int]]:
        """
        Purchase order region, only 1 Guangzhou, 9 Singapore is supported here. Guangzhou is recommended. Singapore is whitelisted. Default is 1.
        """
        return pulumi.get(self, "region_id")

    @region_id.setter
    def region_id(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "region_id", value)

    @property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Mapping[str, Any]]]:
        """
        Tags of the license order.
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Mapping[str, Any]]]):
        pulumi.set(self, "tags", value)


@pulumi.input_type
class _LicenseOrderState:
    def __init__(__self__, *,
                 alias: Optional[pulumi.Input[str]] = None,
                 license_id: Optional[pulumi.Input[int]] = None,
                 license_num: Optional[pulumi.Input[int]] = None,
                 license_type: Optional[pulumi.Input[int]] = None,
                 project_id: Optional[pulumi.Input[int]] = None,
                 region_id: Optional[pulumi.Input[int]] = None,
                 resource_id: Optional[pulumi.Input[str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, Any]]] = None):
        """
        Input properties used for looking up and filtering LicenseOrder resources.
        :param pulumi.Input[str] alias: Resource alias.
        :param pulumi.Input[int] license_id: license id.
        :param pulumi.Input[int] license_num: License quantity, Quantity to be purchased.Default is 1.
        :param pulumi.Input[int] license_type: LicenseType, 0 CWP Pro - Pay as you go, 1 CWP Pro - Monthly subscription, 2 CWP Ultimate - Monthly subscription. Default is 0.
        :param pulumi.Input[int] project_id: Project ID. Default is 0.
        :param pulumi.Input[int] region_id: Purchase order region, only 1 Guangzhou, 9 Singapore is supported here. Guangzhou is recommended. Singapore is whitelisted. Default is 1.
        :param pulumi.Input[str] resource_id: resource id.
        :param pulumi.Input[Mapping[str, Any]] tags: Tags of the license order.
        """
        if alias is not None:
            pulumi.set(__self__, "alias", alias)
        if license_id is not None:
            pulumi.set(__self__, "license_id", license_id)
        if license_num is not None:
            pulumi.set(__self__, "license_num", license_num)
        if license_type is not None:
            pulumi.set(__self__, "license_type", license_type)
        if project_id is not None:
            pulumi.set(__self__, "project_id", project_id)
        if region_id is not None:
            pulumi.set(__self__, "region_id", region_id)
        if resource_id is not None:
            pulumi.set(__self__, "resource_id", resource_id)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)

    @property
    @pulumi.getter
    def alias(self) -> Optional[pulumi.Input[str]]:
        """
        Resource alias.
        """
        return pulumi.get(self, "alias")

    @alias.setter
    def alias(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "alias", value)

    @property
    @pulumi.getter(name="licenseId")
    def license_id(self) -> Optional[pulumi.Input[int]]:
        """
        license id.
        """
        return pulumi.get(self, "license_id")

    @license_id.setter
    def license_id(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "license_id", value)

    @property
    @pulumi.getter(name="licenseNum")
    def license_num(self) -> Optional[pulumi.Input[int]]:
        """
        License quantity, Quantity to be purchased.Default is 1.
        """
        return pulumi.get(self, "license_num")

    @license_num.setter
    def license_num(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "license_num", value)

    @property
    @pulumi.getter(name="licenseType")
    def license_type(self) -> Optional[pulumi.Input[int]]:
        """
        LicenseType, 0 CWP Pro - Pay as you go, 1 CWP Pro - Monthly subscription, 2 CWP Ultimate - Monthly subscription. Default is 0.
        """
        return pulumi.get(self, "license_type")

    @license_type.setter
    def license_type(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "license_type", value)

    @property
    @pulumi.getter(name="projectId")
    def project_id(self) -> Optional[pulumi.Input[int]]:
        """
        Project ID. Default is 0.
        """
        return pulumi.get(self, "project_id")

    @project_id.setter
    def project_id(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "project_id", value)

    @property
    @pulumi.getter(name="regionId")
    def region_id(self) -> Optional[pulumi.Input[int]]:
        """
        Purchase order region, only 1 Guangzhou, 9 Singapore is supported here. Guangzhou is recommended. Singapore is whitelisted. Default is 1.
        """
        return pulumi.get(self, "region_id")

    @region_id.setter
    def region_id(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "region_id", value)

    @property
    @pulumi.getter(name="resourceId")
    def resource_id(self) -> Optional[pulumi.Input[str]]:
        """
        resource id.
        """
        return pulumi.get(self, "resource_id")

    @resource_id.setter
    def resource_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "resource_id", value)

    @property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Mapping[str, Any]]]:
        """
        Tags of the license order.
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Mapping[str, Any]]]):
        pulumi.set(self, "tags", value)


class LicenseOrder(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 alias: Optional[pulumi.Input[str]] = None,
                 license_num: Optional[pulumi.Input[int]] = None,
                 license_type: Optional[pulumi.Input[int]] = None,
                 project_id: Optional[pulumi.Input[int]] = None,
                 region_id: Optional[pulumi.Input[int]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, Any]]] = None,
                 __props__=None):
        """
        Provides a resource to create a cwp license_order

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        example = tencentcloud.cwp.LicenseOrder("example",
            alias="tf_example",
            license_num=1,
            license_type=0,
            project_id=0,
            region_id=1,
            tags={
                "createdBy": "terraform",
            })
        ```
        <!--End PulumiCodeChooser -->

        ## Import

        cwp license_order can be imported using the id, e.g.

        ```sh
        $ pulumi import tencentcloud:Cwp/licenseOrder:LicenseOrder example cwplic-130715d2#1
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] alias: Resource alias.
        :param pulumi.Input[int] license_num: License quantity, Quantity to be purchased.Default is 1.
        :param pulumi.Input[int] license_type: LicenseType, 0 CWP Pro - Pay as you go, 1 CWP Pro - Monthly subscription, 2 CWP Ultimate - Monthly subscription. Default is 0.
        :param pulumi.Input[int] project_id: Project ID. Default is 0.
        :param pulumi.Input[int] region_id: Purchase order region, only 1 Guangzhou, 9 Singapore is supported here. Guangzhou is recommended. Singapore is whitelisted. Default is 1.
        :param pulumi.Input[Mapping[str, Any]] tags: Tags of the license order.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[LicenseOrderArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Provides a resource to create a cwp license_order

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        example = tencentcloud.cwp.LicenseOrder("example",
            alias="tf_example",
            license_num=1,
            license_type=0,
            project_id=0,
            region_id=1,
            tags={
                "createdBy": "terraform",
            })
        ```
        <!--End PulumiCodeChooser -->

        ## Import

        cwp license_order can be imported using the id, e.g.

        ```sh
        $ pulumi import tencentcloud:Cwp/licenseOrder:LicenseOrder example cwplic-130715d2#1
        ```

        :param str resource_name: The name of the resource.
        :param LicenseOrderArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(LicenseOrderArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 alias: Optional[pulumi.Input[str]] = None,
                 license_num: Optional[pulumi.Input[int]] = None,
                 license_type: Optional[pulumi.Input[int]] = None,
                 project_id: Optional[pulumi.Input[int]] = None,
                 region_id: Optional[pulumi.Input[int]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, Any]]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = LicenseOrderArgs.__new__(LicenseOrderArgs)

            __props__.__dict__["alias"] = alias
            __props__.__dict__["license_num"] = license_num
            __props__.__dict__["license_type"] = license_type
            __props__.__dict__["project_id"] = project_id
            __props__.__dict__["region_id"] = region_id
            __props__.__dict__["tags"] = tags
            __props__.__dict__["license_id"] = None
            __props__.__dict__["resource_id"] = None
        super(LicenseOrder, __self__).__init__(
            'tencentcloud:Cwp/licenseOrder:LicenseOrder',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            alias: Optional[pulumi.Input[str]] = None,
            license_id: Optional[pulumi.Input[int]] = None,
            license_num: Optional[pulumi.Input[int]] = None,
            license_type: Optional[pulumi.Input[int]] = None,
            project_id: Optional[pulumi.Input[int]] = None,
            region_id: Optional[pulumi.Input[int]] = None,
            resource_id: Optional[pulumi.Input[str]] = None,
            tags: Optional[pulumi.Input[Mapping[str, Any]]] = None) -> 'LicenseOrder':
        """
        Get an existing LicenseOrder resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] alias: Resource alias.
        :param pulumi.Input[int] license_id: license id.
        :param pulumi.Input[int] license_num: License quantity, Quantity to be purchased.Default is 1.
        :param pulumi.Input[int] license_type: LicenseType, 0 CWP Pro - Pay as you go, 1 CWP Pro - Monthly subscription, 2 CWP Ultimate - Monthly subscription. Default is 0.
        :param pulumi.Input[int] project_id: Project ID. Default is 0.
        :param pulumi.Input[int] region_id: Purchase order region, only 1 Guangzhou, 9 Singapore is supported here. Guangzhou is recommended. Singapore is whitelisted. Default is 1.
        :param pulumi.Input[str] resource_id: resource id.
        :param pulumi.Input[Mapping[str, Any]] tags: Tags of the license order.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _LicenseOrderState.__new__(_LicenseOrderState)

        __props__.__dict__["alias"] = alias
        __props__.__dict__["license_id"] = license_id
        __props__.__dict__["license_num"] = license_num
        __props__.__dict__["license_type"] = license_type
        __props__.__dict__["project_id"] = project_id
        __props__.__dict__["region_id"] = region_id
        __props__.__dict__["resource_id"] = resource_id
        __props__.__dict__["tags"] = tags
        return LicenseOrder(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter
    def alias(self) -> pulumi.Output[str]:
        """
        Resource alias.
        """
        return pulumi.get(self, "alias")

    @property
    @pulumi.getter(name="licenseId")
    def license_id(self) -> pulumi.Output[int]:
        """
        license id.
        """
        return pulumi.get(self, "license_id")

    @property
    @pulumi.getter(name="licenseNum")
    def license_num(self) -> pulumi.Output[Optional[int]]:
        """
        License quantity, Quantity to be purchased.Default is 1.
        """
        return pulumi.get(self, "license_num")

    @property
    @pulumi.getter(name="licenseType")
    def license_type(self) -> pulumi.Output[Optional[int]]:
        """
        LicenseType, 0 CWP Pro - Pay as you go, 1 CWP Pro - Monthly subscription, 2 CWP Ultimate - Monthly subscription. Default is 0.
        """
        return pulumi.get(self, "license_type")

    @property
    @pulumi.getter(name="projectId")
    def project_id(self) -> pulumi.Output[Optional[int]]:
        """
        Project ID. Default is 0.
        """
        return pulumi.get(self, "project_id")

    @property
    @pulumi.getter(name="regionId")
    def region_id(self) -> pulumi.Output[Optional[int]]:
        """
        Purchase order region, only 1 Guangzhou, 9 Singapore is supported here. Guangzhou is recommended. Singapore is whitelisted. Default is 1.
        """
        return pulumi.get(self, "region_id")

    @property
    @pulumi.getter(name="resourceId")
    def resource_id(self) -> pulumi.Output[str]:
        """
        resource id.
        """
        return pulumi.get(self, "resource_id")

    @property
    @pulumi.getter
    def tags(self) -> pulumi.Output[Optional[Mapping[str, Any]]]:
        """
        Tags of the license order.
        """
        return pulumi.get(self, "tags")


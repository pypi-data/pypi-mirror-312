# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = ['LicenseBindAttachmentArgs', 'LicenseBindAttachment']

@pulumi.input_type
class LicenseBindAttachmentArgs:
    def __init__(__self__, *,
                 license_id: pulumi.Input[int],
                 license_type: pulumi.Input[int],
                 quuid: pulumi.Input[str],
                 resource_id: pulumi.Input[str]):
        """
        The set of arguments for constructing a LicenseBindAttachment resource.
        :param pulumi.Input[int] license_id: License ID.
        :param pulumi.Input[int] license_type: LicenseType, 0 CWP Pro - Pay as you go, 1 CWP Pro - Monthly subscription, 2 CWP Ultimate - Monthly subscription. Default is 0.
        :param pulumi.Input[str] quuid: Machine quota that needs to be bound.
        :param pulumi.Input[str] resource_id: Resource ID.
        """
        pulumi.set(__self__, "license_id", license_id)
        pulumi.set(__self__, "license_type", license_type)
        pulumi.set(__self__, "quuid", quuid)
        pulumi.set(__self__, "resource_id", resource_id)

    @property
    @pulumi.getter(name="licenseId")
    def license_id(self) -> pulumi.Input[int]:
        """
        License ID.
        """
        return pulumi.get(self, "license_id")

    @license_id.setter
    def license_id(self, value: pulumi.Input[int]):
        pulumi.set(self, "license_id", value)

    @property
    @pulumi.getter(name="licenseType")
    def license_type(self) -> pulumi.Input[int]:
        """
        LicenseType, 0 CWP Pro - Pay as you go, 1 CWP Pro - Monthly subscription, 2 CWP Ultimate - Monthly subscription. Default is 0.
        """
        return pulumi.get(self, "license_type")

    @license_type.setter
    def license_type(self, value: pulumi.Input[int]):
        pulumi.set(self, "license_type", value)

    @property
    @pulumi.getter
    def quuid(self) -> pulumi.Input[str]:
        """
        Machine quota that needs to be bound.
        """
        return pulumi.get(self, "quuid")

    @quuid.setter
    def quuid(self, value: pulumi.Input[str]):
        pulumi.set(self, "quuid", value)

    @property
    @pulumi.getter(name="resourceId")
    def resource_id(self) -> pulumi.Input[str]:
        """
        Resource ID.
        """
        return pulumi.get(self, "resource_id")

    @resource_id.setter
    def resource_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "resource_id", value)


@pulumi.input_type
class _LicenseBindAttachmentState:
    def __init__(__self__, *,
                 agent_status: Optional[pulumi.Input[str]] = None,
                 is_switch_bind: Optional[pulumi.Input[bool]] = None,
                 is_unbind: Optional[pulumi.Input[bool]] = None,
                 license_id: Optional[pulumi.Input[int]] = None,
                 license_type: Optional[pulumi.Input[int]] = None,
                 machine_ip: Optional[pulumi.Input[str]] = None,
                 machine_name: Optional[pulumi.Input[str]] = None,
                 machine_wan_ip: Optional[pulumi.Input[str]] = None,
                 quuid: Optional[pulumi.Input[str]] = None,
                 resource_id: Optional[pulumi.Input[str]] = None,
                 uuid: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering LicenseBindAttachment resources.
        :param pulumi.Input[str] agent_status: agent status.
        :param pulumi.Input[bool] is_switch_bind: Is it allowed to change the binding, false is not allowed to change the binding.
        :param pulumi.Input[bool] is_unbind: Allow unbinding, false does not allow unbinding.
        :param pulumi.Input[int] license_id: License ID.
        :param pulumi.Input[int] license_type: LicenseType, 0 CWP Pro - Pay as you go, 1 CWP Pro - Monthly subscription, 2 CWP Ultimate - Monthly subscription. Default is 0.
        :param pulumi.Input[str] machine_ip: machine ip.
        :param pulumi.Input[str] machine_name: machine name.
        :param pulumi.Input[str] machine_wan_ip: machine wan ip.
        :param pulumi.Input[str] quuid: Machine quota that needs to be bound.
        :param pulumi.Input[str] resource_id: Resource ID.
        :param pulumi.Input[str] uuid: uuid.
        """
        if agent_status is not None:
            pulumi.set(__self__, "agent_status", agent_status)
        if is_switch_bind is not None:
            pulumi.set(__self__, "is_switch_bind", is_switch_bind)
        if is_unbind is not None:
            pulumi.set(__self__, "is_unbind", is_unbind)
        if license_id is not None:
            pulumi.set(__self__, "license_id", license_id)
        if license_type is not None:
            pulumi.set(__self__, "license_type", license_type)
        if machine_ip is not None:
            pulumi.set(__self__, "machine_ip", machine_ip)
        if machine_name is not None:
            pulumi.set(__self__, "machine_name", machine_name)
        if machine_wan_ip is not None:
            pulumi.set(__self__, "machine_wan_ip", machine_wan_ip)
        if quuid is not None:
            pulumi.set(__self__, "quuid", quuid)
        if resource_id is not None:
            pulumi.set(__self__, "resource_id", resource_id)
        if uuid is not None:
            pulumi.set(__self__, "uuid", uuid)

    @property
    @pulumi.getter(name="agentStatus")
    def agent_status(self) -> Optional[pulumi.Input[str]]:
        """
        agent status.
        """
        return pulumi.get(self, "agent_status")

    @agent_status.setter
    def agent_status(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "agent_status", value)

    @property
    @pulumi.getter(name="isSwitchBind")
    def is_switch_bind(self) -> Optional[pulumi.Input[bool]]:
        """
        Is it allowed to change the binding, false is not allowed to change the binding.
        """
        return pulumi.get(self, "is_switch_bind")

    @is_switch_bind.setter
    def is_switch_bind(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "is_switch_bind", value)

    @property
    @pulumi.getter(name="isUnbind")
    def is_unbind(self) -> Optional[pulumi.Input[bool]]:
        """
        Allow unbinding, false does not allow unbinding.
        """
        return pulumi.get(self, "is_unbind")

    @is_unbind.setter
    def is_unbind(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "is_unbind", value)

    @property
    @pulumi.getter(name="licenseId")
    def license_id(self) -> Optional[pulumi.Input[int]]:
        """
        License ID.
        """
        return pulumi.get(self, "license_id")

    @license_id.setter
    def license_id(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "license_id", value)

    @property
    @pulumi.getter(name="licenseType")
    def license_type(self) -> Optional[pulumi.Input[int]]:
        """
        LicenseType, 0 CWP Pro - Pay as you go, 1 CWP Pro - Monthly subscription, 2 CWP Ultimate - Monthly subscription. Default is 0.
        """
        return pulumi.get(self, "license_type")

    @license_type.setter
    def license_type(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "license_type", value)

    @property
    @pulumi.getter(name="machineIp")
    def machine_ip(self) -> Optional[pulumi.Input[str]]:
        """
        machine ip.
        """
        return pulumi.get(self, "machine_ip")

    @machine_ip.setter
    def machine_ip(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "machine_ip", value)

    @property
    @pulumi.getter(name="machineName")
    def machine_name(self) -> Optional[pulumi.Input[str]]:
        """
        machine name.
        """
        return pulumi.get(self, "machine_name")

    @machine_name.setter
    def machine_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "machine_name", value)

    @property
    @pulumi.getter(name="machineWanIp")
    def machine_wan_ip(self) -> Optional[pulumi.Input[str]]:
        """
        machine wan ip.
        """
        return pulumi.get(self, "machine_wan_ip")

    @machine_wan_ip.setter
    def machine_wan_ip(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "machine_wan_ip", value)

    @property
    @pulumi.getter
    def quuid(self) -> Optional[pulumi.Input[str]]:
        """
        Machine quota that needs to be bound.
        """
        return pulumi.get(self, "quuid")

    @quuid.setter
    def quuid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "quuid", value)

    @property
    @pulumi.getter(name="resourceId")
    def resource_id(self) -> Optional[pulumi.Input[str]]:
        """
        Resource ID.
        """
        return pulumi.get(self, "resource_id")

    @resource_id.setter
    def resource_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "resource_id", value)

    @property
    @pulumi.getter
    def uuid(self) -> Optional[pulumi.Input[str]]:
        """
        uuid.
        """
        return pulumi.get(self, "uuid")

    @uuid.setter
    def uuid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "uuid", value)


class LicenseBindAttachment(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 license_id: Optional[pulumi.Input[int]] = None,
                 license_type: Optional[pulumi.Input[int]] = None,
                 quuid: Optional[pulumi.Input[str]] = None,
                 resource_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Provides a resource to create a cwp license_bind_attachment

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import pulumi_tencentcloud as tencentcloud
        import tencentcloud_iac_pulumi as tencentcloud

        example_machines_simple = tencentcloud.Cwp.get_machines_simple(machine_type="CVM",
            machine_region="ap-guangzhou",
            project_ids=[1210293],
            filters=[tencentcloud.cwp.GetMachinesSimpleFilterArgs(
                name="Version",
                values=["BASIC_VERSION"],
                exact_match=True,
            )])
        example_license_order = tencentcloud.cwp.LicenseOrder("exampleLicenseOrder",
            alias="tf_example",
            license_type=0,
            license_num=1,
            region_id=1,
            project_id=0,
            tags={
                "createdBy": "terraform",
            })
        example_license_bind_attachment = tencentcloud.cwp.LicenseBindAttachment("exampleLicenseBindAttachment",
            resource_id=example_license_order.resource_id,
            license_id=example_license_order.license_id,
            license_type=0,
            quuid=example_machines_simple.machines[0].quuid)
        ```
        <!--End PulumiCodeChooser -->

        ## Import

        cwp license_bind_attachment can be imported using the id, e.g.

        ```sh
        $ pulumi import tencentcloud:Cwp/licenseBindAttachment:LicenseBindAttachment example cwplic-ab3edffa#44#2c7e5cce-1cec-4456-8d18-018f160dd987#0
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[int] license_id: License ID.
        :param pulumi.Input[int] license_type: LicenseType, 0 CWP Pro - Pay as you go, 1 CWP Pro - Monthly subscription, 2 CWP Ultimate - Monthly subscription. Default is 0.
        :param pulumi.Input[str] quuid: Machine quota that needs to be bound.
        :param pulumi.Input[str] resource_id: Resource ID.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: LicenseBindAttachmentArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Provides a resource to create a cwp license_bind_attachment

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import pulumi_tencentcloud as tencentcloud
        import tencentcloud_iac_pulumi as tencentcloud

        example_machines_simple = tencentcloud.Cwp.get_machines_simple(machine_type="CVM",
            machine_region="ap-guangzhou",
            project_ids=[1210293],
            filters=[tencentcloud.cwp.GetMachinesSimpleFilterArgs(
                name="Version",
                values=["BASIC_VERSION"],
                exact_match=True,
            )])
        example_license_order = tencentcloud.cwp.LicenseOrder("exampleLicenseOrder",
            alias="tf_example",
            license_type=0,
            license_num=1,
            region_id=1,
            project_id=0,
            tags={
                "createdBy": "terraform",
            })
        example_license_bind_attachment = tencentcloud.cwp.LicenseBindAttachment("exampleLicenseBindAttachment",
            resource_id=example_license_order.resource_id,
            license_id=example_license_order.license_id,
            license_type=0,
            quuid=example_machines_simple.machines[0].quuid)
        ```
        <!--End PulumiCodeChooser -->

        ## Import

        cwp license_bind_attachment can be imported using the id, e.g.

        ```sh
        $ pulumi import tencentcloud:Cwp/licenseBindAttachment:LicenseBindAttachment example cwplic-ab3edffa#44#2c7e5cce-1cec-4456-8d18-018f160dd987#0
        ```

        :param str resource_name: The name of the resource.
        :param LicenseBindAttachmentArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(LicenseBindAttachmentArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 license_id: Optional[pulumi.Input[int]] = None,
                 license_type: Optional[pulumi.Input[int]] = None,
                 quuid: Optional[pulumi.Input[str]] = None,
                 resource_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = LicenseBindAttachmentArgs.__new__(LicenseBindAttachmentArgs)

            if license_id is None and not opts.urn:
                raise TypeError("Missing required property 'license_id'")
            __props__.__dict__["license_id"] = license_id
            if license_type is None and not opts.urn:
                raise TypeError("Missing required property 'license_type'")
            __props__.__dict__["license_type"] = license_type
            if quuid is None and not opts.urn:
                raise TypeError("Missing required property 'quuid'")
            __props__.__dict__["quuid"] = quuid
            if resource_id is None and not opts.urn:
                raise TypeError("Missing required property 'resource_id'")
            __props__.__dict__["resource_id"] = resource_id
            __props__.__dict__["agent_status"] = None
            __props__.__dict__["is_switch_bind"] = None
            __props__.__dict__["is_unbind"] = None
            __props__.__dict__["machine_ip"] = None
            __props__.__dict__["machine_name"] = None
            __props__.__dict__["machine_wan_ip"] = None
            __props__.__dict__["uuid"] = None
        super(LicenseBindAttachment, __self__).__init__(
            'tencentcloud:Cwp/licenseBindAttachment:LicenseBindAttachment',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            agent_status: Optional[pulumi.Input[str]] = None,
            is_switch_bind: Optional[pulumi.Input[bool]] = None,
            is_unbind: Optional[pulumi.Input[bool]] = None,
            license_id: Optional[pulumi.Input[int]] = None,
            license_type: Optional[pulumi.Input[int]] = None,
            machine_ip: Optional[pulumi.Input[str]] = None,
            machine_name: Optional[pulumi.Input[str]] = None,
            machine_wan_ip: Optional[pulumi.Input[str]] = None,
            quuid: Optional[pulumi.Input[str]] = None,
            resource_id: Optional[pulumi.Input[str]] = None,
            uuid: Optional[pulumi.Input[str]] = None) -> 'LicenseBindAttachment':
        """
        Get an existing LicenseBindAttachment resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] agent_status: agent status.
        :param pulumi.Input[bool] is_switch_bind: Is it allowed to change the binding, false is not allowed to change the binding.
        :param pulumi.Input[bool] is_unbind: Allow unbinding, false does not allow unbinding.
        :param pulumi.Input[int] license_id: License ID.
        :param pulumi.Input[int] license_type: LicenseType, 0 CWP Pro - Pay as you go, 1 CWP Pro - Monthly subscription, 2 CWP Ultimate - Monthly subscription. Default is 0.
        :param pulumi.Input[str] machine_ip: machine ip.
        :param pulumi.Input[str] machine_name: machine name.
        :param pulumi.Input[str] machine_wan_ip: machine wan ip.
        :param pulumi.Input[str] quuid: Machine quota that needs to be bound.
        :param pulumi.Input[str] resource_id: Resource ID.
        :param pulumi.Input[str] uuid: uuid.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _LicenseBindAttachmentState.__new__(_LicenseBindAttachmentState)

        __props__.__dict__["agent_status"] = agent_status
        __props__.__dict__["is_switch_bind"] = is_switch_bind
        __props__.__dict__["is_unbind"] = is_unbind
        __props__.__dict__["license_id"] = license_id
        __props__.__dict__["license_type"] = license_type
        __props__.__dict__["machine_ip"] = machine_ip
        __props__.__dict__["machine_name"] = machine_name
        __props__.__dict__["machine_wan_ip"] = machine_wan_ip
        __props__.__dict__["quuid"] = quuid
        __props__.__dict__["resource_id"] = resource_id
        __props__.__dict__["uuid"] = uuid
        return LicenseBindAttachment(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="agentStatus")
    def agent_status(self) -> pulumi.Output[str]:
        """
        agent status.
        """
        return pulumi.get(self, "agent_status")

    @property
    @pulumi.getter(name="isSwitchBind")
    def is_switch_bind(self) -> pulumi.Output[bool]:
        """
        Is it allowed to change the binding, false is not allowed to change the binding.
        """
        return pulumi.get(self, "is_switch_bind")

    @property
    @pulumi.getter(name="isUnbind")
    def is_unbind(self) -> pulumi.Output[bool]:
        """
        Allow unbinding, false does not allow unbinding.
        """
        return pulumi.get(self, "is_unbind")

    @property
    @pulumi.getter(name="licenseId")
    def license_id(self) -> pulumi.Output[int]:
        """
        License ID.
        """
        return pulumi.get(self, "license_id")

    @property
    @pulumi.getter(name="licenseType")
    def license_type(self) -> pulumi.Output[int]:
        """
        LicenseType, 0 CWP Pro - Pay as you go, 1 CWP Pro - Monthly subscription, 2 CWP Ultimate - Monthly subscription. Default is 0.
        """
        return pulumi.get(self, "license_type")

    @property
    @pulumi.getter(name="machineIp")
    def machine_ip(self) -> pulumi.Output[str]:
        """
        machine ip.
        """
        return pulumi.get(self, "machine_ip")

    @property
    @pulumi.getter(name="machineName")
    def machine_name(self) -> pulumi.Output[str]:
        """
        machine name.
        """
        return pulumi.get(self, "machine_name")

    @property
    @pulumi.getter(name="machineWanIp")
    def machine_wan_ip(self) -> pulumi.Output[str]:
        """
        machine wan ip.
        """
        return pulumi.get(self, "machine_wan_ip")

    @property
    @pulumi.getter
    def quuid(self) -> pulumi.Output[str]:
        """
        Machine quota that needs to be bound.
        """
        return pulumi.get(self, "quuid")

    @property
    @pulumi.getter(name="resourceId")
    def resource_id(self) -> pulumi.Output[str]:
        """
        Resource ID.
        """
        return pulumi.get(self, "resource_id")

    @property
    @pulumi.getter
    def uuid(self) -> pulumi.Output[str]:
        """
        uuid.
        """
        return pulumi.get(self, "uuid")


# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = ['ApiAppAttachmentArgs', 'ApiAppAttachment']

@pulumi.input_type
class ApiAppAttachmentArgs:
    def __init__(__self__, *,
                 api_app_id: pulumi.Input[str],
                 api_id: pulumi.Input[str],
                 environment: pulumi.Input[str],
                 service_id: pulumi.Input[str]):
        """
        The set of arguments for constructing a ApiAppAttachment resource.
        :param pulumi.Input[str] api_app_id: The unique ID of the application to be bound.
        :param pulumi.Input[str] api_id: The unique ID of the API to be bound.
        :param pulumi.Input[str] environment: The environment to be bound.
        :param pulumi.Input[str] service_id: The unique ID of the service to be bound.
        """
        pulumi.set(__self__, "api_app_id", api_app_id)
        pulumi.set(__self__, "api_id", api_id)
        pulumi.set(__self__, "environment", environment)
        pulumi.set(__self__, "service_id", service_id)

    @property
    @pulumi.getter(name="apiAppId")
    def api_app_id(self) -> pulumi.Input[str]:
        """
        The unique ID of the application to be bound.
        """
        return pulumi.get(self, "api_app_id")

    @api_app_id.setter
    def api_app_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "api_app_id", value)

    @property
    @pulumi.getter(name="apiId")
    def api_id(self) -> pulumi.Input[str]:
        """
        The unique ID of the API to be bound.
        """
        return pulumi.get(self, "api_id")

    @api_id.setter
    def api_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "api_id", value)

    @property
    @pulumi.getter
    def environment(self) -> pulumi.Input[str]:
        """
        The environment to be bound.
        """
        return pulumi.get(self, "environment")

    @environment.setter
    def environment(self, value: pulumi.Input[str]):
        pulumi.set(self, "environment", value)

    @property
    @pulumi.getter(name="serviceId")
    def service_id(self) -> pulumi.Input[str]:
        """
        The unique ID of the service to be bound.
        """
        return pulumi.get(self, "service_id")

    @service_id.setter
    def service_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "service_id", value)


@pulumi.input_type
class _ApiAppAttachmentState:
    def __init__(__self__, *,
                 api_app_id: Optional[pulumi.Input[str]] = None,
                 api_id: Optional[pulumi.Input[str]] = None,
                 environment: Optional[pulumi.Input[str]] = None,
                 service_id: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering ApiAppAttachment resources.
        :param pulumi.Input[str] api_app_id: The unique ID of the application to be bound.
        :param pulumi.Input[str] api_id: The unique ID of the API to be bound.
        :param pulumi.Input[str] environment: The environment to be bound.
        :param pulumi.Input[str] service_id: The unique ID of the service to be bound.
        """
        if api_app_id is not None:
            pulumi.set(__self__, "api_app_id", api_app_id)
        if api_id is not None:
            pulumi.set(__self__, "api_id", api_id)
        if environment is not None:
            pulumi.set(__self__, "environment", environment)
        if service_id is not None:
            pulumi.set(__self__, "service_id", service_id)

    @property
    @pulumi.getter(name="apiAppId")
    def api_app_id(self) -> Optional[pulumi.Input[str]]:
        """
        The unique ID of the application to be bound.
        """
        return pulumi.get(self, "api_app_id")

    @api_app_id.setter
    def api_app_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "api_app_id", value)

    @property
    @pulumi.getter(name="apiId")
    def api_id(self) -> Optional[pulumi.Input[str]]:
        """
        The unique ID of the API to be bound.
        """
        return pulumi.get(self, "api_id")

    @api_id.setter
    def api_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "api_id", value)

    @property
    @pulumi.getter
    def environment(self) -> Optional[pulumi.Input[str]]:
        """
        The environment to be bound.
        """
        return pulumi.get(self, "environment")

    @environment.setter
    def environment(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "environment", value)

    @property
    @pulumi.getter(name="serviceId")
    def service_id(self) -> Optional[pulumi.Input[str]]:
        """
        The unique ID of the service to be bound.
        """
        return pulumi.get(self, "service_id")

    @service_id.setter
    def service_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "service_id", value)


class ApiAppAttachment(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 api_app_id: Optional[pulumi.Input[str]] = None,
                 api_id: Optional[pulumi.Input[str]] = None,
                 environment: Optional[pulumi.Input[str]] = None,
                 service_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Provides a resource to create a apigateway api_app_attachment

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        example_api_app = tencentcloud.api_gateway.ApiApp("exampleApiApp",
            api_app_name="tf_example",
            api_app_desc="app desc.")
        example_service = tencentcloud.api_gateway.Service("exampleService",
            service_name="tf_example_service",
            protocol="http&https",
            service_desc="your nice service",
            net_types=[
                "INNER",
                "OUTER",
            ],
            ip_version="IPv4")
        example_api = tencentcloud.api_gateway.Api("exampleApi",
            service_id=example_service.id,
            api_name="tf_example_api",
            api_desc="desc.",
            auth_type="APP",
            protocol="HTTP",
            enable_cors=True,
            request_config_path="/user/info",
            request_config_method="GET",
            request_parameters=[tencentcloud.api_gateway.ApiRequestParameterArgs(
                name="name",
                position="QUERY",
                type="string",
                desc="desc.",
                default_value="terraform",
                required=True,
            )],
            service_config_type="HTTP",
            service_config_timeout=15,
            service_config_url="https://www.qq.com",
            service_config_path="/user",
            service_config_method="GET",
            response_type="HTML",
            response_success_example="success",
            response_fail_example="fail",
            response_error_codes=[tencentcloud.api_gateway.ApiResponseErrorCodeArgs(
                code=400,
                msg="system error msg.",
                desc="system error desc.",
                converted_code=407,
                need_convert=True,
            )])
        example_api_app_attachment = tencentcloud.api_gateway.ApiAppAttachment("exampleApiAppAttachment",
            api_app_id=example_api_app.id,
            environment="test",
            service_id=example_service.id,
            api_id=example_api.id)
        ```
        <!--End PulumiCodeChooser -->

        ## Import

        apigateway api_app_attachment can be imported using the id, e.g.

        ```sh
        $ pulumi import tencentcloud:ApiGateway/apiAppAttachment:ApiAppAttachment example app-f2dxx0lv#test#service-h0trno8e#api-grsomg0w
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] api_app_id: The unique ID of the application to be bound.
        :param pulumi.Input[str] api_id: The unique ID of the API to be bound.
        :param pulumi.Input[str] environment: The environment to be bound.
        :param pulumi.Input[str] service_id: The unique ID of the service to be bound.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: ApiAppAttachmentArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Provides a resource to create a apigateway api_app_attachment

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        example_api_app = tencentcloud.api_gateway.ApiApp("exampleApiApp",
            api_app_name="tf_example",
            api_app_desc="app desc.")
        example_service = tencentcloud.api_gateway.Service("exampleService",
            service_name="tf_example_service",
            protocol="http&https",
            service_desc="your nice service",
            net_types=[
                "INNER",
                "OUTER",
            ],
            ip_version="IPv4")
        example_api = tencentcloud.api_gateway.Api("exampleApi",
            service_id=example_service.id,
            api_name="tf_example_api",
            api_desc="desc.",
            auth_type="APP",
            protocol="HTTP",
            enable_cors=True,
            request_config_path="/user/info",
            request_config_method="GET",
            request_parameters=[tencentcloud.api_gateway.ApiRequestParameterArgs(
                name="name",
                position="QUERY",
                type="string",
                desc="desc.",
                default_value="terraform",
                required=True,
            )],
            service_config_type="HTTP",
            service_config_timeout=15,
            service_config_url="https://www.qq.com",
            service_config_path="/user",
            service_config_method="GET",
            response_type="HTML",
            response_success_example="success",
            response_fail_example="fail",
            response_error_codes=[tencentcloud.api_gateway.ApiResponseErrorCodeArgs(
                code=400,
                msg="system error msg.",
                desc="system error desc.",
                converted_code=407,
                need_convert=True,
            )])
        example_api_app_attachment = tencentcloud.api_gateway.ApiAppAttachment("exampleApiAppAttachment",
            api_app_id=example_api_app.id,
            environment="test",
            service_id=example_service.id,
            api_id=example_api.id)
        ```
        <!--End PulumiCodeChooser -->

        ## Import

        apigateway api_app_attachment can be imported using the id, e.g.

        ```sh
        $ pulumi import tencentcloud:ApiGateway/apiAppAttachment:ApiAppAttachment example app-f2dxx0lv#test#service-h0trno8e#api-grsomg0w
        ```

        :param str resource_name: The name of the resource.
        :param ApiAppAttachmentArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(ApiAppAttachmentArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 api_app_id: Optional[pulumi.Input[str]] = None,
                 api_id: Optional[pulumi.Input[str]] = None,
                 environment: Optional[pulumi.Input[str]] = None,
                 service_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = ApiAppAttachmentArgs.__new__(ApiAppAttachmentArgs)

            if api_app_id is None and not opts.urn:
                raise TypeError("Missing required property 'api_app_id'")
            __props__.__dict__["api_app_id"] = api_app_id
            if api_id is None and not opts.urn:
                raise TypeError("Missing required property 'api_id'")
            __props__.__dict__["api_id"] = api_id
            if environment is None and not opts.urn:
                raise TypeError("Missing required property 'environment'")
            __props__.__dict__["environment"] = environment
            if service_id is None and not opts.urn:
                raise TypeError("Missing required property 'service_id'")
            __props__.__dict__["service_id"] = service_id
        super(ApiAppAttachment, __self__).__init__(
            'tencentcloud:ApiGateway/apiAppAttachment:ApiAppAttachment',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            api_app_id: Optional[pulumi.Input[str]] = None,
            api_id: Optional[pulumi.Input[str]] = None,
            environment: Optional[pulumi.Input[str]] = None,
            service_id: Optional[pulumi.Input[str]] = None) -> 'ApiAppAttachment':
        """
        Get an existing ApiAppAttachment resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] api_app_id: The unique ID of the application to be bound.
        :param pulumi.Input[str] api_id: The unique ID of the API to be bound.
        :param pulumi.Input[str] environment: The environment to be bound.
        :param pulumi.Input[str] service_id: The unique ID of the service to be bound.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _ApiAppAttachmentState.__new__(_ApiAppAttachmentState)

        __props__.__dict__["api_app_id"] = api_app_id
        __props__.__dict__["api_id"] = api_id
        __props__.__dict__["environment"] = environment
        __props__.__dict__["service_id"] = service_id
        return ApiAppAttachment(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="apiAppId")
    def api_app_id(self) -> pulumi.Output[str]:
        """
        The unique ID of the application to be bound.
        """
        return pulumi.get(self, "api_app_id")

    @property
    @pulumi.getter(name="apiId")
    def api_id(self) -> pulumi.Output[str]:
        """
        The unique ID of the API to be bound.
        """
        return pulumi.get(self, "api_id")

    @property
    @pulumi.getter
    def environment(self) -> pulumi.Output[str]:
        """
        The environment to be bound.
        """
        return pulumi.get(self, "environment")

    @property
    @pulumi.getter(name="serviceId")
    def service_id(self) -> pulumi.Output[str]:
        """
        The unique ID of the service to be bound.
        """
        return pulumi.get(self, "service_id")


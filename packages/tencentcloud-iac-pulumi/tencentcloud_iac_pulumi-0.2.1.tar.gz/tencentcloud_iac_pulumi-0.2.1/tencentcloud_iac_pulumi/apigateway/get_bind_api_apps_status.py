# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = [
    'GetBindApiAppsStatusResult',
    'AwaitableGetBindApiAppsStatusResult',
    'get_bind_api_apps_status',
    'get_bind_api_apps_status_output',
]

@pulumi.output_type
class GetBindApiAppsStatusResult:
    """
    A collection of values returned by getBindApiAppsStatus.
    """
    def __init__(__self__, api_ids=None, filters=None, id=None, result_output_file=None, results=None, service_id=None):
        if api_ids and not isinstance(api_ids, list):
            raise TypeError("Expected argument 'api_ids' to be a list")
        pulumi.set(__self__, "api_ids", api_ids)
        if filters and not isinstance(filters, list):
            raise TypeError("Expected argument 'filters' to be a list")
        pulumi.set(__self__, "filters", filters)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)
        if results and not isinstance(results, list):
            raise TypeError("Expected argument 'results' to be a list")
        pulumi.set(__self__, "results", results)
        if service_id and not isinstance(service_id, str):
            raise TypeError("Expected argument 'service_id' to be a str")
        pulumi.set(__self__, "service_id", service_id)

    @property
    @pulumi.getter(name="apiIds")
    def api_ids(self) -> Sequence[str]:
        return pulumi.get(self, "api_ids")

    @property
    @pulumi.getter
    def filters(self) -> Optional[Sequence['outputs.GetBindApiAppsStatusFilterResult']]:
        return pulumi.get(self, "filters")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")

    @property
    @pulumi.getter
    def results(self) -> Sequence['outputs.GetBindApiAppsStatusResultResult']:
        """
        List of APIs bound by the application.
        """
        return pulumi.get(self, "results")

    @property
    @pulumi.getter(name="serviceId")
    def service_id(self) -> str:
        """
        Service ID.
        """
        return pulumi.get(self, "service_id")


class AwaitableGetBindApiAppsStatusResult(GetBindApiAppsStatusResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetBindApiAppsStatusResult(
            api_ids=self.api_ids,
            filters=self.filters,
            id=self.id,
            result_output_file=self.result_output_file,
            results=self.results,
            service_id=self.service_id)


def get_bind_api_apps_status(api_ids: Optional[Sequence[str]] = None,
                             filters: Optional[Sequence[pulumi.InputType['GetBindApiAppsStatusFilterArgs']]] = None,
                             result_output_file: Optional[str] = None,
                             service_id: Optional[str] = None,
                             opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetBindApiAppsStatusResult:
    """
    Use this data source to query detailed information of apiGateway bind_api_apps_status

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    example = tencentcloud.ApiGateway.get_bind_api_apps_status(api_ids=[
            "api-0cvmf4x4",
            "api-jvqlzolk",
        ],
        filters=[tencentcloud.api_gateway.GetBindApiAppsStatusFilterArgs(
            name="ApiAppId",
            values=["app-krljp4wn"],
        )],
        service_id="service-nxz6yync")
    ```
    <!--End PulumiCodeChooser -->


    :param Sequence[str] api_ids: Array of API IDs.
    :param Sequence[pulumi.InputType['GetBindApiAppsStatusFilterArgs']] filters: Filter conditions. Supports ApiAppId, Environment, KeyWord (can match name or ID).
    :param str result_output_file: Used to save results.
    :param str service_id: Service ID.
    """
    __args__ = dict()
    __args__['apiIds'] = api_ids
    __args__['filters'] = filters
    __args__['resultOutputFile'] = result_output_file
    __args__['serviceId'] = service_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('tencentcloud:ApiGateway/getBindApiAppsStatus:getBindApiAppsStatus', __args__, opts=opts, typ=GetBindApiAppsStatusResult).value

    return AwaitableGetBindApiAppsStatusResult(
        api_ids=pulumi.get(__ret__, 'api_ids'),
        filters=pulumi.get(__ret__, 'filters'),
        id=pulumi.get(__ret__, 'id'),
        result_output_file=pulumi.get(__ret__, 'result_output_file'),
        results=pulumi.get(__ret__, 'results'),
        service_id=pulumi.get(__ret__, 'service_id'))


@_utilities.lift_output_func(get_bind_api_apps_status)
def get_bind_api_apps_status_output(api_ids: Optional[pulumi.Input[Sequence[str]]] = None,
                                    filters: Optional[pulumi.Input[Optional[Sequence[pulumi.InputType['GetBindApiAppsStatusFilterArgs']]]]] = None,
                                    result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                                    service_id: Optional[pulumi.Input[str]] = None,
                                    opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetBindApiAppsStatusResult]:
    """
    Use this data source to query detailed information of apiGateway bind_api_apps_status

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    example = tencentcloud.ApiGateway.get_bind_api_apps_status(api_ids=[
            "api-0cvmf4x4",
            "api-jvqlzolk",
        ],
        filters=[tencentcloud.api_gateway.GetBindApiAppsStatusFilterArgs(
            name="ApiAppId",
            values=["app-krljp4wn"],
        )],
        service_id="service-nxz6yync")
    ```
    <!--End PulumiCodeChooser -->


    :param Sequence[str] api_ids: Array of API IDs.
    :param Sequence[pulumi.InputType['GetBindApiAppsStatusFilterArgs']] filters: Filter conditions. Supports ApiAppId, Environment, KeyWord (can match name or ID).
    :param str result_output_file: Used to save results.
    :param str service_id: Service ID.
    """
    ...

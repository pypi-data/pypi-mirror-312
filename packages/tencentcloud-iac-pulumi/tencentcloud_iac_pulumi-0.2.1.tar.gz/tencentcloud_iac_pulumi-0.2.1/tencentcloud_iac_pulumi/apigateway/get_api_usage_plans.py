# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetApiUsagePlansResult',
    'AwaitableGetApiUsagePlansResult',
    'get_api_usage_plans',
    'get_api_usage_plans_output',
]

@pulumi.output_type
class GetApiUsagePlansResult:
    """
    A collection of values returned by getApiUsagePlans.
    """
    def __init__(__self__, id=None, result_output_file=None, results=None, service_id=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)
        if results and not isinstance(results, list):
            raise TypeError("Expected argument 'results' to be a list")
        pulumi.set(__self__, "results", results)
        if service_id and not isinstance(service_id, str):
            raise TypeError("Expected argument 'service_id' to be a str")
        pulumi.set(__self__, "service_id", service_id)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")

    @property
    @pulumi.getter
    def results(self) -> Sequence['outputs.GetApiUsagePlansResultResult']:
        """
        API binding usage plan list.Note: This field may return null, indicating that a valid value cannot be obtained.
        """
        return pulumi.get(self, "results")

    @property
    @pulumi.getter(name="serviceId")
    def service_id(self) -> str:
        """
        Service unique ID.Note: This field may return null, indicating that a valid value cannot be obtained.
        """
        return pulumi.get(self, "service_id")


class AwaitableGetApiUsagePlansResult(GetApiUsagePlansResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetApiUsagePlansResult(
            id=self.id,
            result_output_file=self.result_output_file,
            results=self.results,
            service_id=self.service_id)


def get_api_usage_plans(result_output_file: Optional[str] = None,
                        service_id: Optional[str] = None,
                        opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetApiUsagePlansResult:
    """
    Use this data source to query detailed information of apigateway api_usage_plan

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud
    import tencentcloud_iac_pulumi as tencentcloud

    example_usage_plan = tencentcloud.api_gateway.UsagePlan("exampleUsagePlan",
        usage_plan_name="tf_example",
        usage_plan_desc="desc.",
        max_request_num=100,
        max_request_num_pre_sec=10)
    example_service = tencentcloud.api_gateway.Service("exampleService",
        service_name="tf_example",
        protocol="http&https",
        service_desc="desc.",
        net_types=[
            "INNER",
            "OUTER",
        ],
        ip_version="IPv4")
    example_api = tencentcloud.api_gateway.Api("exampleApi",
        service_id=example_service.id,
        api_name="tf_example",
        api_desc="my hello api update",
        auth_type="SECRET",
        protocol="HTTP",
        enable_cors=True,
        request_config_path="/user/info",
        request_config_method="POST",
        request_parameters=[tencentcloud.api_gateway.ApiRequestParameterArgs(
            name="email",
            position="QUERY",
            type="string",
            desc="desc.",
            default_value="test@qq.com",
            required=True,
        )],
        service_config_type="HTTP",
        service_config_timeout=10,
        service_config_url="http://www.tencent.com",
        service_config_path="/user",
        service_config_method="POST",
        response_type="XML",
        response_success_example="<note>success</note>",
        response_fail_example="<note>fail</note>",
        response_error_codes=[tencentcloud.api_gateway.ApiResponseErrorCodeArgs(
            code=500,
            msg="system error",
            desc="system error code",
            converted_code=5000,
            need_convert=True,
        )])
    example_usage_plan_attachment = tencentcloud.api_gateway.UsagePlanAttachment("exampleUsagePlanAttachment",
        usage_plan_id=example_usage_plan.id,
        service_id=example_service.id,
        environment="release",
        bind_type="API",
        api_id=example_api.id)
    example_api_usage_plans = tencentcloud.ApiGateway.get_api_usage_plans_output(service_id=example_usage_plan_attachment.service_id)
    ```
    <!--End PulumiCodeChooser -->


    :param str result_output_file: Used to save results.
    :param str service_id: The unique ID of the service to be queried.
    """
    __args__ = dict()
    __args__['resultOutputFile'] = result_output_file
    __args__['serviceId'] = service_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('tencentcloud:ApiGateway/getApiUsagePlans:getApiUsagePlans', __args__, opts=opts, typ=GetApiUsagePlansResult).value

    return AwaitableGetApiUsagePlansResult(
        id=pulumi.get(__ret__, 'id'),
        result_output_file=pulumi.get(__ret__, 'result_output_file'),
        results=pulumi.get(__ret__, 'results'),
        service_id=pulumi.get(__ret__, 'service_id'))


@_utilities.lift_output_func(get_api_usage_plans)
def get_api_usage_plans_output(result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                               service_id: Optional[pulumi.Input[str]] = None,
                               opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetApiUsagePlansResult]:
    """
    Use this data source to query detailed information of apigateway api_usage_plan

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud
    import tencentcloud_iac_pulumi as tencentcloud

    example_usage_plan = tencentcloud.api_gateway.UsagePlan("exampleUsagePlan",
        usage_plan_name="tf_example",
        usage_plan_desc="desc.",
        max_request_num=100,
        max_request_num_pre_sec=10)
    example_service = tencentcloud.api_gateway.Service("exampleService",
        service_name="tf_example",
        protocol="http&https",
        service_desc="desc.",
        net_types=[
            "INNER",
            "OUTER",
        ],
        ip_version="IPv4")
    example_api = tencentcloud.api_gateway.Api("exampleApi",
        service_id=example_service.id,
        api_name="tf_example",
        api_desc="my hello api update",
        auth_type="SECRET",
        protocol="HTTP",
        enable_cors=True,
        request_config_path="/user/info",
        request_config_method="POST",
        request_parameters=[tencentcloud.api_gateway.ApiRequestParameterArgs(
            name="email",
            position="QUERY",
            type="string",
            desc="desc.",
            default_value="test@qq.com",
            required=True,
        )],
        service_config_type="HTTP",
        service_config_timeout=10,
        service_config_url="http://www.tencent.com",
        service_config_path="/user",
        service_config_method="POST",
        response_type="XML",
        response_success_example="<note>success</note>",
        response_fail_example="<note>fail</note>",
        response_error_codes=[tencentcloud.api_gateway.ApiResponseErrorCodeArgs(
            code=500,
            msg="system error",
            desc="system error code",
            converted_code=5000,
            need_convert=True,
        )])
    example_usage_plan_attachment = tencentcloud.api_gateway.UsagePlanAttachment("exampleUsagePlanAttachment",
        usage_plan_id=example_usage_plan.id,
        service_id=example_service.id,
        environment="release",
        bind_type="API",
        api_id=example_api.id)
    example_api_usage_plans = tencentcloud.ApiGateway.get_api_usage_plans_output(service_id=example_usage_plan_attachment.service_id)
    ```
    <!--End PulumiCodeChooser -->


    :param str result_output_file: Used to save results.
    :param str service_id: The unique ID of the service to be queried.
    """
    ...

# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetAccountInfoResult',
    'AwaitableGetAccountInfoResult',
    'get_account_info',
    'get_account_info_output',
]

@pulumi.output_type
class GetAccountInfoResult:
    """
    A collection of values returned by getAccountInfo.
    """
    def __init__(__self__, account_limits=None, account_usages=None, id=None, result_output_file=None):
        if account_limits and not isinstance(account_limits, list):
            raise TypeError("Expected argument 'account_limits' to be a list")
        pulumi.set(__self__, "account_limits", account_limits)
        if account_usages and not isinstance(account_usages, list):
            raise TypeError("Expected argument 'account_usages' to be a list")
        pulumi.set(__self__, "account_usages", account_usages)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)

    @property
    @pulumi.getter(name="accountLimits")
    def account_limits(self) -> Sequence['outputs.GetAccountInfoAccountLimitResult']:
        """
        Namespace limit information.
        """
        return pulumi.get(self, "account_limits")

    @property
    @pulumi.getter(name="accountUsages")
    def account_usages(self) -> Sequence['outputs.GetAccountInfoAccountUsageResult']:
        """
        Namespace usage information.
        """
        return pulumi.get(self, "account_usages")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")


class AwaitableGetAccountInfoResult(GetAccountInfoResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetAccountInfoResult(
            account_limits=self.account_limits,
            account_usages=self.account_usages,
            id=self.id,
            result_output_file=self.result_output_file)


def get_account_info(result_output_file: Optional[str] = None,
                     opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetAccountInfoResult:
    """
    Use this data source to query detailed information of scf account_info

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    account_info = tencentcloud.Scf.get_account_info()
    ```
    <!--End PulumiCodeChooser -->


    :param str result_output_file: Used to save results.
    """
    __args__ = dict()
    __args__['resultOutputFile'] = result_output_file
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('tencentcloud:Scf/getAccountInfo:getAccountInfo', __args__, opts=opts, typ=GetAccountInfoResult).value

    return AwaitableGetAccountInfoResult(
        account_limits=pulumi.get(__ret__, 'account_limits'),
        account_usages=pulumi.get(__ret__, 'account_usages'),
        id=pulumi.get(__ret__, 'id'),
        result_output_file=pulumi.get(__ret__, 'result_output_file'))


@_utilities.lift_output_func(get_account_info)
def get_account_info_output(result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                            opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetAccountInfoResult]:
    """
    Use this data source to query detailed information of scf account_info

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    account_info = tencentcloud.Scf.get_account_info()
    ```
    <!--End PulumiCodeChooser -->


    :param str result_output_file: Used to save results.
    """
    ...

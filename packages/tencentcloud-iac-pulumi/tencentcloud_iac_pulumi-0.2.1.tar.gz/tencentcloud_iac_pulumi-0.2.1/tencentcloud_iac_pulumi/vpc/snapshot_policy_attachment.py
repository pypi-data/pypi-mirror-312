# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['SnapshotPolicyAttachmentArgs', 'SnapshotPolicyAttachment']

@pulumi.input_type
class SnapshotPolicyAttachmentArgs:
    def __init__(__self__, *,
                 instances: pulumi.Input[Sequence[pulumi.Input['SnapshotPolicyAttachmentInstanceArgs']]],
                 snapshot_policy_id: pulumi.Input[str]):
        """
        The set of arguments for constructing a SnapshotPolicyAttachment resource.
        :param pulumi.Input[Sequence[pulumi.Input['SnapshotPolicyAttachmentInstanceArgs']]] instances: Associated instance information.
        :param pulumi.Input[str] snapshot_policy_id: Snapshot policy Id.
        """
        pulumi.set(__self__, "instances", instances)
        pulumi.set(__self__, "snapshot_policy_id", snapshot_policy_id)

    @property
    @pulumi.getter
    def instances(self) -> pulumi.Input[Sequence[pulumi.Input['SnapshotPolicyAttachmentInstanceArgs']]]:
        """
        Associated instance information.
        """
        return pulumi.get(self, "instances")

    @instances.setter
    def instances(self, value: pulumi.Input[Sequence[pulumi.Input['SnapshotPolicyAttachmentInstanceArgs']]]):
        pulumi.set(self, "instances", value)

    @property
    @pulumi.getter(name="snapshotPolicyId")
    def snapshot_policy_id(self) -> pulumi.Input[str]:
        """
        Snapshot policy Id.
        """
        return pulumi.get(self, "snapshot_policy_id")

    @snapshot_policy_id.setter
    def snapshot_policy_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "snapshot_policy_id", value)


@pulumi.input_type
class _SnapshotPolicyAttachmentState:
    def __init__(__self__, *,
                 instances: Optional[pulumi.Input[Sequence[pulumi.Input['SnapshotPolicyAttachmentInstanceArgs']]]] = None,
                 snapshot_policy_id: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering SnapshotPolicyAttachment resources.
        :param pulumi.Input[Sequence[pulumi.Input['SnapshotPolicyAttachmentInstanceArgs']]] instances: Associated instance information.
        :param pulumi.Input[str] snapshot_policy_id: Snapshot policy Id.
        """
        if instances is not None:
            pulumi.set(__self__, "instances", instances)
        if snapshot_policy_id is not None:
            pulumi.set(__self__, "snapshot_policy_id", snapshot_policy_id)

    @property
    @pulumi.getter
    def instances(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['SnapshotPolicyAttachmentInstanceArgs']]]]:
        """
        Associated instance information.
        """
        return pulumi.get(self, "instances")

    @instances.setter
    def instances(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['SnapshotPolicyAttachmentInstanceArgs']]]]):
        pulumi.set(self, "instances", value)

    @property
    @pulumi.getter(name="snapshotPolicyId")
    def snapshot_policy_id(self) -> Optional[pulumi.Input[str]]:
        """
        Snapshot policy Id.
        """
        return pulumi.get(self, "snapshot_policy_id")

    @snapshot_policy_id.setter
    def snapshot_policy_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "snapshot_policy_id", value)


class SnapshotPolicyAttachment(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 instances: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['SnapshotPolicyAttachmentInstanceArgs']]]]] = None,
                 snapshot_policy_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Provides a resource to create a vpc snapshot_policy_attachment

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        example_bucket = tencentcloud.cos.Bucket("exampleBucket",
            bucket="tf-example-1308919341",
            acl="private")
        example_snapshot_policy = tencentcloud.vpc.SnapshotPolicy("exampleSnapshotPolicy",
            snapshot_policy_name="tf-example",
            backup_type="time",
            cos_bucket=example_bucket.bucket,
            cos_region="ap-guangzhou",
            create_new_cos=False,
            keep_time=2,
            backup_policies=[
                tencentcloud.vpc.SnapshotPolicyBackupPolicyArgs(
                    backup_day="monday",
                    backup_time="00:00:00",
                ),
                tencentcloud.vpc.SnapshotPolicyBackupPolicyArgs(
                    backup_day="tuesday",
                    backup_time="01:00:00",
                ),
                tencentcloud.vpc.SnapshotPolicyBackupPolicyArgs(
                    backup_day="wednesday",
                    backup_time="02:00:00",
                ),
            ])
        example_group = tencentcloud.security.Group("exampleGroup", description="desc.")
        attachment = tencentcloud.vpc.SnapshotPolicyAttachment("attachment",
            snapshot_policy_id=example_snapshot_policy.id,
            instances=[tencentcloud.vpc.SnapshotPolicyAttachmentInstanceArgs(
                instance_type="securitygroup",
                instance_id=example_group.id,
                instance_name="tf-example",
                instance_region="ap-guangzhou",
            )])
        ```
        <!--End PulumiCodeChooser -->

        ## Import

        vpc snapshot_policy_attachment can be imported using the id, e.g.

        ```sh
        $ pulumi import tencentcloud:Vpc/snapshotPolicyAttachment:SnapshotPolicyAttachment snapshot_policy_attachment snapshot_policy_attachment_id
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['SnapshotPolicyAttachmentInstanceArgs']]]] instances: Associated instance information.
        :param pulumi.Input[str] snapshot_policy_id: Snapshot policy Id.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: SnapshotPolicyAttachmentArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Provides a resource to create a vpc snapshot_policy_attachment

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        example_bucket = tencentcloud.cos.Bucket("exampleBucket",
            bucket="tf-example-1308919341",
            acl="private")
        example_snapshot_policy = tencentcloud.vpc.SnapshotPolicy("exampleSnapshotPolicy",
            snapshot_policy_name="tf-example",
            backup_type="time",
            cos_bucket=example_bucket.bucket,
            cos_region="ap-guangzhou",
            create_new_cos=False,
            keep_time=2,
            backup_policies=[
                tencentcloud.vpc.SnapshotPolicyBackupPolicyArgs(
                    backup_day="monday",
                    backup_time="00:00:00",
                ),
                tencentcloud.vpc.SnapshotPolicyBackupPolicyArgs(
                    backup_day="tuesday",
                    backup_time="01:00:00",
                ),
                tencentcloud.vpc.SnapshotPolicyBackupPolicyArgs(
                    backup_day="wednesday",
                    backup_time="02:00:00",
                ),
            ])
        example_group = tencentcloud.security.Group("exampleGroup", description="desc.")
        attachment = tencentcloud.vpc.SnapshotPolicyAttachment("attachment",
            snapshot_policy_id=example_snapshot_policy.id,
            instances=[tencentcloud.vpc.SnapshotPolicyAttachmentInstanceArgs(
                instance_type="securitygroup",
                instance_id=example_group.id,
                instance_name="tf-example",
                instance_region="ap-guangzhou",
            )])
        ```
        <!--End PulumiCodeChooser -->

        ## Import

        vpc snapshot_policy_attachment can be imported using the id, e.g.

        ```sh
        $ pulumi import tencentcloud:Vpc/snapshotPolicyAttachment:SnapshotPolicyAttachment snapshot_policy_attachment snapshot_policy_attachment_id
        ```

        :param str resource_name: The name of the resource.
        :param SnapshotPolicyAttachmentArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(SnapshotPolicyAttachmentArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 instances: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['SnapshotPolicyAttachmentInstanceArgs']]]]] = None,
                 snapshot_policy_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = SnapshotPolicyAttachmentArgs.__new__(SnapshotPolicyAttachmentArgs)

            if instances is None and not opts.urn:
                raise TypeError("Missing required property 'instances'")
            __props__.__dict__["instances"] = instances
            if snapshot_policy_id is None and not opts.urn:
                raise TypeError("Missing required property 'snapshot_policy_id'")
            __props__.__dict__["snapshot_policy_id"] = snapshot_policy_id
        super(SnapshotPolicyAttachment, __self__).__init__(
            'tencentcloud:Vpc/snapshotPolicyAttachment:SnapshotPolicyAttachment',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            instances: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['SnapshotPolicyAttachmentInstanceArgs']]]]] = None,
            snapshot_policy_id: Optional[pulumi.Input[str]] = None) -> 'SnapshotPolicyAttachment':
        """
        Get an existing SnapshotPolicyAttachment resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['SnapshotPolicyAttachmentInstanceArgs']]]] instances: Associated instance information.
        :param pulumi.Input[str] snapshot_policy_id: Snapshot policy Id.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _SnapshotPolicyAttachmentState.__new__(_SnapshotPolicyAttachmentState)

        __props__.__dict__["instances"] = instances
        __props__.__dict__["snapshot_policy_id"] = snapshot_policy_id
        return SnapshotPolicyAttachment(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter
    def instances(self) -> pulumi.Output[Sequence['outputs.SnapshotPolicyAttachmentInstance']]:
        """
        Associated instance information.
        """
        return pulumi.get(self, "instances")

    @property
    @pulumi.getter(name="snapshotPolicyId")
    def snapshot_policy_id(self) -> pulumi.Output[str]:
        """
        Snapshot policy Id.
        """
        return pulumi.get(self, "snapshot_policy_id")


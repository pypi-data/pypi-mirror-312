# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetGatewayFlowMonitorDetailResult',
    'AwaitableGetGatewayFlowMonitorDetailResult',
    'get_gateway_flow_monitor_detail',
    'get_gateway_flow_monitor_detail_output',
]

@pulumi.output_type
class GetGatewayFlowMonitorDetailResult:
    """
    A collection of values returned by getGatewayFlowMonitorDetail.
    """
    def __init__(__self__, direct_connect_gateway_id=None, gateway_flow_monitor_detail_sets=None, id=None, nat_id=None, order_direction=None, order_field=None, peering_connection_id=None, result_output_file=None, time_point=None, vpn_id=None):
        if direct_connect_gateway_id and not isinstance(direct_connect_gateway_id, str):
            raise TypeError("Expected argument 'direct_connect_gateway_id' to be a str")
        pulumi.set(__self__, "direct_connect_gateway_id", direct_connect_gateway_id)
        if gateway_flow_monitor_detail_sets and not isinstance(gateway_flow_monitor_detail_sets, list):
            raise TypeError("Expected argument 'gateway_flow_monitor_detail_sets' to be a list")
        pulumi.set(__self__, "gateway_flow_monitor_detail_sets", gateway_flow_monitor_detail_sets)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if nat_id and not isinstance(nat_id, str):
            raise TypeError("Expected argument 'nat_id' to be a str")
        pulumi.set(__self__, "nat_id", nat_id)
        if order_direction and not isinstance(order_direction, str):
            raise TypeError("Expected argument 'order_direction' to be a str")
        pulumi.set(__self__, "order_direction", order_direction)
        if order_field and not isinstance(order_field, str):
            raise TypeError("Expected argument 'order_field' to be a str")
        pulumi.set(__self__, "order_field", order_field)
        if peering_connection_id and not isinstance(peering_connection_id, str):
            raise TypeError("Expected argument 'peering_connection_id' to be a str")
        pulumi.set(__self__, "peering_connection_id", peering_connection_id)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)
        if time_point and not isinstance(time_point, str):
            raise TypeError("Expected argument 'time_point' to be a str")
        pulumi.set(__self__, "time_point", time_point)
        if vpn_id and not isinstance(vpn_id, str):
            raise TypeError("Expected argument 'vpn_id' to be a str")
        pulumi.set(__self__, "vpn_id", vpn_id)

    @property
    @pulumi.getter(name="directConnectGatewayId")
    def direct_connect_gateway_id(self) -> Optional[str]:
        return pulumi.get(self, "direct_connect_gateway_id")

    @property
    @pulumi.getter(name="gatewayFlowMonitorDetailSets")
    def gateway_flow_monitor_detail_sets(self) -> Sequence['outputs.GetGatewayFlowMonitorDetailGatewayFlowMonitorDetailSetResult']:
        """
        The gateway traffic monitoring details.
        """
        return pulumi.get(self, "gateway_flow_monitor_detail_sets")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="natId")
    def nat_id(self) -> Optional[str]:
        return pulumi.get(self, "nat_id")

    @property
    @pulumi.getter(name="orderDirection")
    def order_direction(self) -> Optional[str]:
        return pulumi.get(self, "order_direction")

    @property
    @pulumi.getter(name="orderField")
    def order_field(self) -> Optional[str]:
        return pulumi.get(self, "order_field")

    @property
    @pulumi.getter(name="peeringConnectionId")
    def peering_connection_id(self) -> Optional[str]:
        return pulumi.get(self, "peering_connection_id")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")

    @property
    @pulumi.getter(name="timePoint")
    def time_point(self) -> str:
        return pulumi.get(self, "time_point")

    @property
    @pulumi.getter(name="vpnId")
    def vpn_id(self) -> Optional[str]:
        return pulumi.get(self, "vpn_id")


class AwaitableGetGatewayFlowMonitorDetailResult(GetGatewayFlowMonitorDetailResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetGatewayFlowMonitorDetailResult(
            direct_connect_gateway_id=self.direct_connect_gateway_id,
            gateway_flow_monitor_detail_sets=self.gateway_flow_monitor_detail_sets,
            id=self.id,
            nat_id=self.nat_id,
            order_direction=self.order_direction,
            order_field=self.order_field,
            peering_connection_id=self.peering_connection_id,
            result_output_file=self.result_output_file,
            time_point=self.time_point,
            vpn_id=self.vpn_id)


def get_gateway_flow_monitor_detail(direct_connect_gateway_id: Optional[str] = None,
                                    nat_id: Optional[str] = None,
                                    order_direction: Optional[str] = None,
                                    order_field: Optional[str] = None,
                                    peering_connection_id: Optional[str] = None,
                                    result_output_file: Optional[str] = None,
                                    time_point: Optional[str] = None,
                                    vpn_id: Optional[str] = None,
                                    opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetGatewayFlowMonitorDetailResult:
    """
    Use this data source to query detailed information of vpc gateway_flow_monitor_detail

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    gateway_flow_monitor_detail = tencentcloud.Vpc.get_gateway_flow_monitor_detail(order_direction="DESC",
        order_field="OutTraffic",
        time_point="2023-06-02 12:15:20",
        vpn_id="vpngw-gt8bianl")
    ```
    <!--End PulumiCodeChooser -->


    :param str direct_connect_gateway_id: The instance ID of the Direct Connect gateway, such as `dcg-ltjahce6`.
    :param str nat_id: The instance ID of the NAT gateway, such as `nat-ltjahce6`.
    :param str order_direction: Order methods. Ascending: `ASC`, Descending: `DESC`.
    :param str order_field: The order field supports `InPkg`, `OutPkg`, `InTraffic`, and `OutTraffic`.
    :param str peering_connection_id: The instance ID of the peering connection, such as `pcx-ltjahce6`.
    :param str result_output_file: Used to save results.
    :param str time_point: The point in time. This indicates details of this minute will be queried. For example, in `2019-02-28 18:15:20`, details at `18:15` will be queried.
    :param str vpn_id: The instance ID of the VPN gateway, such as `vpn-ltjahce6`.
    """
    __args__ = dict()
    __args__['directConnectGatewayId'] = direct_connect_gateway_id
    __args__['natId'] = nat_id
    __args__['orderDirection'] = order_direction
    __args__['orderField'] = order_field
    __args__['peeringConnectionId'] = peering_connection_id
    __args__['resultOutputFile'] = result_output_file
    __args__['timePoint'] = time_point
    __args__['vpnId'] = vpn_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('tencentcloud:Vpc/getGatewayFlowMonitorDetail:getGatewayFlowMonitorDetail', __args__, opts=opts, typ=GetGatewayFlowMonitorDetailResult).value

    return AwaitableGetGatewayFlowMonitorDetailResult(
        direct_connect_gateway_id=pulumi.get(__ret__, 'direct_connect_gateway_id'),
        gateway_flow_monitor_detail_sets=pulumi.get(__ret__, 'gateway_flow_monitor_detail_sets'),
        id=pulumi.get(__ret__, 'id'),
        nat_id=pulumi.get(__ret__, 'nat_id'),
        order_direction=pulumi.get(__ret__, 'order_direction'),
        order_field=pulumi.get(__ret__, 'order_field'),
        peering_connection_id=pulumi.get(__ret__, 'peering_connection_id'),
        result_output_file=pulumi.get(__ret__, 'result_output_file'),
        time_point=pulumi.get(__ret__, 'time_point'),
        vpn_id=pulumi.get(__ret__, 'vpn_id'))


@_utilities.lift_output_func(get_gateway_flow_monitor_detail)
def get_gateway_flow_monitor_detail_output(direct_connect_gateway_id: Optional[pulumi.Input[Optional[str]]] = None,
                                           nat_id: Optional[pulumi.Input[Optional[str]]] = None,
                                           order_direction: Optional[pulumi.Input[Optional[str]]] = None,
                                           order_field: Optional[pulumi.Input[Optional[str]]] = None,
                                           peering_connection_id: Optional[pulumi.Input[Optional[str]]] = None,
                                           result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                                           time_point: Optional[pulumi.Input[str]] = None,
                                           vpn_id: Optional[pulumi.Input[Optional[str]]] = None,
                                           opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetGatewayFlowMonitorDetailResult]:
    """
    Use this data source to query detailed information of vpc gateway_flow_monitor_detail

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    gateway_flow_monitor_detail = tencentcloud.Vpc.get_gateway_flow_monitor_detail(order_direction="DESC",
        order_field="OutTraffic",
        time_point="2023-06-02 12:15:20",
        vpn_id="vpngw-gt8bianl")
    ```
    <!--End PulumiCodeChooser -->


    :param str direct_connect_gateway_id: The instance ID of the Direct Connect gateway, such as `dcg-ltjahce6`.
    :param str nat_id: The instance ID of the NAT gateway, such as `nat-ltjahce6`.
    :param str order_direction: Order methods. Ascending: `ASC`, Descending: `DESC`.
    :param str order_field: The order field supports `InPkg`, `OutPkg`, `InTraffic`, and `OutTraffic`.
    :param str peering_connection_id: The instance ID of the peering connection, such as `pcx-ltjahce6`.
    :param str result_output_file: Used to save results.
    :param str time_point: The point in time. This indicates details of this minute will be queried. For example, in `2019-02-28 18:15:20`, details at `18:15` will be queried.
    :param str vpn_id: The instance ID of the VPN gateway, such as `vpn-ltjahce6`.
    """
    ...

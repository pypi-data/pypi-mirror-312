# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetBandwidthPackageBillUsageResult',
    'AwaitableGetBandwidthPackageBillUsageResult',
    'get_bandwidth_package_bill_usage',
    'get_bandwidth_package_bill_usage_output',
]

@pulumi.output_type
class GetBandwidthPackageBillUsageResult:
    """
    A collection of values returned by getBandwidthPackageBillUsage.
    """
    def __init__(__self__, bandwidth_package_bill_bandwidth_sets=None, bandwidth_package_id=None, id=None, result_output_file=None):
        if bandwidth_package_bill_bandwidth_sets and not isinstance(bandwidth_package_bill_bandwidth_sets, list):
            raise TypeError("Expected argument 'bandwidth_package_bill_bandwidth_sets' to be a list")
        pulumi.set(__self__, "bandwidth_package_bill_bandwidth_sets", bandwidth_package_bill_bandwidth_sets)
        if bandwidth_package_id and not isinstance(bandwidth_package_id, str):
            raise TypeError("Expected argument 'bandwidth_package_id' to be a str")
        pulumi.set(__self__, "bandwidth_package_id", bandwidth_package_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)

    @property
    @pulumi.getter(name="bandwidthPackageBillBandwidthSets")
    def bandwidth_package_bill_bandwidth_sets(self) -> Sequence['outputs.GetBandwidthPackageBillUsageBandwidthPackageBillBandwidthSetResult']:
        """
        current billing amount.
        """
        return pulumi.get(self, "bandwidth_package_bill_bandwidth_sets")

    @property
    @pulumi.getter(name="bandwidthPackageId")
    def bandwidth_package_id(self) -> str:
        return pulumi.get(self, "bandwidth_package_id")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")


class AwaitableGetBandwidthPackageBillUsageResult(GetBandwidthPackageBillUsageResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetBandwidthPackageBillUsageResult(
            bandwidth_package_bill_bandwidth_sets=self.bandwidth_package_bill_bandwidth_sets,
            bandwidth_package_id=self.bandwidth_package_id,
            id=self.id,
            result_output_file=self.result_output_file)


def get_bandwidth_package_bill_usage(bandwidth_package_id: Optional[str] = None,
                                     result_output_file: Optional[str] = None,
                                     opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetBandwidthPackageBillUsageResult:
    """
    Use this data source to query detailed information of vpc bandwidth_package_bill_usage

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    bandwidth_package_bill_usage = tencentcloud.Vpc.get_bandwidth_package_bill_usage(bandwidth_package_id="bwp-234rfgt5")
    ```
    <!--End PulumiCodeChooser -->


    :param str bandwidth_package_id: The unique ID of the postpaid bandwidth package.
    :param str result_output_file: Used to save results.
    """
    __args__ = dict()
    __args__['bandwidthPackageId'] = bandwidth_package_id
    __args__['resultOutputFile'] = result_output_file
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('tencentcloud:Vpc/getBandwidthPackageBillUsage:getBandwidthPackageBillUsage', __args__, opts=opts, typ=GetBandwidthPackageBillUsageResult).value

    return AwaitableGetBandwidthPackageBillUsageResult(
        bandwidth_package_bill_bandwidth_sets=pulumi.get(__ret__, 'bandwidth_package_bill_bandwidth_sets'),
        bandwidth_package_id=pulumi.get(__ret__, 'bandwidth_package_id'),
        id=pulumi.get(__ret__, 'id'),
        result_output_file=pulumi.get(__ret__, 'result_output_file'))


@_utilities.lift_output_func(get_bandwidth_package_bill_usage)
def get_bandwidth_package_bill_usage_output(bandwidth_package_id: Optional[pulumi.Input[str]] = None,
                                            result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                                            opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetBandwidthPackageBillUsageResult]:
    """
    Use this data source to query detailed information of vpc bandwidth_package_bill_usage

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    bandwidth_package_bill_usage = tencentcloud.Vpc.get_bandwidth_package_bill_usage(bandwidth_package_id="bwp-234rfgt5")
    ```
    <!--End PulumiCodeChooser -->


    :param str bandwidth_package_id: The unique ID of the postpaid bandwidth package.
    :param str result_output_file: Used to save results.
    """
    ...

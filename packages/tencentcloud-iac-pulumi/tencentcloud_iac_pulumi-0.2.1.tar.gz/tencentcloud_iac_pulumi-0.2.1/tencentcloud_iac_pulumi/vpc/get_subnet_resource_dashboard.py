# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetSubnetResourceDashboardResult',
    'AwaitableGetSubnetResourceDashboardResult',
    'get_subnet_resource_dashboard',
    'get_subnet_resource_dashboard_output',
]

@pulumi.output_type
class GetSubnetResourceDashboardResult:
    """
    A collection of values returned by getSubnetResourceDashboard.
    """
    def __init__(__self__, id=None, resource_statistics_sets=None, result_output_file=None, subnet_ids=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if resource_statistics_sets and not isinstance(resource_statistics_sets, list):
            raise TypeError("Expected argument 'resource_statistics_sets' to be a list")
        pulumi.set(__self__, "resource_statistics_sets", resource_statistics_sets)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)
        if subnet_ids and not isinstance(subnet_ids, list):
            raise TypeError("Expected argument 'subnet_ids' to be a list")
        pulumi.set(__self__, "subnet_ids", subnet_ids)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="resourceStatisticsSets")
    def resource_statistics_sets(self) -> Sequence['outputs.GetSubnetResourceDashboardResourceStatisticsSetResult']:
        """
        Information of resources returned.
        """
        return pulumi.get(self, "resource_statistics_sets")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")

    @property
    @pulumi.getter(name="subnetIds")
    def subnet_ids(self) -> Sequence[str]:
        return pulumi.get(self, "subnet_ids")


class AwaitableGetSubnetResourceDashboardResult(GetSubnetResourceDashboardResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetSubnetResourceDashboardResult(
            id=self.id,
            resource_statistics_sets=self.resource_statistics_sets,
            result_output_file=self.result_output_file,
            subnet_ids=self.subnet_ids)


def get_subnet_resource_dashboard(result_output_file: Optional[str] = None,
                                  subnet_ids: Optional[Sequence[str]] = None,
                                  opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetSubnetResourceDashboardResult:
    """
    Use this data source to query detailed information of vpc subnet_resource_dashboard

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    subnet_resource_dashboard = tencentcloud.Vpc.get_subnet_resource_dashboard(subnet_ids=["subnet-i9tpf6hq"])
    ```
    <!--End PulumiCodeChooser -->


    :param str result_output_file: Used to save results.
    :param Sequence[str] subnet_ids: Subnet instance ID, such as `subnet-f1xjkw1b`.
    """
    __args__ = dict()
    __args__['resultOutputFile'] = result_output_file
    __args__['subnetIds'] = subnet_ids
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('tencentcloud:Vpc/getSubnetResourceDashboard:getSubnetResourceDashboard', __args__, opts=opts, typ=GetSubnetResourceDashboardResult).value

    return AwaitableGetSubnetResourceDashboardResult(
        id=pulumi.get(__ret__, 'id'),
        resource_statistics_sets=pulumi.get(__ret__, 'resource_statistics_sets'),
        result_output_file=pulumi.get(__ret__, 'result_output_file'),
        subnet_ids=pulumi.get(__ret__, 'subnet_ids'))


@_utilities.lift_output_func(get_subnet_resource_dashboard)
def get_subnet_resource_dashboard_output(result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                                         subnet_ids: Optional[pulumi.Input[Sequence[str]]] = None,
                                         opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetSubnetResourceDashboardResult]:
    """
    Use this data source to query detailed information of vpc subnet_resource_dashboard

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    subnet_resource_dashboard = tencentcloud.Vpc.get_subnet_resource_dashboard(subnet_ids=["subnet-i9tpf6hq"])
    ```
    <!--End PulumiCodeChooser -->


    :param str result_output_file: Used to save results.
    :param Sequence[str] subnet_ids: Subnet instance ID, such as `subnet-f1xjkw1b`.
    """
    ...

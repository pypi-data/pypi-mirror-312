# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = [
    'GetNetDetectStatesResult',
    'AwaitableGetNetDetectStatesResult',
    'get_net_detect_states',
    'get_net_detect_states_output',
]

@pulumi.output_type
class GetNetDetectStatesResult:
    """
    A collection of values returned by getNetDetectStates.
    """
    def __init__(__self__, filters=None, id=None, net_detect_ids=None, net_detect_state_sets=None, result_output_file=None):
        if filters and not isinstance(filters, list):
            raise TypeError("Expected argument 'filters' to be a list")
        pulumi.set(__self__, "filters", filters)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if net_detect_ids and not isinstance(net_detect_ids, list):
            raise TypeError("Expected argument 'net_detect_ids' to be a list")
        pulumi.set(__self__, "net_detect_ids", net_detect_ids)
        if net_detect_state_sets and not isinstance(net_detect_state_sets, list):
            raise TypeError("Expected argument 'net_detect_state_sets' to be a list")
        pulumi.set(__self__, "net_detect_state_sets", net_detect_state_sets)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)

    @property
    @pulumi.getter
    def filters(self) -> Optional[Sequence['outputs.GetNetDetectStatesFilterResult']]:
        return pulumi.get(self, "filters")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="netDetectIds")
    def net_detect_ids(self) -> Optional[Sequence[str]]:
        return pulumi.get(self, "net_detect_ids")

    @property
    @pulumi.getter(name="netDetectStateSets")
    def net_detect_state_sets(self) -> Sequence['outputs.GetNetDetectStatesNetDetectStateSetResult']:
        """
        The array of network detection verification results that meet requirements.Note: This field may return null, indicating that no valid values can be obtained.
        """
        return pulumi.get(self, "net_detect_state_sets")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")


class AwaitableGetNetDetectStatesResult(GetNetDetectStatesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetNetDetectStatesResult(
            filters=self.filters,
            id=self.id,
            net_detect_ids=self.net_detect_ids,
            net_detect_state_sets=self.net_detect_state_sets,
            result_output_file=self.result_output_file)


def get_net_detect_states(filters: Optional[Sequence[pulumi.InputType['GetNetDetectStatesFilterArgs']]] = None,
                          net_detect_ids: Optional[Sequence[str]] = None,
                          result_output_file: Optional[str] = None,
                          opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetNetDetectStatesResult:
    """
    Use this data source to query detailed information of vpc net_detect_states

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    net_detect_states = tencentcloud.Vpc.get_net_detect_states(net_detect_ids=["netd-12345678"])
    ```
    <!--End PulumiCodeChooser -->


    :param Sequence[pulumi.InputType['GetNetDetectStatesFilterArgs']] filters: Filter conditions. `NetDetectIds` and `Filters` cannot be specified at the same time.net-detect-id - String - (Filter condition) The network detection instance ID, such as netd-12345678.
    :param Sequence[str] net_detect_ids: The array of network detection instance `IDs`, such as [`netd-12345678`].
    :param str result_output_file: Used to save results.
    """
    __args__ = dict()
    __args__['filters'] = filters
    __args__['netDetectIds'] = net_detect_ids
    __args__['resultOutputFile'] = result_output_file
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('tencentcloud:Vpc/getNetDetectStates:getNetDetectStates', __args__, opts=opts, typ=GetNetDetectStatesResult).value

    return AwaitableGetNetDetectStatesResult(
        filters=pulumi.get(__ret__, 'filters'),
        id=pulumi.get(__ret__, 'id'),
        net_detect_ids=pulumi.get(__ret__, 'net_detect_ids'),
        net_detect_state_sets=pulumi.get(__ret__, 'net_detect_state_sets'),
        result_output_file=pulumi.get(__ret__, 'result_output_file'))


@_utilities.lift_output_func(get_net_detect_states)
def get_net_detect_states_output(filters: Optional[pulumi.Input[Optional[Sequence[pulumi.InputType['GetNetDetectStatesFilterArgs']]]]] = None,
                                 net_detect_ids: Optional[pulumi.Input[Optional[Sequence[str]]]] = None,
                                 result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                                 opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetNetDetectStatesResult]:
    """
    Use this data source to query detailed information of vpc net_detect_states

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    net_detect_states = tencentcloud.Vpc.get_net_detect_states(net_detect_ids=["netd-12345678"])
    ```
    <!--End PulumiCodeChooser -->


    :param Sequence[pulumi.InputType['GetNetDetectStatesFilterArgs']] filters: Filter conditions. `NetDetectIds` and `Filters` cannot be specified at the same time.net-detect-id - String - (Filter condition) The network detection instance ID, such as netd-12345678.
    :param Sequence[str] net_detect_ids: The array of network detection instance `IDs`, such as [`netd-12345678`].
    :param str result_output_file: Used to save results.
    """
    ...

# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = ['LocalGatewayArgs', 'LocalGateway']

@pulumi.input_type
class LocalGatewayArgs:
    def __init__(__self__, *,
                 cdc_id: pulumi.Input[str],
                 local_gateway_name: pulumi.Input[str],
                 vpc_id: pulumi.Input[str]):
        """
        The set of arguments for constructing a LocalGateway resource.
        :param pulumi.Input[str] cdc_id: CDC instance ID.
        :param pulumi.Input[str] local_gateway_name: Local gateway name.
        :param pulumi.Input[str] vpc_id: VPC instance ID.
        """
        pulumi.set(__self__, "cdc_id", cdc_id)
        pulumi.set(__self__, "local_gateway_name", local_gateway_name)
        pulumi.set(__self__, "vpc_id", vpc_id)

    @property
    @pulumi.getter(name="cdcId")
    def cdc_id(self) -> pulumi.Input[str]:
        """
        CDC instance ID.
        """
        return pulumi.get(self, "cdc_id")

    @cdc_id.setter
    def cdc_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "cdc_id", value)

    @property
    @pulumi.getter(name="localGatewayName")
    def local_gateway_name(self) -> pulumi.Input[str]:
        """
        Local gateway name.
        """
        return pulumi.get(self, "local_gateway_name")

    @local_gateway_name.setter
    def local_gateway_name(self, value: pulumi.Input[str]):
        pulumi.set(self, "local_gateway_name", value)

    @property
    @pulumi.getter(name="vpcId")
    def vpc_id(self) -> pulumi.Input[str]:
        """
        VPC instance ID.
        """
        return pulumi.get(self, "vpc_id")

    @vpc_id.setter
    def vpc_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "vpc_id", value)


@pulumi.input_type
class _LocalGatewayState:
    def __init__(__self__, *,
                 cdc_id: Optional[pulumi.Input[str]] = None,
                 local_gateway_name: Optional[pulumi.Input[str]] = None,
                 vpc_id: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering LocalGateway resources.
        :param pulumi.Input[str] cdc_id: CDC instance ID.
        :param pulumi.Input[str] local_gateway_name: Local gateway name.
        :param pulumi.Input[str] vpc_id: VPC instance ID.
        """
        if cdc_id is not None:
            pulumi.set(__self__, "cdc_id", cdc_id)
        if local_gateway_name is not None:
            pulumi.set(__self__, "local_gateway_name", local_gateway_name)
        if vpc_id is not None:
            pulumi.set(__self__, "vpc_id", vpc_id)

    @property
    @pulumi.getter(name="cdcId")
    def cdc_id(self) -> Optional[pulumi.Input[str]]:
        """
        CDC instance ID.
        """
        return pulumi.get(self, "cdc_id")

    @cdc_id.setter
    def cdc_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "cdc_id", value)

    @property
    @pulumi.getter(name="localGatewayName")
    def local_gateway_name(self) -> Optional[pulumi.Input[str]]:
        """
        Local gateway name.
        """
        return pulumi.get(self, "local_gateway_name")

    @local_gateway_name.setter
    def local_gateway_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "local_gateway_name", value)

    @property
    @pulumi.getter(name="vpcId")
    def vpc_id(self) -> Optional[pulumi.Input[str]]:
        """
        VPC instance ID.
        """
        return pulumi.get(self, "vpc_id")

    @vpc_id.setter
    def vpc_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vpc_id", value)


class LocalGateway(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 cdc_id: Optional[pulumi.Input[str]] = None,
                 local_gateway_name: Optional[pulumi.Input[str]] = None,
                 vpc_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Provides a resource to create a vpc local_gateway

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        vpc = tencentcloud.vpc.Instance("vpc", cidr_block="10.0.0.0/16")
        example = tencentcloud.vpc.LocalGateway("example",
            local_gateway_name="tf-example",
            vpc_id=vpc.id,
            cdc_id="cluster-j9gyu1iy")
        ```
        <!--End PulumiCodeChooser -->

        ## Import

        vpc local_gateway can be imported using the id, e.g.

        ```sh
        $ pulumi import tencentcloud:Vpc/localGateway:LocalGateway local_gateway local_gateway_id
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] cdc_id: CDC instance ID.
        :param pulumi.Input[str] local_gateway_name: Local gateway name.
        :param pulumi.Input[str] vpc_id: VPC instance ID.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: LocalGatewayArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Provides a resource to create a vpc local_gateway

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        vpc = tencentcloud.vpc.Instance("vpc", cidr_block="10.0.0.0/16")
        example = tencentcloud.vpc.LocalGateway("example",
            local_gateway_name="tf-example",
            vpc_id=vpc.id,
            cdc_id="cluster-j9gyu1iy")
        ```
        <!--End PulumiCodeChooser -->

        ## Import

        vpc local_gateway can be imported using the id, e.g.

        ```sh
        $ pulumi import tencentcloud:Vpc/localGateway:LocalGateway local_gateway local_gateway_id
        ```

        :param str resource_name: The name of the resource.
        :param LocalGatewayArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(LocalGatewayArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 cdc_id: Optional[pulumi.Input[str]] = None,
                 local_gateway_name: Optional[pulumi.Input[str]] = None,
                 vpc_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = LocalGatewayArgs.__new__(LocalGatewayArgs)

            if cdc_id is None and not opts.urn:
                raise TypeError("Missing required property 'cdc_id'")
            __props__.__dict__["cdc_id"] = cdc_id
            if local_gateway_name is None and not opts.urn:
                raise TypeError("Missing required property 'local_gateway_name'")
            __props__.__dict__["local_gateway_name"] = local_gateway_name
            if vpc_id is None and not opts.urn:
                raise TypeError("Missing required property 'vpc_id'")
            __props__.__dict__["vpc_id"] = vpc_id
        super(LocalGateway, __self__).__init__(
            'tencentcloud:Vpc/localGateway:LocalGateway',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            cdc_id: Optional[pulumi.Input[str]] = None,
            local_gateway_name: Optional[pulumi.Input[str]] = None,
            vpc_id: Optional[pulumi.Input[str]] = None) -> 'LocalGateway':
        """
        Get an existing LocalGateway resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] cdc_id: CDC instance ID.
        :param pulumi.Input[str] local_gateway_name: Local gateway name.
        :param pulumi.Input[str] vpc_id: VPC instance ID.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _LocalGatewayState.__new__(_LocalGatewayState)

        __props__.__dict__["cdc_id"] = cdc_id
        __props__.__dict__["local_gateway_name"] = local_gateway_name
        __props__.__dict__["vpc_id"] = vpc_id
        return LocalGateway(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="cdcId")
    def cdc_id(self) -> pulumi.Output[str]:
        """
        CDC instance ID.
        """
        return pulumi.get(self, "cdc_id")

    @property
    @pulumi.getter(name="localGatewayName")
    def local_gateway_name(self) -> pulumi.Output[str]:
        """
        Local gateway name.
        """
        return pulumi.get(self, "local_gateway_name")

    @property
    @pulumi.getter(name="vpcId")
    def vpc_id(self) -> pulumi.Output[str]:
        """
        VPC instance ID.
        """
        return pulumi.get(self, "vpc_id")


# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetPrivateIpAddressesResult',
    'AwaitableGetPrivateIpAddressesResult',
    'get_private_ip_addresses',
    'get_private_ip_addresses_output',
]

@pulumi.output_type
class GetPrivateIpAddressesResult:
    """
    A collection of values returned by getPrivateIpAddresses.
    """
    def __init__(__self__, id=None, private_ip_addresses=None, result_output_file=None, vpc_id=None, vpc_private_ip_address_sets=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if private_ip_addresses and not isinstance(private_ip_addresses, list):
            raise TypeError("Expected argument 'private_ip_addresses' to be a list")
        pulumi.set(__self__, "private_ip_addresses", private_ip_addresses)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)
        if vpc_id and not isinstance(vpc_id, str):
            raise TypeError("Expected argument 'vpc_id' to be a str")
        pulumi.set(__self__, "vpc_id", vpc_id)
        if vpc_private_ip_address_sets and not isinstance(vpc_private_ip_address_sets, list):
            raise TypeError("Expected argument 'vpc_private_ip_address_sets' to be a list")
        pulumi.set(__self__, "vpc_private_ip_address_sets", vpc_private_ip_address_sets)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="privateIpAddresses")
    def private_ip_addresses(self) -> Sequence[str]:
        return pulumi.get(self, "private_ip_addresses")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")

    @property
    @pulumi.getter(name="vpcId")
    def vpc_id(self) -> str:
        return pulumi.get(self, "vpc_id")

    @property
    @pulumi.getter(name="vpcPrivateIpAddressSets")
    def vpc_private_ip_address_sets(self) -> Sequence['outputs.GetPrivateIpAddressesVpcPrivateIpAddressSetResult']:
        """
        The list of private `IP` address information.
        """
        return pulumi.get(self, "vpc_private_ip_address_sets")


class AwaitableGetPrivateIpAddressesResult(GetPrivateIpAddressesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetPrivateIpAddressesResult(
            id=self.id,
            private_ip_addresses=self.private_ip_addresses,
            result_output_file=self.result_output_file,
            vpc_id=self.vpc_id,
            vpc_private_ip_address_sets=self.vpc_private_ip_address_sets)


def get_private_ip_addresses(private_ip_addresses: Optional[Sequence[str]] = None,
                             result_output_file: Optional[str] = None,
                             vpc_id: Optional[str] = None,
                             opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetPrivateIpAddressesResult:
    """
    Use this data source to query detailed information of vpc private_ip_addresses

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    private_ip_addresses = tencentcloud.Vpc.get_private_ip_addresses(private_ip_addresses=["10.0.0.1"],
        vpc_id="vpc-l0dw94uh")
    ```
    <!--End PulumiCodeChooser -->


    :param Sequence[str] private_ip_addresses: The private `IP` address list. Each request supports a maximum of `10` batch querying.
    :param str result_output_file: Used to save results.
    :param str vpc_id: The `ID` of the `VPC`, such as `vpc-f49l6u0z`.
    """
    __args__ = dict()
    __args__['privateIpAddresses'] = private_ip_addresses
    __args__['resultOutputFile'] = result_output_file
    __args__['vpcId'] = vpc_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('tencentcloud:Vpc/getPrivateIpAddresses:getPrivateIpAddresses', __args__, opts=opts, typ=GetPrivateIpAddressesResult).value

    return AwaitableGetPrivateIpAddressesResult(
        id=pulumi.get(__ret__, 'id'),
        private_ip_addresses=pulumi.get(__ret__, 'private_ip_addresses'),
        result_output_file=pulumi.get(__ret__, 'result_output_file'),
        vpc_id=pulumi.get(__ret__, 'vpc_id'),
        vpc_private_ip_address_sets=pulumi.get(__ret__, 'vpc_private_ip_address_sets'))


@_utilities.lift_output_func(get_private_ip_addresses)
def get_private_ip_addresses_output(private_ip_addresses: Optional[pulumi.Input[Sequence[str]]] = None,
                                    result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                                    vpc_id: Optional[pulumi.Input[str]] = None,
                                    opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetPrivateIpAddressesResult]:
    """
    Use this data source to query detailed information of vpc private_ip_addresses

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    private_ip_addresses = tencentcloud.Vpc.get_private_ip_addresses(private_ip_addresses=["10.0.0.1"],
        vpc_id="vpc-l0dw94uh")
    ```
    <!--End PulumiCodeChooser -->


    :param Sequence[str] private_ip_addresses: The private `IP` address list. Each request supports a maximum of `10` batch querying.
    :param str result_output_file: Used to save results.
    :param str vpc_id: The `ID` of the `VPC`, such as `vpc-f49l6u0z`.
    """
    ...

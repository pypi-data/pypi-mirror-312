# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetSgSnapshotFileContentResult',
    'AwaitableGetSgSnapshotFileContentResult',
    'get_sg_snapshot_file_content',
    'get_sg_snapshot_file_content_output',
]

@pulumi.output_type
class GetSgSnapshotFileContentResult:
    """
    A collection of values returned by getSgSnapshotFileContent.
    """
    def __init__(__self__, backup_datas=None, backup_time=None, id=None, instance_id=None, operator=None, original_datas=None, result_output_file=None, security_group_id=None, snapshot_file_id=None, snapshot_policy_id=None):
        if backup_datas and not isinstance(backup_datas, list):
            raise TypeError("Expected argument 'backup_datas' to be a list")
        pulumi.set(__self__, "backup_datas", backup_datas)
        if backup_time and not isinstance(backup_time, str):
            raise TypeError("Expected argument 'backup_time' to be a str")
        pulumi.set(__self__, "backup_time", backup_time)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if instance_id and not isinstance(instance_id, str):
            raise TypeError("Expected argument 'instance_id' to be a str")
        pulumi.set(__self__, "instance_id", instance_id)
        if operator and not isinstance(operator, str):
            raise TypeError("Expected argument 'operator' to be a str")
        pulumi.set(__self__, "operator", operator)
        if original_datas and not isinstance(original_datas, list):
            raise TypeError("Expected argument 'original_datas' to be a list")
        pulumi.set(__self__, "original_datas", original_datas)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)
        if security_group_id and not isinstance(security_group_id, str):
            raise TypeError("Expected argument 'security_group_id' to be a str")
        pulumi.set(__self__, "security_group_id", security_group_id)
        if snapshot_file_id and not isinstance(snapshot_file_id, str):
            raise TypeError("Expected argument 'snapshot_file_id' to be a str")
        pulumi.set(__self__, "snapshot_file_id", snapshot_file_id)
        if snapshot_policy_id and not isinstance(snapshot_policy_id, str):
            raise TypeError("Expected argument 'snapshot_policy_id' to be a str")
        pulumi.set(__self__, "snapshot_policy_id", snapshot_policy_id)

    @property
    @pulumi.getter(name="backupDatas")
    def backup_datas(self) -> Sequence['outputs.GetSgSnapshotFileContentBackupDataResult']:
        """
        Backup data.
        """
        return pulumi.get(self, "backup_datas")

    @property
    @pulumi.getter(name="backupTime")
    def backup_time(self) -> str:
        """
        Backup time.
        """
        return pulumi.get(self, "backup_time")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> str:
        """
        Security group ID.
        """
        return pulumi.get(self, "instance_id")

    @property
    @pulumi.getter
    def operator(self) -> str:
        """
        Operator.
        """
        return pulumi.get(self, "operator")

    @property
    @pulumi.getter(name="originalDatas")
    def original_datas(self) -> Sequence['outputs.GetSgSnapshotFileContentOriginalDataResult']:
        """
        Original data.
        """
        return pulumi.get(self, "original_datas")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")

    @property
    @pulumi.getter(name="securityGroupId")
    def security_group_id(self) -> str:
        """
        The security group instance ID, such as `sg-ohuuioma`.
        """
        return pulumi.get(self, "security_group_id")

    @property
    @pulumi.getter(name="snapshotFileId")
    def snapshot_file_id(self) -> str:
        return pulumi.get(self, "snapshot_file_id")

    @property
    @pulumi.getter(name="snapshotPolicyId")
    def snapshot_policy_id(self) -> str:
        return pulumi.get(self, "snapshot_policy_id")


class AwaitableGetSgSnapshotFileContentResult(GetSgSnapshotFileContentResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetSgSnapshotFileContentResult(
            backup_datas=self.backup_datas,
            backup_time=self.backup_time,
            id=self.id,
            instance_id=self.instance_id,
            operator=self.operator,
            original_datas=self.original_datas,
            result_output_file=self.result_output_file,
            security_group_id=self.security_group_id,
            snapshot_file_id=self.snapshot_file_id,
            snapshot_policy_id=self.snapshot_policy_id)


def get_sg_snapshot_file_content(result_output_file: Optional[str] = None,
                                 security_group_id: Optional[str] = None,
                                 snapshot_file_id: Optional[str] = None,
                                 snapshot_policy_id: Optional[str] = None,
                                 opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetSgSnapshotFileContentResult:
    """
    Use this data source to query detailed information of vpc sg_snapshot_file_content

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    sg_snapshot_file_content = tencentcloud.Vpc.get_sg_snapshot_file_content(security_group_id="sg-ntrgm89v",
        snapshot_file_id="ssfile-017gepjxpr",
        snapshot_policy_id="sspolicy-ebjofe71")
    ```
    <!--End PulumiCodeChooser -->


    :param str result_output_file: Used to save results.
    :param str security_group_id: Security group ID.
    :param str snapshot_file_id: Snapshot file ID.
    :param str snapshot_policy_id: Snapshot policy IDs.
    """
    __args__ = dict()
    __args__['resultOutputFile'] = result_output_file
    __args__['securityGroupId'] = security_group_id
    __args__['snapshotFileId'] = snapshot_file_id
    __args__['snapshotPolicyId'] = snapshot_policy_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('tencentcloud:Vpc/getSgSnapshotFileContent:getSgSnapshotFileContent', __args__, opts=opts, typ=GetSgSnapshotFileContentResult).value

    return AwaitableGetSgSnapshotFileContentResult(
        backup_datas=pulumi.get(__ret__, 'backup_datas'),
        backup_time=pulumi.get(__ret__, 'backup_time'),
        id=pulumi.get(__ret__, 'id'),
        instance_id=pulumi.get(__ret__, 'instance_id'),
        operator=pulumi.get(__ret__, 'operator'),
        original_datas=pulumi.get(__ret__, 'original_datas'),
        result_output_file=pulumi.get(__ret__, 'result_output_file'),
        security_group_id=pulumi.get(__ret__, 'security_group_id'),
        snapshot_file_id=pulumi.get(__ret__, 'snapshot_file_id'),
        snapshot_policy_id=pulumi.get(__ret__, 'snapshot_policy_id'))


@_utilities.lift_output_func(get_sg_snapshot_file_content)
def get_sg_snapshot_file_content_output(result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                                        security_group_id: Optional[pulumi.Input[str]] = None,
                                        snapshot_file_id: Optional[pulumi.Input[str]] = None,
                                        snapshot_policy_id: Optional[pulumi.Input[str]] = None,
                                        opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetSgSnapshotFileContentResult]:
    """
    Use this data source to query detailed information of vpc sg_snapshot_file_content

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    sg_snapshot_file_content = tencentcloud.Vpc.get_sg_snapshot_file_content(security_group_id="sg-ntrgm89v",
        snapshot_file_id="ssfile-017gepjxpr",
        snapshot_policy_id="sspolicy-ebjofe71")
    ```
    <!--End PulumiCodeChooser -->


    :param str result_output_file: Used to save results.
    :param str security_group_id: Security group ID.
    :param str snapshot_file_id: Snapshot file ID.
    :param str snapshot_policy_id: Snapshot policy IDs.
    """
    ...

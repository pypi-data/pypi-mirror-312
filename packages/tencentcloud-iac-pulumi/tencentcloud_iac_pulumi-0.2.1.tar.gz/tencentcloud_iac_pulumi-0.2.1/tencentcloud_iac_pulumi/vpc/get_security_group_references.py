# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetSecurityGroupReferencesResult',
    'AwaitableGetSecurityGroupReferencesResult',
    'get_security_group_references',
    'get_security_group_references_output',
]

@pulumi.output_type
class GetSecurityGroupReferencesResult:
    """
    A collection of values returned by getSecurityGroupReferences.
    """
    def __init__(__self__, id=None, referred_security_group_sets=None, result_output_file=None, security_group_ids=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if referred_security_group_sets and not isinstance(referred_security_group_sets, list):
            raise TypeError("Expected argument 'referred_security_group_sets' to be a list")
        pulumi.set(__self__, "referred_security_group_sets", referred_security_group_sets)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)
        if security_group_ids and not isinstance(security_group_ids, list):
            raise TypeError("Expected argument 'security_group_ids' to be a list")
        pulumi.set(__self__, "security_group_ids", security_group_ids)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="referredSecurityGroupSets")
    def referred_security_group_sets(self) -> Sequence['outputs.GetSecurityGroupReferencesReferredSecurityGroupSetResult']:
        """
        Referred security groups.
        """
        return pulumi.get(self, "referred_security_group_sets")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")

    @property
    @pulumi.getter(name="securityGroupIds")
    def security_group_ids(self) -> Sequence[str]:
        return pulumi.get(self, "security_group_ids")


class AwaitableGetSecurityGroupReferencesResult(GetSecurityGroupReferencesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetSecurityGroupReferencesResult(
            id=self.id,
            referred_security_group_sets=self.referred_security_group_sets,
            result_output_file=self.result_output_file,
            security_group_ids=self.security_group_ids)


def get_security_group_references(result_output_file: Optional[str] = None,
                                  security_group_ids: Optional[Sequence[str]] = None,
                                  opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetSecurityGroupReferencesResult:
    """
    Use this data source to query detailed information of vpc security_group_references

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    security_group_references = tencentcloud.Vpc.get_security_group_references(security_group_ids=["sg-edmur627"])
    ```
    <!--End PulumiCodeChooser -->


    :param str result_output_file: Used to save results.
    :param Sequence[str] security_group_ids: A set of security group instance IDs, e.g. [sg-12345678].
    """
    __args__ = dict()
    __args__['resultOutputFile'] = result_output_file
    __args__['securityGroupIds'] = security_group_ids
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('tencentcloud:Vpc/getSecurityGroupReferences:getSecurityGroupReferences', __args__, opts=opts, typ=GetSecurityGroupReferencesResult).value

    return AwaitableGetSecurityGroupReferencesResult(
        id=pulumi.get(__ret__, 'id'),
        referred_security_group_sets=pulumi.get(__ret__, 'referred_security_group_sets'),
        result_output_file=pulumi.get(__ret__, 'result_output_file'),
        security_group_ids=pulumi.get(__ret__, 'security_group_ids'))


@_utilities.lift_output_func(get_security_group_references)
def get_security_group_references_output(result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                                         security_group_ids: Optional[pulumi.Input[Sequence[str]]] = None,
                                         opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetSecurityGroupReferencesResult]:
    """
    Use this data source to query detailed information of vpc security_group_references

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    security_group_references = tencentcloud.Vpc.get_security_group_references(security_group_ids=["sg-edmur627"])
    ```
    <!--End PulumiCodeChooser -->


    :param str result_output_file: Used to save results.
    :param Sequence[str] security_group_ids: A set of security group instance IDs, e.g. [sg-12345678].
    """
    ...

# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['TranscodeTemplateArgs', 'TranscodeTemplate']

@pulumi.input_type
class TranscodeTemplateArgs:
    def __init__(__self__, *,
                 container: pulumi.Input[str],
                 audio_template: Optional[pulumi.Input['TranscodeTemplateAudioTemplateArgs']] = None,
                 comment: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 remove_audio: Optional[pulumi.Input[int]] = None,
                 remove_video: Optional[pulumi.Input[int]] = None,
                 segment_type: Optional[pulumi.Input[str]] = None,
                 sub_app_id: Optional[pulumi.Input[int]] = None,
                 tehd_config: Optional[pulumi.Input['TranscodeTemplateTehdConfigArgs']] = None,
                 video_template: Optional[pulumi.Input['TranscodeTemplateVideoTemplateArgs']] = None):
        """
        The set of arguments for constructing a TranscodeTemplate resource.
        :param pulumi.Input[str] container: The container format. Valid values: `mp4`, `flv`, `hls`, `mp3`, `flac`, `ogg`, `m4a`, `wav` ( `mp3`, `flac`, `ogg`, `m4a`, and `wav` are audio file formats).
        :param pulumi.Input['TranscodeTemplateAudioTemplateArgs'] audio_template: Audio stream configuration parameter. This field is required when `RemoveAudio` is 0.
        :param pulumi.Input[str] comment: Template description. Length limit: 256 characters.
        :param pulumi.Input[str] name: Transcoding template name. Length limit: 64 characters.
        :param pulumi.Input[int] remove_audio: Whether to remove audio data. Valid values:0: retain 1: remove Default value: 0.
        :param pulumi.Input[int] remove_video: Whether to remove video data. Valid values:
               - 0: retain
               - 1: remove
               Default value: 0.
        :param pulumi.Input[str] segment_type: The segment type. This parameter is valid only if `Container` is `hls`. Valid values: `ts`: TS segment; `fmp4`: fMP4 segment Default: `ts`.
        :param pulumi.Input[int] sub_app_id: The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.
        :param pulumi.Input['TranscodeTemplateTehdConfigArgs'] tehd_config: TESHD transcoding parameter.
        :param pulumi.Input['TranscodeTemplateVideoTemplateArgs'] video_template: Video stream configuration parameter. This field is required when `RemoveVideo` is 0.
        """
        pulumi.set(__self__, "container", container)
        if audio_template is not None:
            pulumi.set(__self__, "audio_template", audio_template)
        if comment is not None:
            pulumi.set(__self__, "comment", comment)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if remove_audio is not None:
            pulumi.set(__self__, "remove_audio", remove_audio)
        if remove_video is not None:
            pulumi.set(__self__, "remove_video", remove_video)
        if segment_type is not None:
            pulumi.set(__self__, "segment_type", segment_type)
        if sub_app_id is not None:
            pulumi.set(__self__, "sub_app_id", sub_app_id)
        if tehd_config is not None:
            pulumi.set(__self__, "tehd_config", tehd_config)
        if video_template is not None:
            pulumi.set(__self__, "video_template", video_template)

    @property
    @pulumi.getter
    def container(self) -> pulumi.Input[str]:
        """
        The container format. Valid values: `mp4`, `flv`, `hls`, `mp3`, `flac`, `ogg`, `m4a`, `wav` ( `mp3`, `flac`, `ogg`, `m4a`, and `wav` are audio file formats).
        """
        return pulumi.get(self, "container")

    @container.setter
    def container(self, value: pulumi.Input[str]):
        pulumi.set(self, "container", value)

    @property
    @pulumi.getter(name="audioTemplate")
    def audio_template(self) -> Optional[pulumi.Input['TranscodeTemplateAudioTemplateArgs']]:
        """
        Audio stream configuration parameter. This field is required when `RemoveAudio` is 0.
        """
        return pulumi.get(self, "audio_template")

    @audio_template.setter
    def audio_template(self, value: Optional[pulumi.Input['TranscodeTemplateAudioTemplateArgs']]):
        pulumi.set(self, "audio_template", value)

    @property
    @pulumi.getter
    def comment(self) -> Optional[pulumi.Input[str]]:
        """
        Template description. Length limit: 256 characters.
        """
        return pulumi.get(self, "comment")

    @comment.setter
    def comment(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "comment", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        Transcoding template name. Length limit: 64 characters.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="removeAudio")
    def remove_audio(self) -> Optional[pulumi.Input[int]]:
        """
        Whether to remove audio data. Valid values:0: retain 1: remove Default value: 0.
        """
        return pulumi.get(self, "remove_audio")

    @remove_audio.setter
    def remove_audio(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "remove_audio", value)

    @property
    @pulumi.getter(name="removeVideo")
    def remove_video(self) -> Optional[pulumi.Input[int]]:
        """
        Whether to remove video data. Valid values:
        - 0: retain
        - 1: remove
        Default value: 0.
        """
        return pulumi.get(self, "remove_video")

    @remove_video.setter
    def remove_video(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "remove_video", value)

    @property
    @pulumi.getter(name="segmentType")
    def segment_type(self) -> Optional[pulumi.Input[str]]:
        """
        The segment type. This parameter is valid only if `Container` is `hls`. Valid values: `ts`: TS segment; `fmp4`: fMP4 segment Default: `ts`.
        """
        return pulumi.get(self, "segment_type")

    @segment_type.setter
    def segment_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "segment_type", value)

    @property
    @pulumi.getter(name="subAppId")
    def sub_app_id(self) -> Optional[pulumi.Input[int]]:
        """
        The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.
        """
        return pulumi.get(self, "sub_app_id")

    @sub_app_id.setter
    def sub_app_id(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "sub_app_id", value)

    @property
    @pulumi.getter(name="tehdConfig")
    def tehd_config(self) -> Optional[pulumi.Input['TranscodeTemplateTehdConfigArgs']]:
        """
        TESHD transcoding parameter.
        """
        return pulumi.get(self, "tehd_config")

    @tehd_config.setter
    def tehd_config(self, value: Optional[pulumi.Input['TranscodeTemplateTehdConfigArgs']]):
        pulumi.set(self, "tehd_config", value)

    @property
    @pulumi.getter(name="videoTemplate")
    def video_template(self) -> Optional[pulumi.Input['TranscodeTemplateVideoTemplateArgs']]:
        """
        Video stream configuration parameter. This field is required when `RemoveVideo` is 0.
        """
        return pulumi.get(self, "video_template")

    @video_template.setter
    def video_template(self, value: Optional[pulumi.Input['TranscodeTemplateVideoTemplateArgs']]):
        pulumi.set(self, "video_template", value)


@pulumi.input_type
class _TranscodeTemplateState:
    def __init__(__self__, *,
                 audio_template: Optional[pulumi.Input['TranscodeTemplateAudioTemplateArgs']] = None,
                 comment: Optional[pulumi.Input[str]] = None,
                 container: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 remove_audio: Optional[pulumi.Input[int]] = None,
                 remove_video: Optional[pulumi.Input[int]] = None,
                 segment_type: Optional[pulumi.Input[str]] = None,
                 sub_app_id: Optional[pulumi.Input[int]] = None,
                 tehd_config: Optional[pulumi.Input['TranscodeTemplateTehdConfigArgs']] = None,
                 video_template: Optional[pulumi.Input['TranscodeTemplateVideoTemplateArgs']] = None):
        """
        Input properties used for looking up and filtering TranscodeTemplate resources.
        :param pulumi.Input['TranscodeTemplateAudioTemplateArgs'] audio_template: Audio stream configuration parameter. This field is required when `RemoveAudio` is 0.
        :param pulumi.Input[str] comment: Template description. Length limit: 256 characters.
        :param pulumi.Input[str] container: The container format. Valid values: `mp4`, `flv`, `hls`, `mp3`, `flac`, `ogg`, `m4a`, `wav` ( `mp3`, `flac`, `ogg`, `m4a`, and `wav` are audio file formats).
        :param pulumi.Input[str] name: Transcoding template name. Length limit: 64 characters.
        :param pulumi.Input[int] remove_audio: Whether to remove audio data. Valid values:0: retain 1: remove Default value: 0.
        :param pulumi.Input[int] remove_video: Whether to remove video data. Valid values:
               - 0: retain
               - 1: remove
               Default value: 0.
        :param pulumi.Input[str] segment_type: The segment type. This parameter is valid only if `Container` is `hls`. Valid values: `ts`: TS segment; `fmp4`: fMP4 segment Default: `ts`.
        :param pulumi.Input[int] sub_app_id: The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.
        :param pulumi.Input['TranscodeTemplateTehdConfigArgs'] tehd_config: TESHD transcoding parameter.
        :param pulumi.Input['TranscodeTemplateVideoTemplateArgs'] video_template: Video stream configuration parameter. This field is required when `RemoveVideo` is 0.
        """
        if audio_template is not None:
            pulumi.set(__self__, "audio_template", audio_template)
        if comment is not None:
            pulumi.set(__self__, "comment", comment)
        if container is not None:
            pulumi.set(__self__, "container", container)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if remove_audio is not None:
            pulumi.set(__self__, "remove_audio", remove_audio)
        if remove_video is not None:
            pulumi.set(__self__, "remove_video", remove_video)
        if segment_type is not None:
            pulumi.set(__self__, "segment_type", segment_type)
        if sub_app_id is not None:
            pulumi.set(__self__, "sub_app_id", sub_app_id)
        if tehd_config is not None:
            pulumi.set(__self__, "tehd_config", tehd_config)
        if video_template is not None:
            pulumi.set(__self__, "video_template", video_template)

    @property
    @pulumi.getter(name="audioTemplate")
    def audio_template(self) -> Optional[pulumi.Input['TranscodeTemplateAudioTemplateArgs']]:
        """
        Audio stream configuration parameter. This field is required when `RemoveAudio` is 0.
        """
        return pulumi.get(self, "audio_template")

    @audio_template.setter
    def audio_template(self, value: Optional[pulumi.Input['TranscodeTemplateAudioTemplateArgs']]):
        pulumi.set(self, "audio_template", value)

    @property
    @pulumi.getter
    def comment(self) -> Optional[pulumi.Input[str]]:
        """
        Template description. Length limit: 256 characters.
        """
        return pulumi.get(self, "comment")

    @comment.setter
    def comment(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "comment", value)

    @property
    @pulumi.getter
    def container(self) -> Optional[pulumi.Input[str]]:
        """
        The container format. Valid values: `mp4`, `flv`, `hls`, `mp3`, `flac`, `ogg`, `m4a`, `wav` ( `mp3`, `flac`, `ogg`, `m4a`, and `wav` are audio file formats).
        """
        return pulumi.get(self, "container")

    @container.setter
    def container(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "container", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        Transcoding template name. Length limit: 64 characters.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="removeAudio")
    def remove_audio(self) -> Optional[pulumi.Input[int]]:
        """
        Whether to remove audio data. Valid values:0: retain 1: remove Default value: 0.
        """
        return pulumi.get(self, "remove_audio")

    @remove_audio.setter
    def remove_audio(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "remove_audio", value)

    @property
    @pulumi.getter(name="removeVideo")
    def remove_video(self) -> Optional[pulumi.Input[int]]:
        """
        Whether to remove video data. Valid values:
        - 0: retain
        - 1: remove
        Default value: 0.
        """
        return pulumi.get(self, "remove_video")

    @remove_video.setter
    def remove_video(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "remove_video", value)

    @property
    @pulumi.getter(name="segmentType")
    def segment_type(self) -> Optional[pulumi.Input[str]]:
        """
        The segment type. This parameter is valid only if `Container` is `hls`. Valid values: `ts`: TS segment; `fmp4`: fMP4 segment Default: `ts`.
        """
        return pulumi.get(self, "segment_type")

    @segment_type.setter
    def segment_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "segment_type", value)

    @property
    @pulumi.getter(name="subAppId")
    def sub_app_id(self) -> Optional[pulumi.Input[int]]:
        """
        The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.
        """
        return pulumi.get(self, "sub_app_id")

    @sub_app_id.setter
    def sub_app_id(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "sub_app_id", value)

    @property
    @pulumi.getter(name="tehdConfig")
    def tehd_config(self) -> Optional[pulumi.Input['TranscodeTemplateTehdConfigArgs']]:
        """
        TESHD transcoding parameter.
        """
        return pulumi.get(self, "tehd_config")

    @tehd_config.setter
    def tehd_config(self, value: Optional[pulumi.Input['TranscodeTemplateTehdConfigArgs']]):
        pulumi.set(self, "tehd_config", value)

    @property
    @pulumi.getter(name="videoTemplate")
    def video_template(self) -> Optional[pulumi.Input['TranscodeTemplateVideoTemplateArgs']]:
        """
        Video stream configuration parameter. This field is required when `RemoveVideo` is 0.
        """
        return pulumi.get(self, "video_template")

    @video_template.setter
    def video_template(self, value: Optional[pulumi.Input['TranscodeTemplateVideoTemplateArgs']]):
        pulumi.set(self, "video_template", value)


class TranscodeTemplate(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 audio_template: Optional[pulumi.Input[pulumi.InputType['TranscodeTemplateAudioTemplateArgs']]] = None,
                 comment: Optional[pulumi.Input[str]] = None,
                 container: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 remove_audio: Optional[pulumi.Input[int]] = None,
                 remove_video: Optional[pulumi.Input[int]] = None,
                 segment_type: Optional[pulumi.Input[str]] = None,
                 sub_app_id: Optional[pulumi.Input[int]] = None,
                 tehd_config: Optional[pulumi.Input[pulumi.InputType['TranscodeTemplateTehdConfigArgs']]] = None,
                 video_template: Optional[pulumi.Input[pulumi.InputType['TranscodeTemplateVideoTemplateArgs']]] = None,
                 __props__=None):
        """
        Provides a resource to create a vod transcode template

        ## Import

        vod transcode template can be imported using the id, e.g.

        ```sh
        $ pulumi import tencentcloud:Vod/transcodeTemplate:TranscodeTemplate transcode_template $subAppId#$templateId
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[pulumi.InputType['TranscodeTemplateAudioTemplateArgs']] audio_template: Audio stream configuration parameter. This field is required when `RemoveAudio` is 0.
        :param pulumi.Input[str] comment: Template description. Length limit: 256 characters.
        :param pulumi.Input[str] container: The container format. Valid values: `mp4`, `flv`, `hls`, `mp3`, `flac`, `ogg`, `m4a`, `wav` ( `mp3`, `flac`, `ogg`, `m4a`, and `wav` are audio file formats).
        :param pulumi.Input[str] name: Transcoding template name. Length limit: 64 characters.
        :param pulumi.Input[int] remove_audio: Whether to remove audio data. Valid values:0: retain 1: remove Default value: 0.
        :param pulumi.Input[int] remove_video: Whether to remove video data. Valid values:
               - 0: retain
               - 1: remove
               Default value: 0.
        :param pulumi.Input[str] segment_type: The segment type. This parameter is valid only if `Container` is `hls`. Valid values: `ts`: TS segment; `fmp4`: fMP4 segment Default: `ts`.
        :param pulumi.Input[int] sub_app_id: The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.
        :param pulumi.Input[pulumi.InputType['TranscodeTemplateTehdConfigArgs']] tehd_config: TESHD transcoding parameter.
        :param pulumi.Input[pulumi.InputType['TranscodeTemplateVideoTemplateArgs']] video_template: Video stream configuration parameter. This field is required when `RemoveVideo` is 0.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: TranscodeTemplateArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Provides a resource to create a vod transcode template

        ## Import

        vod transcode template can be imported using the id, e.g.

        ```sh
        $ pulumi import tencentcloud:Vod/transcodeTemplate:TranscodeTemplate transcode_template $subAppId#$templateId
        ```

        :param str resource_name: The name of the resource.
        :param TranscodeTemplateArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(TranscodeTemplateArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 audio_template: Optional[pulumi.Input[pulumi.InputType['TranscodeTemplateAudioTemplateArgs']]] = None,
                 comment: Optional[pulumi.Input[str]] = None,
                 container: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 remove_audio: Optional[pulumi.Input[int]] = None,
                 remove_video: Optional[pulumi.Input[int]] = None,
                 segment_type: Optional[pulumi.Input[str]] = None,
                 sub_app_id: Optional[pulumi.Input[int]] = None,
                 tehd_config: Optional[pulumi.Input[pulumi.InputType['TranscodeTemplateTehdConfigArgs']]] = None,
                 video_template: Optional[pulumi.Input[pulumi.InputType['TranscodeTemplateVideoTemplateArgs']]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = TranscodeTemplateArgs.__new__(TranscodeTemplateArgs)

            __props__.__dict__["audio_template"] = audio_template
            __props__.__dict__["comment"] = comment
            if container is None and not opts.urn:
                raise TypeError("Missing required property 'container'")
            __props__.__dict__["container"] = container
            __props__.__dict__["name"] = name
            __props__.__dict__["remove_audio"] = remove_audio
            __props__.__dict__["remove_video"] = remove_video
            __props__.__dict__["segment_type"] = segment_type
            __props__.__dict__["sub_app_id"] = sub_app_id
            __props__.__dict__["tehd_config"] = tehd_config
            __props__.__dict__["video_template"] = video_template
        super(TranscodeTemplate, __self__).__init__(
            'tencentcloud:Vod/transcodeTemplate:TranscodeTemplate',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            audio_template: Optional[pulumi.Input[pulumi.InputType['TranscodeTemplateAudioTemplateArgs']]] = None,
            comment: Optional[pulumi.Input[str]] = None,
            container: Optional[pulumi.Input[str]] = None,
            name: Optional[pulumi.Input[str]] = None,
            remove_audio: Optional[pulumi.Input[int]] = None,
            remove_video: Optional[pulumi.Input[int]] = None,
            segment_type: Optional[pulumi.Input[str]] = None,
            sub_app_id: Optional[pulumi.Input[int]] = None,
            tehd_config: Optional[pulumi.Input[pulumi.InputType['TranscodeTemplateTehdConfigArgs']]] = None,
            video_template: Optional[pulumi.Input[pulumi.InputType['TranscodeTemplateVideoTemplateArgs']]] = None) -> 'TranscodeTemplate':
        """
        Get an existing TranscodeTemplate resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[pulumi.InputType['TranscodeTemplateAudioTemplateArgs']] audio_template: Audio stream configuration parameter. This field is required when `RemoveAudio` is 0.
        :param pulumi.Input[str] comment: Template description. Length limit: 256 characters.
        :param pulumi.Input[str] container: The container format. Valid values: `mp4`, `flv`, `hls`, `mp3`, `flac`, `ogg`, `m4a`, `wav` ( `mp3`, `flac`, `ogg`, `m4a`, and `wav` are audio file formats).
        :param pulumi.Input[str] name: Transcoding template name. Length limit: 64 characters.
        :param pulumi.Input[int] remove_audio: Whether to remove audio data. Valid values:0: retain 1: remove Default value: 0.
        :param pulumi.Input[int] remove_video: Whether to remove video data. Valid values:
               - 0: retain
               - 1: remove
               Default value: 0.
        :param pulumi.Input[str] segment_type: The segment type. This parameter is valid only if `Container` is `hls`. Valid values: `ts`: TS segment; `fmp4`: fMP4 segment Default: `ts`.
        :param pulumi.Input[int] sub_app_id: The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.
        :param pulumi.Input[pulumi.InputType['TranscodeTemplateTehdConfigArgs']] tehd_config: TESHD transcoding parameter.
        :param pulumi.Input[pulumi.InputType['TranscodeTemplateVideoTemplateArgs']] video_template: Video stream configuration parameter. This field is required when `RemoveVideo` is 0.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _TranscodeTemplateState.__new__(_TranscodeTemplateState)

        __props__.__dict__["audio_template"] = audio_template
        __props__.__dict__["comment"] = comment
        __props__.__dict__["container"] = container
        __props__.__dict__["name"] = name
        __props__.__dict__["remove_audio"] = remove_audio
        __props__.__dict__["remove_video"] = remove_video
        __props__.__dict__["segment_type"] = segment_type
        __props__.__dict__["sub_app_id"] = sub_app_id
        __props__.__dict__["tehd_config"] = tehd_config
        __props__.__dict__["video_template"] = video_template
        return TranscodeTemplate(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="audioTemplate")
    def audio_template(self) -> pulumi.Output[Optional['outputs.TranscodeTemplateAudioTemplate']]:
        """
        Audio stream configuration parameter. This field is required when `RemoveAudio` is 0.
        """
        return pulumi.get(self, "audio_template")

    @property
    @pulumi.getter
    def comment(self) -> pulumi.Output[Optional[str]]:
        """
        Template description. Length limit: 256 characters.
        """
        return pulumi.get(self, "comment")

    @property
    @pulumi.getter
    def container(self) -> pulumi.Output[str]:
        """
        The container format. Valid values: `mp4`, `flv`, `hls`, `mp3`, `flac`, `ogg`, `m4a`, `wav` ( `mp3`, `flac`, `ogg`, `m4a`, and `wav` are audio file formats).
        """
        return pulumi.get(self, "container")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        """
        Transcoding template name. Length limit: 64 characters.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="removeAudio")
    def remove_audio(self) -> pulumi.Output[Optional[int]]:
        """
        Whether to remove audio data. Valid values:0: retain 1: remove Default value: 0.
        """
        return pulumi.get(self, "remove_audio")

    @property
    @pulumi.getter(name="removeVideo")
    def remove_video(self) -> pulumi.Output[Optional[int]]:
        """
        Whether to remove video data. Valid values:
        - 0: retain
        - 1: remove
        Default value: 0.
        """
        return pulumi.get(self, "remove_video")

    @property
    @pulumi.getter(name="segmentType")
    def segment_type(self) -> pulumi.Output[Optional[str]]:
        """
        The segment type. This parameter is valid only if `Container` is `hls`. Valid values: `ts`: TS segment; `fmp4`: fMP4 segment Default: `ts`.
        """
        return pulumi.get(self, "segment_type")

    @property
    @pulumi.getter(name="subAppId")
    def sub_app_id(self) -> pulumi.Output[Optional[int]]:
        """
        The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default application or a newly created one), they must fill in this field with the application ID.
        """
        return pulumi.get(self, "sub_app_id")

    @property
    @pulumi.getter(name="tehdConfig")
    def tehd_config(self) -> pulumi.Output[Optional['outputs.TranscodeTemplateTehdConfig']]:
        """
        TESHD transcoding parameter.
        """
        return pulumi.get(self, "tehd_config")

    @property
    @pulumi.getter(name="videoTemplate")
    def video_template(self) -> pulumi.Output[Optional['outputs.TranscodeTemplateVideoTemplate']]:
        """
        Video stream configuration parameter. This field is required when `RemoveVideo` is 0.
        """
        return pulumi.get(self, "video_template")


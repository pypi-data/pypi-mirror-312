# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetProjectProjectSetResult',
    'GetScoresScoreSetResult',
    'GetTawAreaAreaSetResult',
    'GetTawInstanceInstanceSetResult',
    'GetTawInstanceInstanceSetTagResult',
    'GetWhitelistWhitelistSetResult',
]

@pulumi.output_type
class GetProjectProjectSetResult(dict):
    def __init__(__self__, *,
                 create_time: str,
                 creator: str,
                 desc: str,
                 enable_url_group: int,
                 instance_id: str,
                 instance_key: str,
                 instance_name: str,
                 is_star: int,
                 key: str,
                 name: str,
                 pid: int,
                 project_status: int,
                 rate: str,
                 repo: str,
                 type: str,
                 url: str):
        """
        :param str create_time: CreateTime.
        :param str creator: Creator ID.
        :param str desc: Project description.
        :param int enable_url_group: Whether to enable URL aggregation.
        :param str instance_id: Instance ID.
        :param str instance_key: Instance key.
        :param str instance_name: Instance name.
        :param int is_star: Starred status. `1`: yes; `0`: no.
        :param str key: Unique project key (12 characters).
        :param str name: Project name.
        :param int pid: Project ID.
        :param int project_status: Project status (`1`: Creating; `2`: Running; `3`: Abnormal; `4`: Restarting; `5`: Stopping; `6`: Stopped; `7`: Terminating; `8`: Terminated).
        :param str rate: Project sample rate.
        :param str repo: Project repository address.
        :param str type: Project type.
        :param str url: Project URL.
        """
        pulumi.set(__self__, "create_time", create_time)
        pulumi.set(__self__, "creator", creator)
        pulumi.set(__self__, "desc", desc)
        pulumi.set(__self__, "enable_url_group", enable_url_group)
        pulumi.set(__self__, "instance_id", instance_id)
        pulumi.set(__self__, "instance_key", instance_key)
        pulumi.set(__self__, "instance_name", instance_name)
        pulumi.set(__self__, "is_star", is_star)
        pulumi.set(__self__, "key", key)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "pid", pid)
        pulumi.set(__self__, "project_status", project_status)
        pulumi.set(__self__, "rate", rate)
        pulumi.set(__self__, "repo", repo)
        pulumi.set(__self__, "type", type)
        pulumi.set(__self__, "url", url)

    @property
    @pulumi.getter(name="createTime")
    def create_time(self) -> str:
        """
        CreateTime.
        """
        return pulumi.get(self, "create_time")

    @property
    @pulumi.getter
    def creator(self) -> str:
        """
        Creator ID.
        """
        return pulumi.get(self, "creator")

    @property
    @pulumi.getter
    def desc(self) -> str:
        """
        Project description.
        """
        return pulumi.get(self, "desc")

    @property
    @pulumi.getter(name="enableUrlGroup")
    def enable_url_group(self) -> int:
        """
        Whether to enable URL aggregation.
        """
        return pulumi.get(self, "enable_url_group")

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> str:
        """
        Instance ID.
        """
        return pulumi.get(self, "instance_id")

    @property
    @pulumi.getter(name="instanceKey")
    def instance_key(self) -> str:
        """
        Instance key.
        """
        return pulumi.get(self, "instance_key")

    @property
    @pulumi.getter(name="instanceName")
    def instance_name(self) -> str:
        """
        Instance name.
        """
        return pulumi.get(self, "instance_name")

    @property
    @pulumi.getter(name="isStar")
    def is_star(self) -> int:
        """
        Starred status. `1`: yes; `0`: no.
        """
        return pulumi.get(self, "is_star")

    @property
    @pulumi.getter
    def key(self) -> str:
        """
        Unique project key (12 characters).
        """
        return pulumi.get(self, "key")

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        Project name.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def pid(self) -> int:
        """
        Project ID.
        """
        return pulumi.get(self, "pid")

    @property
    @pulumi.getter(name="projectStatus")
    def project_status(self) -> int:
        """
        Project status (`1`: Creating; `2`: Running; `3`: Abnormal; `4`: Restarting; `5`: Stopping; `6`: Stopped; `7`: Terminating; `8`: Terminated).
        """
        return pulumi.get(self, "project_status")

    @property
    @pulumi.getter
    def rate(self) -> str:
        """
        Project sample rate.
        """
        return pulumi.get(self, "rate")

    @property
    @pulumi.getter
    def repo(self) -> str:
        """
        Project repository address.
        """
        return pulumi.get(self, "repo")

    @property
    @pulumi.getter
    def type(self) -> str:
        """
        Project type.
        """
        return pulumi.get(self, "type")

    @property
    @pulumi.getter
    def url(self) -> str:
        """
        Project URL.
        """
        return pulumi.get(self, "url")


@pulumi.output_type
class GetScoresScoreSetResult(dict):
    def __init__(__self__, *,
                 api_duration: str,
                 api_fail: str,
                 api_num: str,
                 create_time: str,
                 page_duration: str,
                 page_error: str,
                 page_pv: str,
                 page_uv: str,
                 project_id: int,
                 record_num: int,
                 score: str,
                 static_duration: str,
                 static_fail: str,
                 static_num: str):
        """
        :param str api_duration: The mean duration of api request.
        :param str api_fail: The number of failed api.
        :param str api_num: The number of all request api.
        :param str create_time: Project record created time.
        :param str page_duration: The duration of page load.
        :param str page_error: The number of exception which happened on page.
        :param str page_pv: Pv.
        :param str page_uv: User view.
        :param int project_id: Project ID.
        :param int record_num: The number of record.
        :param str score: The score of project.
        :param str static_duration: Duration.
        :param str static_fail: The number of failed request static resource.
        :param str static_num: The number of static resource on page.
        """
        pulumi.set(__self__, "api_duration", api_duration)
        pulumi.set(__self__, "api_fail", api_fail)
        pulumi.set(__self__, "api_num", api_num)
        pulumi.set(__self__, "create_time", create_time)
        pulumi.set(__self__, "page_duration", page_duration)
        pulumi.set(__self__, "page_error", page_error)
        pulumi.set(__self__, "page_pv", page_pv)
        pulumi.set(__self__, "page_uv", page_uv)
        pulumi.set(__self__, "project_id", project_id)
        pulumi.set(__self__, "record_num", record_num)
        pulumi.set(__self__, "score", score)
        pulumi.set(__self__, "static_duration", static_duration)
        pulumi.set(__self__, "static_fail", static_fail)
        pulumi.set(__self__, "static_num", static_num)

    @property
    @pulumi.getter(name="apiDuration")
    def api_duration(self) -> str:
        """
        The mean duration of api request.
        """
        return pulumi.get(self, "api_duration")

    @property
    @pulumi.getter(name="apiFail")
    def api_fail(self) -> str:
        """
        The number of failed api.
        """
        return pulumi.get(self, "api_fail")

    @property
    @pulumi.getter(name="apiNum")
    def api_num(self) -> str:
        """
        The number of all request api.
        """
        return pulumi.get(self, "api_num")

    @property
    @pulumi.getter(name="createTime")
    def create_time(self) -> str:
        """
        Project record created time.
        """
        return pulumi.get(self, "create_time")

    @property
    @pulumi.getter(name="pageDuration")
    def page_duration(self) -> str:
        """
        The duration of page load.
        """
        return pulumi.get(self, "page_duration")

    @property
    @pulumi.getter(name="pageError")
    def page_error(self) -> str:
        """
        The number of exception which happened on page.
        """
        return pulumi.get(self, "page_error")

    @property
    @pulumi.getter(name="pagePv")
    def page_pv(self) -> str:
        """
        Pv.
        """
        return pulumi.get(self, "page_pv")

    @property
    @pulumi.getter(name="pageUv")
    def page_uv(self) -> str:
        """
        User view.
        """
        return pulumi.get(self, "page_uv")

    @property
    @pulumi.getter(name="projectId")
    def project_id(self) -> int:
        """
        Project ID.
        """
        return pulumi.get(self, "project_id")

    @property
    @pulumi.getter(name="recordNum")
    def record_num(self) -> int:
        """
        The number of record.
        """
        return pulumi.get(self, "record_num")

    @property
    @pulumi.getter
    def score(self) -> str:
        """
        The score of project.
        """
        return pulumi.get(self, "score")

    @property
    @pulumi.getter(name="staticDuration")
    def static_duration(self) -> str:
        """
        Duration.
        """
        return pulumi.get(self, "static_duration")

    @property
    @pulumi.getter(name="staticFail")
    def static_fail(self) -> str:
        """
        The number of failed request static resource.
        """
        return pulumi.get(self, "static_fail")

    @property
    @pulumi.getter(name="staticNum")
    def static_num(self) -> str:
        """
        The number of static resource on page.
        """
        return pulumi.get(self, "static_num")


@pulumi.output_type
class GetTawAreaAreaSetResult(dict):
    def __init__(__self__, *,
                 area_abbr: str,
                 area_id: int,
                 area_key: str,
                 area_name: str,
                 area_region_code: str,
                 area_region_id: str,
                 area_status: int):
        """
        :param str area_abbr: Region abbreviation.
        :param int area_id: Area id.
        :param str area_key: Area key.
        :param str area_name: Area name.
        :param str area_region_code: Area code.
        :param str area_region_id: Area code id.
        :param int area_status: Area status `1`:&amp;#39;valid&amp;#39;; `2`:&amp;#39;invalid&amp;#39;.
        """
        pulumi.set(__self__, "area_abbr", area_abbr)
        pulumi.set(__self__, "area_id", area_id)
        pulumi.set(__self__, "area_key", area_key)
        pulumi.set(__self__, "area_name", area_name)
        pulumi.set(__self__, "area_region_code", area_region_code)
        pulumi.set(__self__, "area_region_id", area_region_id)
        pulumi.set(__self__, "area_status", area_status)

    @property
    @pulumi.getter(name="areaAbbr")
    def area_abbr(self) -> str:
        """
        Region abbreviation.
        """
        return pulumi.get(self, "area_abbr")

    @property
    @pulumi.getter(name="areaId")
    def area_id(self) -> int:
        """
        Area id.
        """
        return pulumi.get(self, "area_id")

    @property
    @pulumi.getter(name="areaKey")
    def area_key(self) -> str:
        """
        Area key.
        """
        return pulumi.get(self, "area_key")

    @property
    @pulumi.getter(name="areaName")
    def area_name(self) -> str:
        """
        Area name.
        """
        return pulumi.get(self, "area_name")

    @property
    @pulumi.getter(name="areaRegionCode")
    def area_region_code(self) -> str:
        """
        Area code.
        """
        return pulumi.get(self, "area_region_code")

    @property
    @pulumi.getter(name="areaRegionId")
    def area_region_id(self) -> str:
        """
        Area code id.
        """
        return pulumi.get(self, "area_region_id")

    @property
    @pulumi.getter(name="areaStatus")
    def area_status(self) -> int:
        """
        Area status `1`:&amp;#39;valid&amp;#39;; `2`:&amp;#39;invalid&amp;#39;.
        """
        return pulumi.get(self, "area_status")


@pulumi.output_type
class GetTawInstanceInstanceSetResult(dict):
    def __init__(__self__, *,
                 area_id: int,
                 charge_status: int,
                 charge_type: int,
                 cluster_id: int,
                 created_at: str,
                 data_retention_days: int,
                 instance_desc: str,
                 instance_id: str,
                 instance_name: str,
                 instance_status: int,
                 tags: Sequence['outputs.GetTawInstanceInstanceSetTagResult'],
                 updated_at: str):
        """
        :param int area_id: Area ID.
        :param int charge_status: Billing status (`1` = in use, `2` = expired, `3` = destroyed, `4` = assigning, `5` = failed).
        :param int charge_type: Billing type (`1` = free version, `2` = prepaid, `3` = postpaid).
        :param int cluster_id: Cluster ID.
        :param str created_at: Create time.
        :param int data_retention_days: Data retention time (days).
        :param str instance_desc: Instance Desc.
        :param str instance_id: Instance ID.
        :param str instance_name: Instance name.
        :param int instance_status: Instance status (`1` = creating, `2` = running, `3` = exception, `4` = restarting, `5` = stopping, `6` = stopped, `7` = deleted).
        :param Sequence['GetTawInstanceInstanceSetTagArgs'] tags: Tag List.
        :param str updated_at: Update time.
        """
        pulumi.set(__self__, "area_id", area_id)
        pulumi.set(__self__, "charge_status", charge_status)
        pulumi.set(__self__, "charge_type", charge_type)
        pulumi.set(__self__, "cluster_id", cluster_id)
        pulumi.set(__self__, "created_at", created_at)
        pulumi.set(__self__, "data_retention_days", data_retention_days)
        pulumi.set(__self__, "instance_desc", instance_desc)
        pulumi.set(__self__, "instance_id", instance_id)
        pulumi.set(__self__, "instance_name", instance_name)
        pulumi.set(__self__, "instance_status", instance_status)
        pulumi.set(__self__, "tags", tags)
        pulumi.set(__self__, "updated_at", updated_at)

    @property
    @pulumi.getter(name="areaId")
    def area_id(self) -> int:
        """
        Area ID.
        """
        return pulumi.get(self, "area_id")

    @property
    @pulumi.getter(name="chargeStatus")
    def charge_status(self) -> int:
        """
        Billing status (`1` = in use, `2` = expired, `3` = destroyed, `4` = assigning, `5` = failed).
        """
        return pulumi.get(self, "charge_status")

    @property
    @pulumi.getter(name="chargeType")
    def charge_type(self) -> int:
        """
        Billing type (`1` = free version, `2` = prepaid, `3` = postpaid).
        """
        return pulumi.get(self, "charge_type")

    @property
    @pulumi.getter(name="clusterId")
    def cluster_id(self) -> int:
        """
        Cluster ID.
        """
        return pulumi.get(self, "cluster_id")

    @property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> str:
        """
        Create time.
        """
        return pulumi.get(self, "created_at")

    @property
    @pulumi.getter(name="dataRetentionDays")
    def data_retention_days(self) -> int:
        """
        Data retention time (days).
        """
        return pulumi.get(self, "data_retention_days")

    @property
    @pulumi.getter(name="instanceDesc")
    def instance_desc(self) -> str:
        """
        Instance Desc.
        """
        return pulumi.get(self, "instance_desc")

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> str:
        """
        Instance ID.
        """
        return pulumi.get(self, "instance_id")

    @property
    @pulumi.getter(name="instanceName")
    def instance_name(self) -> str:
        """
        Instance name.
        """
        return pulumi.get(self, "instance_name")

    @property
    @pulumi.getter(name="instanceStatus")
    def instance_status(self) -> int:
        """
        Instance status (`1` = creating, `2` = running, `3` = exception, `4` = restarting, `5` = stopping, `6` = stopped, `7` = deleted).
        """
        return pulumi.get(self, "instance_status")

    @property
    @pulumi.getter
    def tags(self) -> Sequence['outputs.GetTawInstanceInstanceSetTagResult']:
        """
        Tag List.
        """
        return pulumi.get(self, "tags")

    @property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> str:
        """
        Update time.
        """
        return pulumi.get(self, "updated_at")


@pulumi.output_type
class GetTawInstanceInstanceSetTagResult(dict):
    def __init__(__self__, *,
                 key: str,
                 value: str):
        """
        :param str key: Tag Key.
        :param str value: Tag Value.
        """
        pulumi.set(__self__, "key", key)
        pulumi.set(__self__, "value", value)

    @property
    @pulumi.getter
    def key(self) -> str:
        """
        Tag Key.
        """
        return pulumi.get(self, "key")

    @property
    @pulumi.getter
    def value(self) -> str:
        """
        Tag Value.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class GetWhitelistWhitelistSetResult(dict):
    def __init__(__self__, *,
                 aid: str,
                 create_time: str,
                 create_user: str,
                 remark: str,
                 ttl: str,
                 whitelist_uin: str,
                 wid: str):
        """
        :param str aid: Business identifier.
        :param str create_time: Creation time.
        :param str create_user: Creator ID.
        :param str remark: Remarks.
        :param str ttl: End time.
        :param str whitelist_uin: uin: business identifier.
        :param str wid: Auto-Increment allowlist ID.
        """
        pulumi.set(__self__, "aid", aid)
        pulumi.set(__self__, "create_time", create_time)
        pulumi.set(__self__, "create_user", create_user)
        pulumi.set(__self__, "remark", remark)
        pulumi.set(__self__, "ttl", ttl)
        pulumi.set(__self__, "whitelist_uin", whitelist_uin)
        pulumi.set(__self__, "wid", wid)

    @property
    @pulumi.getter
    def aid(self) -> str:
        """
        Business identifier.
        """
        return pulumi.get(self, "aid")

    @property
    @pulumi.getter(name="createTime")
    def create_time(self) -> str:
        """
        Creation time.
        """
        return pulumi.get(self, "create_time")

    @property
    @pulumi.getter(name="createUser")
    def create_user(self) -> str:
        """
        Creator ID.
        """
        return pulumi.get(self, "create_user")

    @property
    @pulumi.getter
    def remark(self) -> str:
        """
        Remarks.
        """
        return pulumi.get(self, "remark")

    @property
    @pulumi.getter
    def ttl(self) -> str:
        """
        End time.
        """
        return pulumi.get(self, "ttl")

    @property
    @pulumi.getter(name="whitelistUin")
    def whitelist_uin(self) -> str:
        """
        uin: business identifier.
        """
        return pulumi.get(self, "whitelist_uin")

    @property
    @pulumi.getter
    def wid(self) -> str:
        """
        Auto-Increment allowlist ID.
        """
        return pulumi.get(self, "wid")



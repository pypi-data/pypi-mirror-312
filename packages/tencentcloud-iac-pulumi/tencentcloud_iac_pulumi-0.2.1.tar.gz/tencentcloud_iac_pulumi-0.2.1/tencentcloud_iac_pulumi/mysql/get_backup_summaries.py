# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetBackupSummariesResult',
    'AwaitableGetBackupSummariesResult',
    'get_backup_summaries',
    'get_backup_summaries_output',
]

@pulumi.output_type
class GetBackupSummariesResult:
    """
    A collection of values returned by getBackupSummaries.
    """
    def __init__(__self__, id=None, items=None, order_by=None, order_direction=None, product=None, result_output_file=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if items and not isinstance(items, list):
            raise TypeError("Expected argument 'items' to be a list")
        pulumi.set(__self__, "items", items)
        if order_by and not isinstance(order_by, str):
            raise TypeError("Expected argument 'order_by' to be a str")
        pulumi.set(__self__, "order_by", order_by)
        if order_direction and not isinstance(order_direction, str):
            raise TypeError("Expected argument 'order_direction' to be a str")
        pulumi.set(__self__, "order_direction", order_direction)
        if product and not isinstance(product, str):
            raise TypeError("Expected argument 'product' to be a str")
        pulumi.set(__self__, "product", product)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def items(self) -> Sequence['outputs.GetBackupSummariesItemResult']:
        """
        Instance backup statistics entries.
        """
        return pulumi.get(self, "items")

    @property
    @pulumi.getter(name="orderBy")
    def order_by(self) -> Optional[str]:
        return pulumi.get(self, "order_by")

    @property
    @pulumi.getter(name="orderDirection")
    def order_direction(self) -> Optional[str]:
        return pulumi.get(self, "order_direction")

    @property
    @pulumi.getter
    def product(self) -> str:
        return pulumi.get(self, "product")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")


class AwaitableGetBackupSummariesResult(GetBackupSummariesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetBackupSummariesResult(
            id=self.id,
            items=self.items,
            order_by=self.order_by,
            order_direction=self.order_direction,
            product=self.product,
            result_output_file=self.result_output_file)


def get_backup_summaries(order_by: Optional[str] = None,
                         order_direction: Optional[str] = None,
                         product: Optional[str] = None,
                         result_output_file: Optional[str] = None,
                         opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetBackupSummariesResult:
    """
    Use this data source to query detailed information of mysql backup_summaries

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    backup_summaries = tencentcloud.Mysql.get_backup_summaries(order_by="BackupVolume",
        order_direction="ASC",
        product="mysql")
    ```
    <!--End PulumiCodeChooser -->


    :param str order_by: Specify to sort by a certain item, the optional values include: BackupVolume: backup volume, DataBackupVolume: data backup volume, BinlogBackupVolume: log backup volume, AutoBackupVolume: automatic backup volume, ManualBackupVolume: manual backup volume. By default, they are sorted by BackupVolume.
    :param str order_direction: Specify the sorting direction, optional values include: ASC: forward order, DESC: reverse order. The default is ASC.
    :param str product: The type of cloud database product to be queried, currently only supports `mysql`.
    :param str result_output_file: Used to save results.
    """
    __args__ = dict()
    __args__['orderBy'] = order_by
    __args__['orderDirection'] = order_direction
    __args__['product'] = product
    __args__['resultOutputFile'] = result_output_file
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('tencentcloud:Mysql/getBackupSummaries:getBackupSummaries', __args__, opts=opts, typ=GetBackupSummariesResult).value

    return AwaitableGetBackupSummariesResult(
        id=pulumi.get(__ret__, 'id'),
        items=pulumi.get(__ret__, 'items'),
        order_by=pulumi.get(__ret__, 'order_by'),
        order_direction=pulumi.get(__ret__, 'order_direction'),
        product=pulumi.get(__ret__, 'product'),
        result_output_file=pulumi.get(__ret__, 'result_output_file'))


@_utilities.lift_output_func(get_backup_summaries)
def get_backup_summaries_output(order_by: Optional[pulumi.Input[Optional[str]]] = None,
                                order_direction: Optional[pulumi.Input[Optional[str]]] = None,
                                product: Optional[pulumi.Input[str]] = None,
                                result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                                opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetBackupSummariesResult]:
    """
    Use this data source to query detailed information of mysql backup_summaries

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    backup_summaries = tencentcloud.Mysql.get_backup_summaries(order_by="BackupVolume",
        order_direction="ASC",
        product="mysql")
    ```
    <!--End PulumiCodeChooser -->


    :param str order_by: Specify to sort by a certain item, the optional values include: BackupVolume: backup volume, DataBackupVolume: data backup volume, BinlogBackupVolume: log backup volume, AutoBackupVolume: automatic backup volume, ManualBackupVolume: manual backup volume. By default, they are sorted by BackupVolume.
    :param str order_direction: Specify the sorting direction, optional values include: ASC: forward order, DESC: reverse order. The default is ASC.
    :param str product: The type of cloud database product to be queried, currently only supports `mysql`.
    :param str result_output_file: Used to save results.
    """
    ...

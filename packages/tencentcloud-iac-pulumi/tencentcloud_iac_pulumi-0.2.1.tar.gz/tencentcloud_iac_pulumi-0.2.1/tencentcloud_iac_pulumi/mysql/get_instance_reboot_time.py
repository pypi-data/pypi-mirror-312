# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetInstanceRebootTimeResult',
    'AwaitableGetInstanceRebootTimeResult',
    'get_instance_reboot_time',
    'get_instance_reboot_time_output',
]

@pulumi.output_type
class GetInstanceRebootTimeResult:
    """
    A collection of values returned by getInstanceRebootTime.
    """
    def __init__(__self__, id=None, instance_ids=None, items=None, result_output_file=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if instance_ids and not isinstance(instance_ids, list):
            raise TypeError("Expected argument 'instance_ids' to be a list")
        pulumi.set(__self__, "instance_ids", instance_ids)
        if items and not isinstance(items, list):
            raise TypeError("Expected argument 'items' to be a list")
        pulumi.set(__self__, "items", items)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="instanceIds")
    def instance_ids(self) -> Sequence[str]:
        return pulumi.get(self, "instance_ids")

    @property
    @pulumi.getter
    def items(self) -> Sequence['outputs.GetInstanceRebootTimeItemResult']:
        """
        Returned parameter information.
        """
        return pulumi.get(self, "items")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")


class AwaitableGetInstanceRebootTimeResult(GetInstanceRebootTimeResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetInstanceRebootTimeResult(
            id=self.id,
            instance_ids=self.instance_ids,
            items=self.items,
            result_output_file=self.result_output_file)


def get_instance_reboot_time(instance_ids: Optional[Sequence[str]] = None,
                             result_output_file: Optional[str] = None,
                             opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetInstanceRebootTimeResult:
    """
    Use this data source to query detailed information of mysql instance_reboot_time

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    instance_reboot_time = tencentcloud.Mysql.get_instance_reboot_time(instance_ids=["cdb-fitq5t9h"])
    ```
    <!--End PulumiCodeChooser -->


    :param Sequence[str] instance_ids: The instance ID, in the format: cdb-c1nl9rpv, is the same as the instance ID displayed on the cloud database console page.
    :param str result_output_file: Used to save results.
    """
    __args__ = dict()
    __args__['instanceIds'] = instance_ids
    __args__['resultOutputFile'] = result_output_file
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('tencentcloud:Mysql/getInstanceRebootTime:getInstanceRebootTime', __args__, opts=opts, typ=GetInstanceRebootTimeResult).value

    return AwaitableGetInstanceRebootTimeResult(
        id=pulumi.get(__ret__, 'id'),
        instance_ids=pulumi.get(__ret__, 'instance_ids'),
        items=pulumi.get(__ret__, 'items'),
        result_output_file=pulumi.get(__ret__, 'result_output_file'))


@_utilities.lift_output_func(get_instance_reboot_time)
def get_instance_reboot_time_output(instance_ids: Optional[pulumi.Input[Sequence[str]]] = None,
                                    result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                                    opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetInstanceRebootTimeResult]:
    """
    Use this data source to query detailed information of mysql instance_reboot_time

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    instance_reboot_time = tencentcloud.Mysql.get_instance_reboot_time(instance_ids=["cdb-fitq5t9h"])
    ```
    <!--End PulumiCodeChooser -->


    :param Sequence[str] instance_ids: The instance ID, in the format: cdb-c1nl9rpv, is the same as the instance ID displayed on the cloud database console page.
    :param str result_output_file: Used to save results.
    """
    ...

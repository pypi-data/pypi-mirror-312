# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'GetInstanceInfoResult',
    'AwaitableGetInstanceInfoResult',
    'get_instance_info',
    'get_instance_info_output',
]

@pulumi.output_type
class GetInstanceInfoResult:
    """
    A collection of values returned by getInstanceInfo.
    """
    def __init__(__self__, default_kms_region=None, encryption=None, id=None, instance_id=None, instance_name=None, key_id=None, key_region=None, result_output_file=None):
        if default_kms_region and not isinstance(default_kms_region, str):
            raise TypeError("Expected argument 'default_kms_region' to be a str")
        pulumi.set(__self__, "default_kms_region", default_kms_region)
        if encryption and not isinstance(encryption, str):
            raise TypeError("Expected argument 'encryption' to be a str")
        pulumi.set(__self__, "encryption", encryption)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if instance_id and not isinstance(instance_id, str):
            raise TypeError("Expected argument 'instance_id' to be a str")
        pulumi.set(__self__, "instance_id", instance_id)
        if instance_name and not isinstance(instance_name, str):
            raise TypeError("Expected argument 'instance_name' to be a str")
        pulumi.set(__self__, "instance_name", instance_name)
        if key_id and not isinstance(key_id, str):
            raise TypeError("Expected argument 'key_id' to be a str")
        pulumi.set(__self__, "key_id", key_id)
        if key_region and not isinstance(key_region, str):
            raise TypeError("Expected argument 'key_region' to be a str")
        pulumi.set(__self__, "key_region", key_region)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)

    @property
    @pulumi.getter(name="defaultKmsRegion")
    def default_kms_region(self) -> str:
        """
        The default region of the KMS service used by the current CDB backend service.
        """
        return pulumi.get(self, "default_kms_region")

    @property
    @pulumi.getter
    def encryption(self) -> str:
        """
        Whether to enable encryption, YES is enabled, NO is not enabled.
        """
        return pulumi.get(self, "encryption")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> str:
        return pulumi.get(self, "instance_id")

    @property
    @pulumi.getter(name="instanceName")
    def instance_name(self) -> str:
        """
        instance name.
        """
        return pulumi.get(self, "instance_name")

    @property
    @pulumi.getter(name="keyId")
    def key_id(self) -> str:
        """
        The key ID used for encryption.
        """
        return pulumi.get(self, "key_id")

    @property
    @pulumi.getter(name="keyRegion")
    def key_region(self) -> str:
        """
        The region where the key is located.
        """
        return pulumi.get(self, "key_region")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")


class AwaitableGetInstanceInfoResult(GetInstanceInfoResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetInstanceInfoResult(
            default_kms_region=self.default_kms_region,
            encryption=self.encryption,
            id=self.id,
            instance_id=self.instance_id,
            instance_name=self.instance_name,
            key_id=self.key_id,
            key_region=self.key_region,
            result_output_file=self.result_output_file)


def get_instance_info(instance_id: Optional[str] = None,
                      result_output_file: Optional[str] = None,
                      opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetInstanceInfoResult:
    """
    Use this data source to query detailed information of mysql instance_info

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    instance_info = tencentcloud.Mysql.get_instance_info(instance_id="cdb-fitq5t9h")
    ```
    <!--End PulumiCodeChooser -->


    :param str instance_id: instance id.
    :param str result_output_file: Used to save results.
    """
    __args__ = dict()
    __args__['instanceId'] = instance_id
    __args__['resultOutputFile'] = result_output_file
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('tencentcloud:Mysql/getInstanceInfo:getInstanceInfo', __args__, opts=opts, typ=GetInstanceInfoResult).value

    return AwaitableGetInstanceInfoResult(
        default_kms_region=pulumi.get(__ret__, 'default_kms_region'),
        encryption=pulumi.get(__ret__, 'encryption'),
        id=pulumi.get(__ret__, 'id'),
        instance_id=pulumi.get(__ret__, 'instance_id'),
        instance_name=pulumi.get(__ret__, 'instance_name'),
        key_id=pulumi.get(__ret__, 'key_id'),
        key_region=pulumi.get(__ret__, 'key_region'),
        result_output_file=pulumi.get(__ret__, 'result_output_file'))


@_utilities.lift_output_func(get_instance_info)
def get_instance_info_output(instance_id: Optional[pulumi.Input[str]] = None,
                             result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                             opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetInstanceInfoResult]:
    """
    Use this data source to query detailed information of mysql instance_info

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    instance_info = tencentcloud.Mysql.get_instance_info(instance_id="cdb-fitq5t9h")
    ```
    <!--End PulumiCodeChooser -->


    :param str instance_id: instance id.
    :param str result_output_file: Used to save results.
    """
    ...

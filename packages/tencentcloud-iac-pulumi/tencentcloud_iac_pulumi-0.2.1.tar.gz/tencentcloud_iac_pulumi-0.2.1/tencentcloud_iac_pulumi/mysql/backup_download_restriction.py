# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['BackupDownloadRestrictionArgs', 'BackupDownloadRestriction']

@pulumi.input_type
class BackupDownloadRestrictionArgs:
    def __init__(__self__, *,
                 limit_type: pulumi.Input[str],
                 ip_comparison_symbol: Optional[pulumi.Input[str]] = None,
                 limit_ips: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 limit_vpcs: Optional[pulumi.Input[Sequence[pulumi.Input['BackupDownloadRestrictionLimitVpcArgs']]]] = None,
                 vpc_comparison_symbol: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a BackupDownloadRestriction resource.
        :param pulumi.Input[str] limit_type: NoLimit No limit, both internal and external networks can be downloaded; LimitOnlyIntranet Only intranet can be downloaded; Customize user-defined vpc:ip can be downloaded. LimitVpc and LimitIp can be set only when the value is Customize.
        :param pulumi.Input[str] ip_comparison_symbol: In: The specified ip can be downloaded; NotIn: The specified ip cannot be downloaded. The default is In.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] limit_ips: ip settings to limit downloads.
        :param pulumi.Input[Sequence[pulumi.Input['BackupDownloadRestrictionLimitVpcArgs']]] limit_vpcs: vpc settings to limit downloads.
        :param pulumi.Input[str] vpc_comparison_symbol: This parameter only supports In, which means that the vpc specified by LimitVpc can be downloaded. The default is In.
        """
        pulumi.set(__self__, "limit_type", limit_type)
        if ip_comparison_symbol is not None:
            pulumi.set(__self__, "ip_comparison_symbol", ip_comparison_symbol)
        if limit_ips is not None:
            pulumi.set(__self__, "limit_ips", limit_ips)
        if limit_vpcs is not None:
            pulumi.set(__self__, "limit_vpcs", limit_vpcs)
        if vpc_comparison_symbol is not None:
            pulumi.set(__self__, "vpc_comparison_symbol", vpc_comparison_symbol)

    @property
    @pulumi.getter(name="limitType")
    def limit_type(self) -> pulumi.Input[str]:
        """
        NoLimit No limit, both internal and external networks can be downloaded; LimitOnlyIntranet Only intranet can be downloaded; Customize user-defined vpc:ip can be downloaded. LimitVpc and LimitIp can be set only when the value is Customize.
        """
        return pulumi.get(self, "limit_type")

    @limit_type.setter
    def limit_type(self, value: pulumi.Input[str]):
        pulumi.set(self, "limit_type", value)

    @property
    @pulumi.getter(name="ipComparisonSymbol")
    def ip_comparison_symbol(self) -> Optional[pulumi.Input[str]]:
        """
        In: The specified ip can be downloaded; NotIn: The specified ip cannot be downloaded. The default is In.
        """
        return pulumi.get(self, "ip_comparison_symbol")

    @ip_comparison_symbol.setter
    def ip_comparison_symbol(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ip_comparison_symbol", value)

    @property
    @pulumi.getter(name="limitIps")
    def limit_ips(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        ip settings to limit downloads.
        """
        return pulumi.get(self, "limit_ips")

    @limit_ips.setter
    def limit_ips(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "limit_ips", value)

    @property
    @pulumi.getter(name="limitVpcs")
    def limit_vpcs(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['BackupDownloadRestrictionLimitVpcArgs']]]]:
        """
        vpc settings to limit downloads.
        """
        return pulumi.get(self, "limit_vpcs")

    @limit_vpcs.setter
    def limit_vpcs(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['BackupDownloadRestrictionLimitVpcArgs']]]]):
        pulumi.set(self, "limit_vpcs", value)

    @property
    @pulumi.getter(name="vpcComparisonSymbol")
    def vpc_comparison_symbol(self) -> Optional[pulumi.Input[str]]:
        """
        This parameter only supports In, which means that the vpc specified by LimitVpc can be downloaded. The default is In.
        """
        return pulumi.get(self, "vpc_comparison_symbol")

    @vpc_comparison_symbol.setter
    def vpc_comparison_symbol(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vpc_comparison_symbol", value)


@pulumi.input_type
class _BackupDownloadRestrictionState:
    def __init__(__self__, *,
                 ip_comparison_symbol: Optional[pulumi.Input[str]] = None,
                 limit_ips: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 limit_type: Optional[pulumi.Input[str]] = None,
                 limit_vpcs: Optional[pulumi.Input[Sequence[pulumi.Input['BackupDownloadRestrictionLimitVpcArgs']]]] = None,
                 vpc_comparison_symbol: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering BackupDownloadRestriction resources.
        :param pulumi.Input[str] ip_comparison_symbol: In: The specified ip can be downloaded; NotIn: The specified ip cannot be downloaded. The default is In.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] limit_ips: ip settings to limit downloads.
        :param pulumi.Input[str] limit_type: NoLimit No limit, both internal and external networks can be downloaded; LimitOnlyIntranet Only intranet can be downloaded; Customize user-defined vpc:ip can be downloaded. LimitVpc and LimitIp can be set only when the value is Customize.
        :param pulumi.Input[Sequence[pulumi.Input['BackupDownloadRestrictionLimitVpcArgs']]] limit_vpcs: vpc settings to limit downloads.
        :param pulumi.Input[str] vpc_comparison_symbol: This parameter only supports In, which means that the vpc specified by LimitVpc can be downloaded. The default is In.
        """
        if ip_comparison_symbol is not None:
            pulumi.set(__self__, "ip_comparison_symbol", ip_comparison_symbol)
        if limit_ips is not None:
            pulumi.set(__self__, "limit_ips", limit_ips)
        if limit_type is not None:
            pulumi.set(__self__, "limit_type", limit_type)
        if limit_vpcs is not None:
            pulumi.set(__self__, "limit_vpcs", limit_vpcs)
        if vpc_comparison_symbol is not None:
            pulumi.set(__self__, "vpc_comparison_symbol", vpc_comparison_symbol)

    @property
    @pulumi.getter(name="ipComparisonSymbol")
    def ip_comparison_symbol(self) -> Optional[pulumi.Input[str]]:
        """
        In: The specified ip can be downloaded; NotIn: The specified ip cannot be downloaded. The default is In.
        """
        return pulumi.get(self, "ip_comparison_symbol")

    @ip_comparison_symbol.setter
    def ip_comparison_symbol(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ip_comparison_symbol", value)

    @property
    @pulumi.getter(name="limitIps")
    def limit_ips(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        ip settings to limit downloads.
        """
        return pulumi.get(self, "limit_ips")

    @limit_ips.setter
    def limit_ips(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "limit_ips", value)

    @property
    @pulumi.getter(name="limitType")
    def limit_type(self) -> Optional[pulumi.Input[str]]:
        """
        NoLimit No limit, both internal and external networks can be downloaded; LimitOnlyIntranet Only intranet can be downloaded; Customize user-defined vpc:ip can be downloaded. LimitVpc and LimitIp can be set only when the value is Customize.
        """
        return pulumi.get(self, "limit_type")

    @limit_type.setter
    def limit_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "limit_type", value)

    @property
    @pulumi.getter(name="limitVpcs")
    def limit_vpcs(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['BackupDownloadRestrictionLimitVpcArgs']]]]:
        """
        vpc settings to limit downloads.
        """
        return pulumi.get(self, "limit_vpcs")

    @limit_vpcs.setter
    def limit_vpcs(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['BackupDownloadRestrictionLimitVpcArgs']]]]):
        pulumi.set(self, "limit_vpcs", value)

    @property
    @pulumi.getter(name="vpcComparisonSymbol")
    def vpc_comparison_symbol(self) -> Optional[pulumi.Input[str]]:
        """
        This parameter only supports In, which means that the vpc specified by LimitVpc can be downloaded. The default is In.
        """
        return pulumi.get(self, "vpc_comparison_symbol")

    @vpc_comparison_symbol.setter
    def vpc_comparison_symbol(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vpc_comparison_symbol", value)


class BackupDownloadRestriction(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 ip_comparison_symbol: Optional[pulumi.Input[str]] = None,
                 limit_ips: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 limit_type: Optional[pulumi.Input[str]] = None,
                 limit_vpcs: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['BackupDownloadRestrictionLimitVpcArgs']]]]] = None,
                 vpc_comparison_symbol: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Provides a resource to create a mysql backup_download_restriction

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        example = tencentcloud.mysql.BackupDownloadRestriction("example",
            ip_comparison_symbol="In",
            limit_ips=["127.0.0.1"],
            limit_type="Customize",
            limit_vpcs=[tencentcloud.mysql.BackupDownloadRestrictionLimitVpcArgs(
                region="ap-guangzhou",
                vpc_lists=["vpc-4owdpnwr"],
            )],
            vpc_comparison_symbol="In")
        ```
        <!--End PulumiCodeChooser -->

        ## Import

        mysql backup_download_restriction can be imported using the "BackupDownloadRestriction", as follows.

        ```sh
        $ pulumi import tencentcloud:Mysql/backupDownloadRestriction:BackupDownloadRestriction backup_download_restriction BackupDownloadRestriction
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] ip_comparison_symbol: In: The specified ip can be downloaded; NotIn: The specified ip cannot be downloaded. The default is In.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] limit_ips: ip settings to limit downloads.
        :param pulumi.Input[str] limit_type: NoLimit No limit, both internal and external networks can be downloaded; LimitOnlyIntranet Only intranet can be downloaded; Customize user-defined vpc:ip can be downloaded. LimitVpc and LimitIp can be set only when the value is Customize.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['BackupDownloadRestrictionLimitVpcArgs']]]] limit_vpcs: vpc settings to limit downloads.
        :param pulumi.Input[str] vpc_comparison_symbol: This parameter only supports In, which means that the vpc specified by LimitVpc can be downloaded. The default is In.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: BackupDownloadRestrictionArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Provides a resource to create a mysql backup_download_restriction

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        example = tencentcloud.mysql.BackupDownloadRestriction("example",
            ip_comparison_symbol="In",
            limit_ips=["127.0.0.1"],
            limit_type="Customize",
            limit_vpcs=[tencentcloud.mysql.BackupDownloadRestrictionLimitVpcArgs(
                region="ap-guangzhou",
                vpc_lists=["vpc-4owdpnwr"],
            )],
            vpc_comparison_symbol="In")
        ```
        <!--End PulumiCodeChooser -->

        ## Import

        mysql backup_download_restriction can be imported using the "BackupDownloadRestriction", as follows.

        ```sh
        $ pulumi import tencentcloud:Mysql/backupDownloadRestriction:BackupDownloadRestriction backup_download_restriction BackupDownloadRestriction
        ```

        :param str resource_name: The name of the resource.
        :param BackupDownloadRestrictionArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(BackupDownloadRestrictionArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 ip_comparison_symbol: Optional[pulumi.Input[str]] = None,
                 limit_ips: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 limit_type: Optional[pulumi.Input[str]] = None,
                 limit_vpcs: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['BackupDownloadRestrictionLimitVpcArgs']]]]] = None,
                 vpc_comparison_symbol: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = BackupDownloadRestrictionArgs.__new__(BackupDownloadRestrictionArgs)

            __props__.__dict__["ip_comparison_symbol"] = ip_comparison_symbol
            __props__.__dict__["limit_ips"] = limit_ips
            if limit_type is None and not opts.urn:
                raise TypeError("Missing required property 'limit_type'")
            __props__.__dict__["limit_type"] = limit_type
            __props__.__dict__["limit_vpcs"] = limit_vpcs
            __props__.__dict__["vpc_comparison_symbol"] = vpc_comparison_symbol
        super(BackupDownloadRestriction, __self__).__init__(
            'tencentcloud:Mysql/backupDownloadRestriction:BackupDownloadRestriction',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            ip_comparison_symbol: Optional[pulumi.Input[str]] = None,
            limit_ips: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            limit_type: Optional[pulumi.Input[str]] = None,
            limit_vpcs: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['BackupDownloadRestrictionLimitVpcArgs']]]]] = None,
            vpc_comparison_symbol: Optional[pulumi.Input[str]] = None) -> 'BackupDownloadRestriction':
        """
        Get an existing BackupDownloadRestriction resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] ip_comparison_symbol: In: The specified ip can be downloaded; NotIn: The specified ip cannot be downloaded. The default is In.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] limit_ips: ip settings to limit downloads.
        :param pulumi.Input[str] limit_type: NoLimit No limit, both internal and external networks can be downloaded; LimitOnlyIntranet Only intranet can be downloaded; Customize user-defined vpc:ip can be downloaded. LimitVpc and LimitIp can be set only when the value is Customize.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['BackupDownloadRestrictionLimitVpcArgs']]]] limit_vpcs: vpc settings to limit downloads.
        :param pulumi.Input[str] vpc_comparison_symbol: This parameter only supports In, which means that the vpc specified by LimitVpc can be downloaded. The default is In.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _BackupDownloadRestrictionState.__new__(_BackupDownloadRestrictionState)

        __props__.__dict__["ip_comparison_symbol"] = ip_comparison_symbol
        __props__.__dict__["limit_ips"] = limit_ips
        __props__.__dict__["limit_type"] = limit_type
        __props__.__dict__["limit_vpcs"] = limit_vpcs
        __props__.__dict__["vpc_comparison_symbol"] = vpc_comparison_symbol
        return BackupDownloadRestriction(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="ipComparisonSymbol")
    def ip_comparison_symbol(self) -> pulumi.Output[Optional[str]]:
        """
        In: The specified ip can be downloaded; NotIn: The specified ip cannot be downloaded. The default is In.
        """
        return pulumi.get(self, "ip_comparison_symbol")

    @property
    @pulumi.getter(name="limitIps")
    def limit_ips(self) -> pulumi.Output[Optional[Sequence[str]]]:
        """
        ip settings to limit downloads.
        """
        return pulumi.get(self, "limit_ips")

    @property
    @pulumi.getter(name="limitType")
    def limit_type(self) -> pulumi.Output[str]:
        """
        NoLimit No limit, both internal and external networks can be downloaded; LimitOnlyIntranet Only intranet can be downloaded; Customize user-defined vpc:ip can be downloaded. LimitVpc and LimitIp can be set only when the value is Customize.
        """
        return pulumi.get(self, "limit_type")

    @property
    @pulumi.getter(name="limitVpcs")
    def limit_vpcs(self) -> pulumi.Output[Optional[Sequence['outputs.BackupDownloadRestrictionLimitVpc']]]:
        """
        vpc settings to limit downloads.
        """
        return pulumi.get(self, "limit_vpcs")

    @property
    @pulumi.getter(name="vpcComparisonSymbol")
    def vpc_comparison_symbol(self) -> pulumi.Output[Optional[str]]:
        """
        This parameter only supports In, which means that the vpc specified by LimitVpc can be downloaded. The default is In.
        """
        return pulumi.get(self, "vpc_comparison_symbol")


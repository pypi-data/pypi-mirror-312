# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = ['RoInstanceIpArgs', 'RoInstanceIp']

@pulumi.input_type
class RoInstanceIpArgs:
    def __init__(__self__, *,
                 instance_id: pulumi.Input[str],
                 uniq_subnet_id: Optional[pulumi.Input[str]] = None,
                 uniq_vpc_id: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a RoInstanceIp resource.
        :param pulumi.Input[str] instance_id: Read-only instance ID, in the format: cdbro-3i70uj0k, which is the same as the read-only instance ID displayed on the cloud database console page.
        :param pulumi.Input[str] uniq_subnet_id: Subnet descriptor, for example: subnet-1typ0s7d.
        :param pulumi.Input[str] uniq_vpc_id: vpc descriptor, for example: vpc-a23yt67j, if this field is passed, UniqSubnetId must be passed.
        """
        pulumi.set(__self__, "instance_id", instance_id)
        if uniq_subnet_id is not None:
            pulumi.set(__self__, "uniq_subnet_id", uniq_subnet_id)
        if uniq_vpc_id is not None:
            pulumi.set(__self__, "uniq_vpc_id", uniq_vpc_id)

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> pulumi.Input[str]:
        """
        Read-only instance ID, in the format: cdbro-3i70uj0k, which is the same as the read-only instance ID displayed on the cloud database console page.
        """
        return pulumi.get(self, "instance_id")

    @instance_id.setter
    def instance_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "instance_id", value)

    @property
    @pulumi.getter(name="uniqSubnetId")
    def uniq_subnet_id(self) -> Optional[pulumi.Input[str]]:
        """
        Subnet descriptor, for example: subnet-1typ0s7d.
        """
        return pulumi.get(self, "uniq_subnet_id")

    @uniq_subnet_id.setter
    def uniq_subnet_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "uniq_subnet_id", value)

    @property
    @pulumi.getter(name="uniqVpcId")
    def uniq_vpc_id(self) -> Optional[pulumi.Input[str]]:
        """
        vpc descriptor, for example: vpc-a23yt67j, if this field is passed, UniqSubnetId must be passed.
        """
        return pulumi.get(self, "uniq_vpc_id")

    @uniq_vpc_id.setter
    def uniq_vpc_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "uniq_vpc_id", value)


@pulumi.input_type
class _RoInstanceIpState:
    def __init__(__self__, *,
                 instance_id: Optional[pulumi.Input[str]] = None,
                 ro_vip: Optional[pulumi.Input[str]] = None,
                 ro_vport: Optional[pulumi.Input[int]] = None,
                 uniq_subnet_id: Optional[pulumi.Input[str]] = None,
                 uniq_vpc_id: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering RoInstanceIp resources.
        :param pulumi.Input[str] instance_id: Read-only instance ID, in the format: cdbro-3i70uj0k, which is the same as the read-only instance ID displayed on the cloud database console page.
        :param pulumi.Input[str] ro_vip: Intranet IP address of the read-only instance.
        :param pulumi.Input[int] ro_vport: Intranet port number of the read-only instance.
        :param pulumi.Input[str] uniq_subnet_id: Subnet descriptor, for example: subnet-1typ0s7d.
        :param pulumi.Input[str] uniq_vpc_id: vpc descriptor, for example: vpc-a23yt67j, if this field is passed, UniqSubnetId must be passed.
        """
        if instance_id is not None:
            pulumi.set(__self__, "instance_id", instance_id)
        if ro_vip is not None:
            pulumi.set(__self__, "ro_vip", ro_vip)
        if ro_vport is not None:
            pulumi.set(__self__, "ro_vport", ro_vport)
        if uniq_subnet_id is not None:
            pulumi.set(__self__, "uniq_subnet_id", uniq_subnet_id)
        if uniq_vpc_id is not None:
            pulumi.set(__self__, "uniq_vpc_id", uniq_vpc_id)

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> Optional[pulumi.Input[str]]:
        """
        Read-only instance ID, in the format: cdbro-3i70uj0k, which is the same as the read-only instance ID displayed on the cloud database console page.
        """
        return pulumi.get(self, "instance_id")

    @instance_id.setter
    def instance_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "instance_id", value)

    @property
    @pulumi.getter(name="roVip")
    def ro_vip(self) -> Optional[pulumi.Input[str]]:
        """
        Intranet IP address of the read-only instance.
        """
        return pulumi.get(self, "ro_vip")

    @ro_vip.setter
    def ro_vip(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ro_vip", value)

    @property
    @pulumi.getter(name="roVport")
    def ro_vport(self) -> Optional[pulumi.Input[int]]:
        """
        Intranet port number of the read-only instance.
        """
        return pulumi.get(self, "ro_vport")

    @ro_vport.setter
    def ro_vport(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "ro_vport", value)

    @property
    @pulumi.getter(name="uniqSubnetId")
    def uniq_subnet_id(self) -> Optional[pulumi.Input[str]]:
        """
        Subnet descriptor, for example: subnet-1typ0s7d.
        """
        return pulumi.get(self, "uniq_subnet_id")

    @uniq_subnet_id.setter
    def uniq_subnet_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "uniq_subnet_id", value)

    @property
    @pulumi.getter(name="uniqVpcId")
    def uniq_vpc_id(self) -> Optional[pulumi.Input[str]]:
        """
        vpc descriptor, for example: vpc-a23yt67j, if this field is passed, UniqSubnetId must be passed.
        """
        return pulumi.get(self, "uniq_vpc_id")

    @uniq_vpc_id.setter
    def uniq_vpc_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "uniq_vpc_id", value)


class RoInstanceIp(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 instance_id: Optional[pulumi.Input[str]] = None,
                 uniq_subnet_id: Optional[pulumi.Input[str]] = None,
                 uniq_vpc_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Provides a resource to create a mysql ro_instance_ip

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import pulumi_tencentcloud as tencentcloud
        import tencentcloud_iac_pulumi as tencentcloud

        zones = tencentcloud.Availability.get_zones_by_product(product="cdb")
        vpc = tencentcloud.vpc.Instance("vpc", cidr_block="10.0.0.0/16")
        subnet = tencentcloud.subnet.Instance("subnet",
            availability_zone=zones.zones[0].name,
            vpc_id=vpc.id,
            cidr_block="10.0.0.0/16",
            is_multicast=False)
        example = tencentcloud.mysql.RoInstanceIp("example",
            instance_id="cdbro-bdlvcfpj",
            uniq_subnet_id=subnet.id,
            uniq_vpc_id=vpc.id)
        ```
        <!--End PulumiCodeChooser -->

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] instance_id: Read-only instance ID, in the format: cdbro-3i70uj0k, which is the same as the read-only instance ID displayed on the cloud database console page.
        :param pulumi.Input[str] uniq_subnet_id: Subnet descriptor, for example: subnet-1typ0s7d.
        :param pulumi.Input[str] uniq_vpc_id: vpc descriptor, for example: vpc-a23yt67j, if this field is passed, UniqSubnetId must be passed.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: RoInstanceIpArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Provides a resource to create a mysql ro_instance_ip

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import pulumi_tencentcloud as tencentcloud
        import tencentcloud_iac_pulumi as tencentcloud

        zones = tencentcloud.Availability.get_zones_by_product(product="cdb")
        vpc = tencentcloud.vpc.Instance("vpc", cidr_block="10.0.0.0/16")
        subnet = tencentcloud.subnet.Instance("subnet",
            availability_zone=zones.zones[0].name,
            vpc_id=vpc.id,
            cidr_block="10.0.0.0/16",
            is_multicast=False)
        example = tencentcloud.mysql.RoInstanceIp("example",
            instance_id="cdbro-bdlvcfpj",
            uniq_subnet_id=subnet.id,
            uniq_vpc_id=vpc.id)
        ```
        <!--End PulumiCodeChooser -->

        :param str resource_name: The name of the resource.
        :param RoInstanceIpArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(RoInstanceIpArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 instance_id: Optional[pulumi.Input[str]] = None,
                 uniq_subnet_id: Optional[pulumi.Input[str]] = None,
                 uniq_vpc_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = RoInstanceIpArgs.__new__(RoInstanceIpArgs)

            if instance_id is None and not opts.urn:
                raise TypeError("Missing required property 'instance_id'")
            __props__.__dict__["instance_id"] = instance_id
            __props__.__dict__["uniq_subnet_id"] = uniq_subnet_id
            __props__.__dict__["uniq_vpc_id"] = uniq_vpc_id
            __props__.__dict__["ro_vip"] = None
            __props__.__dict__["ro_vport"] = None
        super(RoInstanceIp, __self__).__init__(
            'tencentcloud:Mysql/roInstanceIp:RoInstanceIp',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            instance_id: Optional[pulumi.Input[str]] = None,
            ro_vip: Optional[pulumi.Input[str]] = None,
            ro_vport: Optional[pulumi.Input[int]] = None,
            uniq_subnet_id: Optional[pulumi.Input[str]] = None,
            uniq_vpc_id: Optional[pulumi.Input[str]] = None) -> 'RoInstanceIp':
        """
        Get an existing RoInstanceIp resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] instance_id: Read-only instance ID, in the format: cdbro-3i70uj0k, which is the same as the read-only instance ID displayed on the cloud database console page.
        :param pulumi.Input[str] ro_vip: Intranet IP address of the read-only instance.
        :param pulumi.Input[int] ro_vport: Intranet port number of the read-only instance.
        :param pulumi.Input[str] uniq_subnet_id: Subnet descriptor, for example: subnet-1typ0s7d.
        :param pulumi.Input[str] uniq_vpc_id: vpc descriptor, for example: vpc-a23yt67j, if this field is passed, UniqSubnetId must be passed.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _RoInstanceIpState.__new__(_RoInstanceIpState)

        __props__.__dict__["instance_id"] = instance_id
        __props__.__dict__["ro_vip"] = ro_vip
        __props__.__dict__["ro_vport"] = ro_vport
        __props__.__dict__["uniq_subnet_id"] = uniq_subnet_id
        __props__.__dict__["uniq_vpc_id"] = uniq_vpc_id
        return RoInstanceIp(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> pulumi.Output[str]:
        """
        Read-only instance ID, in the format: cdbro-3i70uj0k, which is the same as the read-only instance ID displayed on the cloud database console page.
        """
        return pulumi.get(self, "instance_id")

    @property
    @pulumi.getter(name="roVip")
    def ro_vip(self) -> pulumi.Output[str]:
        """
        Intranet IP address of the read-only instance.
        """
        return pulumi.get(self, "ro_vip")

    @property
    @pulumi.getter(name="roVport")
    def ro_vport(self) -> pulumi.Output[int]:
        """
        Intranet port number of the read-only instance.
        """
        return pulumi.get(self, "ro_vport")

    @property
    @pulumi.getter(name="uniqSubnetId")
    def uniq_subnet_id(self) -> pulumi.Output[Optional[str]]:
        """
        Subnet descriptor, for example: subnet-1typ0s7d.
        """
        return pulumi.get(self, "uniq_subnet_id")

    @property
    @pulumi.getter(name="uniqVpcId")
    def uniq_vpc_id(self) -> pulumi.Output[Optional[str]]:
        """
        vpc descriptor, for example: vpc-a23yt67j, if this field is passed, UniqSubnetId must be passed.
        """
        return pulumi.get(self, "uniq_vpc_id")


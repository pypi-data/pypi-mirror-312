# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = ['GatewaySslClientCertArgs', 'GatewaySslClientCert']

@pulumi.input_type
class GatewaySslClientCertArgs:
    def __init__(__self__, *,
                 ssl_vpn_client_id: pulumi.Input[str],
                 switch: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a GatewaySslClientCert resource.
        :param pulumi.Input[str] ssl_vpn_client_id: SSL-VPN-CLIENT Instance ID.
        :param pulumi.Input[str] switch: `on`: Enable, `off`: Disable.
        """
        pulumi.set(__self__, "ssl_vpn_client_id", ssl_vpn_client_id)
        if switch is not None:
            pulumi.set(__self__, "switch", switch)

    @property
    @pulumi.getter(name="sslVpnClientId")
    def ssl_vpn_client_id(self) -> pulumi.Input[str]:
        """
        SSL-VPN-CLIENT Instance ID.
        """
        return pulumi.get(self, "ssl_vpn_client_id")

    @ssl_vpn_client_id.setter
    def ssl_vpn_client_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "ssl_vpn_client_id", value)

    @property
    @pulumi.getter
    def switch(self) -> Optional[pulumi.Input[str]]:
        """
        `on`: Enable, `off`: Disable.
        """
        return pulumi.get(self, "switch")

    @switch.setter
    def switch(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "switch", value)


@pulumi.input_type
class _GatewaySslClientCertState:
    def __init__(__self__, *,
                 ssl_vpn_client_id: Optional[pulumi.Input[str]] = None,
                 switch: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering GatewaySslClientCert resources.
        :param pulumi.Input[str] ssl_vpn_client_id: SSL-VPN-CLIENT Instance ID.
        :param pulumi.Input[str] switch: `on`: Enable, `off`: Disable.
        """
        if ssl_vpn_client_id is not None:
            pulumi.set(__self__, "ssl_vpn_client_id", ssl_vpn_client_id)
        if switch is not None:
            pulumi.set(__self__, "switch", switch)

    @property
    @pulumi.getter(name="sslVpnClientId")
    def ssl_vpn_client_id(self) -> Optional[pulumi.Input[str]]:
        """
        SSL-VPN-CLIENT Instance ID.
        """
        return pulumi.get(self, "ssl_vpn_client_id")

    @ssl_vpn_client_id.setter
    def ssl_vpn_client_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ssl_vpn_client_id", value)

    @property
    @pulumi.getter
    def switch(self) -> Optional[pulumi.Input[str]]:
        """
        `on`: Enable, `off`: Disable.
        """
        return pulumi.get(self, "switch")

    @switch.setter
    def switch(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "switch", value)


class GatewaySslClientCert(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 ssl_vpn_client_id: Optional[pulumi.Input[str]] = None,
                 switch: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Provides a resource to create a vpc vpn_gateway_ssl_client_cert

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        vpn_gateway_ssl_client_cert = tencentcloud.vpn.GatewaySslClientCert("vpnGatewaySslClientCert",
            ssl_vpn_client_id="vpnc-123456",
            switch="off")
        ```
        <!--End PulumiCodeChooser -->

        ## Import

        vpc vpn_gateway_ssl_client_cert can be imported using the id, e.g.

        ```sh
        $ pulumi import tencentcloud:Vpn/gatewaySslClientCert:GatewaySslClientCert vpn_gateway_ssl_client_cert ssl_client_id
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] ssl_vpn_client_id: SSL-VPN-CLIENT Instance ID.
        :param pulumi.Input[str] switch: `on`: Enable, `off`: Disable.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: GatewaySslClientCertArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Provides a resource to create a vpc vpn_gateway_ssl_client_cert

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        vpn_gateway_ssl_client_cert = tencentcloud.vpn.GatewaySslClientCert("vpnGatewaySslClientCert",
            ssl_vpn_client_id="vpnc-123456",
            switch="off")
        ```
        <!--End PulumiCodeChooser -->

        ## Import

        vpc vpn_gateway_ssl_client_cert can be imported using the id, e.g.

        ```sh
        $ pulumi import tencentcloud:Vpn/gatewaySslClientCert:GatewaySslClientCert vpn_gateway_ssl_client_cert ssl_client_id
        ```

        :param str resource_name: The name of the resource.
        :param GatewaySslClientCertArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(GatewaySslClientCertArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 ssl_vpn_client_id: Optional[pulumi.Input[str]] = None,
                 switch: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = GatewaySslClientCertArgs.__new__(GatewaySslClientCertArgs)

            if ssl_vpn_client_id is None and not opts.urn:
                raise TypeError("Missing required property 'ssl_vpn_client_id'")
            __props__.__dict__["ssl_vpn_client_id"] = ssl_vpn_client_id
            __props__.__dict__["switch"] = switch
        super(GatewaySslClientCert, __self__).__init__(
            'tencentcloud:Vpn/gatewaySslClientCert:GatewaySslClientCert',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            ssl_vpn_client_id: Optional[pulumi.Input[str]] = None,
            switch: Optional[pulumi.Input[str]] = None) -> 'GatewaySslClientCert':
        """
        Get an existing GatewaySslClientCert resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] ssl_vpn_client_id: SSL-VPN-CLIENT Instance ID.
        :param pulumi.Input[str] switch: `on`: Enable, `off`: Disable.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _GatewaySslClientCertState.__new__(_GatewaySslClientCertState)

        __props__.__dict__["ssl_vpn_client_id"] = ssl_vpn_client_id
        __props__.__dict__["switch"] = switch
        return GatewaySslClientCert(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="sslVpnClientId")
    def ssl_vpn_client_id(self) -> pulumi.Output[str]:
        """
        SSL-VPN-CLIENT Instance ID.
        """
        return pulumi.get(self, "ssl_vpn_client_id")

    @property
    @pulumi.getter
    def switch(self) -> pulumi.Output[Optional[str]]:
        """
        `on`: Enable, `off`: Disable.
        """
        return pulumi.get(self, "switch")


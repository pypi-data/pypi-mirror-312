# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = ['RocketmqNamespaceArgs', 'RocketmqNamespace']

@pulumi.input_type
class RocketmqNamespaceArgs:
    def __init__(__self__, *,
                 cluster_id: pulumi.Input[str],
                 namespace_name: pulumi.Input[str],
                 remark: Optional[pulumi.Input[str]] = None,
                 retention_time: Optional[pulumi.Input[int]] = None,
                 ttl: Optional[pulumi.Input[int]] = None):
        """
        The set of arguments for constructing a RocketmqNamespace resource.
        :param pulumi.Input[str] cluster_id: Cluster ID.
        :param pulumi.Input[str] namespace_name: Namespace name, which can contain 3-64 letters, digits, hyphens, and underscores.
        :param pulumi.Input[str] remark: Remarks (up to 128 characters).
        :param pulumi.Input[int] retention_time: It has been deprecated from version 1.81.20. Due to the adjustment of RocketMQ, the creation or modification of this parameter will be ignored. Retention time of persisted messages in milliseconds.
        :param pulumi.Input[int] ttl: It has been deprecated from version 1.81.20. Due to the adjustment of RocketMQ, the creation or modification of this parameter will be ignored. Retention time of unconsumed messages in milliseconds. Value range: 60 seconds-15 days.
        """
        pulumi.set(__self__, "cluster_id", cluster_id)
        pulumi.set(__self__, "namespace_name", namespace_name)
        if remark is not None:
            pulumi.set(__self__, "remark", remark)
        if retention_time is not None:
            warnings.warn("""It has been deprecated from version 1.81.20. Due to the adjustment of RocketMQ, the creation or modification of this parameter will be ignored.""", DeprecationWarning)
            pulumi.log.warn("""retention_time is deprecated: It has been deprecated from version 1.81.20. Due to the adjustment of RocketMQ, the creation or modification of this parameter will be ignored.""")
        if retention_time is not None:
            pulumi.set(__self__, "retention_time", retention_time)
        if ttl is not None:
            warnings.warn("""It has been deprecated from version 1.81.20. Due to the adjustment of RocketMQ, the creation or modification of this parameter will be ignored.""", DeprecationWarning)
            pulumi.log.warn("""ttl is deprecated: It has been deprecated from version 1.81.20. Due to the adjustment of RocketMQ, the creation or modification of this parameter will be ignored.""")
        if ttl is not None:
            pulumi.set(__self__, "ttl", ttl)

    @property
    @pulumi.getter(name="clusterId")
    def cluster_id(self) -> pulumi.Input[str]:
        """
        Cluster ID.
        """
        return pulumi.get(self, "cluster_id")

    @cluster_id.setter
    def cluster_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "cluster_id", value)

    @property
    @pulumi.getter(name="namespaceName")
    def namespace_name(self) -> pulumi.Input[str]:
        """
        Namespace name, which can contain 3-64 letters, digits, hyphens, and underscores.
        """
        return pulumi.get(self, "namespace_name")

    @namespace_name.setter
    def namespace_name(self, value: pulumi.Input[str]):
        pulumi.set(self, "namespace_name", value)

    @property
    @pulumi.getter
    def remark(self) -> Optional[pulumi.Input[str]]:
        """
        Remarks (up to 128 characters).
        """
        return pulumi.get(self, "remark")

    @remark.setter
    def remark(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "remark", value)

    @property
    @pulumi.getter(name="retentionTime")
    def retention_time(self) -> Optional[pulumi.Input[int]]:
        """
        It has been deprecated from version 1.81.20. Due to the adjustment of RocketMQ, the creation or modification of this parameter will be ignored. Retention time of persisted messages in milliseconds.
        """
        warnings.warn("""It has been deprecated from version 1.81.20. Due to the adjustment of RocketMQ, the creation or modification of this parameter will be ignored.""", DeprecationWarning)
        pulumi.log.warn("""retention_time is deprecated: It has been deprecated from version 1.81.20. Due to the adjustment of RocketMQ, the creation or modification of this parameter will be ignored.""")

        return pulumi.get(self, "retention_time")

    @retention_time.setter
    def retention_time(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "retention_time", value)

    @property
    @pulumi.getter
    def ttl(self) -> Optional[pulumi.Input[int]]:
        """
        It has been deprecated from version 1.81.20. Due to the adjustment of RocketMQ, the creation or modification of this parameter will be ignored. Retention time of unconsumed messages in milliseconds. Value range: 60 seconds-15 days.
        """
        warnings.warn("""It has been deprecated from version 1.81.20. Due to the adjustment of RocketMQ, the creation or modification of this parameter will be ignored.""", DeprecationWarning)
        pulumi.log.warn("""ttl is deprecated: It has been deprecated from version 1.81.20. Due to the adjustment of RocketMQ, the creation or modification of this parameter will be ignored.""")

        return pulumi.get(self, "ttl")

    @ttl.setter
    def ttl(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "ttl", value)


@pulumi.input_type
class _RocketmqNamespaceState:
    def __init__(__self__, *,
                 cluster_id: Optional[pulumi.Input[str]] = None,
                 namespace_name: Optional[pulumi.Input[str]] = None,
                 public_endpoint: Optional[pulumi.Input[str]] = None,
                 remark: Optional[pulumi.Input[str]] = None,
                 retention_time: Optional[pulumi.Input[int]] = None,
                 ttl: Optional[pulumi.Input[int]] = None,
                 vpc_endpoint: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering RocketmqNamespace resources.
        :param pulumi.Input[str] cluster_id: Cluster ID.
        :param pulumi.Input[str] namespace_name: Namespace name, which can contain 3-64 letters, digits, hyphens, and underscores.
        :param pulumi.Input[str] public_endpoint: Public network access point address.
        :param pulumi.Input[str] remark: Remarks (up to 128 characters).
        :param pulumi.Input[int] retention_time: It has been deprecated from version 1.81.20. Due to the adjustment of RocketMQ, the creation or modification of this parameter will be ignored. Retention time of persisted messages in milliseconds.
        :param pulumi.Input[int] ttl: It has been deprecated from version 1.81.20. Due to the adjustment of RocketMQ, the creation or modification of this parameter will be ignored. Retention time of unconsumed messages in milliseconds. Value range: 60 seconds-15 days.
        :param pulumi.Input[str] vpc_endpoint: VPC access point address.
        """
        if cluster_id is not None:
            pulumi.set(__self__, "cluster_id", cluster_id)
        if namespace_name is not None:
            pulumi.set(__self__, "namespace_name", namespace_name)
        if public_endpoint is not None:
            pulumi.set(__self__, "public_endpoint", public_endpoint)
        if remark is not None:
            pulumi.set(__self__, "remark", remark)
        if retention_time is not None:
            warnings.warn("""It has been deprecated from version 1.81.20. Due to the adjustment of RocketMQ, the creation or modification of this parameter will be ignored.""", DeprecationWarning)
            pulumi.log.warn("""retention_time is deprecated: It has been deprecated from version 1.81.20. Due to the adjustment of RocketMQ, the creation or modification of this parameter will be ignored.""")
        if retention_time is not None:
            pulumi.set(__self__, "retention_time", retention_time)
        if ttl is not None:
            warnings.warn("""It has been deprecated from version 1.81.20. Due to the adjustment of RocketMQ, the creation or modification of this parameter will be ignored.""", DeprecationWarning)
            pulumi.log.warn("""ttl is deprecated: It has been deprecated from version 1.81.20. Due to the adjustment of RocketMQ, the creation or modification of this parameter will be ignored.""")
        if ttl is not None:
            pulumi.set(__self__, "ttl", ttl)
        if vpc_endpoint is not None:
            pulumi.set(__self__, "vpc_endpoint", vpc_endpoint)

    @property
    @pulumi.getter(name="clusterId")
    def cluster_id(self) -> Optional[pulumi.Input[str]]:
        """
        Cluster ID.
        """
        return pulumi.get(self, "cluster_id")

    @cluster_id.setter
    def cluster_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "cluster_id", value)

    @property
    @pulumi.getter(name="namespaceName")
    def namespace_name(self) -> Optional[pulumi.Input[str]]:
        """
        Namespace name, which can contain 3-64 letters, digits, hyphens, and underscores.
        """
        return pulumi.get(self, "namespace_name")

    @namespace_name.setter
    def namespace_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "namespace_name", value)

    @property
    @pulumi.getter(name="publicEndpoint")
    def public_endpoint(self) -> Optional[pulumi.Input[str]]:
        """
        Public network access point address.
        """
        return pulumi.get(self, "public_endpoint")

    @public_endpoint.setter
    def public_endpoint(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "public_endpoint", value)

    @property
    @pulumi.getter
    def remark(self) -> Optional[pulumi.Input[str]]:
        """
        Remarks (up to 128 characters).
        """
        return pulumi.get(self, "remark")

    @remark.setter
    def remark(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "remark", value)

    @property
    @pulumi.getter(name="retentionTime")
    def retention_time(self) -> Optional[pulumi.Input[int]]:
        """
        It has been deprecated from version 1.81.20. Due to the adjustment of RocketMQ, the creation or modification of this parameter will be ignored. Retention time of persisted messages in milliseconds.
        """
        warnings.warn("""It has been deprecated from version 1.81.20. Due to the adjustment of RocketMQ, the creation or modification of this parameter will be ignored.""", DeprecationWarning)
        pulumi.log.warn("""retention_time is deprecated: It has been deprecated from version 1.81.20. Due to the adjustment of RocketMQ, the creation or modification of this parameter will be ignored.""")

        return pulumi.get(self, "retention_time")

    @retention_time.setter
    def retention_time(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "retention_time", value)

    @property
    @pulumi.getter
    def ttl(self) -> Optional[pulumi.Input[int]]:
        """
        It has been deprecated from version 1.81.20. Due to the adjustment of RocketMQ, the creation or modification of this parameter will be ignored. Retention time of unconsumed messages in milliseconds. Value range: 60 seconds-15 days.
        """
        warnings.warn("""It has been deprecated from version 1.81.20. Due to the adjustment of RocketMQ, the creation or modification of this parameter will be ignored.""", DeprecationWarning)
        pulumi.log.warn("""ttl is deprecated: It has been deprecated from version 1.81.20. Due to the adjustment of RocketMQ, the creation or modification of this parameter will be ignored.""")

        return pulumi.get(self, "ttl")

    @ttl.setter
    def ttl(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "ttl", value)

    @property
    @pulumi.getter(name="vpcEndpoint")
    def vpc_endpoint(self) -> Optional[pulumi.Input[str]]:
        """
        VPC access point address.
        """
        return pulumi.get(self, "vpc_endpoint")

    @vpc_endpoint.setter
    def vpc_endpoint(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vpc_endpoint", value)


class RocketmqNamespace(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 cluster_id: Optional[pulumi.Input[str]] = None,
                 namespace_name: Optional[pulumi.Input[str]] = None,
                 remark: Optional[pulumi.Input[str]] = None,
                 retention_time: Optional[pulumi.Input[int]] = None,
                 ttl: Optional[pulumi.Input[int]] = None,
                 __props__=None):
        """
        Provides a resource to create a tdmqRocketmq namespace

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        example_rocketmq_cluster = tencentcloud.tdmq.RocketmqCluster("exampleRocketmqCluster",
            cluster_name="tf_example",
            remark="remark.")
        example_rocketmq_namespace = tencentcloud.tdmq.RocketmqNamespace("exampleRocketmqNamespace",
            cluster_id=example_rocketmq_cluster.cluster_id,
            namespace_name="tf_example_namespace",
            remark="remark.")
        ```
        <!--End PulumiCodeChooser -->

        ## Import

        tdmqRocketmq namespace can be imported using the id, e.g.

        ```sh
        $ pulumi import tencentcloud:Tdmq/rocketmqNamespace:RocketmqNamespace namespace namespace_id
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] cluster_id: Cluster ID.
        :param pulumi.Input[str] namespace_name: Namespace name, which can contain 3-64 letters, digits, hyphens, and underscores.
        :param pulumi.Input[str] remark: Remarks (up to 128 characters).
        :param pulumi.Input[int] retention_time: It has been deprecated from version 1.81.20. Due to the adjustment of RocketMQ, the creation or modification of this parameter will be ignored. Retention time of persisted messages in milliseconds.
        :param pulumi.Input[int] ttl: It has been deprecated from version 1.81.20. Due to the adjustment of RocketMQ, the creation or modification of this parameter will be ignored. Retention time of unconsumed messages in milliseconds. Value range: 60 seconds-15 days.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: RocketmqNamespaceArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Provides a resource to create a tdmqRocketmq namespace

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        example_rocketmq_cluster = tencentcloud.tdmq.RocketmqCluster("exampleRocketmqCluster",
            cluster_name="tf_example",
            remark="remark.")
        example_rocketmq_namespace = tencentcloud.tdmq.RocketmqNamespace("exampleRocketmqNamespace",
            cluster_id=example_rocketmq_cluster.cluster_id,
            namespace_name="tf_example_namespace",
            remark="remark.")
        ```
        <!--End PulumiCodeChooser -->

        ## Import

        tdmqRocketmq namespace can be imported using the id, e.g.

        ```sh
        $ pulumi import tencentcloud:Tdmq/rocketmqNamespace:RocketmqNamespace namespace namespace_id
        ```

        :param str resource_name: The name of the resource.
        :param RocketmqNamespaceArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(RocketmqNamespaceArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 cluster_id: Optional[pulumi.Input[str]] = None,
                 namespace_name: Optional[pulumi.Input[str]] = None,
                 remark: Optional[pulumi.Input[str]] = None,
                 retention_time: Optional[pulumi.Input[int]] = None,
                 ttl: Optional[pulumi.Input[int]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = RocketmqNamespaceArgs.__new__(RocketmqNamespaceArgs)

            if cluster_id is None and not opts.urn:
                raise TypeError("Missing required property 'cluster_id'")
            __props__.__dict__["cluster_id"] = cluster_id
            if namespace_name is None and not opts.urn:
                raise TypeError("Missing required property 'namespace_name'")
            __props__.__dict__["namespace_name"] = namespace_name
            __props__.__dict__["remark"] = remark
            __props__.__dict__["retention_time"] = retention_time
            __props__.__dict__["ttl"] = ttl
            __props__.__dict__["public_endpoint"] = None
            __props__.__dict__["vpc_endpoint"] = None
        super(RocketmqNamespace, __self__).__init__(
            'tencentcloud:Tdmq/rocketmqNamespace:RocketmqNamespace',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            cluster_id: Optional[pulumi.Input[str]] = None,
            namespace_name: Optional[pulumi.Input[str]] = None,
            public_endpoint: Optional[pulumi.Input[str]] = None,
            remark: Optional[pulumi.Input[str]] = None,
            retention_time: Optional[pulumi.Input[int]] = None,
            ttl: Optional[pulumi.Input[int]] = None,
            vpc_endpoint: Optional[pulumi.Input[str]] = None) -> 'RocketmqNamespace':
        """
        Get an existing RocketmqNamespace resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] cluster_id: Cluster ID.
        :param pulumi.Input[str] namespace_name: Namespace name, which can contain 3-64 letters, digits, hyphens, and underscores.
        :param pulumi.Input[str] public_endpoint: Public network access point address.
        :param pulumi.Input[str] remark: Remarks (up to 128 characters).
        :param pulumi.Input[int] retention_time: It has been deprecated from version 1.81.20. Due to the adjustment of RocketMQ, the creation or modification of this parameter will be ignored. Retention time of persisted messages in milliseconds.
        :param pulumi.Input[int] ttl: It has been deprecated from version 1.81.20. Due to the adjustment of RocketMQ, the creation or modification of this parameter will be ignored. Retention time of unconsumed messages in milliseconds. Value range: 60 seconds-15 days.
        :param pulumi.Input[str] vpc_endpoint: VPC access point address.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _RocketmqNamespaceState.__new__(_RocketmqNamespaceState)

        __props__.__dict__["cluster_id"] = cluster_id
        __props__.__dict__["namespace_name"] = namespace_name
        __props__.__dict__["public_endpoint"] = public_endpoint
        __props__.__dict__["remark"] = remark
        __props__.__dict__["retention_time"] = retention_time
        __props__.__dict__["ttl"] = ttl
        __props__.__dict__["vpc_endpoint"] = vpc_endpoint
        return RocketmqNamespace(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="clusterId")
    def cluster_id(self) -> pulumi.Output[str]:
        """
        Cluster ID.
        """
        return pulumi.get(self, "cluster_id")

    @property
    @pulumi.getter(name="namespaceName")
    def namespace_name(self) -> pulumi.Output[str]:
        """
        Namespace name, which can contain 3-64 letters, digits, hyphens, and underscores.
        """
        return pulumi.get(self, "namespace_name")

    @property
    @pulumi.getter(name="publicEndpoint")
    def public_endpoint(self) -> pulumi.Output[str]:
        """
        Public network access point address.
        """
        return pulumi.get(self, "public_endpoint")

    @property
    @pulumi.getter
    def remark(self) -> pulumi.Output[Optional[str]]:
        """
        Remarks (up to 128 characters).
        """
        return pulumi.get(self, "remark")

    @property
    @pulumi.getter(name="retentionTime")
    def retention_time(self) -> pulumi.Output[Optional[int]]:
        """
        It has been deprecated from version 1.81.20. Due to the adjustment of RocketMQ, the creation or modification of this parameter will be ignored. Retention time of persisted messages in milliseconds.
        """
        warnings.warn("""It has been deprecated from version 1.81.20. Due to the adjustment of RocketMQ, the creation or modification of this parameter will be ignored.""", DeprecationWarning)
        pulumi.log.warn("""retention_time is deprecated: It has been deprecated from version 1.81.20. Due to the adjustment of RocketMQ, the creation or modification of this parameter will be ignored.""")

        return pulumi.get(self, "retention_time")

    @property
    @pulumi.getter
    def ttl(self) -> pulumi.Output[Optional[int]]:
        """
        It has been deprecated from version 1.81.20. Due to the adjustment of RocketMQ, the creation or modification of this parameter will be ignored. Retention time of unconsumed messages in milliseconds. Value range: 60 seconds-15 days.
        """
        warnings.warn("""It has been deprecated from version 1.81.20. Due to the adjustment of RocketMQ, the creation or modification of this parameter will be ignored.""", DeprecationWarning)
        pulumi.log.warn("""ttl is deprecated: It has been deprecated from version 1.81.20. Due to the adjustment of RocketMQ, the creation or modification of this parameter will be ignored.""")

        return pulumi.get(self, "ttl")

    @property
    @pulumi.getter(name="vpcEndpoint")
    def vpc_endpoint(self) -> pulumi.Output[str]:
        """
        VPC access point address.
        """
        return pulumi.get(self, "vpc_endpoint")


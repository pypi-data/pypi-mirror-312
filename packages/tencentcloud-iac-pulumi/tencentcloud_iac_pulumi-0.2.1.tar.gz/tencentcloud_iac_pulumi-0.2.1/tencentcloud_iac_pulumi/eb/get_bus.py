# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = [
    'GetBusResult',
    'AwaitableGetBusResult',
    'get_bus',
    'get_bus_output',
]

@pulumi.output_type
class GetBusResult:
    """
    A collection of values returned by getBus.
    """
    def __init__(__self__, event_buses=None, filters=None, id=None, order=None, order_by=None, result_output_file=None):
        if event_buses and not isinstance(event_buses, list):
            raise TypeError("Expected argument 'event_buses' to be a list")
        pulumi.set(__self__, "event_buses", event_buses)
        if filters and not isinstance(filters, list):
            raise TypeError("Expected argument 'filters' to be a list")
        pulumi.set(__self__, "filters", filters)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if order and not isinstance(order, str):
            raise TypeError("Expected argument 'order' to be a str")
        pulumi.set(__self__, "order", order)
        if order_by and not isinstance(order_by, str):
            raise TypeError("Expected argument 'order_by' to be a str")
        pulumi.set(__self__, "order_by", order_by)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)

    @property
    @pulumi.getter(name="eventBuses")
    def event_buses(self) -> Sequence['outputs.GetBusEventBusResult']:
        """
        event set information.
        """
        return pulumi.get(self, "event_buses")

    @property
    @pulumi.getter
    def filters(self) -> Optional[Sequence['outputs.GetBusFilterResult']]:
        return pulumi.get(self, "filters")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def order(self) -> Optional[str]:
        return pulumi.get(self, "order")

    @property
    @pulumi.getter(name="orderBy")
    def order_by(self) -> Optional[str]:
        return pulumi.get(self, "order_by")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")


class AwaitableGetBusResult(GetBusResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetBusResult(
            event_buses=self.event_buses,
            filters=self.filters,
            id=self.id,
            order=self.order,
            order_by=self.order_by,
            result_output_file=self.result_output_file)


def get_bus(filters: Optional[Sequence[pulumi.InputType['GetBusFilterArgs']]] = None,
            order: Optional[str] = None,
            order_by: Optional[str] = None,
            result_output_file: Optional[str] = None,
            opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetBusResult:
    """
    Use this data source to query detailed information of eb bus

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud
    import tencentcloud_iac_pulumi as tencentcloud

    foo = tencentcloud.eb.EventBus("foo",
        event_bus_name="tf-event_bus",
        description="event bus desc",
        enable_store=False,
        save_days=1,
        tags={
            "createdBy": "terraform",
        })
    bus = tencentcloud.Eb.get_bus(order_by="AddTime",
        order="DESC",
        filters=[tencentcloud.eb.GetBusFilterArgs(
            values=["Custom"],
            name="Type",
        )])
    ```
    <!--End PulumiCodeChooser -->


    :param Sequence[pulumi.InputType['GetBusFilterArgs']] filters: Filter conditions. The upper limit of Filters per request is 10, and the upper limit of Filter.Values 5.
    :param str order: Return results in ascending or descending order, optional values ASC (ascending) and DESC (descending).
    :param str order_by: According to which field to sort the returned results, the following fields are supported: AddTime (creation time), ModTime (modification time).
    :param str result_output_file: Used to save results.
    """
    __args__ = dict()
    __args__['filters'] = filters
    __args__['order'] = order
    __args__['orderBy'] = order_by
    __args__['resultOutputFile'] = result_output_file
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('tencentcloud:Eb/getBus:getBus', __args__, opts=opts, typ=GetBusResult).value

    return AwaitableGetBusResult(
        event_buses=pulumi.get(__ret__, 'event_buses'),
        filters=pulumi.get(__ret__, 'filters'),
        id=pulumi.get(__ret__, 'id'),
        order=pulumi.get(__ret__, 'order'),
        order_by=pulumi.get(__ret__, 'order_by'),
        result_output_file=pulumi.get(__ret__, 'result_output_file'))


@_utilities.lift_output_func(get_bus)
def get_bus_output(filters: Optional[pulumi.Input[Optional[Sequence[pulumi.InputType['GetBusFilterArgs']]]]] = None,
                   order: Optional[pulumi.Input[Optional[str]]] = None,
                   order_by: Optional[pulumi.Input[Optional[str]]] = None,
                   result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                   opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetBusResult]:
    """
    Use this data source to query detailed information of eb bus

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud
    import tencentcloud_iac_pulumi as tencentcloud

    foo = tencentcloud.eb.EventBus("foo",
        event_bus_name="tf-event_bus",
        description="event bus desc",
        enable_store=False,
        save_days=1,
        tags={
            "createdBy": "terraform",
        })
    bus = tencentcloud.Eb.get_bus(order_by="AddTime",
        order="DESC",
        filters=[tencentcloud.eb.GetBusFilterArgs(
            values=["Custom"],
            name="Type",
        )])
    ```
    <!--End PulumiCodeChooser -->


    :param Sequence[pulumi.InputType['GetBusFilterArgs']] filters: Filter conditions. The upper limit of Filters per request is 10, and the upper limit of Filter.Values 5.
    :param str order: Return results in ascending or descending order, optional values ASC (ascending) and DESC (descending).
    :param str order_by: According to which field to sort the returned results, the following fields are supported: AddTime (creation time), ModTime (modification time).
    :param str result_output_file: Used to save results.
    """
    ...

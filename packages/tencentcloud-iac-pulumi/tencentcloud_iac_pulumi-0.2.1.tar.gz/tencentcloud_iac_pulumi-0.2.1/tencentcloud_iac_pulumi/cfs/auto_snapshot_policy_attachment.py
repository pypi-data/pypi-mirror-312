# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = ['AutoSnapshotPolicyAttachmentArgs', 'AutoSnapshotPolicyAttachment']

@pulumi.input_type
class AutoSnapshotPolicyAttachmentArgs:
    def __init__(__self__, *,
                 auto_snapshot_policy_id: pulumi.Input[str],
                 file_system_ids: pulumi.Input[str]):
        """
        The set of arguments for constructing a AutoSnapshotPolicyAttachment resource.
        :param pulumi.Input[str] auto_snapshot_policy_id: ID of the snapshot to be unbound.
        :param pulumi.Input[str] file_system_ids: List of IDs of the file systems to be unbound, separated by comma.
        """
        pulumi.set(__self__, "auto_snapshot_policy_id", auto_snapshot_policy_id)
        pulumi.set(__self__, "file_system_ids", file_system_ids)

    @property
    @pulumi.getter(name="autoSnapshotPolicyId")
    def auto_snapshot_policy_id(self) -> pulumi.Input[str]:
        """
        ID of the snapshot to be unbound.
        """
        return pulumi.get(self, "auto_snapshot_policy_id")

    @auto_snapshot_policy_id.setter
    def auto_snapshot_policy_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "auto_snapshot_policy_id", value)

    @property
    @pulumi.getter(name="fileSystemIds")
    def file_system_ids(self) -> pulumi.Input[str]:
        """
        List of IDs of the file systems to be unbound, separated by comma.
        """
        return pulumi.get(self, "file_system_ids")

    @file_system_ids.setter
    def file_system_ids(self, value: pulumi.Input[str]):
        pulumi.set(self, "file_system_ids", value)


@pulumi.input_type
class _AutoSnapshotPolicyAttachmentState:
    def __init__(__self__, *,
                 auto_snapshot_policy_id: Optional[pulumi.Input[str]] = None,
                 file_system_ids: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering AutoSnapshotPolicyAttachment resources.
        :param pulumi.Input[str] auto_snapshot_policy_id: ID of the snapshot to be unbound.
        :param pulumi.Input[str] file_system_ids: List of IDs of the file systems to be unbound, separated by comma.
        """
        if auto_snapshot_policy_id is not None:
            pulumi.set(__self__, "auto_snapshot_policy_id", auto_snapshot_policy_id)
        if file_system_ids is not None:
            pulumi.set(__self__, "file_system_ids", file_system_ids)

    @property
    @pulumi.getter(name="autoSnapshotPolicyId")
    def auto_snapshot_policy_id(self) -> Optional[pulumi.Input[str]]:
        """
        ID of the snapshot to be unbound.
        """
        return pulumi.get(self, "auto_snapshot_policy_id")

    @auto_snapshot_policy_id.setter
    def auto_snapshot_policy_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "auto_snapshot_policy_id", value)

    @property
    @pulumi.getter(name="fileSystemIds")
    def file_system_ids(self) -> Optional[pulumi.Input[str]]:
        """
        List of IDs of the file systems to be unbound, separated by comma.
        """
        return pulumi.get(self, "file_system_ids")

    @file_system_ids.setter
    def file_system_ids(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "file_system_ids", value)


class AutoSnapshotPolicyAttachment(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 auto_snapshot_policy_id: Optional[pulumi.Input[str]] = None,
                 file_system_ids: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Provides a resource to create a cfs auto_snapshot_policy_attachment

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        auto_snapshot_policy_attachment = tencentcloud.cfs.AutoSnapshotPolicyAttachment("autoSnapshotPolicyAttachment",
            auto_snapshot_policy_id="asp-basic",
            file_system_ids="cfs-4xzkct19,cfs-iobiaxtj")
        ```
        <!--End PulumiCodeChooser -->

        ## Import

        cfs auto_snapshot_policy_attachment can be imported using the id, e.g.

        ```sh
        $ pulumi import tencentcloud:Cfs/autoSnapshotPolicyAttachment:AutoSnapshotPolicyAttachment auto_snapshot_policy_attachment auto_snapshot_policy_id#file_system_ids
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] auto_snapshot_policy_id: ID of the snapshot to be unbound.
        :param pulumi.Input[str] file_system_ids: List of IDs of the file systems to be unbound, separated by comma.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: AutoSnapshotPolicyAttachmentArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Provides a resource to create a cfs auto_snapshot_policy_attachment

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        auto_snapshot_policy_attachment = tencentcloud.cfs.AutoSnapshotPolicyAttachment("autoSnapshotPolicyAttachment",
            auto_snapshot_policy_id="asp-basic",
            file_system_ids="cfs-4xzkct19,cfs-iobiaxtj")
        ```
        <!--End PulumiCodeChooser -->

        ## Import

        cfs auto_snapshot_policy_attachment can be imported using the id, e.g.

        ```sh
        $ pulumi import tencentcloud:Cfs/autoSnapshotPolicyAttachment:AutoSnapshotPolicyAttachment auto_snapshot_policy_attachment auto_snapshot_policy_id#file_system_ids
        ```

        :param str resource_name: The name of the resource.
        :param AutoSnapshotPolicyAttachmentArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(AutoSnapshotPolicyAttachmentArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 auto_snapshot_policy_id: Optional[pulumi.Input[str]] = None,
                 file_system_ids: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = AutoSnapshotPolicyAttachmentArgs.__new__(AutoSnapshotPolicyAttachmentArgs)

            if auto_snapshot_policy_id is None and not opts.urn:
                raise TypeError("Missing required property 'auto_snapshot_policy_id'")
            __props__.__dict__["auto_snapshot_policy_id"] = auto_snapshot_policy_id
            if file_system_ids is None and not opts.urn:
                raise TypeError("Missing required property 'file_system_ids'")
            __props__.__dict__["file_system_ids"] = file_system_ids
        super(AutoSnapshotPolicyAttachment, __self__).__init__(
            'tencentcloud:Cfs/autoSnapshotPolicyAttachment:AutoSnapshotPolicyAttachment',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            auto_snapshot_policy_id: Optional[pulumi.Input[str]] = None,
            file_system_ids: Optional[pulumi.Input[str]] = None) -> 'AutoSnapshotPolicyAttachment':
        """
        Get an existing AutoSnapshotPolicyAttachment resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] auto_snapshot_policy_id: ID of the snapshot to be unbound.
        :param pulumi.Input[str] file_system_ids: List of IDs of the file systems to be unbound, separated by comma.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _AutoSnapshotPolicyAttachmentState.__new__(_AutoSnapshotPolicyAttachmentState)

        __props__.__dict__["auto_snapshot_policy_id"] = auto_snapshot_policy_id
        __props__.__dict__["file_system_ids"] = file_system_ids
        return AutoSnapshotPolicyAttachment(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="autoSnapshotPolicyId")
    def auto_snapshot_policy_id(self) -> pulumi.Output[str]:
        """
        ID of the snapshot to be unbound.
        """
        return pulumi.get(self, "auto_snapshot_policy_id")

    @property
    @pulumi.getter(name="fileSystemIds")
    def file_system_ids(self) -> pulumi.Output[str]:
        """
        List of IDs of the file systems to be unbound, separated by comma.
        """
        return pulumi.get(self, "file_system_ids")


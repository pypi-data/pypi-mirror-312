# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetInstanceLogsResult',
    'AwaitableGetInstanceLogsResult',
    'get_instance_logs',
    'get_instance_logs_output',
]

@pulumi.output_type
class GetInstanceLogsResult:
    """
    A collection of values returned by getInstanceLogs.
    """
    def __init__(__self__, end_time=None, id=None, instance_id=None, instance_log_lists=None, log_type=None, order_by_type=None, result_output_file=None, search_key=None, start_time=None):
        if end_time and not isinstance(end_time, str):
            raise TypeError("Expected argument 'end_time' to be a str")
        pulumi.set(__self__, "end_time", end_time)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if instance_id and not isinstance(instance_id, str):
            raise TypeError("Expected argument 'instance_id' to be a str")
        pulumi.set(__self__, "instance_id", instance_id)
        if instance_log_lists and not isinstance(instance_log_lists, list):
            raise TypeError("Expected argument 'instance_log_lists' to be a list")
        pulumi.set(__self__, "instance_log_lists", instance_log_lists)
        if log_type and not isinstance(log_type, int):
            raise TypeError("Expected argument 'log_type' to be a int")
        pulumi.set(__self__, "log_type", log_type)
        if order_by_type and not isinstance(order_by_type, int):
            raise TypeError("Expected argument 'order_by_type' to be a int")
        pulumi.set(__self__, "order_by_type", order_by_type)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)
        if search_key and not isinstance(search_key, str):
            raise TypeError("Expected argument 'search_key' to be a str")
        pulumi.set(__self__, "search_key", search_key)
        if start_time and not isinstance(start_time, str):
            raise TypeError("Expected argument 'start_time' to be a str")
        pulumi.set(__self__, "start_time", start_time)

    @property
    @pulumi.getter(name="endTime")
    def end_time(self) -> Optional[str]:
        return pulumi.get(self, "end_time")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> str:
        return pulumi.get(self, "instance_id")

    @property
    @pulumi.getter(name="instanceLogLists")
    def instance_log_lists(self) -> Sequence['outputs.GetInstanceLogsInstanceLogListResult']:
        """
        List of log details.
        """
        return pulumi.get(self, "instance_log_lists")

    @property
    @pulumi.getter(name="logType")
    def log_type(self) -> Optional[int]:
        return pulumi.get(self, "log_type")

    @property
    @pulumi.getter(name="orderByType")
    def order_by_type(self) -> Optional[int]:
        return pulumi.get(self, "order_by_type")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")

    @property
    @pulumi.getter(name="searchKey")
    def search_key(self) -> Optional[str]:
        return pulumi.get(self, "search_key")

    @property
    @pulumi.getter(name="startTime")
    def start_time(self) -> Optional[str]:
        return pulumi.get(self, "start_time")


class AwaitableGetInstanceLogsResult(GetInstanceLogsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetInstanceLogsResult(
            end_time=self.end_time,
            id=self.id,
            instance_id=self.instance_id,
            instance_log_lists=self.instance_log_lists,
            log_type=self.log_type,
            order_by_type=self.order_by_type,
            result_output_file=self.result_output_file,
            search_key=self.search_key,
            start_time=self.start_time)


def get_instance_logs(end_time: Optional[str] = None,
                      instance_id: Optional[str] = None,
                      log_type: Optional[int] = None,
                      order_by_type: Optional[int] = None,
                      result_output_file: Optional[str] = None,
                      search_key: Optional[str] = None,
                      start_time: Optional[str] = None,
                      opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetInstanceLogsResult:
    """
    Use this data source to query detailed information of es elasticsearch_instance_logs

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    elasticsearch_instance_logs = tencentcloud.Elasticsearch.get_instance_logs(instance_id="es-xxxxxx")
    ```
    <!--End PulumiCodeChooser -->


    :param str end_time: End time. The format is YYYY-MM-DD HH:MM:SS, such as 2019-01-22 20:15:53.
    :param str instance_id: Instance id.
    :param int log_type: Log type. Log type, default is 1, Valid values:
           - 1: master log
           - 2: Search slow log
           - 3: Index slow log
           - 4: GC log.
    :param int order_by_type: Order type. Time sort method. Default is 0, valid values:
           - 0: descending;
           - 1: ascending order.
    :param str result_output_file: Used to save results.
    :param str search_key: Search key. Support LUCENE syntax, such as level:WARN, ip:1.1.1.1, message:test-index, etc.
    :param str start_time: Start time. The format is YYYY-MM-DD HH:MM:SS, such as 2019-01-22 20:15:53.
    """
    __args__ = dict()
    __args__['endTime'] = end_time
    __args__['instanceId'] = instance_id
    __args__['logType'] = log_type
    __args__['orderByType'] = order_by_type
    __args__['resultOutputFile'] = result_output_file
    __args__['searchKey'] = search_key
    __args__['startTime'] = start_time
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('tencentcloud:Elasticsearch/getInstanceLogs:getInstanceLogs', __args__, opts=opts, typ=GetInstanceLogsResult).value

    return AwaitableGetInstanceLogsResult(
        end_time=pulumi.get(__ret__, 'end_time'),
        id=pulumi.get(__ret__, 'id'),
        instance_id=pulumi.get(__ret__, 'instance_id'),
        instance_log_lists=pulumi.get(__ret__, 'instance_log_lists'),
        log_type=pulumi.get(__ret__, 'log_type'),
        order_by_type=pulumi.get(__ret__, 'order_by_type'),
        result_output_file=pulumi.get(__ret__, 'result_output_file'),
        search_key=pulumi.get(__ret__, 'search_key'),
        start_time=pulumi.get(__ret__, 'start_time'))


@_utilities.lift_output_func(get_instance_logs)
def get_instance_logs_output(end_time: Optional[pulumi.Input[Optional[str]]] = None,
                             instance_id: Optional[pulumi.Input[str]] = None,
                             log_type: Optional[pulumi.Input[Optional[int]]] = None,
                             order_by_type: Optional[pulumi.Input[Optional[int]]] = None,
                             result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                             search_key: Optional[pulumi.Input[Optional[str]]] = None,
                             start_time: Optional[pulumi.Input[Optional[str]]] = None,
                             opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetInstanceLogsResult]:
    """
    Use this data source to query detailed information of es elasticsearch_instance_logs

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    elasticsearch_instance_logs = tencentcloud.Elasticsearch.get_instance_logs(instance_id="es-xxxxxx")
    ```
    <!--End PulumiCodeChooser -->


    :param str end_time: End time. The format is YYYY-MM-DD HH:MM:SS, such as 2019-01-22 20:15:53.
    :param str instance_id: Instance id.
    :param int log_type: Log type. Log type, default is 1, Valid values:
           - 1: master log
           - 2: Search slow log
           - 3: Index slow log
           - 4: GC log.
    :param int order_by_type: Order type. Time sort method. Default is 0, valid values:
           - 0: descending;
           - 1: ascending order.
    :param str result_output_file: Used to save results.
    :param str search_key: Search key. Support LUCENE syntax, such as level:WARN, ip:1.1.1.1, message:test-index, etc.
    :param str start_time: Start time. The format is YYYY-MM-DD HH:MM:SS, such as 2019-01-22 20:15:53.
    """
    ...

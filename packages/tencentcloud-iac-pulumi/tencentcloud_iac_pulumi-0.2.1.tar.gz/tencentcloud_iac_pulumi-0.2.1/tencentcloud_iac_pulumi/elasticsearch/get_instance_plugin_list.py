# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetInstancePluginListResult',
    'AwaitableGetInstancePluginListResult',
    'get_instance_plugin_list',
    'get_instance_plugin_list_output',
]

@pulumi.output_type
class GetInstancePluginListResult:
    """
    A collection of values returned by getInstancePluginList.
    """
    def __init__(__self__, id=None, instance_id=None, order_by=None, order_by_type=None, plugin_lists=None, plugin_type=None, result_output_file=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if instance_id and not isinstance(instance_id, str):
            raise TypeError("Expected argument 'instance_id' to be a str")
        pulumi.set(__self__, "instance_id", instance_id)
        if order_by and not isinstance(order_by, str):
            raise TypeError("Expected argument 'order_by' to be a str")
        pulumi.set(__self__, "order_by", order_by)
        if order_by_type and not isinstance(order_by_type, str):
            raise TypeError("Expected argument 'order_by_type' to be a str")
        pulumi.set(__self__, "order_by_type", order_by_type)
        if plugin_lists and not isinstance(plugin_lists, list):
            raise TypeError("Expected argument 'plugin_lists' to be a list")
        pulumi.set(__self__, "plugin_lists", plugin_lists)
        if plugin_type and not isinstance(plugin_type, int):
            raise TypeError("Expected argument 'plugin_type' to be a int")
        pulumi.set(__self__, "plugin_type", plugin_type)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> str:
        return pulumi.get(self, "instance_id")

    @property
    @pulumi.getter(name="orderBy")
    def order_by(self) -> Optional[str]:
        return pulumi.get(self, "order_by")

    @property
    @pulumi.getter(name="orderByType")
    def order_by_type(self) -> Optional[str]:
        return pulumi.get(self, "order_by_type")

    @property
    @pulumi.getter(name="pluginLists")
    def plugin_lists(self) -> Sequence['outputs.GetInstancePluginListPluginListResult']:
        """
        Plugin information list.
        """
        return pulumi.get(self, "plugin_lists")

    @property
    @pulumi.getter(name="pluginType")
    def plugin_type(self) -> Optional[int]:
        """
        Plugin type. Valid values: `0`: System plugin.
        """
        return pulumi.get(self, "plugin_type")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")


class AwaitableGetInstancePluginListResult(GetInstancePluginListResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetInstancePluginListResult(
            id=self.id,
            instance_id=self.instance_id,
            order_by=self.order_by,
            order_by_type=self.order_by_type,
            plugin_lists=self.plugin_lists,
            plugin_type=self.plugin_type,
            result_output_file=self.result_output_file)


def get_instance_plugin_list(instance_id: Optional[str] = None,
                             order_by: Optional[str] = None,
                             order_by_type: Optional[str] = None,
                             plugin_type: Optional[int] = None,
                             result_output_file: Optional[str] = None,
                             opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetInstancePluginListResult:
    """
    Use this data source to query detailed information of elasticsearch instance plugin list

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    instance_plugin_list = tencentcloud.Elasticsearch.get_instance_plugin_list(instance_id="es-xxxxxx")
    ```
    <!--End PulumiCodeChooser -->


    :param str instance_id: Instance id.
    :param str order_by: order field. Valid values: `pluginName`.
    :param str order_by_type: Order type. Valid values:
           - asc: Ascending asc
           - desc: Descending Desc.
    :param int plugin_type: Plugin type. Valid values: `0`: System plugin.
    :param str result_output_file: Used to save results.
    """
    __args__ = dict()
    __args__['instanceId'] = instance_id
    __args__['orderBy'] = order_by
    __args__['orderByType'] = order_by_type
    __args__['pluginType'] = plugin_type
    __args__['resultOutputFile'] = result_output_file
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('tencentcloud:Elasticsearch/getInstancePluginList:getInstancePluginList', __args__, opts=opts, typ=GetInstancePluginListResult).value

    return AwaitableGetInstancePluginListResult(
        id=pulumi.get(__ret__, 'id'),
        instance_id=pulumi.get(__ret__, 'instance_id'),
        order_by=pulumi.get(__ret__, 'order_by'),
        order_by_type=pulumi.get(__ret__, 'order_by_type'),
        plugin_lists=pulumi.get(__ret__, 'plugin_lists'),
        plugin_type=pulumi.get(__ret__, 'plugin_type'),
        result_output_file=pulumi.get(__ret__, 'result_output_file'))


@_utilities.lift_output_func(get_instance_plugin_list)
def get_instance_plugin_list_output(instance_id: Optional[pulumi.Input[str]] = None,
                                    order_by: Optional[pulumi.Input[Optional[str]]] = None,
                                    order_by_type: Optional[pulumi.Input[Optional[str]]] = None,
                                    plugin_type: Optional[pulumi.Input[Optional[int]]] = None,
                                    result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                                    opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetInstancePluginListResult]:
    """
    Use this data source to query detailed information of elasticsearch instance plugin list

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    instance_plugin_list = tencentcloud.Elasticsearch.get_instance_plugin_list(instance_id="es-xxxxxx")
    ```
    <!--End PulumiCodeChooser -->


    :param str instance_id: Instance id.
    :param str order_by: order field. Valid values: `pluginName`.
    :param str order_by_type: Order type. Valid values:
           - asc: Ascending asc
           - desc: Descending Desc.
    :param int plugin_type: Plugin type. Valid values: `0`: System plugin.
    :param str result_output_file: Used to save results.
    """
    ...

# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetRecordLineListResult',
    'AwaitableGetRecordLineListResult',
    'get_record_line_list',
    'get_record_line_list_output',
]

@pulumi.output_type
class GetRecordLineListResult:
    """
    A collection of values returned by getRecordLineList.
    """
    def __init__(__self__, domain=None, domain_grade=None, domain_id=None, id=None, line_group_lists=None, line_lists=None, result_output_file=None):
        if domain and not isinstance(domain, str):
            raise TypeError("Expected argument 'domain' to be a str")
        pulumi.set(__self__, "domain", domain)
        if domain_grade and not isinstance(domain_grade, str):
            raise TypeError("Expected argument 'domain_grade' to be a str")
        pulumi.set(__self__, "domain_grade", domain_grade)
        if domain_id and not isinstance(domain_id, int):
            raise TypeError("Expected argument 'domain_id' to be a int")
        pulumi.set(__self__, "domain_id", domain_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if line_group_lists and not isinstance(line_group_lists, list):
            raise TypeError("Expected argument 'line_group_lists' to be a list")
        pulumi.set(__self__, "line_group_lists", line_group_lists)
        if line_lists and not isinstance(line_lists, list):
            raise TypeError("Expected argument 'line_lists' to be a list")
        pulumi.set(__self__, "line_lists", line_lists)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)

    @property
    @pulumi.getter
    def domain(self) -> str:
        return pulumi.get(self, "domain")

    @property
    @pulumi.getter(name="domainGrade")
    def domain_grade(self) -> str:
        return pulumi.get(self, "domain_grade")

    @property
    @pulumi.getter(name="domainId")
    def domain_id(self) -> Optional[int]:
        return pulumi.get(self, "domain_id")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="lineGroupLists")
    def line_group_lists(self) -> Sequence['outputs.GetRecordLineListLineGroupListResult']:
        """
        Line group list.
        """
        return pulumi.get(self, "line_group_lists")

    @property
    @pulumi.getter(name="lineLists")
    def line_lists(self) -> Sequence['outputs.GetRecordLineListLineListResult']:
        """
        Line list.
        """
        return pulumi.get(self, "line_lists")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")


class AwaitableGetRecordLineListResult(GetRecordLineListResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetRecordLineListResult(
            domain=self.domain,
            domain_grade=self.domain_grade,
            domain_id=self.domain_id,
            id=self.id,
            line_group_lists=self.line_group_lists,
            line_lists=self.line_lists,
            result_output_file=self.result_output_file)


def get_record_line_list(domain: Optional[str] = None,
                         domain_grade: Optional[str] = None,
                         domain_id: Optional[int] = None,
                         result_output_file: Optional[str] = None,
                         opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetRecordLineListResult:
    """
    Use this data source to query detailed information of dnspod record_line_list

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    record_line_list = tencentcloud.Dnspod.get_record_line_list(domain="iac-tf.cloud",
        domain_grade="DP_FREE",
        domain_id=123)
    ```
    <!--End PulumiCodeChooser -->


    :param str domain: Domain.
    :param str domain_grade: Domain level. + Old packages: D_FREE, D_PLUS, D_EXTRA, D_EXPERT, D_ULTRA correspond to free package, personal luxury, enterprise 1, enterprise 2, enterprise 3. + New packages: DP_FREE, DP_PLUS, DP_EXTRA, DP_EXPERT, DP_ULTRA correspond to new free, personal professional, enterprise basic, enterprise standard, enterprise flagship.
    :param int domain_id: Domain ID. The parameter DomainId has a higher priority than the parameter Domain. If the parameter DomainId is passed, the parameter Domain will be ignored. You can find all Domains and DomainIds through the DescribeDomainList interface.
    :param str result_output_file: Used to save results.
    """
    __args__ = dict()
    __args__['domain'] = domain
    __args__['domainGrade'] = domain_grade
    __args__['domainId'] = domain_id
    __args__['resultOutputFile'] = result_output_file
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('tencentcloud:Dnspod/getRecordLineList:getRecordLineList', __args__, opts=opts, typ=GetRecordLineListResult).value

    return AwaitableGetRecordLineListResult(
        domain=pulumi.get(__ret__, 'domain'),
        domain_grade=pulumi.get(__ret__, 'domain_grade'),
        domain_id=pulumi.get(__ret__, 'domain_id'),
        id=pulumi.get(__ret__, 'id'),
        line_group_lists=pulumi.get(__ret__, 'line_group_lists'),
        line_lists=pulumi.get(__ret__, 'line_lists'),
        result_output_file=pulumi.get(__ret__, 'result_output_file'))


@_utilities.lift_output_func(get_record_line_list)
def get_record_line_list_output(domain: Optional[pulumi.Input[str]] = None,
                                domain_grade: Optional[pulumi.Input[str]] = None,
                                domain_id: Optional[pulumi.Input[Optional[int]]] = None,
                                result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                                opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetRecordLineListResult]:
    """
    Use this data source to query detailed information of dnspod record_line_list

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    record_line_list = tencentcloud.Dnspod.get_record_line_list(domain="iac-tf.cloud",
        domain_grade="DP_FREE",
        domain_id=123)
    ```
    <!--End PulumiCodeChooser -->


    :param str domain: Domain.
    :param str domain_grade: Domain level. + Old packages: D_FREE, D_PLUS, D_EXTRA, D_EXPERT, D_ULTRA correspond to free package, personal luxury, enterprise 1, enterprise 2, enterprise 3. + New packages: DP_FREE, DP_PLUS, DP_EXTRA, DP_EXPERT, DP_ULTRA correspond to new free, personal professional, enterprise basic, enterprise standard, enterprise flagship.
    :param int domain_id: Domain ID. The parameter DomainId has a higher priority than the parameter Domain. If the parameter DomainId is passed, the parameter Domain will be ignored. You can find all Domains and DomainIds through the DescribeDomainList interface.
    :param str result_output_file: Used to save results.
    """
    ...

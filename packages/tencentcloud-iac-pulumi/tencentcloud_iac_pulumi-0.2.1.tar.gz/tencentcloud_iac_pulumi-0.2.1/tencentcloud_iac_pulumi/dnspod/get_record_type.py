# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'GetRecordTypeResult',
    'AwaitableGetRecordTypeResult',
    'get_record_type',
    'get_record_type_output',
]

@pulumi.output_type
class GetRecordTypeResult:
    """
    A collection of values returned by getRecordType.
    """
    def __init__(__self__, domain_grade=None, id=None, result_output_file=None, type_lists=None):
        if domain_grade and not isinstance(domain_grade, str):
            raise TypeError("Expected argument 'domain_grade' to be a str")
        pulumi.set(__self__, "domain_grade", domain_grade)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)
        if type_lists and not isinstance(type_lists, list):
            raise TypeError("Expected argument 'type_lists' to be a list")
        pulumi.set(__self__, "type_lists", type_lists)

    @property
    @pulumi.getter(name="domainGrade")
    def domain_grade(self) -> str:
        return pulumi.get(self, "domain_grade")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")

    @property
    @pulumi.getter(name="typeLists")
    def type_lists(self) -> Sequence[str]:
        """
        Record type list.
        """
        return pulumi.get(self, "type_lists")


class AwaitableGetRecordTypeResult(GetRecordTypeResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetRecordTypeResult(
            domain_grade=self.domain_grade,
            id=self.id,
            result_output_file=self.result_output_file,
            type_lists=self.type_lists)


def get_record_type(domain_grade: Optional[str] = None,
                    result_output_file: Optional[str] = None,
                    opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetRecordTypeResult:
    """
    Use this data source to query detailed information of dnspod record_type

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    record_type = tencentcloud.Dnspod.get_record_type(domain_grade="DP_FREE")
    ```
    <!--End PulumiCodeChooser -->


    :param str domain_grade: Domain level. + Old packages: D_FREE, D_PLUS, D_EXTRA, D_EXPERT, D_ULTRA correspond to free package, personal luxury, enterprise 1, enterprise 2, enterprise 3. + New packages: DP_FREE, DP_PLUS, DP_EXTRA, DP_EXPERT, DP_ULTRA correspond to new free, personal professional, enterprise basic, enterprise standard, enterprise flagship.
    :param str result_output_file: Used to save results.
    """
    __args__ = dict()
    __args__['domainGrade'] = domain_grade
    __args__['resultOutputFile'] = result_output_file
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('tencentcloud:Dnspod/getRecordType:getRecordType', __args__, opts=opts, typ=GetRecordTypeResult).value

    return AwaitableGetRecordTypeResult(
        domain_grade=pulumi.get(__ret__, 'domain_grade'),
        id=pulumi.get(__ret__, 'id'),
        result_output_file=pulumi.get(__ret__, 'result_output_file'),
        type_lists=pulumi.get(__ret__, 'type_lists'))


@_utilities.lift_output_func(get_record_type)
def get_record_type_output(domain_grade: Optional[pulumi.Input[str]] = None,
                           result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                           opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetRecordTypeResult]:
    """
    Use this data source to query detailed information of dnspod record_type

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    record_type = tencentcloud.Dnspod.get_record_type(domain_grade="DP_FREE")
    ```
    <!--End PulumiCodeChooser -->


    :param str domain_grade: Domain level. + Old packages: D_FREE, D_PLUS, D_EXTRA, D_EXPERT, D_ULTRA correspond to free package, personal luxury, enterprise 1, enterprise 2, enterprise 3. + New packages: DP_FREE, DP_PLUS, DP_EXTRA, DP_EXPERT, DP_ULTRA correspond to new free, personal professional, enterprise basic, enterprise standard, enterprise flagship.
    :param str result_output_file: Used to save results.
    """
    ...

# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['BaselineArgs', 'Baseline']

@pulumi.input_type
class BaselineArgs:
    def __init__(__self__, *,
                 baseline_name: pulumi.Input[str],
                 baseline_type: pulumi.Input[str],
                 create_name: pulumi.Input[str],
                 create_uin: pulumi.Input[str],
                 in_charge_name: pulumi.Input[str],
                 in_charge_uin: pulumi.Input[str],
                 is_new_alarm: pulumi.Input[bool],
                 project_id: pulumi.Input[str],
                 promise_tasks: pulumi.Input[Sequence[pulumi.Input['BaselinePromiseTaskArgs']]],
                 promise_time: pulumi.Input[str],
                 warning_margin: pulumi.Input[int],
                 alarm_rule_dto: Optional[pulumi.Input['BaselineAlarmRuleDtoArgs']] = None,
                 baseline_create_alarm_rule_request: Optional[pulumi.Input['BaselineBaselineCreateAlarmRuleRequestArgs']] = None):
        """
        The set of arguments for constructing a Baseline resource.
        :param pulumi.Input[str] baseline_name: Baseline Name.
        :param pulumi.Input[str] baseline_type: D or H; representing daily baseline and hourly baseline respectively.
        :param pulumi.Input[str] create_name: Creator Name.
        :param pulumi.Input[str] create_uin: Creator ID.
        :param pulumi.Input[str] in_charge_name: Baseline Owner Name.
        :param pulumi.Input[str] in_charge_uin: Baseline Owner ID.
        :param pulumi.Input[bool] is_new_alarm: Is it a newly created alarm rule.
        :param pulumi.Input[str] project_id: Project ID.
        :param pulumi.Input[Sequence[pulumi.Input['BaselinePromiseTaskArgs']]] promise_tasks: Promise Tasks.
        :param pulumi.Input[str] promise_time: Service Assurance Time.
        :param pulumi.Input[int] warning_margin: Warning Margin in minutes.
        :param pulumi.Input['BaselineAlarmRuleDtoArgs'] alarm_rule_dto: Existing Alarm Rule Information.
        :param pulumi.Input['BaselineBaselineCreateAlarmRuleRequestArgs'] baseline_create_alarm_rule_request: Description of the New Alarm Rule.
        """
        pulumi.set(__self__, "baseline_name", baseline_name)
        pulumi.set(__self__, "baseline_type", baseline_type)
        pulumi.set(__self__, "create_name", create_name)
        pulumi.set(__self__, "create_uin", create_uin)
        pulumi.set(__self__, "in_charge_name", in_charge_name)
        pulumi.set(__self__, "in_charge_uin", in_charge_uin)
        pulumi.set(__self__, "is_new_alarm", is_new_alarm)
        pulumi.set(__self__, "project_id", project_id)
        pulumi.set(__self__, "promise_tasks", promise_tasks)
        pulumi.set(__self__, "promise_time", promise_time)
        pulumi.set(__self__, "warning_margin", warning_margin)
        if alarm_rule_dto is not None:
            pulumi.set(__self__, "alarm_rule_dto", alarm_rule_dto)
        if baseline_create_alarm_rule_request is not None:
            pulumi.set(__self__, "baseline_create_alarm_rule_request", baseline_create_alarm_rule_request)

    @property
    @pulumi.getter(name="baselineName")
    def baseline_name(self) -> pulumi.Input[str]:
        """
        Baseline Name.
        """
        return pulumi.get(self, "baseline_name")

    @baseline_name.setter
    def baseline_name(self, value: pulumi.Input[str]):
        pulumi.set(self, "baseline_name", value)

    @property
    @pulumi.getter(name="baselineType")
    def baseline_type(self) -> pulumi.Input[str]:
        """
        D or H; representing daily baseline and hourly baseline respectively.
        """
        return pulumi.get(self, "baseline_type")

    @baseline_type.setter
    def baseline_type(self, value: pulumi.Input[str]):
        pulumi.set(self, "baseline_type", value)

    @property
    @pulumi.getter(name="createName")
    def create_name(self) -> pulumi.Input[str]:
        """
        Creator Name.
        """
        return pulumi.get(self, "create_name")

    @create_name.setter
    def create_name(self, value: pulumi.Input[str]):
        pulumi.set(self, "create_name", value)

    @property
    @pulumi.getter(name="createUin")
    def create_uin(self) -> pulumi.Input[str]:
        """
        Creator ID.
        """
        return pulumi.get(self, "create_uin")

    @create_uin.setter
    def create_uin(self, value: pulumi.Input[str]):
        pulumi.set(self, "create_uin", value)

    @property
    @pulumi.getter(name="inChargeName")
    def in_charge_name(self) -> pulumi.Input[str]:
        """
        Baseline Owner Name.
        """
        return pulumi.get(self, "in_charge_name")

    @in_charge_name.setter
    def in_charge_name(self, value: pulumi.Input[str]):
        pulumi.set(self, "in_charge_name", value)

    @property
    @pulumi.getter(name="inChargeUin")
    def in_charge_uin(self) -> pulumi.Input[str]:
        """
        Baseline Owner ID.
        """
        return pulumi.get(self, "in_charge_uin")

    @in_charge_uin.setter
    def in_charge_uin(self, value: pulumi.Input[str]):
        pulumi.set(self, "in_charge_uin", value)

    @property
    @pulumi.getter(name="isNewAlarm")
    def is_new_alarm(self) -> pulumi.Input[bool]:
        """
        Is it a newly created alarm rule.
        """
        return pulumi.get(self, "is_new_alarm")

    @is_new_alarm.setter
    def is_new_alarm(self, value: pulumi.Input[bool]):
        pulumi.set(self, "is_new_alarm", value)

    @property
    @pulumi.getter(name="projectId")
    def project_id(self) -> pulumi.Input[str]:
        """
        Project ID.
        """
        return pulumi.get(self, "project_id")

    @project_id.setter
    def project_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "project_id", value)

    @property
    @pulumi.getter(name="promiseTasks")
    def promise_tasks(self) -> pulumi.Input[Sequence[pulumi.Input['BaselinePromiseTaskArgs']]]:
        """
        Promise Tasks.
        """
        return pulumi.get(self, "promise_tasks")

    @promise_tasks.setter
    def promise_tasks(self, value: pulumi.Input[Sequence[pulumi.Input['BaselinePromiseTaskArgs']]]):
        pulumi.set(self, "promise_tasks", value)

    @property
    @pulumi.getter(name="promiseTime")
    def promise_time(self) -> pulumi.Input[str]:
        """
        Service Assurance Time.
        """
        return pulumi.get(self, "promise_time")

    @promise_time.setter
    def promise_time(self, value: pulumi.Input[str]):
        pulumi.set(self, "promise_time", value)

    @property
    @pulumi.getter(name="warningMargin")
    def warning_margin(self) -> pulumi.Input[int]:
        """
        Warning Margin in minutes.
        """
        return pulumi.get(self, "warning_margin")

    @warning_margin.setter
    def warning_margin(self, value: pulumi.Input[int]):
        pulumi.set(self, "warning_margin", value)

    @property
    @pulumi.getter(name="alarmRuleDto")
    def alarm_rule_dto(self) -> Optional[pulumi.Input['BaselineAlarmRuleDtoArgs']]:
        """
        Existing Alarm Rule Information.
        """
        return pulumi.get(self, "alarm_rule_dto")

    @alarm_rule_dto.setter
    def alarm_rule_dto(self, value: Optional[pulumi.Input['BaselineAlarmRuleDtoArgs']]):
        pulumi.set(self, "alarm_rule_dto", value)

    @property
    @pulumi.getter(name="baselineCreateAlarmRuleRequest")
    def baseline_create_alarm_rule_request(self) -> Optional[pulumi.Input['BaselineBaselineCreateAlarmRuleRequestArgs']]:
        """
        Description of the New Alarm Rule.
        """
        return pulumi.get(self, "baseline_create_alarm_rule_request")

    @baseline_create_alarm_rule_request.setter
    def baseline_create_alarm_rule_request(self, value: Optional[pulumi.Input['BaselineBaselineCreateAlarmRuleRequestArgs']]):
        pulumi.set(self, "baseline_create_alarm_rule_request", value)


@pulumi.input_type
class _BaselineState:
    def __init__(__self__, *,
                 alarm_rule_dto: Optional[pulumi.Input['BaselineAlarmRuleDtoArgs']] = None,
                 baseline_create_alarm_rule_request: Optional[pulumi.Input['BaselineBaselineCreateAlarmRuleRequestArgs']] = None,
                 baseline_id: Optional[pulumi.Input[str]] = None,
                 baseline_name: Optional[pulumi.Input[str]] = None,
                 baseline_type: Optional[pulumi.Input[str]] = None,
                 create_name: Optional[pulumi.Input[str]] = None,
                 create_uin: Optional[pulumi.Input[str]] = None,
                 in_charge_name: Optional[pulumi.Input[str]] = None,
                 in_charge_uin: Optional[pulumi.Input[str]] = None,
                 is_new_alarm: Optional[pulumi.Input[bool]] = None,
                 project_id: Optional[pulumi.Input[str]] = None,
                 promise_tasks: Optional[pulumi.Input[Sequence[pulumi.Input['BaselinePromiseTaskArgs']]]] = None,
                 promise_time: Optional[pulumi.Input[str]] = None,
                 warning_margin: Optional[pulumi.Input[int]] = None):
        """
        Input properties used for looking up and filtering Baseline resources.
        :param pulumi.Input['BaselineAlarmRuleDtoArgs'] alarm_rule_dto: Existing Alarm Rule Information.
        :param pulumi.Input['BaselineBaselineCreateAlarmRuleRequestArgs'] baseline_create_alarm_rule_request: Description of the New Alarm Rule.
        :param pulumi.Input[str] baseline_id: Baseline ID.
        :param pulumi.Input[str] baseline_name: Baseline Name.
        :param pulumi.Input[str] baseline_type: D or H; representing daily baseline and hourly baseline respectively.
        :param pulumi.Input[str] create_name: Creator Name.
        :param pulumi.Input[str] create_uin: Creator ID.
        :param pulumi.Input[str] in_charge_name: Baseline Owner Name.
        :param pulumi.Input[str] in_charge_uin: Baseline Owner ID.
        :param pulumi.Input[bool] is_new_alarm: Is it a newly created alarm rule.
        :param pulumi.Input[str] project_id: Project ID.
        :param pulumi.Input[Sequence[pulumi.Input['BaselinePromiseTaskArgs']]] promise_tasks: Promise Tasks.
        :param pulumi.Input[str] promise_time: Service Assurance Time.
        :param pulumi.Input[int] warning_margin: Warning Margin in minutes.
        """
        if alarm_rule_dto is not None:
            pulumi.set(__self__, "alarm_rule_dto", alarm_rule_dto)
        if baseline_create_alarm_rule_request is not None:
            pulumi.set(__self__, "baseline_create_alarm_rule_request", baseline_create_alarm_rule_request)
        if baseline_id is not None:
            pulumi.set(__self__, "baseline_id", baseline_id)
        if baseline_name is not None:
            pulumi.set(__self__, "baseline_name", baseline_name)
        if baseline_type is not None:
            pulumi.set(__self__, "baseline_type", baseline_type)
        if create_name is not None:
            pulumi.set(__self__, "create_name", create_name)
        if create_uin is not None:
            pulumi.set(__self__, "create_uin", create_uin)
        if in_charge_name is not None:
            pulumi.set(__self__, "in_charge_name", in_charge_name)
        if in_charge_uin is not None:
            pulumi.set(__self__, "in_charge_uin", in_charge_uin)
        if is_new_alarm is not None:
            pulumi.set(__self__, "is_new_alarm", is_new_alarm)
        if project_id is not None:
            pulumi.set(__self__, "project_id", project_id)
        if promise_tasks is not None:
            pulumi.set(__self__, "promise_tasks", promise_tasks)
        if promise_time is not None:
            pulumi.set(__self__, "promise_time", promise_time)
        if warning_margin is not None:
            pulumi.set(__self__, "warning_margin", warning_margin)

    @property
    @pulumi.getter(name="alarmRuleDto")
    def alarm_rule_dto(self) -> Optional[pulumi.Input['BaselineAlarmRuleDtoArgs']]:
        """
        Existing Alarm Rule Information.
        """
        return pulumi.get(self, "alarm_rule_dto")

    @alarm_rule_dto.setter
    def alarm_rule_dto(self, value: Optional[pulumi.Input['BaselineAlarmRuleDtoArgs']]):
        pulumi.set(self, "alarm_rule_dto", value)

    @property
    @pulumi.getter(name="baselineCreateAlarmRuleRequest")
    def baseline_create_alarm_rule_request(self) -> Optional[pulumi.Input['BaselineBaselineCreateAlarmRuleRequestArgs']]:
        """
        Description of the New Alarm Rule.
        """
        return pulumi.get(self, "baseline_create_alarm_rule_request")

    @baseline_create_alarm_rule_request.setter
    def baseline_create_alarm_rule_request(self, value: Optional[pulumi.Input['BaselineBaselineCreateAlarmRuleRequestArgs']]):
        pulumi.set(self, "baseline_create_alarm_rule_request", value)

    @property
    @pulumi.getter(name="baselineId")
    def baseline_id(self) -> Optional[pulumi.Input[str]]:
        """
        Baseline ID.
        """
        return pulumi.get(self, "baseline_id")

    @baseline_id.setter
    def baseline_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "baseline_id", value)

    @property
    @pulumi.getter(name="baselineName")
    def baseline_name(self) -> Optional[pulumi.Input[str]]:
        """
        Baseline Name.
        """
        return pulumi.get(self, "baseline_name")

    @baseline_name.setter
    def baseline_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "baseline_name", value)

    @property
    @pulumi.getter(name="baselineType")
    def baseline_type(self) -> Optional[pulumi.Input[str]]:
        """
        D or H; representing daily baseline and hourly baseline respectively.
        """
        return pulumi.get(self, "baseline_type")

    @baseline_type.setter
    def baseline_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "baseline_type", value)

    @property
    @pulumi.getter(name="createName")
    def create_name(self) -> Optional[pulumi.Input[str]]:
        """
        Creator Name.
        """
        return pulumi.get(self, "create_name")

    @create_name.setter
    def create_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "create_name", value)

    @property
    @pulumi.getter(name="createUin")
    def create_uin(self) -> Optional[pulumi.Input[str]]:
        """
        Creator ID.
        """
        return pulumi.get(self, "create_uin")

    @create_uin.setter
    def create_uin(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "create_uin", value)

    @property
    @pulumi.getter(name="inChargeName")
    def in_charge_name(self) -> Optional[pulumi.Input[str]]:
        """
        Baseline Owner Name.
        """
        return pulumi.get(self, "in_charge_name")

    @in_charge_name.setter
    def in_charge_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "in_charge_name", value)

    @property
    @pulumi.getter(name="inChargeUin")
    def in_charge_uin(self) -> Optional[pulumi.Input[str]]:
        """
        Baseline Owner ID.
        """
        return pulumi.get(self, "in_charge_uin")

    @in_charge_uin.setter
    def in_charge_uin(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "in_charge_uin", value)

    @property
    @pulumi.getter(name="isNewAlarm")
    def is_new_alarm(self) -> Optional[pulumi.Input[bool]]:
        """
        Is it a newly created alarm rule.
        """
        return pulumi.get(self, "is_new_alarm")

    @is_new_alarm.setter
    def is_new_alarm(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "is_new_alarm", value)

    @property
    @pulumi.getter(name="projectId")
    def project_id(self) -> Optional[pulumi.Input[str]]:
        """
        Project ID.
        """
        return pulumi.get(self, "project_id")

    @project_id.setter
    def project_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "project_id", value)

    @property
    @pulumi.getter(name="promiseTasks")
    def promise_tasks(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['BaselinePromiseTaskArgs']]]]:
        """
        Promise Tasks.
        """
        return pulumi.get(self, "promise_tasks")

    @promise_tasks.setter
    def promise_tasks(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['BaselinePromiseTaskArgs']]]]):
        pulumi.set(self, "promise_tasks", value)

    @property
    @pulumi.getter(name="promiseTime")
    def promise_time(self) -> Optional[pulumi.Input[str]]:
        """
        Service Assurance Time.
        """
        return pulumi.get(self, "promise_time")

    @promise_time.setter
    def promise_time(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "promise_time", value)

    @property
    @pulumi.getter(name="warningMargin")
    def warning_margin(self) -> Optional[pulumi.Input[int]]:
        """
        Warning Margin in minutes.
        """
        return pulumi.get(self, "warning_margin")

    @warning_margin.setter
    def warning_margin(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "warning_margin", value)


class Baseline(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 alarm_rule_dto: Optional[pulumi.Input[pulumi.InputType['BaselineAlarmRuleDtoArgs']]] = None,
                 baseline_create_alarm_rule_request: Optional[pulumi.Input[pulumi.InputType['BaselineBaselineCreateAlarmRuleRequestArgs']]] = None,
                 baseline_name: Optional[pulumi.Input[str]] = None,
                 baseline_type: Optional[pulumi.Input[str]] = None,
                 create_name: Optional[pulumi.Input[str]] = None,
                 create_uin: Optional[pulumi.Input[str]] = None,
                 in_charge_name: Optional[pulumi.Input[str]] = None,
                 in_charge_uin: Optional[pulumi.Input[str]] = None,
                 is_new_alarm: Optional[pulumi.Input[bool]] = None,
                 project_id: Optional[pulumi.Input[str]] = None,
                 promise_tasks: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['BaselinePromiseTaskArgs']]]]] = None,
                 promise_time: Optional[pulumi.Input[str]] = None,
                 warning_margin: Optional[pulumi.Input[int]] = None,
                 __props__=None):
        """
        Provides a resource to create a wedata baseline

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        example = tencentcloud.wedata.Baseline("example",
            baseline_create_alarm_rule_request=tencentcloud.wedata.BaselineBaselineCreateAlarmRuleRequestArgs(
                alarm_level=2,
                alarm_recipient_ids=["100028439226"],
                alarm_recipient_type=1,
                alarm_recipients=["tf_user"],
                alarm_types=[
                    "baseLineBroken",
                    "baseLineWarning",
                    "baseLineTaskFailure",
                ],
                alarm_ways=[
                    "email",
                    "sms",
                ],
            ),
            baseline_name="tf_example",
            baseline_type="D",
            create_name="tf_user",
            create_uin="100028439226",
            in_charge_name="100028439226",
            in_charge_uin="tf_user",
            is_new_alarm=True,
            project_id="1927766435649077248",
            promise_tasks=[tencentcloud.wedata.BaselinePromiseTaskArgs(
                project_id="1927766435649077248",
                task_cycle="D",
                task_id="20231030145334153",
                task_in_charge_name=";tf_user;",
                task_name="tf_demo_task",
                workflow_id="e4dafb2e-76eb-11ee-bfeb-b8cef68a6637",
                workflow_name="dataflow_mpp",
            )],
            promise_time="00:00:00",
            warning_margin=30)
        ```
        <!--End PulumiCodeChooser -->

        ## Import

        wedata baseline can be imported using the id, e.g.

        ```sh
        $ pulumi import tencentcloud:Wedata/baseline:Baseline example 1927766435649077248#2
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[pulumi.InputType['BaselineAlarmRuleDtoArgs']] alarm_rule_dto: Existing Alarm Rule Information.
        :param pulumi.Input[pulumi.InputType['BaselineBaselineCreateAlarmRuleRequestArgs']] baseline_create_alarm_rule_request: Description of the New Alarm Rule.
        :param pulumi.Input[str] baseline_name: Baseline Name.
        :param pulumi.Input[str] baseline_type: D or H; representing daily baseline and hourly baseline respectively.
        :param pulumi.Input[str] create_name: Creator Name.
        :param pulumi.Input[str] create_uin: Creator ID.
        :param pulumi.Input[str] in_charge_name: Baseline Owner Name.
        :param pulumi.Input[str] in_charge_uin: Baseline Owner ID.
        :param pulumi.Input[bool] is_new_alarm: Is it a newly created alarm rule.
        :param pulumi.Input[str] project_id: Project ID.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['BaselinePromiseTaskArgs']]]] promise_tasks: Promise Tasks.
        :param pulumi.Input[str] promise_time: Service Assurance Time.
        :param pulumi.Input[int] warning_margin: Warning Margin in minutes.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: BaselineArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Provides a resource to create a wedata baseline

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        example = tencentcloud.wedata.Baseline("example",
            baseline_create_alarm_rule_request=tencentcloud.wedata.BaselineBaselineCreateAlarmRuleRequestArgs(
                alarm_level=2,
                alarm_recipient_ids=["100028439226"],
                alarm_recipient_type=1,
                alarm_recipients=["tf_user"],
                alarm_types=[
                    "baseLineBroken",
                    "baseLineWarning",
                    "baseLineTaskFailure",
                ],
                alarm_ways=[
                    "email",
                    "sms",
                ],
            ),
            baseline_name="tf_example",
            baseline_type="D",
            create_name="tf_user",
            create_uin="100028439226",
            in_charge_name="100028439226",
            in_charge_uin="tf_user",
            is_new_alarm=True,
            project_id="1927766435649077248",
            promise_tasks=[tencentcloud.wedata.BaselinePromiseTaskArgs(
                project_id="1927766435649077248",
                task_cycle="D",
                task_id="20231030145334153",
                task_in_charge_name=";tf_user;",
                task_name="tf_demo_task",
                workflow_id="e4dafb2e-76eb-11ee-bfeb-b8cef68a6637",
                workflow_name="dataflow_mpp",
            )],
            promise_time="00:00:00",
            warning_margin=30)
        ```
        <!--End PulumiCodeChooser -->

        ## Import

        wedata baseline can be imported using the id, e.g.

        ```sh
        $ pulumi import tencentcloud:Wedata/baseline:Baseline example 1927766435649077248#2
        ```

        :param str resource_name: The name of the resource.
        :param BaselineArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(BaselineArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 alarm_rule_dto: Optional[pulumi.Input[pulumi.InputType['BaselineAlarmRuleDtoArgs']]] = None,
                 baseline_create_alarm_rule_request: Optional[pulumi.Input[pulumi.InputType['BaselineBaselineCreateAlarmRuleRequestArgs']]] = None,
                 baseline_name: Optional[pulumi.Input[str]] = None,
                 baseline_type: Optional[pulumi.Input[str]] = None,
                 create_name: Optional[pulumi.Input[str]] = None,
                 create_uin: Optional[pulumi.Input[str]] = None,
                 in_charge_name: Optional[pulumi.Input[str]] = None,
                 in_charge_uin: Optional[pulumi.Input[str]] = None,
                 is_new_alarm: Optional[pulumi.Input[bool]] = None,
                 project_id: Optional[pulumi.Input[str]] = None,
                 promise_tasks: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['BaselinePromiseTaskArgs']]]]] = None,
                 promise_time: Optional[pulumi.Input[str]] = None,
                 warning_margin: Optional[pulumi.Input[int]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = BaselineArgs.__new__(BaselineArgs)

            __props__.__dict__["alarm_rule_dto"] = alarm_rule_dto
            __props__.__dict__["baseline_create_alarm_rule_request"] = baseline_create_alarm_rule_request
            if baseline_name is None and not opts.urn:
                raise TypeError("Missing required property 'baseline_name'")
            __props__.__dict__["baseline_name"] = baseline_name
            if baseline_type is None and not opts.urn:
                raise TypeError("Missing required property 'baseline_type'")
            __props__.__dict__["baseline_type"] = baseline_type
            if create_name is None and not opts.urn:
                raise TypeError("Missing required property 'create_name'")
            __props__.__dict__["create_name"] = create_name
            if create_uin is None and not opts.urn:
                raise TypeError("Missing required property 'create_uin'")
            __props__.__dict__["create_uin"] = create_uin
            if in_charge_name is None and not opts.urn:
                raise TypeError("Missing required property 'in_charge_name'")
            __props__.__dict__["in_charge_name"] = in_charge_name
            if in_charge_uin is None and not opts.urn:
                raise TypeError("Missing required property 'in_charge_uin'")
            __props__.__dict__["in_charge_uin"] = in_charge_uin
            if is_new_alarm is None and not opts.urn:
                raise TypeError("Missing required property 'is_new_alarm'")
            __props__.__dict__["is_new_alarm"] = is_new_alarm
            if project_id is None and not opts.urn:
                raise TypeError("Missing required property 'project_id'")
            __props__.__dict__["project_id"] = project_id
            if promise_tasks is None and not opts.urn:
                raise TypeError("Missing required property 'promise_tasks'")
            __props__.__dict__["promise_tasks"] = promise_tasks
            if promise_time is None and not opts.urn:
                raise TypeError("Missing required property 'promise_time'")
            __props__.__dict__["promise_time"] = promise_time
            if warning_margin is None and not opts.urn:
                raise TypeError("Missing required property 'warning_margin'")
            __props__.__dict__["warning_margin"] = warning_margin
            __props__.__dict__["baseline_id"] = None
        super(Baseline, __self__).__init__(
            'tencentcloud:Wedata/baseline:Baseline',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            alarm_rule_dto: Optional[pulumi.Input[pulumi.InputType['BaselineAlarmRuleDtoArgs']]] = None,
            baseline_create_alarm_rule_request: Optional[pulumi.Input[pulumi.InputType['BaselineBaselineCreateAlarmRuleRequestArgs']]] = None,
            baseline_id: Optional[pulumi.Input[str]] = None,
            baseline_name: Optional[pulumi.Input[str]] = None,
            baseline_type: Optional[pulumi.Input[str]] = None,
            create_name: Optional[pulumi.Input[str]] = None,
            create_uin: Optional[pulumi.Input[str]] = None,
            in_charge_name: Optional[pulumi.Input[str]] = None,
            in_charge_uin: Optional[pulumi.Input[str]] = None,
            is_new_alarm: Optional[pulumi.Input[bool]] = None,
            project_id: Optional[pulumi.Input[str]] = None,
            promise_tasks: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['BaselinePromiseTaskArgs']]]]] = None,
            promise_time: Optional[pulumi.Input[str]] = None,
            warning_margin: Optional[pulumi.Input[int]] = None) -> 'Baseline':
        """
        Get an existing Baseline resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[pulumi.InputType['BaselineAlarmRuleDtoArgs']] alarm_rule_dto: Existing Alarm Rule Information.
        :param pulumi.Input[pulumi.InputType['BaselineBaselineCreateAlarmRuleRequestArgs']] baseline_create_alarm_rule_request: Description of the New Alarm Rule.
        :param pulumi.Input[str] baseline_id: Baseline ID.
        :param pulumi.Input[str] baseline_name: Baseline Name.
        :param pulumi.Input[str] baseline_type: D or H; representing daily baseline and hourly baseline respectively.
        :param pulumi.Input[str] create_name: Creator Name.
        :param pulumi.Input[str] create_uin: Creator ID.
        :param pulumi.Input[str] in_charge_name: Baseline Owner Name.
        :param pulumi.Input[str] in_charge_uin: Baseline Owner ID.
        :param pulumi.Input[bool] is_new_alarm: Is it a newly created alarm rule.
        :param pulumi.Input[str] project_id: Project ID.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['BaselinePromiseTaskArgs']]]] promise_tasks: Promise Tasks.
        :param pulumi.Input[str] promise_time: Service Assurance Time.
        :param pulumi.Input[int] warning_margin: Warning Margin in minutes.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _BaselineState.__new__(_BaselineState)

        __props__.__dict__["alarm_rule_dto"] = alarm_rule_dto
        __props__.__dict__["baseline_create_alarm_rule_request"] = baseline_create_alarm_rule_request
        __props__.__dict__["baseline_id"] = baseline_id
        __props__.__dict__["baseline_name"] = baseline_name
        __props__.__dict__["baseline_type"] = baseline_type
        __props__.__dict__["create_name"] = create_name
        __props__.__dict__["create_uin"] = create_uin
        __props__.__dict__["in_charge_name"] = in_charge_name
        __props__.__dict__["in_charge_uin"] = in_charge_uin
        __props__.__dict__["is_new_alarm"] = is_new_alarm
        __props__.__dict__["project_id"] = project_id
        __props__.__dict__["promise_tasks"] = promise_tasks
        __props__.__dict__["promise_time"] = promise_time
        __props__.__dict__["warning_margin"] = warning_margin
        return Baseline(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="alarmRuleDto")
    def alarm_rule_dto(self) -> pulumi.Output['outputs.BaselineAlarmRuleDto']:
        """
        Existing Alarm Rule Information.
        """
        return pulumi.get(self, "alarm_rule_dto")

    @property
    @pulumi.getter(name="baselineCreateAlarmRuleRequest")
    def baseline_create_alarm_rule_request(self) -> pulumi.Output[Optional['outputs.BaselineBaselineCreateAlarmRuleRequest']]:
        """
        Description of the New Alarm Rule.
        """
        return pulumi.get(self, "baseline_create_alarm_rule_request")

    @property
    @pulumi.getter(name="baselineId")
    def baseline_id(self) -> pulumi.Output[str]:
        """
        Baseline ID.
        """
        return pulumi.get(self, "baseline_id")

    @property
    @pulumi.getter(name="baselineName")
    def baseline_name(self) -> pulumi.Output[str]:
        """
        Baseline Name.
        """
        return pulumi.get(self, "baseline_name")

    @property
    @pulumi.getter(name="baselineType")
    def baseline_type(self) -> pulumi.Output[str]:
        """
        D or H; representing daily baseline and hourly baseline respectively.
        """
        return pulumi.get(self, "baseline_type")

    @property
    @pulumi.getter(name="createName")
    def create_name(self) -> pulumi.Output[str]:
        """
        Creator Name.
        """
        return pulumi.get(self, "create_name")

    @property
    @pulumi.getter(name="createUin")
    def create_uin(self) -> pulumi.Output[str]:
        """
        Creator ID.
        """
        return pulumi.get(self, "create_uin")

    @property
    @pulumi.getter(name="inChargeName")
    def in_charge_name(self) -> pulumi.Output[str]:
        """
        Baseline Owner Name.
        """
        return pulumi.get(self, "in_charge_name")

    @property
    @pulumi.getter(name="inChargeUin")
    def in_charge_uin(self) -> pulumi.Output[str]:
        """
        Baseline Owner ID.
        """
        return pulumi.get(self, "in_charge_uin")

    @property
    @pulumi.getter(name="isNewAlarm")
    def is_new_alarm(self) -> pulumi.Output[bool]:
        """
        Is it a newly created alarm rule.
        """
        return pulumi.get(self, "is_new_alarm")

    @property
    @pulumi.getter(name="projectId")
    def project_id(self) -> pulumi.Output[str]:
        """
        Project ID.
        """
        return pulumi.get(self, "project_id")

    @property
    @pulumi.getter(name="promiseTasks")
    def promise_tasks(self) -> pulumi.Output[Sequence['outputs.BaselinePromiseTask']]:
        """
        Promise Tasks.
        """
        return pulumi.get(self, "promise_tasks")

    @property
    @pulumi.getter(name="promiseTime")
    def promise_time(self) -> pulumi.Output[str]:
        """
        Service Assurance Time.
        """
        return pulumi.get(self, "promise_time")

    @property
    @pulumi.getter(name="warningMargin")
    def warning_margin(self) -> pulumi.Output[int]:
        """
        Warning Margin in minutes.
        """
        return pulumi.get(self, "warning_margin")


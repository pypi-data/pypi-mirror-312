# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = [
    'GetDataSourceListResult',
    'AwaitableGetDataSourceListResult',
    'get_data_source_list',
    'get_data_source_list_output',
]

@pulumi.output_type
class GetDataSourceListResult:
    """
    A collection of values returned by getDataSourceList.
    """
    def __init__(__self__, filters=None, id=None, order_fields=None, result_output_file=None, rows=None):
        if filters and not isinstance(filters, list):
            raise TypeError("Expected argument 'filters' to be a list")
        pulumi.set(__self__, "filters", filters)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if order_fields and not isinstance(order_fields, list):
            raise TypeError("Expected argument 'order_fields' to be a list")
        pulumi.set(__self__, "order_fields", order_fields)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)
        if rows and not isinstance(rows, list):
            raise TypeError("Expected argument 'rows' to be a list")
        pulumi.set(__self__, "rows", rows)

    @property
    @pulumi.getter
    def filters(self) -> Optional[Sequence['outputs.GetDataSourceListFilterResult']]:
        return pulumi.get(self, "filters")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="orderFields")
    def order_fields(self) -> Optional[Sequence['outputs.GetDataSourceListOrderFieldResult']]:
        return pulumi.get(self, "order_fields")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")

    @property
    @pulumi.getter
    def rows(self) -> Sequence['outputs.GetDataSourceListRowResult']:
        """
        Data rows.
        """
        return pulumi.get(self, "rows")


class AwaitableGetDataSourceListResult(GetDataSourceListResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetDataSourceListResult(
            filters=self.filters,
            id=self.id,
            order_fields=self.order_fields,
            result_output_file=self.result_output_file,
            rows=self.rows)


def get_data_source_list(filters: Optional[Sequence[pulumi.InputType['GetDataSourceListFilterArgs']]] = None,
                         order_fields: Optional[Sequence[pulumi.InputType['GetDataSourceListOrderFieldArgs']]] = None,
                         result_output_file: Optional[str] = None,
                         opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetDataSourceListResult:
    """
    Use this data source to query detailed information of wedata data_source_list

    ## Example Usage

    ### Query All

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    example = tencentcloud.Wedata.get_data_source_list()
    ```
    <!--End PulumiCodeChooser -->

    ### Query By filter

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    example = tencentcloud.Wedata.get_data_source_list(filters=[tencentcloud.wedata.GetDataSourceListFilterArgs(
            name="Name",
            values=["tf_example"],
        )],
        order_fields=[tencentcloud.wedata.GetDataSourceListOrderFieldArgs(
            direction="DESC",
            name="create_time",
        )])
    ```
    <!--End PulumiCodeChooser -->


    :param Sequence[pulumi.InputType['GetDataSourceListFilterArgs']] filters: Filters.
    :param Sequence[pulumi.InputType['GetDataSourceListOrderFieldArgs']] order_fields: OrderFields.
    :param str result_output_file: Used to save results.
    """
    __args__ = dict()
    __args__['filters'] = filters
    __args__['orderFields'] = order_fields
    __args__['resultOutputFile'] = result_output_file
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('tencentcloud:Wedata/getDataSourceList:getDataSourceList', __args__, opts=opts, typ=GetDataSourceListResult).value

    return AwaitableGetDataSourceListResult(
        filters=pulumi.get(__ret__, 'filters'),
        id=pulumi.get(__ret__, 'id'),
        order_fields=pulumi.get(__ret__, 'order_fields'),
        result_output_file=pulumi.get(__ret__, 'result_output_file'),
        rows=pulumi.get(__ret__, 'rows'))


@_utilities.lift_output_func(get_data_source_list)
def get_data_source_list_output(filters: Optional[pulumi.Input[Optional[Sequence[pulumi.InputType['GetDataSourceListFilterArgs']]]]] = None,
                                order_fields: Optional[pulumi.Input[Optional[Sequence[pulumi.InputType['GetDataSourceListOrderFieldArgs']]]]] = None,
                                result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                                opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetDataSourceListResult]:
    """
    Use this data source to query detailed information of wedata data_source_list

    ## Example Usage

    ### Query All

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    example = tencentcloud.Wedata.get_data_source_list()
    ```
    <!--End PulumiCodeChooser -->

    ### Query By filter

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    example = tencentcloud.Wedata.get_data_source_list(filters=[tencentcloud.wedata.GetDataSourceListFilterArgs(
            name="Name",
            values=["tf_example"],
        )],
        order_fields=[tencentcloud.wedata.GetDataSourceListOrderFieldArgs(
            direction="DESC",
            name="create_time",
        )])
    ```
    <!--End PulumiCodeChooser -->


    :param Sequence[pulumi.InputType['GetDataSourceListFilterArgs']] filters: Filters.
    :param Sequence[pulumi.InputType['GetDataSourceListOrderFieldArgs']] order_fields: OrderFields.
    :param str result_output_file: Used to save results.
    """
    ...

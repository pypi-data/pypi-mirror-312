# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetAvailableClusterVersionsResult',
    'AwaitableGetAvailableClusterVersionsResult',
    'get_available_cluster_versions',
    'get_available_cluster_versions_output',
]

@pulumi.output_type
class GetAvailableClusterVersionsResult:
    """
    A collection of values returned by getAvailableClusterVersions.
    """
    def __init__(__self__, cluster_id=None, cluster_ids=None, clusters=None, id=None, result_output_file=None, versions=None):
        if cluster_id and not isinstance(cluster_id, str):
            raise TypeError("Expected argument 'cluster_id' to be a str")
        pulumi.set(__self__, "cluster_id", cluster_id)
        if cluster_ids and not isinstance(cluster_ids, list):
            raise TypeError("Expected argument 'cluster_ids' to be a list")
        pulumi.set(__self__, "cluster_ids", cluster_ids)
        if clusters and not isinstance(clusters, list):
            raise TypeError("Expected argument 'clusters' to be a list")
        pulumi.set(__self__, "clusters", clusters)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)
        if versions and not isinstance(versions, list):
            raise TypeError("Expected argument 'versions' to be a list")
        pulumi.set(__self__, "versions", versions)

    @property
    @pulumi.getter(name="clusterId")
    def cluster_id(self) -> Optional[str]:
        """
        Cluster ID.
        """
        return pulumi.get(self, "cluster_id")

    @property
    @pulumi.getter(name="clusterIds")
    def cluster_ids(self) -> Optional[Sequence[str]]:
        return pulumi.get(self, "cluster_ids")

    @property
    @pulumi.getter
    def clusters(self) -> Sequence['outputs.GetAvailableClusterVersionsClusterResult']:
        """
        cluster information. Note: This field may return null, indicating that no valid value can be obtained.
        """
        return pulumi.get(self, "clusters")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")

    @property
    @pulumi.getter
    def versions(self) -> Sequence[str]:
        """
        Upgradable cluster version number. Note: This field may return null, indicating that no valid value can be obtained.
        """
        return pulumi.get(self, "versions")


class AwaitableGetAvailableClusterVersionsResult(GetAvailableClusterVersionsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetAvailableClusterVersionsResult(
            cluster_id=self.cluster_id,
            cluster_ids=self.cluster_ids,
            clusters=self.clusters,
            id=self.id,
            result_output_file=self.result_output_file,
            versions=self.versions)


def get_available_cluster_versions(cluster_id: Optional[str] = None,
                                   cluster_ids: Optional[Sequence[str]] = None,
                                   result_output_file: Optional[str] = None,
                                   opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetAvailableClusterVersionsResult:
    """
    Use this data source to query detailed information of kubernetes available_cluster_versions

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    query_by_id = tencentcloud.Kubernetes.get_available_cluster_versions(cluster_id="xxx")
    pulumi.export("versionsId", query_by_id.versions)
    query_by_ids = tencentcloud.Kubernetes.get_available_cluster_versions(cluster_ids=["xxx"])
    pulumi.export("versionsIds", query_by_ids.clusters)
    ```
    <!--End PulumiCodeChooser -->


    :param str cluster_id: Cluster Id.
    :param Sequence[str] cluster_ids: list of cluster IDs.
    :param str result_output_file: Used to save results.
    """
    __args__ = dict()
    __args__['clusterId'] = cluster_id
    __args__['clusterIds'] = cluster_ids
    __args__['resultOutputFile'] = result_output_file
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('tencentcloud:Kubernetes/getAvailableClusterVersions:getAvailableClusterVersions', __args__, opts=opts, typ=GetAvailableClusterVersionsResult).value

    return AwaitableGetAvailableClusterVersionsResult(
        cluster_id=pulumi.get(__ret__, 'cluster_id'),
        cluster_ids=pulumi.get(__ret__, 'cluster_ids'),
        clusters=pulumi.get(__ret__, 'clusters'),
        id=pulumi.get(__ret__, 'id'),
        result_output_file=pulumi.get(__ret__, 'result_output_file'),
        versions=pulumi.get(__ret__, 'versions'))


@_utilities.lift_output_func(get_available_cluster_versions)
def get_available_cluster_versions_output(cluster_id: Optional[pulumi.Input[Optional[str]]] = None,
                                          cluster_ids: Optional[pulumi.Input[Optional[Sequence[str]]]] = None,
                                          result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                                          opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetAvailableClusterVersionsResult]:
    """
    Use this data source to query detailed information of kubernetes available_cluster_versions

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    query_by_id = tencentcloud.Kubernetes.get_available_cluster_versions(cluster_id="xxx")
    pulumi.export("versionsId", query_by_id.versions)
    query_by_ids = tencentcloud.Kubernetes.get_available_cluster_versions(cluster_ids=["xxx"])
    pulumi.export("versionsIds", query_by_ids.clusters)
    ```
    <!--End PulumiCodeChooser -->


    :param str cluster_id: Cluster Id.
    :param Sequence[str] cluster_ids: list of cluster IDs.
    :param str result_output_file: Used to save results.
    """
    ...

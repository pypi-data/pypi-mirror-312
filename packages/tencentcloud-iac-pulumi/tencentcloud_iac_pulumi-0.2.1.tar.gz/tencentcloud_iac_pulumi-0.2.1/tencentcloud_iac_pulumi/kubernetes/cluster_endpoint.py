# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = ['ClusterEndpointArgs', 'ClusterEndpoint']

@pulumi.input_type
class ClusterEndpointArgs:
    def __init__(__self__, *,
                 cluster_id: pulumi.Input[str],
                 cluster_internet: Optional[pulumi.Input[bool]] = None,
                 cluster_internet_domain: Optional[pulumi.Input[str]] = None,
                 cluster_internet_security_group: Optional[pulumi.Input[str]] = None,
                 cluster_intranet: Optional[pulumi.Input[bool]] = None,
                 cluster_intranet_domain: Optional[pulumi.Input[str]] = None,
                 cluster_intranet_subnet_id: Optional[pulumi.Input[str]] = None,
                 extensive_parameters: Optional[pulumi.Input[str]] = None,
                 managed_cluster_internet_security_policies: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None):
        """
        The set of arguments for constructing a ClusterEndpoint resource.
        :param pulumi.Input[str] cluster_id: Specify cluster ID.
        :param pulumi.Input[bool] cluster_internet: Open internet access or not.
        :param pulumi.Input[str] cluster_internet_domain: Domain name for cluster Kube-apiserver internet access.  Be careful if you modify value of this parameter, the cluster_external_endpoint value may be changed automatically too.
        :param pulumi.Input[str] cluster_internet_security_group: Specify security group, NOTE: This argument must not be empty if cluster internet enabled.
        :param pulumi.Input[bool] cluster_intranet: Open intranet access or not.
        :param pulumi.Input[str] cluster_intranet_domain: Domain name for cluster Kube-apiserver intranet access. Be careful if you modify value of this parameter, the pgw_endpoint value may be changed automatically too.
        :param pulumi.Input[str] cluster_intranet_subnet_id: Subnet id who can access this independent cluster, this field must and can only set  when `cluster_intranet` is true. `cluster_intranet_subnet_id` can not modify once be set.
        :param pulumi.Input[str] extensive_parameters: The LB parameter. Only used for public network access.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] managed_cluster_internet_security_policies: this argument was deprecated, use `cluster_internet_security_group` instead. Security policies for managed cluster internet, like:'192.168.1.0/24' or '113.116.51.27', '0.0.0.0/0' means all. This field can only set when field `cluster_deploy_type` is 'MANAGED_CLUSTER' and `cluster_internet` is true. `managed_cluster_internet_security_policies` can not delete or empty once be set.
        """
        pulumi.set(__self__, "cluster_id", cluster_id)
        if cluster_internet is not None:
            pulumi.set(__self__, "cluster_internet", cluster_internet)
        if cluster_internet_domain is not None:
            pulumi.set(__self__, "cluster_internet_domain", cluster_internet_domain)
        if cluster_internet_security_group is not None:
            pulumi.set(__self__, "cluster_internet_security_group", cluster_internet_security_group)
        if cluster_intranet is not None:
            pulumi.set(__self__, "cluster_intranet", cluster_intranet)
        if cluster_intranet_domain is not None:
            pulumi.set(__self__, "cluster_intranet_domain", cluster_intranet_domain)
        if cluster_intranet_subnet_id is not None:
            pulumi.set(__self__, "cluster_intranet_subnet_id", cluster_intranet_subnet_id)
        if extensive_parameters is not None:
            pulumi.set(__self__, "extensive_parameters", extensive_parameters)
        if managed_cluster_internet_security_policies is not None:
            warnings.warn("""this argument was deprecated, use `cluster_internet_security_group` instead.""", DeprecationWarning)
            pulumi.log.warn("""managed_cluster_internet_security_policies is deprecated: this argument was deprecated, use `cluster_internet_security_group` instead.""")
        if managed_cluster_internet_security_policies is not None:
            pulumi.set(__self__, "managed_cluster_internet_security_policies", managed_cluster_internet_security_policies)

    @property
    @pulumi.getter(name="clusterId")
    def cluster_id(self) -> pulumi.Input[str]:
        """
        Specify cluster ID.
        """
        return pulumi.get(self, "cluster_id")

    @cluster_id.setter
    def cluster_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "cluster_id", value)

    @property
    @pulumi.getter(name="clusterInternet")
    def cluster_internet(self) -> Optional[pulumi.Input[bool]]:
        """
        Open internet access or not.
        """
        return pulumi.get(self, "cluster_internet")

    @cluster_internet.setter
    def cluster_internet(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "cluster_internet", value)

    @property
    @pulumi.getter(name="clusterInternetDomain")
    def cluster_internet_domain(self) -> Optional[pulumi.Input[str]]:
        """
        Domain name for cluster Kube-apiserver internet access.  Be careful if you modify value of this parameter, the cluster_external_endpoint value may be changed automatically too.
        """
        return pulumi.get(self, "cluster_internet_domain")

    @cluster_internet_domain.setter
    def cluster_internet_domain(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "cluster_internet_domain", value)

    @property
    @pulumi.getter(name="clusterInternetSecurityGroup")
    def cluster_internet_security_group(self) -> Optional[pulumi.Input[str]]:
        """
        Specify security group, NOTE: This argument must not be empty if cluster internet enabled.
        """
        return pulumi.get(self, "cluster_internet_security_group")

    @cluster_internet_security_group.setter
    def cluster_internet_security_group(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "cluster_internet_security_group", value)

    @property
    @pulumi.getter(name="clusterIntranet")
    def cluster_intranet(self) -> Optional[pulumi.Input[bool]]:
        """
        Open intranet access or not.
        """
        return pulumi.get(self, "cluster_intranet")

    @cluster_intranet.setter
    def cluster_intranet(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "cluster_intranet", value)

    @property
    @pulumi.getter(name="clusterIntranetDomain")
    def cluster_intranet_domain(self) -> Optional[pulumi.Input[str]]:
        """
        Domain name for cluster Kube-apiserver intranet access. Be careful if you modify value of this parameter, the pgw_endpoint value may be changed automatically too.
        """
        return pulumi.get(self, "cluster_intranet_domain")

    @cluster_intranet_domain.setter
    def cluster_intranet_domain(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "cluster_intranet_domain", value)

    @property
    @pulumi.getter(name="clusterIntranetSubnetId")
    def cluster_intranet_subnet_id(self) -> Optional[pulumi.Input[str]]:
        """
        Subnet id who can access this independent cluster, this field must and can only set  when `cluster_intranet` is true. `cluster_intranet_subnet_id` can not modify once be set.
        """
        return pulumi.get(self, "cluster_intranet_subnet_id")

    @cluster_intranet_subnet_id.setter
    def cluster_intranet_subnet_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "cluster_intranet_subnet_id", value)

    @property
    @pulumi.getter(name="extensiveParameters")
    def extensive_parameters(self) -> Optional[pulumi.Input[str]]:
        """
        The LB parameter. Only used for public network access.
        """
        return pulumi.get(self, "extensive_parameters")

    @extensive_parameters.setter
    def extensive_parameters(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "extensive_parameters", value)

    @property
    @pulumi.getter(name="managedClusterInternetSecurityPolicies")
    def managed_cluster_internet_security_policies(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        this argument was deprecated, use `cluster_internet_security_group` instead. Security policies for managed cluster internet, like:'192.168.1.0/24' or '113.116.51.27', '0.0.0.0/0' means all. This field can only set when field `cluster_deploy_type` is 'MANAGED_CLUSTER' and `cluster_internet` is true. `managed_cluster_internet_security_policies` can not delete or empty once be set.
        """
        warnings.warn("""this argument was deprecated, use `cluster_internet_security_group` instead.""", DeprecationWarning)
        pulumi.log.warn("""managed_cluster_internet_security_policies is deprecated: this argument was deprecated, use `cluster_internet_security_group` instead.""")

        return pulumi.get(self, "managed_cluster_internet_security_policies")

    @managed_cluster_internet_security_policies.setter
    def managed_cluster_internet_security_policies(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "managed_cluster_internet_security_policies", value)


@pulumi.input_type
class _ClusterEndpointState:
    def __init__(__self__, *,
                 certification_authority: Optional[pulumi.Input[str]] = None,
                 cluster_deploy_type: Optional[pulumi.Input[str]] = None,
                 cluster_external_endpoint: Optional[pulumi.Input[str]] = None,
                 cluster_id: Optional[pulumi.Input[str]] = None,
                 cluster_internet: Optional[pulumi.Input[bool]] = None,
                 cluster_internet_domain: Optional[pulumi.Input[str]] = None,
                 cluster_internet_security_group: Optional[pulumi.Input[str]] = None,
                 cluster_intranet: Optional[pulumi.Input[bool]] = None,
                 cluster_intranet_domain: Optional[pulumi.Input[str]] = None,
                 cluster_intranet_subnet_id: Optional[pulumi.Input[str]] = None,
                 domain: Optional[pulumi.Input[str]] = None,
                 extensive_parameters: Optional[pulumi.Input[str]] = None,
                 managed_cluster_internet_security_policies: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 password: Optional[pulumi.Input[str]] = None,
                 pgw_endpoint: Optional[pulumi.Input[str]] = None,
                 user_name: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering ClusterEndpoint resources.
        :param pulumi.Input[str] certification_authority: The certificate used for access.
        :param pulumi.Input[str] cluster_deploy_type: Cluster deploy type of `MANAGED_CLUSTER` or `INDEPENDENT_CLUSTER`.
        :param pulumi.Input[str] cluster_external_endpoint: External network address to access.
        :param pulumi.Input[str] cluster_id: Specify cluster ID.
        :param pulumi.Input[bool] cluster_internet: Open internet access or not.
        :param pulumi.Input[str] cluster_internet_domain: Domain name for cluster Kube-apiserver internet access.  Be careful if you modify value of this parameter, the cluster_external_endpoint value may be changed automatically too.
        :param pulumi.Input[str] cluster_internet_security_group: Specify security group, NOTE: This argument must not be empty if cluster internet enabled.
        :param pulumi.Input[bool] cluster_intranet: Open intranet access or not.
        :param pulumi.Input[str] cluster_intranet_domain: Domain name for cluster Kube-apiserver intranet access. Be careful if you modify value of this parameter, the pgw_endpoint value may be changed automatically too.
        :param pulumi.Input[str] cluster_intranet_subnet_id: Subnet id who can access this independent cluster, this field must and can only set  when `cluster_intranet` is true. `cluster_intranet_subnet_id` can not modify once be set.
        :param pulumi.Input[str] domain: Domain name for access.
        :param pulumi.Input[str] extensive_parameters: The LB parameter. Only used for public network access.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] managed_cluster_internet_security_policies: this argument was deprecated, use `cluster_internet_security_group` instead. Security policies for managed cluster internet, like:'192.168.1.0/24' or '113.116.51.27', '0.0.0.0/0' means all. This field can only set when field `cluster_deploy_type` is 'MANAGED_CLUSTER' and `cluster_internet` is true. `managed_cluster_internet_security_policies` can not delete or empty once be set.
        :param pulumi.Input[str] password: Password of account.
        :param pulumi.Input[str] pgw_endpoint: The Intranet address used for access.
        :param pulumi.Input[str] user_name: User name of account.
        """
        if certification_authority is not None:
            pulumi.set(__self__, "certification_authority", certification_authority)
        if cluster_deploy_type is not None:
            pulumi.set(__self__, "cluster_deploy_type", cluster_deploy_type)
        if cluster_external_endpoint is not None:
            pulumi.set(__self__, "cluster_external_endpoint", cluster_external_endpoint)
        if cluster_id is not None:
            pulumi.set(__self__, "cluster_id", cluster_id)
        if cluster_internet is not None:
            pulumi.set(__self__, "cluster_internet", cluster_internet)
        if cluster_internet_domain is not None:
            pulumi.set(__self__, "cluster_internet_domain", cluster_internet_domain)
        if cluster_internet_security_group is not None:
            pulumi.set(__self__, "cluster_internet_security_group", cluster_internet_security_group)
        if cluster_intranet is not None:
            pulumi.set(__self__, "cluster_intranet", cluster_intranet)
        if cluster_intranet_domain is not None:
            pulumi.set(__self__, "cluster_intranet_domain", cluster_intranet_domain)
        if cluster_intranet_subnet_id is not None:
            pulumi.set(__self__, "cluster_intranet_subnet_id", cluster_intranet_subnet_id)
        if domain is not None:
            pulumi.set(__self__, "domain", domain)
        if extensive_parameters is not None:
            pulumi.set(__self__, "extensive_parameters", extensive_parameters)
        if managed_cluster_internet_security_policies is not None:
            warnings.warn("""this argument was deprecated, use `cluster_internet_security_group` instead.""", DeprecationWarning)
            pulumi.log.warn("""managed_cluster_internet_security_policies is deprecated: this argument was deprecated, use `cluster_internet_security_group` instead.""")
        if managed_cluster_internet_security_policies is not None:
            pulumi.set(__self__, "managed_cluster_internet_security_policies", managed_cluster_internet_security_policies)
        if password is not None:
            pulumi.set(__self__, "password", password)
        if pgw_endpoint is not None:
            pulumi.set(__self__, "pgw_endpoint", pgw_endpoint)
        if user_name is not None:
            pulumi.set(__self__, "user_name", user_name)

    @property
    @pulumi.getter(name="certificationAuthority")
    def certification_authority(self) -> Optional[pulumi.Input[str]]:
        """
        The certificate used for access.
        """
        return pulumi.get(self, "certification_authority")

    @certification_authority.setter
    def certification_authority(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "certification_authority", value)

    @property
    @pulumi.getter(name="clusterDeployType")
    def cluster_deploy_type(self) -> Optional[pulumi.Input[str]]:
        """
        Cluster deploy type of `MANAGED_CLUSTER` or `INDEPENDENT_CLUSTER`.
        """
        return pulumi.get(self, "cluster_deploy_type")

    @cluster_deploy_type.setter
    def cluster_deploy_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "cluster_deploy_type", value)

    @property
    @pulumi.getter(name="clusterExternalEndpoint")
    def cluster_external_endpoint(self) -> Optional[pulumi.Input[str]]:
        """
        External network address to access.
        """
        return pulumi.get(self, "cluster_external_endpoint")

    @cluster_external_endpoint.setter
    def cluster_external_endpoint(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "cluster_external_endpoint", value)

    @property
    @pulumi.getter(name="clusterId")
    def cluster_id(self) -> Optional[pulumi.Input[str]]:
        """
        Specify cluster ID.
        """
        return pulumi.get(self, "cluster_id")

    @cluster_id.setter
    def cluster_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "cluster_id", value)

    @property
    @pulumi.getter(name="clusterInternet")
    def cluster_internet(self) -> Optional[pulumi.Input[bool]]:
        """
        Open internet access or not.
        """
        return pulumi.get(self, "cluster_internet")

    @cluster_internet.setter
    def cluster_internet(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "cluster_internet", value)

    @property
    @pulumi.getter(name="clusterInternetDomain")
    def cluster_internet_domain(self) -> Optional[pulumi.Input[str]]:
        """
        Domain name for cluster Kube-apiserver internet access.  Be careful if you modify value of this parameter, the cluster_external_endpoint value may be changed automatically too.
        """
        return pulumi.get(self, "cluster_internet_domain")

    @cluster_internet_domain.setter
    def cluster_internet_domain(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "cluster_internet_domain", value)

    @property
    @pulumi.getter(name="clusterInternetSecurityGroup")
    def cluster_internet_security_group(self) -> Optional[pulumi.Input[str]]:
        """
        Specify security group, NOTE: This argument must not be empty if cluster internet enabled.
        """
        return pulumi.get(self, "cluster_internet_security_group")

    @cluster_internet_security_group.setter
    def cluster_internet_security_group(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "cluster_internet_security_group", value)

    @property
    @pulumi.getter(name="clusterIntranet")
    def cluster_intranet(self) -> Optional[pulumi.Input[bool]]:
        """
        Open intranet access or not.
        """
        return pulumi.get(self, "cluster_intranet")

    @cluster_intranet.setter
    def cluster_intranet(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "cluster_intranet", value)

    @property
    @pulumi.getter(name="clusterIntranetDomain")
    def cluster_intranet_domain(self) -> Optional[pulumi.Input[str]]:
        """
        Domain name for cluster Kube-apiserver intranet access. Be careful if you modify value of this parameter, the pgw_endpoint value may be changed automatically too.
        """
        return pulumi.get(self, "cluster_intranet_domain")

    @cluster_intranet_domain.setter
    def cluster_intranet_domain(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "cluster_intranet_domain", value)

    @property
    @pulumi.getter(name="clusterIntranetSubnetId")
    def cluster_intranet_subnet_id(self) -> Optional[pulumi.Input[str]]:
        """
        Subnet id who can access this independent cluster, this field must and can only set  when `cluster_intranet` is true. `cluster_intranet_subnet_id` can not modify once be set.
        """
        return pulumi.get(self, "cluster_intranet_subnet_id")

    @cluster_intranet_subnet_id.setter
    def cluster_intranet_subnet_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "cluster_intranet_subnet_id", value)

    @property
    @pulumi.getter
    def domain(self) -> Optional[pulumi.Input[str]]:
        """
        Domain name for access.
        """
        return pulumi.get(self, "domain")

    @domain.setter
    def domain(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "domain", value)

    @property
    @pulumi.getter(name="extensiveParameters")
    def extensive_parameters(self) -> Optional[pulumi.Input[str]]:
        """
        The LB parameter. Only used for public network access.
        """
        return pulumi.get(self, "extensive_parameters")

    @extensive_parameters.setter
    def extensive_parameters(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "extensive_parameters", value)

    @property
    @pulumi.getter(name="managedClusterInternetSecurityPolicies")
    def managed_cluster_internet_security_policies(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        this argument was deprecated, use `cluster_internet_security_group` instead. Security policies for managed cluster internet, like:'192.168.1.0/24' or '113.116.51.27', '0.0.0.0/0' means all. This field can only set when field `cluster_deploy_type` is 'MANAGED_CLUSTER' and `cluster_internet` is true. `managed_cluster_internet_security_policies` can not delete or empty once be set.
        """
        warnings.warn("""this argument was deprecated, use `cluster_internet_security_group` instead.""", DeprecationWarning)
        pulumi.log.warn("""managed_cluster_internet_security_policies is deprecated: this argument was deprecated, use `cluster_internet_security_group` instead.""")

        return pulumi.get(self, "managed_cluster_internet_security_policies")

    @managed_cluster_internet_security_policies.setter
    def managed_cluster_internet_security_policies(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "managed_cluster_internet_security_policies", value)

    @property
    @pulumi.getter
    def password(self) -> Optional[pulumi.Input[str]]:
        """
        Password of account.
        """
        return pulumi.get(self, "password")

    @password.setter
    def password(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "password", value)

    @property
    @pulumi.getter(name="pgwEndpoint")
    def pgw_endpoint(self) -> Optional[pulumi.Input[str]]:
        """
        The Intranet address used for access.
        """
        return pulumi.get(self, "pgw_endpoint")

    @pgw_endpoint.setter
    def pgw_endpoint(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "pgw_endpoint", value)

    @property
    @pulumi.getter(name="userName")
    def user_name(self) -> Optional[pulumi.Input[str]]:
        """
        User name of account.
        """
        return pulumi.get(self, "user_name")

    @user_name.setter
    def user_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "user_name", value)


class ClusterEndpoint(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 cluster_id: Optional[pulumi.Input[str]] = None,
                 cluster_internet: Optional[pulumi.Input[bool]] = None,
                 cluster_internet_domain: Optional[pulumi.Input[str]] = None,
                 cluster_internet_security_group: Optional[pulumi.Input[str]] = None,
                 cluster_intranet: Optional[pulumi.Input[bool]] = None,
                 cluster_intranet_domain: Optional[pulumi.Input[str]] = None,
                 cluster_intranet_subnet_id: Optional[pulumi.Input[str]] = None,
                 extensive_parameters: Optional[pulumi.Input[str]] = None,
                 managed_cluster_internet_security_policies: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 __props__=None):
        """
        Provide a resource to create a KubernetesClusterEndpoint. This resource allows you to create an empty cluster first without any workers. Only all attached node depends create complete, cluster endpoint will finally be enabled.

        > **NOTE:** Recommend using `depends_on` to make sure endpoint create after node pools or workers does.

        ## Import

        KubernetesClusterEndpoint instance can be imported by passing cluster id, e.g.

        ```sh
        $ pulumi import tencentcloud:Kubernetes/clusterEndpoint:ClusterEndpoint test cluster-id
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] cluster_id: Specify cluster ID.
        :param pulumi.Input[bool] cluster_internet: Open internet access or not.
        :param pulumi.Input[str] cluster_internet_domain: Domain name for cluster Kube-apiserver internet access.  Be careful if you modify value of this parameter, the cluster_external_endpoint value may be changed automatically too.
        :param pulumi.Input[str] cluster_internet_security_group: Specify security group, NOTE: This argument must not be empty if cluster internet enabled.
        :param pulumi.Input[bool] cluster_intranet: Open intranet access or not.
        :param pulumi.Input[str] cluster_intranet_domain: Domain name for cluster Kube-apiserver intranet access. Be careful if you modify value of this parameter, the pgw_endpoint value may be changed automatically too.
        :param pulumi.Input[str] cluster_intranet_subnet_id: Subnet id who can access this independent cluster, this field must and can only set  when `cluster_intranet` is true. `cluster_intranet_subnet_id` can not modify once be set.
        :param pulumi.Input[str] extensive_parameters: The LB parameter. Only used for public network access.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] managed_cluster_internet_security_policies: this argument was deprecated, use `cluster_internet_security_group` instead. Security policies for managed cluster internet, like:'192.168.1.0/24' or '113.116.51.27', '0.0.0.0/0' means all. This field can only set when field `cluster_deploy_type` is 'MANAGED_CLUSTER' and `cluster_internet` is true. `managed_cluster_internet_security_policies` can not delete or empty once be set.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: ClusterEndpointArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Provide a resource to create a KubernetesClusterEndpoint. This resource allows you to create an empty cluster first without any workers. Only all attached node depends create complete, cluster endpoint will finally be enabled.

        > **NOTE:** Recommend using `depends_on` to make sure endpoint create after node pools or workers does.

        ## Import

        KubernetesClusterEndpoint instance can be imported by passing cluster id, e.g.

        ```sh
        $ pulumi import tencentcloud:Kubernetes/clusterEndpoint:ClusterEndpoint test cluster-id
        ```

        :param str resource_name: The name of the resource.
        :param ClusterEndpointArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(ClusterEndpointArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 cluster_id: Optional[pulumi.Input[str]] = None,
                 cluster_internet: Optional[pulumi.Input[bool]] = None,
                 cluster_internet_domain: Optional[pulumi.Input[str]] = None,
                 cluster_internet_security_group: Optional[pulumi.Input[str]] = None,
                 cluster_intranet: Optional[pulumi.Input[bool]] = None,
                 cluster_intranet_domain: Optional[pulumi.Input[str]] = None,
                 cluster_intranet_subnet_id: Optional[pulumi.Input[str]] = None,
                 extensive_parameters: Optional[pulumi.Input[str]] = None,
                 managed_cluster_internet_security_policies: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = ClusterEndpointArgs.__new__(ClusterEndpointArgs)

            if cluster_id is None and not opts.urn:
                raise TypeError("Missing required property 'cluster_id'")
            __props__.__dict__["cluster_id"] = cluster_id
            __props__.__dict__["cluster_internet"] = cluster_internet
            __props__.__dict__["cluster_internet_domain"] = cluster_internet_domain
            __props__.__dict__["cluster_internet_security_group"] = cluster_internet_security_group
            __props__.__dict__["cluster_intranet"] = cluster_intranet
            __props__.__dict__["cluster_intranet_domain"] = cluster_intranet_domain
            __props__.__dict__["cluster_intranet_subnet_id"] = cluster_intranet_subnet_id
            __props__.__dict__["extensive_parameters"] = extensive_parameters
            __props__.__dict__["managed_cluster_internet_security_policies"] = managed_cluster_internet_security_policies
            __props__.__dict__["certification_authority"] = None
            __props__.__dict__["cluster_deploy_type"] = None
            __props__.__dict__["cluster_external_endpoint"] = None
            __props__.__dict__["domain"] = None
            __props__.__dict__["password"] = None
            __props__.__dict__["pgw_endpoint"] = None
            __props__.__dict__["user_name"] = None
        secret_opts = pulumi.ResourceOptions(additional_secret_outputs=["password"])
        opts = pulumi.ResourceOptions.merge(opts, secret_opts)
        super(ClusterEndpoint, __self__).__init__(
            'tencentcloud:Kubernetes/clusterEndpoint:ClusterEndpoint',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            certification_authority: Optional[pulumi.Input[str]] = None,
            cluster_deploy_type: Optional[pulumi.Input[str]] = None,
            cluster_external_endpoint: Optional[pulumi.Input[str]] = None,
            cluster_id: Optional[pulumi.Input[str]] = None,
            cluster_internet: Optional[pulumi.Input[bool]] = None,
            cluster_internet_domain: Optional[pulumi.Input[str]] = None,
            cluster_internet_security_group: Optional[pulumi.Input[str]] = None,
            cluster_intranet: Optional[pulumi.Input[bool]] = None,
            cluster_intranet_domain: Optional[pulumi.Input[str]] = None,
            cluster_intranet_subnet_id: Optional[pulumi.Input[str]] = None,
            domain: Optional[pulumi.Input[str]] = None,
            extensive_parameters: Optional[pulumi.Input[str]] = None,
            managed_cluster_internet_security_policies: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            password: Optional[pulumi.Input[str]] = None,
            pgw_endpoint: Optional[pulumi.Input[str]] = None,
            user_name: Optional[pulumi.Input[str]] = None) -> 'ClusterEndpoint':
        """
        Get an existing ClusterEndpoint resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] certification_authority: The certificate used for access.
        :param pulumi.Input[str] cluster_deploy_type: Cluster deploy type of `MANAGED_CLUSTER` or `INDEPENDENT_CLUSTER`.
        :param pulumi.Input[str] cluster_external_endpoint: External network address to access.
        :param pulumi.Input[str] cluster_id: Specify cluster ID.
        :param pulumi.Input[bool] cluster_internet: Open internet access or not.
        :param pulumi.Input[str] cluster_internet_domain: Domain name for cluster Kube-apiserver internet access.  Be careful if you modify value of this parameter, the cluster_external_endpoint value may be changed automatically too.
        :param pulumi.Input[str] cluster_internet_security_group: Specify security group, NOTE: This argument must not be empty if cluster internet enabled.
        :param pulumi.Input[bool] cluster_intranet: Open intranet access or not.
        :param pulumi.Input[str] cluster_intranet_domain: Domain name for cluster Kube-apiserver intranet access. Be careful if you modify value of this parameter, the pgw_endpoint value may be changed automatically too.
        :param pulumi.Input[str] cluster_intranet_subnet_id: Subnet id who can access this independent cluster, this field must and can only set  when `cluster_intranet` is true. `cluster_intranet_subnet_id` can not modify once be set.
        :param pulumi.Input[str] domain: Domain name for access.
        :param pulumi.Input[str] extensive_parameters: The LB parameter. Only used for public network access.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] managed_cluster_internet_security_policies: this argument was deprecated, use `cluster_internet_security_group` instead. Security policies for managed cluster internet, like:'192.168.1.0/24' or '113.116.51.27', '0.0.0.0/0' means all. This field can only set when field `cluster_deploy_type` is 'MANAGED_CLUSTER' and `cluster_internet` is true. `managed_cluster_internet_security_policies` can not delete or empty once be set.
        :param pulumi.Input[str] password: Password of account.
        :param pulumi.Input[str] pgw_endpoint: The Intranet address used for access.
        :param pulumi.Input[str] user_name: User name of account.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _ClusterEndpointState.__new__(_ClusterEndpointState)

        __props__.__dict__["certification_authority"] = certification_authority
        __props__.__dict__["cluster_deploy_type"] = cluster_deploy_type
        __props__.__dict__["cluster_external_endpoint"] = cluster_external_endpoint
        __props__.__dict__["cluster_id"] = cluster_id
        __props__.__dict__["cluster_internet"] = cluster_internet
        __props__.__dict__["cluster_internet_domain"] = cluster_internet_domain
        __props__.__dict__["cluster_internet_security_group"] = cluster_internet_security_group
        __props__.__dict__["cluster_intranet"] = cluster_intranet
        __props__.__dict__["cluster_intranet_domain"] = cluster_intranet_domain
        __props__.__dict__["cluster_intranet_subnet_id"] = cluster_intranet_subnet_id
        __props__.__dict__["domain"] = domain
        __props__.__dict__["extensive_parameters"] = extensive_parameters
        __props__.__dict__["managed_cluster_internet_security_policies"] = managed_cluster_internet_security_policies
        __props__.__dict__["password"] = password
        __props__.__dict__["pgw_endpoint"] = pgw_endpoint
        __props__.__dict__["user_name"] = user_name
        return ClusterEndpoint(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="certificationAuthority")
    def certification_authority(self) -> pulumi.Output[str]:
        """
        The certificate used for access.
        """
        return pulumi.get(self, "certification_authority")

    @property
    @pulumi.getter(name="clusterDeployType")
    def cluster_deploy_type(self) -> pulumi.Output[str]:
        """
        Cluster deploy type of `MANAGED_CLUSTER` or `INDEPENDENT_CLUSTER`.
        """
        return pulumi.get(self, "cluster_deploy_type")

    @property
    @pulumi.getter(name="clusterExternalEndpoint")
    def cluster_external_endpoint(self) -> pulumi.Output[str]:
        """
        External network address to access.
        """
        return pulumi.get(self, "cluster_external_endpoint")

    @property
    @pulumi.getter(name="clusterId")
    def cluster_id(self) -> pulumi.Output[str]:
        """
        Specify cluster ID.
        """
        return pulumi.get(self, "cluster_id")

    @property
    @pulumi.getter(name="clusterInternet")
    def cluster_internet(self) -> pulumi.Output[Optional[bool]]:
        """
        Open internet access or not.
        """
        return pulumi.get(self, "cluster_internet")

    @property
    @pulumi.getter(name="clusterInternetDomain")
    def cluster_internet_domain(self) -> pulumi.Output[Optional[str]]:
        """
        Domain name for cluster Kube-apiserver internet access.  Be careful if you modify value of this parameter, the cluster_external_endpoint value may be changed automatically too.
        """
        return pulumi.get(self, "cluster_internet_domain")

    @property
    @pulumi.getter(name="clusterInternetSecurityGroup")
    def cluster_internet_security_group(self) -> pulumi.Output[Optional[str]]:
        """
        Specify security group, NOTE: This argument must not be empty if cluster internet enabled.
        """
        return pulumi.get(self, "cluster_internet_security_group")

    @property
    @pulumi.getter(name="clusterIntranet")
    def cluster_intranet(self) -> pulumi.Output[Optional[bool]]:
        """
        Open intranet access or not.
        """
        return pulumi.get(self, "cluster_intranet")

    @property
    @pulumi.getter(name="clusterIntranetDomain")
    def cluster_intranet_domain(self) -> pulumi.Output[Optional[str]]:
        """
        Domain name for cluster Kube-apiserver intranet access. Be careful if you modify value of this parameter, the pgw_endpoint value may be changed automatically too.
        """
        return pulumi.get(self, "cluster_intranet_domain")

    @property
    @pulumi.getter(name="clusterIntranetSubnetId")
    def cluster_intranet_subnet_id(self) -> pulumi.Output[Optional[str]]:
        """
        Subnet id who can access this independent cluster, this field must and can only set  when `cluster_intranet` is true. `cluster_intranet_subnet_id` can not modify once be set.
        """
        return pulumi.get(self, "cluster_intranet_subnet_id")

    @property
    @pulumi.getter
    def domain(self) -> pulumi.Output[str]:
        """
        Domain name for access.
        """
        return pulumi.get(self, "domain")

    @property
    @pulumi.getter(name="extensiveParameters")
    def extensive_parameters(self) -> pulumi.Output[Optional[str]]:
        """
        The LB parameter. Only used for public network access.
        """
        return pulumi.get(self, "extensive_parameters")

    @property
    @pulumi.getter(name="managedClusterInternetSecurityPolicies")
    def managed_cluster_internet_security_policies(self) -> pulumi.Output[Optional[Sequence[str]]]:
        """
        this argument was deprecated, use `cluster_internet_security_group` instead. Security policies for managed cluster internet, like:'192.168.1.0/24' or '113.116.51.27', '0.0.0.0/0' means all. This field can only set when field `cluster_deploy_type` is 'MANAGED_CLUSTER' and `cluster_internet` is true. `managed_cluster_internet_security_policies` can not delete or empty once be set.
        """
        warnings.warn("""this argument was deprecated, use `cluster_internet_security_group` instead.""", DeprecationWarning)
        pulumi.log.warn("""managed_cluster_internet_security_policies is deprecated: this argument was deprecated, use `cluster_internet_security_group` instead.""")

        return pulumi.get(self, "managed_cluster_internet_security_policies")

    @property
    @pulumi.getter
    def password(self) -> pulumi.Output[str]:
        """
        Password of account.
        """
        return pulumi.get(self, "password")

    @property
    @pulumi.getter(name="pgwEndpoint")
    def pgw_endpoint(self) -> pulumi.Output[str]:
        """
        The Intranet address used for access.
        """
        return pulumi.get(self, "pgw_endpoint")

    @property
    @pulumi.getter(name="userName")
    def user_name(self) -> pulumi.Output[str]:
        """
        User name of account.
        """
        return pulumi.get(self, "user_name")


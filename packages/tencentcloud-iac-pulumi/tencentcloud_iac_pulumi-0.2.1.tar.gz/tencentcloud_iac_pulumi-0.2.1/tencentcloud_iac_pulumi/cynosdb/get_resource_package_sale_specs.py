# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetResourcePackageSaleSpecsResult',
    'AwaitableGetResourcePackageSaleSpecsResult',
    'get_resource_package_sale_specs',
    'get_resource_package_sale_specs_output',
]

@pulumi.output_type
class GetResourcePackageSaleSpecsResult:
    """
    A collection of values returned by getResourcePackageSaleSpecs.
    """
    def __init__(__self__, details=None, id=None, instance_type=None, package_region=None, package_type=None, result_output_file=None):
        if details and not isinstance(details, list):
            raise TypeError("Expected argument 'details' to be a list")
        pulumi.set(__self__, "details", details)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if instance_type and not isinstance(instance_type, str):
            raise TypeError("Expected argument 'instance_type' to be a str")
        pulumi.set(__self__, "instance_type", instance_type)
        if package_region and not isinstance(package_region, str):
            raise TypeError("Expected argument 'package_region' to be a str")
        pulumi.set(__self__, "package_region", package_region)
        if package_type and not isinstance(package_type, str):
            raise TypeError("Expected argument 'package_type' to be a str")
        pulumi.set(__self__, "package_type", package_type)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)

    @property
    @pulumi.getter
    def details(self) -> Sequence['outputs.GetResourcePackageSaleSpecsDetailResult']:
        """
        Resource package details note: This field may return null, indicating that a valid value cannot be obtained.
        """
        return pulumi.get(self, "details")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="instanceType")
    def instance_type(self) -> str:
        return pulumi.get(self, "instance_type")

    @property
    @pulumi.getter(name="packageRegion")
    def package_region(self) -> str:
        """
        Note: This field may return null, indicating that a valid value cannot be obtained.
        """
        return pulumi.get(self, "package_region")

    @property
    @pulumi.getter(name="packageType")
    def package_type(self) -> str:
        """
        Resource package type CCU - Compute resource package DISK - Store resource package Note: This field may return null, indicating that a valid value cannot be obtained.
        """
        return pulumi.get(self, "package_type")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")


class AwaitableGetResourcePackageSaleSpecsResult(GetResourcePackageSaleSpecsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetResourcePackageSaleSpecsResult(
            details=self.details,
            id=self.id,
            instance_type=self.instance_type,
            package_region=self.package_region,
            package_type=self.package_type,
            result_output_file=self.result_output_file)


def get_resource_package_sale_specs(instance_type: Optional[str] = None,
                                    package_region: Optional[str] = None,
                                    package_type: Optional[str] = None,
                                    result_output_file: Optional[str] = None,
                                    opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetResourcePackageSaleSpecsResult:
    """
    Use this data source to query detailed information of cynosdb resource_package_sale_specs

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    resource_package_sale_specs = tencentcloud.Cynosdb.get_resource_package_sale_specs(instance_type="cynosdb-serverless",
        package_region="china",
        package_type="CCU")
    ```
    <!--End PulumiCodeChooser -->


    :param str instance_type: Instance Type. Value range: cynosdb-serverless, cynosdb, cdb.
    :param str package_region: Resource package usage region China - common in mainland China, overseas - common in Hong Kong, Macao, Taiwan, and overseas.
    :param str package_type: Resource package type CCU - Computing resource package DISK - Storage resource package.
    :param str result_output_file: Used to save results.
    """
    __args__ = dict()
    __args__['instanceType'] = instance_type
    __args__['packageRegion'] = package_region
    __args__['packageType'] = package_type
    __args__['resultOutputFile'] = result_output_file
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('tencentcloud:Cynosdb/getResourcePackageSaleSpecs:getResourcePackageSaleSpecs', __args__, opts=opts, typ=GetResourcePackageSaleSpecsResult).value

    return AwaitableGetResourcePackageSaleSpecsResult(
        details=pulumi.get(__ret__, 'details'),
        id=pulumi.get(__ret__, 'id'),
        instance_type=pulumi.get(__ret__, 'instance_type'),
        package_region=pulumi.get(__ret__, 'package_region'),
        package_type=pulumi.get(__ret__, 'package_type'),
        result_output_file=pulumi.get(__ret__, 'result_output_file'))


@_utilities.lift_output_func(get_resource_package_sale_specs)
def get_resource_package_sale_specs_output(instance_type: Optional[pulumi.Input[str]] = None,
                                           package_region: Optional[pulumi.Input[str]] = None,
                                           package_type: Optional[pulumi.Input[str]] = None,
                                           result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                                           opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetResourcePackageSaleSpecsResult]:
    """
    Use this data source to query detailed information of cynosdb resource_package_sale_specs

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    resource_package_sale_specs = tencentcloud.Cynosdb.get_resource_package_sale_specs(instance_type="cynosdb-serverless",
        package_region="china",
        package_type="CCU")
    ```
    <!--End PulumiCodeChooser -->


    :param str instance_type: Instance Type. Value range: cynosdb-serverless, cynosdb, cdb.
    :param str package_region: Resource package usage region China - common in mainland China, overseas - common in Hong Kong, Macao, Taiwan, and overseas.
    :param str package_type: Resource package type CCU - Computing resource package DISK - Storage resource package.
    :param str result_output_file: Used to save results.
    """
    ...

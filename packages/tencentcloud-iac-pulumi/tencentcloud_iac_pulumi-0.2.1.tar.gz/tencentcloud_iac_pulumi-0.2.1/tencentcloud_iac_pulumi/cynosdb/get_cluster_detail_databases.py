# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetClusterDetailDatabasesResult',
    'AwaitableGetClusterDetailDatabasesResult',
    'get_cluster_detail_databases',
    'get_cluster_detail_databases_output',
]

@pulumi.output_type
class GetClusterDetailDatabasesResult:
    """
    A collection of values returned by getClusterDetailDatabases.
    """
    def __init__(__self__, cluster_id=None, db_infos=None, db_name=None, id=None, result_output_file=None):
        if cluster_id and not isinstance(cluster_id, str):
            raise TypeError("Expected argument 'cluster_id' to be a str")
        pulumi.set(__self__, "cluster_id", cluster_id)
        if db_infos and not isinstance(db_infos, list):
            raise TypeError("Expected argument 'db_infos' to be a list")
        pulumi.set(__self__, "db_infos", db_infos)
        if db_name and not isinstance(db_name, str):
            raise TypeError("Expected argument 'db_name' to be a str")
        pulumi.set(__self__, "db_name", db_name)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)

    @property
    @pulumi.getter(name="clusterId")
    def cluster_id(self) -> str:
        """
        Cluster Id note: This field may return null, indicating that a valid value cannot be obtained.
        """
        return pulumi.get(self, "cluster_id")

    @property
    @pulumi.getter(name="dbInfos")
    def db_infos(self) -> Sequence['outputs.GetClusterDetailDatabasesDbInfoResult']:
        """
        Database information note: This field may return null, indicating that a valid value cannot be obtained.
        """
        return pulumi.get(self, "db_infos")

    @property
    @pulumi.getter(name="dbName")
    def db_name(self) -> Optional[str]:
        """
        Database Name.
        """
        return pulumi.get(self, "db_name")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")


class AwaitableGetClusterDetailDatabasesResult(GetClusterDetailDatabasesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetClusterDetailDatabasesResult(
            cluster_id=self.cluster_id,
            db_infos=self.db_infos,
            db_name=self.db_name,
            id=self.id,
            result_output_file=self.result_output_file)


def get_cluster_detail_databases(cluster_id: Optional[str] = None,
                                 db_name: Optional[str] = None,
                                 result_output_file: Optional[str] = None,
                                 opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetClusterDetailDatabasesResult:
    """
    Use this data source to query detailed information of cynosdb cluster_detail_databases

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    cluster_detail_databases = tencentcloud.Cynosdb.get_cluster_detail_databases(cluster_id="cynosdbmysql-bws8h88b",
        db_name="users")
    ```
    <!--End PulumiCodeChooser -->


    :param str cluster_id: Cluster ID.
    :param str db_name: Database Name.
    :param str result_output_file: Used to save results.
    """
    __args__ = dict()
    __args__['clusterId'] = cluster_id
    __args__['dbName'] = db_name
    __args__['resultOutputFile'] = result_output_file
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('tencentcloud:Cynosdb/getClusterDetailDatabases:getClusterDetailDatabases', __args__, opts=opts, typ=GetClusterDetailDatabasesResult).value

    return AwaitableGetClusterDetailDatabasesResult(
        cluster_id=pulumi.get(__ret__, 'cluster_id'),
        db_infos=pulumi.get(__ret__, 'db_infos'),
        db_name=pulumi.get(__ret__, 'db_name'),
        id=pulumi.get(__ret__, 'id'),
        result_output_file=pulumi.get(__ret__, 'result_output_file'))


@_utilities.lift_output_func(get_cluster_detail_databases)
def get_cluster_detail_databases_output(cluster_id: Optional[pulumi.Input[str]] = None,
                                        db_name: Optional[pulumi.Input[Optional[str]]] = None,
                                        result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                                        opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetClusterDetailDatabasesResult]:
    """
    Use this data source to query detailed information of cynosdb cluster_detail_databases

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    cluster_detail_databases = tencentcloud.Cynosdb.get_cluster_detail_databases(cluster_id="cynosdbmysql-bws8h88b",
        db_name="users")
    ```
    <!--End PulumiCodeChooser -->


    :param str cluster_id: Cluster ID.
    :param str db_name: Database Name.
    :param str result_output_file: Used to save results.
    """
    ...

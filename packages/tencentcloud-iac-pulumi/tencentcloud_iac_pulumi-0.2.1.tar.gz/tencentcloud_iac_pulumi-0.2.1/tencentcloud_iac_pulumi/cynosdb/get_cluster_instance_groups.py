# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetClusterInstanceGroupsResult',
    'AwaitableGetClusterInstanceGroupsResult',
    'get_cluster_instance_groups',
    'get_cluster_instance_groups_output',
]

@pulumi.output_type
class GetClusterInstanceGroupsResult:
    """
    A collection of values returned by getClusterInstanceGroups.
    """
    def __init__(__self__, cluster_id=None, id=None, instance_grp_info_lists=None, result_output_file=None):
        if cluster_id and not isinstance(cluster_id, str):
            raise TypeError("Expected argument 'cluster_id' to be a str")
        pulumi.set(__self__, "cluster_id", cluster_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if instance_grp_info_lists and not isinstance(instance_grp_info_lists, list):
            raise TypeError("Expected argument 'instance_grp_info_lists' to be a list")
        pulumi.set(__self__, "instance_grp_info_lists", instance_grp_info_lists)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)

    @property
    @pulumi.getter(name="clusterId")
    def cluster_id(self) -> str:
        """
        The id of cluster.
        """
        return pulumi.get(self, "cluster_id")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="instanceGrpInfoLists")
    def instance_grp_info_lists(self) -> Sequence['outputs.GetClusterInstanceGroupsInstanceGrpInfoListResult']:
        """
        List of instance groups.
        """
        return pulumi.get(self, "instance_grp_info_lists")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")


class AwaitableGetClusterInstanceGroupsResult(GetClusterInstanceGroupsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetClusterInstanceGroupsResult(
            cluster_id=self.cluster_id,
            id=self.id,
            instance_grp_info_lists=self.instance_grp_info_lists,
            result_output_file=self.result_output_file)


def get_cluster_instance_groups(cluster_id: Optional[str] = None,
                                result_output_file: Optional[str] = None,
                                opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetClusterInstanceGroupsResult:
    """
    Use this data source to query detailed information of cynosdb cluster_instance_groups


    :param str cluster_id: The ID of cluster.
    :param str result_output_file: Used to save results.
    """
    __args__ = dict()
    __args__['clusterId'] = cluster_id
    __args__['resultOutputFile'] = result_output_file
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('tencentcloud:Cynosdb/getClusterInstanceGroups:getClusterInstanceGroups', __args__, opts=opts, typ=GetClusterInstanceGroupsResult).value

    return AwaitableGetClusterInstanceGroupsResult(
        cluster_id=pulumi.get(__ret__, 'cluster_id'),
        id=pulumi.get(__ret__, 'id'),
        instance_grp_info_lists=pulumi.get(__ret__, 'instance_grp_info_lists'),
        result_output_file=pulumi.get(__ret__, 'result_output_file'))


@_utilities.lift_output_func(get_cluster_instance_groups)
def get_cluster_instance_groups_output(cluster_id: Optional[pulumi.Input[str]] = None,
                                       result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                                       opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetClusterInstanceGroupsResult]:
    """
    Use this data source to query detailed information of cynosdb cluster_instance_groups


    :param str cluster_id: The ID of cluster.
    :param str result_output_file: Used to save results.
    """
    ...

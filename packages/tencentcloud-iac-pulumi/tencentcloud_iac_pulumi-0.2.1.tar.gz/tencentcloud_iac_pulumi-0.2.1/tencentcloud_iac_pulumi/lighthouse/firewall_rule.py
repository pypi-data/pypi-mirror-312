# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['FirewallRuleArgs', 'FirewallRule']

@pulumi.input_type
class FirewallRuleArgs:
    def __init__(__self__, *,
                 firewall_rules: pulumi.Input[Sequence[pulumi.Input['FirewallRuleFirewallRuleArgs']]],
                 instance_id: pulumi.Input[str]):
        """
        The set of arguments for constructing a FirewallRule resource.
        :param pulumi.Input[Sequence[pulumi.Input['FirewallRuleFirewallRuleArgs']]] firewall_rules: Firewall rule list.
        :param pulumi.Input[str] instance_id: Instance ID.
        """
        pulumi.set(__self__, "firewall_rules", firewall_rules)
        pulumi.set(__self__, "instance_id", instance_id)

    @property
    @pulumi.getter(name="firewallRules")
    def firewall_rules(self) -> pulumi.Input[Sequence[pulumi.Input['FirewallRuleFirewallRuleArgs']]]:
        """
        Firewall rule list.
        """
        return pulumi.get(self, "firewall_rules")

    @firewall_rules.setter
    def firewall_rules(self, value: pulumi.Input[Sequence[pulumi.Input['FirewallRuleFirewallRuleArgs']]]):
        pulumi.set(self, "firewall_rules", value)

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> pulumi.Input[str]:
        """
        Instance ID.
        """
        return pulumi.get(self, "instance_id")

    @instance_id.setter
    def instance_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "instance_id", value)


@pulumi.input_type
class _FirewallRuleState:
    def __init__(__self__, *,
                 firewall_rules: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallRuleFirewallRuleArgs']]]] = None,
                 instance_id: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering FirewallRule resources.
        :param pulumi.Input[Sequence[pulumi.Input['FirewallRuleFirewallRuleArgs']]] firewall_rules: Firewall rule list.
        :param pulumi.Input[str] instance_id: Instance ID.
        """
        if firewall_rules is not None:
            pulumi.set(__self__, "firewall_rules", firewall_rules)
        if instance_id is not None:
            pulumi.set(__self__, "instance_id", instance_id)

    @property
    @pulumi.getter(name="firewallRules")
    def firewall_rules(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['FirewallRuleFirewallRuleArgs']]]]:
        """
        Firewall rule list.
        """
        return pulumi.get(self, "firewall_rules")

    @firewall_rules.setter
    def firewall_rules(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['FirewallRuleFirewallRuleArgs']]]]):
        pulumi.set(self, "firewall_rules", value)

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> Optional[pulumi.Input[str]]:
        """
        Instance ID.
        """
        return pulumi.get(self, "instance_id")

    @instance_id.setter
    def instance_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "instance_id", value)


class FirewallRule(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 firewall_rules: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallRuleFirewallRuleArgs']]]]] = None,
                 instance_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Provides a resource to create a lighthouse firewall rule

        > **NOTE:**  Use an empty template to clean up the default rules before using this resource manage firewall rules.

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        firewall_rule = tencentcloud.lighthouse.FirewallRule("firewallRule",
            firewall_rules=[
                tencentcloud.lighthouse.FirewallRuleFirewallRuleArgs(
                    action="ACCEPT",
                    cidr_block="10.0.0.1",
                    firewall_rule_description="description 1",
                    port="80",
                    protocol="TCP",
                ),
                tencentcloud.lighthouse.FirewallRuleFirewallRuleArgs(
                    action="ACCEPT",
                    cidr_block="10.0.0.2",
                    firewall_rule_description="description 2",
                    port="80",
                    protocol="TCP",
                ),
            ],
            instance_id="lhins-xxxxxxx")
        ```
        <!--End PulumiCodeChooser -->

        ## Import

        lighthouse firewall_rule can be imported using the id, e.g.

        ```sh
        $ pulumi import tencentcloud:Lighthouse/firewallRule:FirewallRule firewall_rule lighthouse_instance_id
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallRuleFirewallRuleArgs']]]] firewall_rules: Firewall rule list.
        :param pulumi.Input[str] instance_id: Instance ID.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: FirewallRuleArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Provides a resource to create a lighthouse firewall rule

        > **NOTE:**  Use an empty template to clean up the default rules before using this resource manage firewall rules.

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        firewall_rule = tencentcloud.lighthouse.FirewallRule("firewallRule",
            firewall_rules=[
                tencentcloud.lighthouse.FirewallRuleFirewallRuleArgs(
                    action="ACCEPT",
                    cidr_block="10.0.0.1",
                    firewall_rule_description="description 1",
                    port="80",
                    protocol="TCP",
                ),
                tencentcloud.lighthouse.FirewallRuleFirewallRuleArgs(
                    action="ACCEPT",
                    cidr_block="10.0.0.2",
                    firewall_rule_description="description 2",
                    port="80",
                    protocol="TCP",
                ),
            ],
            instance_id="lhins-xxxxxxx")
        ```
        <!--End PulumiCodeChooser -->

        ## Import

        lighthouse firewall_rule can be imported using the id, e.g.

        ```sh
        $ pulumi import tencentcloud:Lighthouse/firewallRule:FirewallRule firewall_rule lighthouse_instance_id
        ```

        :param str resource_name: The name of the resource.
        :param FirewallRuleArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(FirewallRuleArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 firewall_rules: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallRuleFirewallRuleArgs']]]]] = None,
                 instance_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = FirewallRuleArgs.__new__(FirewallRuleArgs)

            if firewall_rules is None and not opts.urn:
                raise TypeError("Missing required property 'firewall_rules'")
            __props__.__dict__["firewall_rules"] = firewall_rules
            if instance_id is None and not opts.urn:
                raise TypeError("Missing required property 'instance_id'")
            __props__.__dict__["instance_id"] = instance_id
        super(FirewallRule, __self__).__init__(
            'tencentcloud:Lighthouse/firewallRule:FirewallRule',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            firewall_rules: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallRuleFirewallRuleArgs']]]]] = None,
            instance_id: Optional[pulumi.Input[str]] = None) -> 'FirewallRule':
        """
        Get an existing FirewallRule resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['FirewallRuleFirewallRuleArgs']]]] firewall_rules: Firewall rule list.
        :param pulumi.Input[str] instance_id: Instance ID.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _FirewallRuleState.__new__(_FirewallRuleState)

        __props__.__dict__["firewall_rules"] = firewall_rules
        __props__.__dict__["instance_id"] = instance_id
        return FirewallRule(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="firewallRules")
    def firewall_rules(self) -> pulumi.Output[Sequence['outputs.FirewallRuleFirewallRule']]:
        """
        Firewall rule list.
        """
        return pulumi.get(self, "firewall_rules")

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> pulumi.Output[str]:
        """
        Instance ID.
        """
        return pulumi.get(self, "instance_id")


# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['RenewInstanceArgs', 'RenewInstance']

@pulumi.input_type
class RenewInstanceArgs:
    def __init__(__self__, *,
                 instance_charge_prepaid: pulumi.Input['RenewInstanceInstanceChargePrepaidArgs'],
                 instance_id: pulumi.Input[str],
                 auto_voucher: Optional[pulumi.Input[bool]] = None,
                 renew_data_disk: Optional[pulumi.Input[bool]] = None):
        """
        The set of arguments for constructing a RenewInstance resource.
        :param pulumi.Input['RenewInstanceInstanceChargePrepaidArgs'] instance_charge_prepaid: Prepaid mode, that is, yearly and monthly subscription related parameter settings. Through this parameter, you can specify attributes such as the purchase duration of the Subscription instance and whether to set automatic renewal.
        :param pulumi.Input[str] instance_id: Instance ID.
        :param pulumi.Input[bool] auto_voucher: Whether to automatically deduct vouchers. Valid values:
               - true: Automatically deduct vouchers.
               -false:Do not automatically deduct vouchers. Default value: false.
        :param pulumi.Input[bool] renew_data_disk: Whether to renew the data disk. Valid values:true: Indicates that the renewal instance also renews the data disk attached to it.false: Indicates that the instance will be renewed and the data disk attached to it will not be renewed at the same time.Default value: true.
        """
        pulumi.set(__self__, "instance_charge_prepaid", instance_charge_prepaid)
        pulumi.set(__self__, "instance_id", instance_id)
        if auto_voucher is not None:
            pulumi.set(__self__, "auto_voucher", auto_voucher)
        if renew_data_disk is not None:
            pulumi.set(__self__, "renew_data_disk", renew_data_disk)

    @property
    @pulumi.getter(name="instanceChargePrepaid")
    def instance_charge_prepaid(self) -> pulumi.Input['RenewInstanceInstanceChargePrepaidArgs']:
        """
        Prepaid mode, that is, yearly and monthly subscription related parameter settings. Through this parameter, you can specify attributes such as the purchase duration of the Subscription instance and whether to set automatic renewal.
        """
        return pulumi.get(self, "instance_charge_prepaid")

    @instance_charge_prepaid.setter
    def instance_charge_prepaid(self, value: pulumi.Input['RenewInstanceInstanceChargePrepaidArgs']):
        pulumi.set(self, "instance_charge_prepaid", value)

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> pulumi.Input[str]:
        """
        Instance ID.
        """
        return pulumi.get(self, "instance_id")

    @instance_id.setter
    def instance_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "instance_id", value)

    @property
    @pulumi.getter(name="autoVoucher")
    def auto_voucher(self) -> Optional[pulumi.Input[bool]]:
        """
        Whether to automatically deduct vouchers. Valid values:
        - true: Automatically deduct vouchers.
        -false:Do not automatically deduct vouchers. Default value: false.
        """
        return pulumi.get(self, "auto_voucher")

    @auto_voucher.setter
    def auto_voucher(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "auto_voucher", value)

    @property
    @pulumi.getter(name="renewDataDisk")
    def renew_data_disk(self) -> Optional[pulumi.Input[bool]]:
        """
        Whether to renew the data disk. Valid values:true: Indicates that the renewal instance also renews the data disk attached to it.false: Indicates that the instance will be renewed and the data disk attached to it will not be renewed at the same time.Default value: true.
        """
        return pulumi.get(self, "renew_data_disk")

    @renew_data_disk.setter
    def renew_data_disk(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "renew_data_disk", value)


@pulumi.input_type
class _RenewInstanceState:
    def __init__(__self__, *,
                 auto_voucher: Optional[pulumi.Input[bool]] = None,
                 instance_charge_prepaid: Optional[pulumi.Input['RenewInstanceInstanceChargePrepaidArgs']] = None,
                 instance_id: Optional[pulumi.Input[str]] = None,
                 renew_data_disk: Optional[pulumi.Input[bool]] = None):
        """
        Input properties used for looking up and filtering RenewInstance resources.
        :param pulumi.Input[bool] auto_voucher: Whether to automatically deduct vouchers. Valid values:
               - true: Automatically deduct vouchers.
               -false:Do not automatically deduct vouchers. Default value: false.
        :param pulumi.Input['RenewInstanceInstanceChargePrepaidArgs'] instance_charge_prepaid: Prepaid mode, that is, yearly and monthly subscription related parameter settings. Through this parameter, you can specify attributes such as the purchase duration of the Subscription instance and whether to set automatic renewal.
        :param pulumi.Input[str] instance_id: Instance ID.
        :param pulumi.Input[bool] renew_data_disk: Whether to renew the data disk. Valid values:true: Indicates that the renewal instance also renews the data disk attached to it.false: Indicates that the instance will be renewed and the data disk attached to it will not be renewed at the same time.Default value: true.
        """
        if auto_voucher is not None:
            pulumi.set(__self__, "auto_voucher", auto_voucher)
        if instance_charge_prepaid is not None:
            pulumi.set(__self__, "instance_charge_prepaid", instance_charge_prepaid)
        if instance_id is not None:
            pulumi.set(__self__, "instance_id", instance_id)
        if renew_data_disk is not None:
            pulumi.set(__self__, "renew_data_disk", renew_data_disk)

    @property
    @pulumi.getter(name="autoVoucher")
    def auto_voucher(self) -> Optional[pulumi.Input[bool]]:
        """
        Whether to automatically deduct vouchers. Valid values:
        - true: Automatically deduct vouchers.
        -false:Do not automatically deduct vouchers. Default value: false.
        """
        return pulumi.get(self, "auto_voucher")

    @auto_voucher.setter
    def auto_voucher(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "auto_voucher", value)

    @property
    @pulumi.getter(name="instanceChargePrepaid")
    def instance_charge_prepaid(self) -> Optional[pulumi.Input['RenewInstanceInstanceChargePrepaidArgs']]:
        """
        Prepaid mode, that is, yearly and monthly subscription related parameter settings. Through this parameter, you can specify attributes such as the purchase duration of the Subscription instance and whether to set automatic renewal.
        """
        return pulumi.get(self, "instance_charge_prepaid")

    @instance_charge_prepaid.setter
    def instance_charge_prepaid(self, value: Optional[pulumi.Input['RenewInstanceInstanceChargePrepaidArgs']]):
        pulumi.set(self, "instance_charge_prepaid", value)

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> Optional[pulumi.Input[str]]:
        """
        Instance ID.
        """
        return pulumi.get(self, "instance_id")

    @instance_id.setter
    def instance_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "instance_id", value)

    @property
    @pulumi.getter(name="renewDataDisk")
    def renew_data_disk(self) -> Optional[pulumi.Input[bool]]:
        """
        Whether to renew the data disk. Valid values:true: Indicates that the renewal instance also renews the data disk attached to it.false: Indicates that the instance will be renewed and the data disk attached to it will not be renewed at the same time.Default value: true.
        """
        return pulumi.get(self, "renew_data_disk")

    @renew_data_disk.setter
    def renew_data_disk(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "renew_data_disk", value)


class RenewInstance(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 auto_voucher: Optional[pulumi.Input[bool]] = None,
                 instance_charge_prepaid: Optional[pulumi.Input[pulumi.InputType['RenewInstanceInstanceChargePrepaidArgs']]] = None,
                 instance_id: Optional[pulumi.Input[str]] = None,
                 renew_data_disk: Optional[pulumi.Input[bool]] = None,
                 __props__=None):
        """
        Provides a resource to create a lighthouse renew_instance

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        renew_instance = tencentcloud.lighthouse.RenewInstance("renewInstance",
            auto_voucher=False,
            instance_charge_prepaid=tencentcloud.lighthouse.RenewInstanceInstanceChargePrepaidArgs(
                period=1,
                renew_flag="NOTIFY_AND_MANUAL_RENEW",
            ),
            instance_id="lhins-xxxxxxx",
            renew_data_disk=True)
        ```
        <!--End PulumiCodeChooser -->

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[bool] auto_voucher: Whether to automatically deduct vouchers. Valid values:
               - true: Automatically deduct vouchers.
               -false:Do not automatically deduct vouchers. Default value: false.
        :param pulumi.Input[pulumi.InputType['RenewInstanceInstanceChargePrepaidArgs']] instance_charge_prepaid: Prepaid mode, that is, yearly and monthly subscription related parameter settings. Through this parameter, you can specify attributes such as the purchase duration of the Subscription instance and whether to set automatic renewal.
        :param pulumi.Input[str] instance_id: Instance ID.
        :param pulumi.Input[bool] renew_data_disk: Whether to renew the data disk. Valid values:true: Indicates that the renewal instance also renews the data disk attached to it.false: Indicates that the instance will be renewed and the data disk attached to it will not be renewed at the same time.Default value: true.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: RenewInstanceArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Provides a resource to create a lighthouse renew_instance

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        renew_instance = tencentcloud.lighthouse.RenewInstance("renewInstance",
            auto_voucher=False,
            instance_charge_prepaid=tencentcloud.lighthouse.RenewInstanceInstanceChargePrepaidArgs(
                period=1,
                renew_flag="NOTIFY_AND_MANUAL_RENEW",
            ),
            instance_id="lhins-xxxxxxx",
            renew_data_disk=True)
        ```
        <!--End PulumiCodeChooser -->

        :param str resource_name: The name of the resource.
        :param RenewInstanceArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(RenewInstanceArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 auto_voucher: Optional[pulumi.Input[bool]] = None,
                 instance_charge_prepaid: Optional[pulumi.Input[pulumi.InputType['RenewInstanceInstanceChargePrepaidArgs']]] = None,
                 instance_id: Optional[pulumi.Input[str]] = None,
                 renew_data_disk: Optional[pulumi.Input[bool]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = RenewInstanceArgs.__new__(RenewInstanceArgs)

            __props__.__dict__["auto_voucher"] = auto_voucher
            if instance_charge_prepaid is None and not opts.urn:
                raise TypeError("Missing required property 'instance_charge_prepaid'")
            __props__.__dict__["instance_charge_prepaid"] = instance_charge_prepaid
            if instance_id is None and not opts.urn:
                raise TypeError("Missing required property 'instance_id'")
            __props__.__dict__["instance_id"] = instance_id
            __props__.__dict__["renew_data_disk"] = renew_data_disk
        super(RenewInstance, __self__).__init__(
            'tencentcloud:Lighthouse/renewInstance:RenewInstance',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            auto_voucher: Optional[pulumi.Input[bool]] = None,
            instance_charge_prepaid: Optional[pulumi.Input[pulumi.InputType['RenewInstanceInstanceChargePrepaidArgs']]] = None,
            instance_id: Optional[pulumi.Input[str]] = None,
            renew_data_disk: Optional[pulumi.Input[bool]] = None) -> 'RenewInstance':
        """
        Get an existing RenewInstance resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[bool] auto_voucher: Whether to automatically deduct vouchers. Valid values:
               - true: Automatically deduct vouchers.
               -false:Do not automatically deduct vouchers. Default value: false.
        :param pulumi.Input[pulumi.InputType['RenewInstanceInstanceChargePrepaidArgs']] instance_charge_prepaid: Prepaid mode, that is, yearly and monthly subscription related parameter settings. Through this parameter, you can specify attributes such as the purchase duration of the Subscription instance and whether to set automatic renewal.
        :param pulumi.Input[str] instance_id: Instance ID.
        :param pulumi.Input[bool] renew_data_disk: Whether to renew the data disk. Valid values:true: Indicates that the renewal instance also renews the data disk attached to it.false: Indicates that the instance will be renewed and the data disk attached to it will not be renewed at the same time.Default value: true.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _RenewInstanceState.__new__(_RenewInstanceState)

        __props__.__dict__["auto_voucher"] = auto_voucher
        __props__.__dict__["instance_charge_prepaid"] = instance_charge_prepaid
        __props__.__dict__["instance_id"] = instance_id
        __props__.__dict__["renew_data_disk"] = renew_data_disk
        return RenewInstance(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="autoVoucher")
    def auto_voucher(self) -> pulumi.Output[Optional[bool]]:
        """
        Whether to automatically deduct vouchers. Valid values:
        - true: Automatically deduct vouchers.
        -false:Do not automatically deduct vouchers. Default value: false.
        """
        return pulumi.get(self, "auto_voucher")

    @property
    @pulumi.getter(name="instanceChargePrepaid")
    def instance_charge_prepaid(self) -> pulumi.Output['outputs.RenewInstanceInstanceChargePrepaid']:
        """
        Prepaid mode, that is, yearly and monthly subscription related parameter settings. Through this parameter, you can specify attributes such as the purchase duration of the Subscription instance and whether to set automatic renewal.
        """
        return pulumi.get(self, "instance_charge_prepaid")

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> pulumi.Output[str]:
        """
        Instance ID.
        """
        return pulumi.get(self, "instance_id")

    @property
    @pulumi.getter(name="renewDataDisk")
    def renew_data_disk(self) -> pulumi.Output[Optional[bool]]:
        """
        Whether to renew the data disk. Valid values:true: Indicates that the renewal instance also renews the data disk attached to it.false: Indicates that the instance will be renewed and the data disk attached to it will not be renewed at the same time.Default value: true.
        """
        return pulumi.get(self, "renew_data_disk")


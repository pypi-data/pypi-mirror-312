# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = ['CompleteExpansionArgs', 'CompleteExpansion']

@pulumi.input_type
class CompleteExpansionArgs:
    def __init__(__self__, *,
                 instance_id: pulumi.Input[str]):
        """
        The set of arguments for constructing a CompleteExpansion resource.
        :param pulumi.Input[str] instance_id: ID of imported target instance.
        """
        pulumi.set(__self__, "instance_id", instance_id)

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> pulumi.Input[str]:
        """
        ID of imported target instance.
        """
        return pulumi.get(self, "instance_id")

    @instance_id.setter
    def instance_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "instance_id", value)


@pulumi.input_type
class _CompleteExpansionState:
    def __init__(__self__, *,
                 instance_id: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering CompleteExpansion resources.
        :param pulumi.Input[str] instance_id: ID of imported target instance.
        """
        if instance_id is not None:
            pulumi.set(__self__, "instance_id", instance_id)

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> Optional[pulumi.Input[str]]:
        """
        ID of imported target instance.
        """
        return pulumi.get(self, "instance_id")

    @instance_id.setter
    def instance_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "instance_id", value)


class CompleteExpansion(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 instance_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Provides a resource to create a sqlserver complete_expansion

        ## Example Usage

        ### First, Create a basic SQL instance

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import pulumi_tencentcloud as tencentcloud
        import tencentcloud_iac_pulumi as tencentcloud

        zones = tencentcloud.Availability.get_zones_by_product(product="sqlserver")
        vpc = tencentcloud.vpc.Instance("vpc", cidr_block="10.0.0.0/16")
        subnet = tencentcloud.subnet.Instance("subnet",
            availability_zone=zones.zones[4].name,
            vpc_id=vpc.id,
            cidr_block="10.0.0.0/16",
            is_multicast=False)
        security_group = tencentcloud.security.Group("securityGroup", description="desc.")
        example = tencentcloud.sqlserver.Instance("example",
            availability_zone=zones.zones[4].name,
            charge_type="POSTPAID_BY_HOUR",
            vpc_id=vpc.id,
            subnet_id=subnet.id,
            security_groups=[security_group.id],
            project_id=0,
            memory=2,
            storage=20,
            maintenance_week_sets=[
                1,
                2,
                3,
            ],
            maintenance_start_time="01:00",
            maintenance_time_span=3,
            tags={
                "createBy": "tfExample",
            })
        ```
        <!--End PulumiCodeChooser -->

        ### Expand the current instance, storage: 20->40, wait_switch = 1

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        example = tencentcloud.sqlserver.Instance("example",
            availability_zone=data["tencentcloud_availability_zones_by_product"]["zones"]["zones"][4]["name"],
            charge_type="POSTPAID_BY_HOUR",
            vpc_id=tencentcloud_vpc["vpc"]["id"],
            subnet_id=tencentcloud_subnet["subnet"]["id"],
            security_groups=[tencentcloud_security_group["security_group"]["id"]],
            project_id=0,
            memory=2,
            storage=40,
            wait_switch=1,
            maintenance_week_sets=[
                1,
                2,
                3,
            ],
            maintenance_start_time="01:00",
            maintenance_time_span=3,
            tags={
                "createBy": "tfExample",
            })
        ```
        <!--End PulumiCodeChooser -->

        ### Complete the expansion task immediately

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        example = tencentcloud.sqlserver.CompleteExpansion("example", instance_id=tencentcloud_sqlserver_instance["example"]["id"])
        ```
        <!--End PulumiCodeChooser -->

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] instance_id: ID of imported target instance.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: CompleteExpansionArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Provides a resource to create a sqlserver complete_expansion

        ## Example Usage

        ### First, Create a basic SQL instance

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import pulumi_tencentcloud as tencentcloud
        import tencentcloud_iac_pulumi as tencentcloud

        zones = tencentcloud.Availability.get_zones_by_product(product="sqlserver")
        vpc = tencentcloud.vpc.Instance("vpc", cidr_block="10.0.0.0/16")
        subnet = tencentcloud.subnet.Instance("subnet",
            availability_zone=zones.zones[4].name,
            vpc_id=vpc.id,
            cidr_block="10.0.0.0/16",
            is_multicast=False)
        security_group = tencentcloud.security.Group("securityGroup", description="desc.")
        example = tencentcloud.sqlserver.Instance("example",
            availability_zone=zones.zones[4].name,
            charge_type="POSTPAID_BY_HOUR",
            vpc_id=vpc.id,
            subnet_id=subnet.id,
            security_groups=[security_group.id],
            project_id=0,
            memory=2,
            storage=20,
            maintenance_week_sets=[
                1,
                2,
                3,
            ],
            maintenance_start_time="01:00",
            maintenance_time_span=3,
            tags={
                "createBy": "tfExample",
            })
        ```
        <!--End PulumiCodeChooser -->

        ### Expand the current instance, storage: 20->40, wait_switch = 1

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        example = tencentcloud.sqlserver.Instance("example",
            availability_zone=data["tencentcloud_availability_zones_by_product"]["zones"]["zones"][4]["name"],
            charge_type="POSTPAID_BY_HOUR",
            vpc_id=tencentcloud_vpc["vpc"]["id"],
            subnet_id=tencentcloud_subnet["subnet"]["id"],
            security_groups=[tencentcloud_security_group["security_group"]["id"]],
            project_id=0,
            memory=2,
            storage=40,
            wait_switch=1,
            maintenance_week_sets=[
                1,
                2,
                3,
            ],
            maintenance_start_time="01:00",
            maintenance_time_span=3,
            tags={
                "createBy": "tfExample",
            })
        ```
        <!--End PulumiCodeChooser -->

        ### Complete the expansion task immediately

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        example = tencentcloud.sqlserver.CompleteExpansion("example", instance_id=tencentcloud_sqlserver_instance["example"]["id"])
        ```
        <!--End PulumiCodeChooser -->

        :param str resource_name: The name of the resource.
        :param CompleteExpansionArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(CompleteExpansionArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 instance_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = CompleteExpansionArgs.__new__(CompleteExpansionArgs)

            if instance_id is None and not opts.urn:
                raise TypeError("Missing required property 'instance_id'")
            __props__.__dict__["instance_id"] = instance_id
        super(CompleteExpansion, __self__).__init__(
            'tencentcloud:Sqlserver/completeExpansion:CompleteExpansion',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            instance_id: Optional[pulumi.Input[str]] = None) -> 'CompleteExpansion':
        """
        Get an existing CompleteExpansion resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] instance_id: ID of imported target instance.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _CompleteExpansionState.__new__(_CompleteExpansionState)

        __props__.__dict__["instance_id"] = instance_id
        return CompleteExpansion(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> pulumi.Output[str]:
        """
        ID of imported target instance.
        """
        return pulumi.get(self, "instance_id")


# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetRollbackTimeResult',
    'AwaitableGetRollbackTimeResult',
    'get_rollback_time',
    'get_rollback_time_output',
]

@pulumi.output_type
class GetRollbackTimeResult:
    """
    A collection of values returned by getRollbackTime.
    """
    def __init__(__self__, dbs=None, details=None, id=None, instance_id=None, result_output_file=None):
        if dbs and not isinstance(dbs, list):
            raise TypeError("Expected argument 'dbs' to be a list")
        pulumi.set(__self__, "dbs", dbs)
        if details and not isinstance(details, list):
            raise TypeError("Expected argument 'details' to be a list")
        pulumi.set(__self__, "details", details)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if instance_id and not isinstance(instance_id, str):
            raise TypeError("Expected argument 'instance_id' to be a str")
        pulumi.set(__self__, "instance_id", instance_id)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)

    @property
    @pulumi.getter
    def dbs(self) -> Sequence[str]:
        return pulumi.get(self, "dbs")

    @property
    @pulumi.getter
    def details(self) -> Sequence['outputs.GetRollbackTimeDetailResult']:
        """
        Information of time range available for database rollback.
        """
        return pulumi.get(self, "details")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> str:
        return pulumi.get(self, "instance_id")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")


class AwaitableGetRollbackTimeResult(GetRollbackTimeResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetRollbackTimeResult(
            dbs=self.dbs,
            details=self.details,
            id=self.id,
            instance_id=self.instance_id,
            result_output_file=self.result_output_file)


def get_rollback_time(dbs: Optional[Sequence[str]] = None,
                      instance_id: Optional[str] = None,
                      result_output_file: Optional[str] = None,
                      opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetRollbackTimeResult:
    """
    Use this data source to query detailed information of sqlserver rollback_time

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    example = tencentcloud.Sqlserver.get_rollback_time(dbs=["keep_pubsub_db"],
        instance_id="mssql-qelbzgwf")
    ```
    <!--End PulumiCodeChooser -->


    :param Sequence[str] dbs: List of databases to be queried.
    :param str instance_id: Instance ID.
    :param str result_output_file: Used to save results.
    """
    __args__ = dict()
    __args__['dbs'] = dbs
    __args__['instanceId'] = instance_id
    __args__['resultOutputFile'] = result_output_file
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('tencentcloud:Sqlserver/getRollbackTime:getRollbackTime', __args__, opts=opts, typ=GetRollbackTimeResult).value

    return AwaitableGetRollbackTimeResult(
        dbs=pulumi.get(__ret__, 'dbs'),
        details=pulumi.get(__ret__, 'details'),
        id=pulumi.get(__ret__, 'id'),
        instance_id=pulumi.get(__ret__, 'instance_id'),
        result_output_file=pulumi.get(__ret__, 'result_output_file'))


@_utilities.lift_output_func(get_rollback_time)
def get_rollback_time_output(dbs: Optional[pulumi.Input[Sequence[str]]] = None,
                             instance_id: Optional[pulumi.Input[str]] = None,
                             result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                             opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetRollbackTimeResult]:
    """
    Use this data source to query detailed information of sqlserver rollback_time

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    example = tencentcloud.Sqlserver.get_rollback_time(dbs=["keep_pubsub_db"],
        instance_id="mssql-qelbzgwf")
    ```
    <!--End PulumiCodeChooser -->


    :param Sequence[str] dbs: List of databases to be queried.
    :param str instance_id: Instance ID.
    :param str result_output_file: Used to save results.
    """
    ...

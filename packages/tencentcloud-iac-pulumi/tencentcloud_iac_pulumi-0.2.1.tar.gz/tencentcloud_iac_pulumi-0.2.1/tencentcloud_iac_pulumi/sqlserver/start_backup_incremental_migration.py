# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = ['StartBackupIncrementalMigrationArgs', 'StartBackupIncrementalMigration']

@pulumi.input_type
class StartBackupIncrementalMigrationArgs:
    def __init__(__self__, *,
                 backup_migration_id: pulumi.Input[str],
                 incremental_migration_id: pulumi.Input[str],
                 instance_id: pulumi.Input[str]):
        """
        The set of arguments for constructing a StartBackupIncrementalMigration resource.
        :param pulumi.Input[str] backup_migration_id: Backup import task ID, returned by the CreateBackupMigration interface.
        :param pulumi.Input[str] incremental_migration_id: Incremental backup import task ID.
        :param pulumi.Input[str] instance_id: ID of imported target instance.
        """
        pulumi.set(__self__, "backup_migration_id", backup_migration_id)
        pulumi.set(__self__, "incremental_migration_id", incremental_migration_id)
        pulumi.set(__self__, "instance_id", instance_id)

    @property
    @pulumi.getter(name="backupMigrationId")
    def backup_migration_id(self) -> pulumi.Input[str]:
        """
        Backup import task ID, returned by the CreateBackupMigration interface.
        """
        return pulumi.get(self, "backup_migration_id")

    @backup_migration_id.setter
    def backup_migration_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "backup_migration_id", value)

    @property
    @pulumi.getter(name="incrementalMigrationId")
    def incremental_migration_id(self) -> pulumi.Input[str]:
        """
        Incremental backup import task ID.
        """
        return pulumi.get(self, "incremental_migration_id")

    @incremental_migration_id.setter
    def incremental_migration_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "incremental_migration_id", value)

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> pulumi.Input[str]:
        """
        ID of imported target instance.
        """
        return pulumi.get(self, "instance_id")

    @instance_id.setter
    def instance_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "instance_id", value)


@pulumi.input_type
class _StartBackupIncrementalMigrationState:
    def __init__(__self__, *,
                 backup_migration_id: Optional[pulumi.Input[str]] = None,
                 incremental_migration_id: Optional[pulumi.Input[str]] = None,
                 instance_id: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering StartBackupIncrementalMigration resources.
        :param pulumi.Input[str] backup_migration_id: Backup import task ID, returned by the CreateBackupMigration interface.
        :param pulumi.Input[str] incremental_migration_id: Incremental backup import task ID.
        :param pulumi.Input[str] instance_id: ID of imported target instance.
        """
        if backup_migration_id is not None:
            pulumi.set(__self__, "backup_migration_id", backup_migration_id)
        if incremental_migration_id is not None:
            pulumi.set(__self__, "incremental_migration_id", incremental_migration_id)
        if instance_id is not None:
            pulumi.set(__self__, "instance_id", instance_id)

    @property
    @pulumi.getter(name="backupMigrationId")
    def backup_migration_id(self) -> Optional[pulumi.Input[str]]:
        """
        Backup import task ID, returned by the CreateBackupMigration interface.
        """
        return pulumi.get(self, "backup_migration_id")

    @backup_migration_id.setter
    def backup_migration_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "backup_migration_id", value)

    @property
    @pulumi.getter(name="incrementalMigrationId")
    def incremental_migration_id(self) -> Optional[pulumi.Input[str]]:
        """
        Incremental backup import task ID.
        """
        return pulumi.get(self, "incremental_migration_id")

    @incremental_migration_id.setter
    def incremental_migration_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "incremental_migration_id", value)

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> Optional[pulumi.Input[str]]:
        """
        ID of imported target instance.
        """
        return pulumi.get(self, "instance_id")

    @instance_id.setter
    def instance_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "instance_id", value)


class StartBackupIncrementalMigration(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 backup_migration_id: Optional[pulumi.Input[str]] = None,
                 incremental_migration_id: Optional[pulumi.Input[str]] = None,
                 instance_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Provides a resource to create a sqlserver start_backup_incremental_migration

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        start_backup_incremental_migration = tencentcloud.sqlserver.StartBackupIncrementalMigration("startBackupIncrementalMigration",
            backup_migration_id="mssql-backup-migration-cg0ffgqt",
            incremental_migration_id="mssql-incremental-migration-kp7bgv8p",
            instance_id="mssql-i1z41iwd")
        ```
        <!--End PulumiCodeChooser -->

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] backup_migration_id: Backup import task ID, returned by the CreateBackupMigration interface.
        :param pulumi.Input[str] incremental_migration_id: Incremental backup import task ID.
        :param pulumi.Input[str] instance_id: ID of imported target instance.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: StartBackupIncrementalMigrationArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Provides a resource to create a sqlserver start_backup_incremental_migration

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        start_backup_incremental_migration = tencentcloud.sqlserver.StartBackupIncrementalMigration("startBackupIncrementalMigration",
            backup_migration_id="mssql-backup-migration-cg0ffgqt",
            incremental_migration_id="mssql-incremental-migration-kp7bgv8p",
            instance_id="mssql-i1z41iwd")
        ```
        <!--End PulumiCodeChooser -->

        :param str resource_name: The name of the resource.
        :param StartBackupIncrementalMigrationArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(StartBackupIncrementalMigrationArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 backup_migration_id: Optional[pulumi.Input[str]] = None,
                 incremental_migration_id: Optional[pulumi.Input[str]] = None,
                 instance_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = StartBackupIncrementalMigrationArgs.__new__(StartBackupIncrementalMigrationArgs)

            if backup_migration_id is None and not opts.urn:
                raise TypeError("Missing required property 'backup_migration_id'")
            __props__.__dict__["backup_migration_id"] = backup_migration_id
            if incremental_migration_id is None and not opts.urn:
                raise TypeError("Missing required property 'incremental_migration_id'")
            __props__.__dict__["incremental_migration_id"] = incremental_migration_id
            if instance_id is None and not opts.urn:
                raise TypeError("Missing required property 'instance_id'")
            __props__.__dict__["instance_id"] = instance_id
        super(StartBackupIncrementalMigration, __self__).__init__(
            'tencentcloud:Sqlserver/startBackupIncrementalMigration:StartBackupIncrementalMigration',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            backup_migration_id: Optional[pulumi.Input[str]] = None,
            incremental_migration_id: Optional[pulumi.Input[str]] = None,
            instance_id: Optional[pulumi.Input[str]] = None) -> 'StartBackupIncrementalMigration':
        """
        Get an existing StartBackupIncrementalMigration resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] backup_migration_id: Backup import task ID, returned by the CreateBackupMigration interface.
        :param pulumi.Input[str] incremental_migration_id: Incremental backup import task ID.
        :param pulumi.Input[str] instance_id: ID of imported target instance.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _StartBackupIncrementalMigrationState.__new__(_StartBackupIncrementalMigrationState)

        __props__.__dict__["backup_migration_id"] = backup_migration_id
        __props__.__dict__["incremental_migration_id"] = incremental_migration_id
        __props__.__dict__["instance_id"] = instance_id
        return StartBackupIncrementalMigration(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="backupMigrationId")
    def backup_migration_id(self) -> pulumi.Output[str]:
        """
        Backup import task ID, returned by the CreateBackupMigration interface.
        """
        return pulumi.get(self, "backup_migration_id")

    @property
    @pulumi.getter(name="incrementalMigrationId")
    def incremental_migration_id(self) -> pulumi.Output[str]:
        """
        Incremental backup import task ID.
        """
        return pulumi.get(self, "incremental_migration_id")

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> pulumi.Output[str]:
        """
        ID of imported target instance.
        """
        return pulumi.get(self, "instance_id")


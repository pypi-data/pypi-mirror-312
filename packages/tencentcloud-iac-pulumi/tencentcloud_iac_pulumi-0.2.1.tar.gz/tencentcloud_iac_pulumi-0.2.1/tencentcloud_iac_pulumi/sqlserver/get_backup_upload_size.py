# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetBackupUploadSizeResult',
    'AwaitableGetBackupUploadSizeResult',
    'get_backup_upload_size',
    'get_backup_upload_size_output',
]

@pulumi.output_type
class GetBackupUploadSizeResult:
    """
    A collection of values returned by getBackupUploadSize.
    """
    def __init__(__self__, backup_migration_id=None, cos_upload_backup_file_sets=None, id=None, incremental_migration_id=None, instance_id=None, result_output_file=None):
        if backup_migration_id and not isinstance(backup_migration_id, str):
            raise TypeError("Expected argument 'backup_migration_id' to be a str")
        pulumi.set(__self__, "backup_migration_id", backup_migration_id)
        if cos_upload_backup_file_sets and not isinstance(cos_upload_backup_file_sets, list):
            raise TypeError("Expected argument 'cos_upload_backup_file_sets' to be a list")
        pulumi.set(__self__, "cos_upload_backup_file_sets", cos_upload_backup_file_sets)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if incremental_migration_id and not isinstance(incremental_migration_id, str):
            raise TypeError("Expected argument 'incremental_migration_id' to be a str")
        pulumi.set(__self__, "incremental_migration_id", incremental_migration_id)
        if instance_id and not isinstance(instance_id, str):
            raise TypeError("Expected argument 'instance_id' to be a str")
        pulumi.set(__self__, "instance_id", instance_id)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)

    @property
    @pulumi.getter(name="backupMigrationId")
    def backup_migration_id(self) -> str:
        return pulumi.get(self, "backup_migration_id")

    @property
    @pulumi.getter(name="cosUploadBackupFileSets")
    def cos_upload_backup_file_sets(self) -> Sequence['outputs.GetBackupUploadSizeCosUploadBackupFileSetResult']:
        """
        Information of uploaded backups.
        """
        return pulumi.get(self, "cos_upload_backup_file_sets")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="incrementalMigrationId")
    def incremental_migration_id(self) -> Optional[str]:
        return pulumi.get(self, "incremental_migration_id")

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> str:
        return pulumi.get(self, "instance_id")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")


class AwaitableGetBackupUploadSizeResult(GetBackupUploadSizeResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetBackupUploadSizeResult(
            backup_migration_id=self.backup_migration_id,
            cos_upload_backup_file_sets=self.cos_upload_backup_file_sets,
            id=self.id,
            incremental_migration_id=self.incremental_migration_id,
            instance_id=self.instance_id,
            result_output_file=self.result_output_file)


def get_backup_upload_size(backup_migration_id: Optional[str] = None,
                           incremental_migration_id: Optional[str] = None,
                           instance_id: Optional[str] = None,
                           result_output_file: Optional[str] = None,
                           opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetBackupUploadSizeResult:
    """
    Use this data source to query detailed information of sqlserver datasource_backup_upload_size

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    example = tencentcloud.Sqlserver.get_backup_upload_size(backup_migration_id="mssql-backup-migration-9tj0sxnz",
        instance_id="mssql-4gmc5805")
    ```
    <!--End PulumiCodeChooser -->


    :param str backup_migration_id: Backup import task ID, which is returned through the API CreateBackupMigration.
    :param str incremental_migration_id: Incremental import task ID.
    :param str instance_id: ID of imported target instance.
    :param str result_output_file: Used to save results.
    """
    __args__ = dict()
    __args__['backupMigrationId'] = backup_migration_id
    __args__['incrementalMigrationId'] = incremental_migration_id
    __args__['instanceId'] = instance_id
    __args__['resultOutputFile'] = result_output_file
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('tencentcloud:Sqlserver/getBackupUploadSize:getBackupUploadSize', __args__, opts=opts, typ=GetBackupUploadSizeResult).value

    return AwaitableGetBackupUploadSizeResult(
        backup_migration_id=pulumi.get(__ret__, 'backup_migration_id'),
        cos_upload_backup_file_sets=pulumi.get(__ret__, 'cos_upload_backup_file_sets'),
        id=pulumi.get(__ret__, 'id'),
        incremental_migration_id=pulumi.get(__ret__, 'incremental_migration_id'),
        instance_id=pulumi.get(__ret__, 'instance_id'),
        result_output_file=pulumi.get(__ret__, 'result_output_file'))


@_utilities.lift_output_func(get_backup_upload_size)
def get_backup_upload_size_output(backup_migration_id: Optional[pulumi.Input[str]] = None,
                                  incremental_migration_id: Optional[pulumi.Input[Optional[str]]] = None,
                                  instance_id: Optional[pulumi.Input[str]] = None,
                                  result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                                  opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetBackupUploadSizeResult]:
    """
    Use this data source to query detailed information of sqlserver datasource_backup_upload_size

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    example = tencentcloud.Sqlserver.get_backup_upload_size(backup_migration_id="mssql-backup-migration-9tj0sxnz",
        instance_id="mssql-4gmc5805")
    ```
    <!--End PulumiCodeChooser -->


    :param str backup_migration_id: Backup import task ID, which is returned through the API CreateBackupMigration.
    :param str incremental_migration_id: Incremental import task ID.
    :param str instance_id: ID of imported target instance.
    :param str result_output_file: Used to save results.
    """
    ...

# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = ['BusinessIntelligenceFileArgs', 'BusinessIntelligenceFile']

@pulumi.input_type
class BusinessIntelligenceFileArgs:
    def __init__(__self__, *,
                 file_type: pulumi.Input[str],
                 file_url: pulumi.Input[str],
                 instance_id: pulumi.Input[str],
                 remark: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a BusinessIntelligenceFile resource.
        :param pulumi.Input[str] file_type: File Type FLAT - Flat File as Data Source, SSIS - ssis project package.
        :param pulumi.Input[str] file_url: Cos Url.
        :param pulumi.Input[str] instance_id: instance id.
        :param pulumi.Input[str] remark: remark.
        """
        pulumi.set(__self__, "file_type", file_type)
        pulumi.set(__self__, "file_url", file_url)
        pulumi.set(__self__, "instance_id", instance_id)
        if remark is not None:
            pulumi.set(__self__, "remark", remark)

    @property
    @pulumi.getter(name="fileType")
    def file_type(self) -> pulumi.Input[str]:
        """
        File Type FLAT - Flat File as Data Source, SSIS - ssis project package.
        """
        return pulumi.get(self, "file_type")

    @file_type.setter
    def file_type(self, value: pulumi.Input[str]):
        pulumi.set(self, "file_type", value)

    @property
    @pulumi.getter(name="fileUrl")
    def file_url(self) -> pulumi.Input[str]:
        """
        Cos Url.
        """
        return pulumi.get(self, "file_url")

    @file_url.setter
    def file_url(self, value: pulumi.Input[str]):
        pulumi.set(self, "file_url", value)

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> pulumi.Input[str]:
        """
        instance id.
        """
        return pulumi.get(self, "instance_id")

    @instance_id.setter
    def instance_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "instance_id", value)

    @property
    @pulumi.getter
    def remark(self) -> Optional[pulumi.Input[str]]:
        """
        remark.
        """
        return pulumi.get(self, "remark")

    @remark.setter
    def remark(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "remark", value)


@pulumi.input_type
class _BusinessIntelligenceFileState:
    def __init__(__self__, *,
                 file_type: Optional[pulumi.Input[str]] = None,
                 file_url: Optional[pulumi.Input[str]] = None,
                 instance_id: Optional[pulumi.Input[str]] = None,
                 remark: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering BusinessIntelligenceFile resources.
        :param pulumi.Input[str] file_type: File Type FLAT - Flat File as Data Source, SSIS - ssis project package.
        :param pulumi.Input[str] file_url: Cos Url.
        :param pulumi.Input[str] instance_id: instance id.
        :param pulumi.Input[str] remark: remark.
        """
        if file_type is not None:
            pulumi.set(__self__, "file_type", file_type)
        if file_url is not None:
            pulumi.set(__self__, "file_url", file_url)
        if instance_id is not None:
            pulumi.set(__self__, "instance_id", instance_id)
        if remark is not None:
            pulumi.set(__self__, "remark", remark)

    @property
    @pulumi.getter(name="fileType")
    def file_type(self) -> Optional[pulumi.Input[str]]:
        """
        File Type FLAT - Flat File as Data Source, SSIS - ssis project package.
        """
        return pulumi.get(self, "file_type")

    @file_type.setter
    def file_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "file_type", value)

    @property
    @pulumi.getter(name="fileUrl")
    def file_url(self) -> Optional[pulumi.Input[str]]:
        """
        Cos Url.
        """
        return pulumi.get(self, "file_url")

    @file_url.setter
    def file_url(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "file_url", value)

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> Optional[pulumi.Input[str]]:
        """
        instance id.
        """
        return pulumi.get(self, "instance_id")

    @instance_id.setter
    def instance_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "instance_id", value)

    @property
    @pulumi.getter
    def remark(self) -> Optional[pulumi.Input[str]]:
        """
        remark.
        """
        return pulumi.get(self, "remark")

    @remark.setter
    def remark(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "remark", value)


class BusinessIntelligenceFile(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 file_type: Optional[pulumi.Input[str]] = None,
                 file_url: Optional[pulumi.Input[str]] = None,
                 instance_id: Optional[pulumi.Input[str]] = None,
                 remark: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Provides a resource to create a sqlserver business_intelligence_file

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import pulumi_tencentcloud as tencentcloud
        import tencentcloud_iac_pulumi as tencentcloud

        zones = tencentcloud.Availability.get_zones_by_product(product="sqlserver")
        vpc = tencentcloud.vpc.Instance("vpc", cidr_block="10.0.0.0/16")
        subnet = tencentcloud.subnet.Instance("subnet",
            availability_zone=zones.zones[4].name,
            vpc_id=vpc.id,
            cidr_block="10.0.0.0/16",
            is_multicast=False)
        security_group = tencentcloud.security.Group("securityGroup", description="desc.")
        example_business_intelligence_instance = tencentcloud.sqlserver.BusinessIntelligenceInstance("exampleBusinessIntelligenceInstance",
            zone=zones.zones[4].name,
            memory=4,
            storage=100,
            cpu=2,
            machine_type="CLOUD_PREMIUM",
            project_id=0,
            subnet_id=subnet.id,
            vpc_id=vpc.id,
            db_version="201603",
            security_group_lists=[security_group.id],
            weeklies=[
                1,
                2,
                3,
                4,
                5,
                6,
                7,
            ],
            start_time="00:00",
            span=6,
            instance_name="tf_example")
        example_business_intelligence_file = tencentcloud.sqlserver.BusinessIntelligenceFile("exampleBusinessIntelligenceFile",
            instance_id=example_business_intelligence_instance.id,
            file_url="https://tf-example-1208515315.cos.ap-guangzhou.myqcloud.com/sqlserver_business_intelligence_file.txt",
            file_type="FLAT",
            remark="desc.")
        ```
        <!--End PulumiCodeChooser -->

        ## Import

        sqlserver business_intelligence_file can be imported using the id, e.g.

        ```sh
        $ pulumi import tencentcloud:Sqlserver/businessIntelligenceFile:BusinessIntelligenceFile example mssqlbi-fo2dwujt#test.xlsx
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] file_type: File Type FLAT - Flat File as Data Source, SSIS - ssis project package.
        :param pulumi.Input[str] file_url: Cos Url.
        :param pulumi.Input[str] instance_id: instance id.
        :param pulumi.Input[str] remark: remark.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: BusinessIntelligenceFileArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Provides a resource to create a sqlserver business_intelligence_file

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import pulumi_tencentcloud as tencentcloud
        import tencentcloud_iac_pulumi as tencentcloud

        zones = tencentcloud.Availability.get_zones_by_product(product="sqlserver")
        vpc = tencentcloud.vpc.Instance("vpc", cidr_block="10.0.0.0/16")
        subnet = tencentcloud.subnet.Instance("subnet",
            availability_zone=zones.zones[4].name,
            vpc_id=vpc.id,
            cidr_block="10.0.0.0/16",
            is_multicast=False)
        security_group = tencentcloud.security.Group("securityGroup", description="desc.")
        example_business_intelligence_instance = tencentcloud.sqlserver.BusinessIntelligenceInstance("exampleBusinessIntelligenceInstance",
            zone=zones.zones[4].name,
            memory=4,
            storage=100,
            cpu=2,
            machine_type="CLOUD_PREMIUM",
            project_id=0,
            subnet_id=subnet.id,
            vpc_id=vpc.id,
            db_version="201603",
            security_group_lists=[security_group.id],
            weeklies=[
                1,
                2,
                3,
                4,
                5,
                6,
                7,
            ],
            start_time="00:00",
            span=6,
            instance_name="tf_example")
        example_business_intelligence_file = tencentcloud.sqlserver.BusinessIntelligenceFile("exampleBusinessIntelligenceFile",
            instance_id=example_business_intelligence_instance.id,
            file_url="https://tf-example-1208515315.cos.ap-guangzhou.myqcloud.com/sqlserver_business_intelligence_file.txt",
            file_type="FLAT",
            remark="desc.")
        ```
        <!--End PulumiCodeChooser -->

        ## Import

        sqlserver business_intelligence_file can be imported using the id, e.g.

        ```sh
        $ pulumi import tencentcloud:Sqlserver/businessIntelligenceFile:BusinessIntelligenceFile example mssqlbi-fo2dwujt#test.xlsx
        ```

        :param str resource_name: The name of the resource.
        :param BusinessIntelligenceFileArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(BusinessIntelligenceFileArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 file_type: Optional[pulumi.Input[str]] = None,
                 file_url: Optional[pulumi.Input[str]] = None,
                 instance_id: Optional[pulumi.Input[str]] = None,
                 remark: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = BusinessIntelligenceFileArgs.__new__(BusinessIntelligenceFileArgs)

            if file_type is None and not opts.urn:
                raise TypeError("Missing required property 'file_type'")
            __props__.__dict__["file_type"] = file_type
            if file_url is None and not opts.urn:
                raise TypeError("Missing required property 'file_url'")
            __props__.__dict__["file_url"] = file_url
            if instance_id is None and not opts.urn:
                raise TypeError("Missing required property 'instance_id'")
            __props__.__dict__["instance_id"] = instance_id
            __props__.__dict__["remark"] = remark
        super(BusinessIntelligenceFile, __self__).__init__(
            'tencentcloud:Sqlserver/businessIntelligenceFile:BusinessIntelligenceFile',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            file_type: Optional[pulumi.Input[str]] = None,
            file_url: Optional[pulumi.Input[str]] = None,
            instance_id: Optional[pulumi.Input[str]] = None,
            remark: Optional[pulumi.Input[str]] = None) -> 'BusinessIntelligenceFile':
        """
        Get an existing BusinessIntelligenceFile resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] file_type: File Type FLAT - Flat File as Data Source, SSIS - ssis project package.
        :param pulumi.Input[str] file_url: Cos Url.
        :param pulumi.Input[str] instance_id: instance id.
        :param pulumi.Input[str] remark: remark.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _BusinessIntelligenceFileState.__new__(_BusinessIntelligenceFileState)

        __props__.__dict__["file_type"] = file_type
        __props__.__dict__["file_url"] = file_url
        __props__.__dict__["instance_id"] = instance_id
        __props__.__dict__["remark"] = remark
        return BusinessIntelligenceFile(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="fileType")
    def file_type(self) -> pulumi.Output[str]:
        """
        File Type FLAT - Flat File as Data Source, SSIS - ssis project package.
        """
        return pulumi.get(self, "file_type")

    @property
    @pulumi.getter(name="fileUrl")
    def file_url(self) -> pulumi.Output[str]:
        """
        Cos Url.
        """
        return pulumi.get(self, "file_url")

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> pulumi.Output[str]:
        """
        instance id.
        """
        return pulumi.get(self, "instance_id")

    @property
    @pulumi.getter
    def remark(self) -> pulumi.Output[Optional[str]]:
        """
        remark.
        """
        return pulumi.get(self, "remark")


# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['PayCertificateArgs', 'PayCertificate']

@pulumi.input_type
class PayCertificateArgs:
    def __init__(__self__, *,
                 domain_num: pulumi.Input[int],
                 information: pulumi.Input['PayCertificateInformationArgs'],
                 product_id: pulumi.Input[int],
                 alias: Optional[pulumi.Input[str]] = None,
                 confirm_letter: Optional[pulumi.Input[str]] = None,
                 dv_auths: Optional[pulumi.Input[Sequence[pulumi.Input['PayCertificateDvAuthArgs']]]] = None,
                 project_id: Optional[pulumi.Input[int]] = None,
                 time_span: Optional[pulumi.Input[int]] = None):
        """
        The set of arguments for constructing a PayCertificate resource.
        :param pulumi.Input[int] domain_num: Number of domain names included in the certificate.
        :param pulumi.Input['PayCertificateInformationArgs'] information: Certificate information.
        :param pulumi.Input[int] product_id: Certificate commodity ID. Valid value ranges: (3~42). `3` means SecureSite enhanced Enterprise Edition (EV Pro), `4` means SecureSite enhanced (EV), `5` means SecureSite Enterprise Professional Edition (OV Pro), `6` means SecureSite Enterprise (OV), `7` means SecureSite Enterprise Type (OV) wildcard, `8` means Geotrust enhanced (EV), `9` means Geotrust enterprise (OV), `10` means Geotrust enterprise (OV) wildcard, `11` means TrustAsia domain type multi-domain SSL certificate, `12` means TrustAsia domain type ( DV) wildcard, `13` means TrustAsia enterprise wildcard (OV) SSL certificate (D3), `14` means TrustAsia enterprise (OV) SSL certificate (D3), `15` means TrustAsia enterprise multi-domain (OV) SSL certificate (D3), `16` means TrustAsia Enhanced (EV) SSL Certificate (D3), `17` means TrustAsia Enhanced Multiple Domain (EV) SSL Certificate (D3), `18` means GlobalSign Enterprise (OV) SSL Certificate, `19` means GlobalSign Enterprise Wildcard (OV) SSL Certificate, `20` means GlobalSign Enhanced (EV) SSL Certificate, `21` means TrustAsia Enterprise Wildcard Multiple Domain (OV) SSL Certificate (D3), `22` means GlobalSign Enterprise Multiple Domain (OV) SSL Certificate, `23` means GlobalSign Enterprise Multiple Wildcard Domain name (OV) SSL certificate, `24` means GlobalSign enhanced multi-domain (EV) SSL certificate, `25` means Wotrus domain type certificate, `26` means Wotrus domain type multi-domain certificate, `27` means Wotrus domain type wildcard certificate, `28` means Wotrus enterprise type certificate, `29` means Wotrus enterprise multi-domain certificate, `30` means Wotrus enterprise wildcard certificate, `31` means Wotrus enhanced certificate, `32` means Wotrus enhanced multi-domain certificate, `33` means WoTrus National Secret Domain name Certificate, `34` means WoTrus National Secret Domain name Certificate (multiple domain names), `35` WoTrus National Secret Domain name Certificate (wildcard), `37` means WoTrus State Secret Enterprise Certificate, `38` means WoTrus State Secret Enterprise Certificate (multiple domain names), `39` means WoTrus State Secret Enterprise Certificate (wildcard), `40` means WoTrus National secret enhanced certificate, `41` means WoTrus National Secret enhanced Certificate (multiple domain names), `42` means TrustAsia- Domain name Certificate (wildcard multiple domain names), `43` means DNSPod Enterprise (OV) SSL Certificate, `44` means DNSPod- Enterprise (OV) wildcard SSL certificate, `45` means DNSPod Enterprise (OV) Multi-domain name SSL Certificate, `46` means DNSPod enhanced (EV) SSL certificate, `47` means DNSPod enhanced (EV) multi-domain name SSL certificate, `48` means DNSPod Domain name Type (DV) SSL Certificate, `49` means DNSPod Domain name Type (DV) wildcard SSL certificate, `50` means DNSPod domain name type (DV) multi-domain name SSL certificate, `51` means DNSPod (State Secret) Enterprise (OV) SSL certificate, `52` DNSPod (National Secret) Enterprise (OV) wildcard SSL certificate, `53` means DNSPod (National Secret) Enterprise (OV) multi-domain SSL certificate, `54` means DNSPod (National Secret) Domain Name (DV) SSL certificate, `55` means DNSPod (National Secret) Domain Name Type (DV) wildcard SSL certificate, `56` means DNSPod (National Secret) Domain Name Type (DV) multi-domain SSL certificate.
        :param pulumi.Input[str] alias: Remark name.
        :param pulumi.Input[str] confirm_letter: The base64-encoded certificate confirmation file should be in jpg, jpeg, png, pdf, and the size should be between 1kb and 1.4M. Note: it only works when product_id is set to 8, 9 or 10.
        :param pulumi.Input[Sequence[pulumi.Input['PayCertificateDvAuthArgs']]] dv_auths: DV certification information.
        :param pulumi.Input[int] project_id: The ID of project.
        :param pulumi.Input[int] time_span: Certificate period, currently only supports 1 year certificate purchase.
        """
        pulumi.set(__self__, "domain_num", domain_num)
        pulumi.set(__self__, "information", information)
        pulumi.set(__self__, "product_id", product_id)
        if alias is not None:
            pulumi.set(__self__, "alias", alias)
        if confirm_letter is not None:
            pulumi.set(__self__, "confirm_letter", confirm_letter)
        if dv_auths is not None:
            pulumi.set(__self__, "dv_auths", dv_auths)
        if project_id is not None:
            pulumi.set(__self__, "project_id", project_id)
        if time_span is not None:
            pulumi.set(__self__, "time_span", time_span)

    @property
    @pulumi.getter(name="domainNum")
    def domain_num(self) -> pulumi.Input[int]:
        """
        Number of domain names included in the certificate.
        """
        return pulumi.get(self, "domain_num")

    @domain_num.setter
    def domain_num(self, value: pulumi.Input[int]):
        pulumi.set(self, "domain_num", value)

    @property
    @pulumi.getter
    def information(self) -> pulumi.Input['PayCertificateInformationArgs']:
        """
        Certificate information.
        """
        return pulumi.get(self, "information")

    @information.setter
    def information(self, value: pulumi.Input['PayCertificateInformationArgs']):
        pulumi.set(self, "information", value)

    @property
    @pulumi.getter(name="productId")
    def product_id(self) -> pulumi.Input[int]:
        """
        Certificate commodity ID. Valid value ranges: (3~42). `3` means SecureSite enhanced Enterprise Edition (EV Pro), `4` means SecureSite enhanced (EV), `5` means SecureSite Enterprise Professional Edition (OV Pro), `6` means SecureSite Enterprise (OV), `7` means SecureSite Enterprise Type (OV) wildcard, `8` means Geotrust enhanced (EV), `9` means Geotrust enterprise (OV), `10` means Geotrust enterprise (OV) wildcard, `11` means TrustAsia domain type multi-domain SSL certificate, `12` means TrustAsia domain type ( DV) wildcard, `13` means TrustAsia enterprise wildcard (OV) SSL certificate (D3), `14` means TrustAsia enterprise (OV) SSL certificate (D3), `15` means TrustAsia enterprise multi-domain (OV) SSL certificate (D3), `16` means TrustAsia Enhanced (EV) SSL Certificate (D3), `17` means TrustAsia Enhanced Multiple Domain (EV) SSL Certificate (D3), `18` means GlobalSign Enterprise (OV) SSL Certificate, `19` means GlobalSign Enterprise Wildcard (OV) SSL Certificate, `20` means GlobalSign Enhanced (EV) SSL Certificate, `21` means TrustAsia Enterprise Wildcard Multiple Domain (OV) SSL Certificate (D3), `22` means GlobalSign Enterprise Multiple Domain (OV) SSL Certificate, `23` means GlobalSign Enterprise Multiple Wildcard Domain name (OV) SSL certificate, `24` means GlobalSign enhanced multi-domain (EV) SSL certificate, `25` means Wotrus domain type certificate, `26` means Wotrus domain type multi-domain certificate, `27` means Wotrus domain type wildcard certificate, `28` means Wotrus enterprise type certificate, `29` means Wotrus enterprise multi-domain certificate, `30` means Wotrus enterprise wildcard certificate, `31` means Wotrus enhanced certificate, `32` means Wotrus enhanced multi-domain certificate, `33` means WoTrus National Secret Domain name Certificate, `34` means WoTrus National Secret Domain name Certificate (multiple domain names), `35` WoTrus National Secret Domain name Certificate (wildcard), `37` means WoTrus State Secret Enterprise Certificate, `38` means WoTrus State Secret Enterprise Certificate (multiple domain names), `39` means WoTrus State Secret Enterprise Certificate (wildcard), `40` means WoTrus National secret enhanced certificate, `41` means WoTrus National Secret enhanced Certificate (multiple domain names), `42` means TrustAsia- Domain name Certificate (wildcard multiple domain names), `43` means DNSPod Enterprise (OV) SSL Certificate, `44` means DNSPod- Enterprise (OV) wildcard SSL certificate, `45` means DNSPod Enterprise (OV) Multi-domain name SSL Certificate, `46` means DNSPod enhanced (EV) SSL certificate, `47` means DNSPod enhanced (EV) multi-domain name SSL certificate, `48` means DNSPod Domain name Type (DV) SSL Certificate, `49` means DNSPod Domain name Type (DV) wildcard SSL certificate, `50` means DNSPod domain name type (DV) multi-domain name SSL certificate, `51` means DNSPod (State Secret) Enterprise (OV) SSL certificate, `52` DNSPod (National Secret) Enterprise (OV) wildcard SSL certificate, `53` means DNSPod (National Secret) Enterprise (OV) multi-domain SSL certificate, `54` means DNSPod (National Secret) Domain Name (DV) SSL certificate, `55` means DNSPod (National Secret) Domain Name Type (DV) wildcard SSL certificate, `56` means DNSPod (National Secret) Domain Name Type (DV) multi-domain SSL certificate.
        """
        return pulumi.get(self, "product_id")

    @product_id.setter
    def product_id(self, value: pulumi.Input[int]):
        pulumi.set(self, "product_id", value)

    @property
    @pulumi.getter
    def alias(self) -> Optional[pulumi.Input[str]]:
        """
        Remark name.
        """
        return pulumi.get(self, "alias")

    @alias.setter
    def alias(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "alias", value)

    @property
    @pulumi.getter(name="confirmLetter")
    def confirm_letter(self) -> Optional[pulumi.Input[str]]:
        """
        The base64-encoded certificate confirmation file should be in jpg, jpeg, png, pdf, and the size should be between 1kb and 1.4M. Note: it only works when product_id is set to 8, 9 or 10.
        """
        return pulumi.get(self, "confirm_letter")

    @confirm_letter.setter
    def confirm_letter(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "confirm_letter", value)

    @property
    @pulumi.getter(name="dvAuths")
    def dv_auths(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['PayCertificateDvAuthArgs']]]]:
        """
        DV certification information.
        """
        return pulumi.get(self, "dv_auths")

    @dv_auths.setter
    def dv_auths(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['PayCertificateDvAuthArgs']]]]):
        pulumi.set(self, "dv_auths", value)

    @property
    @pulumi.getter(name="projectId")
    def project_id(self) -> Optional[pulumi.Input[int]]:
        """
        The ID of project.
        """
        return pulumi.get(self, "project_id")

    @project_id.setter
    def project_id(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "project_id", value)

    @property
    @pulumi.getter(name="timeSpan")
    def time_span(self) -> Optional[pulumi.Input[int]]:
        """
        Certificate period, currently only supports 1 year certificate purchase.
        """
        return pulumi.get(self, "time_span")

    @time_span.setter
    def time_span(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "time_span", value)


@pulumi.input_type
class _PayCertificateState:
    def __init__(__self__, *,
                 alias: Optional[pulumi.Input[str]] = None,
                 certificate_id: Optional[pulumi.Input[str]] = None,
                 confirm_letter: Optional[pulumi.Input[str]] = None,
                 domain_num: Optional[pulumi.Input[int]] = None,
                 dv_auths: Optional[pulumi.Input[Sequence[pulumi.Input['PayCertificateDvAuthArgs']]]] = None,
                 information: Optional[pulumi.Input['PayCertificateInformationArgs']] = None,
                 order_id: Optional[pulumi.Input[str]] = None,
                 product_id: Optional[pulumi.Input[int]] = None,
                 project_id: Optional[pulumi.Input[int]] = None,
                 status: Optional[pulumi.Input[int]] = None,
                 time_span: Optional[pulumi.Input[int]] = None):
        """
        Input properties used for looking up and filtering PayCertificate resources.
        :param pulumi.Input[str] alias: Remark name.
        :param pulumi.Input[str] certificate_id: Returned certificate ID.
        :param pulumi.Input[str] confirm_letter: The base64-encoded certificate confirmation file should be in jpg, jpeg, png, pdf, and the size should be between 1kb and 1.4M. Note: it only works when product_id is set to 8, 9 or 10.
        :param pulumi.Input[int] domain_num: Number of domain names included in the certificate.
        :param pulumi.Input[Sequence[pulumi.Input['PayCertificateDvAuthArgs']]] dv_auths: DV certification information.
        :param pulumi.Input['PayCertificateInformationArgs'] information: Certificate information.
        :param pulumi.Input[str] order_id: Order ID returned.
        :param pulumi.Input[int] product_id: Certificate commodity ID. Valid value ranges: (3~42). `3` means SecureSite enhanced Enterprise Edition (EV Pro), `4` means SecureSite enhanced (EV), `5` means SecureSite Enterprise Professional Edition (OV Pro), `6` means SecureSite Enterprise (OV), `7` means SecureSite Enterprise Type (OV) wildcard, `8` means Geotrust enhanced (EV), `9` means Geotrust enterprise (OV), `10` means Geotrust enterprise (OV) wildcard, `11` means TrustAsia domain type multi-domain SSL certificate, `12` means TrustAsia domain type ( DV) wildcard, `13` means TrustAsia enterprise wildcard (OV) SSL certificate (D3), `14` means TrustAsia enterprise (OV) SSL certificate (D3), `15` means TrustAsia enterprise multi-domain (OV) SSL certificate (D3), `16` means TrustAsia Enhanced (EV) SSL Certificate (D3), `17` means TrustAsia Enhanced Multiple Domain (EV) SSL Certificate (D3), `18` means GlobalSign Enterprise (OV) SSL Certificate, `19` means GlobalSign Enterprise Wildcard (OV) SSL Certificate, `20` means GlobalSign Enhanced (EV) SSL Certificate, `21` means TrustAsia Enterprise Wildcard Multiple Domain (OV) SSL Certificate (D3), `22` means GlobalSign Enterprise Multiple Domain (OV) SSL Certificate, `23` means GlobalSign Enterprise Multiple Wildcard Domain name (OV) SSL certificate, `24` means GlobalSign enhanced multi-domain (EV) SSL certificate, `25` means Wotrus domain type certificate, `26` means Wotrus domain type multi-domain certificate, `27` means Wotrus domain type wildcard certificate, `28` means Wotrus enterprise type certificate, `29` means Wotrus enterprise multi-domain certificate, `30` means Wotrus enterprise wildcard certificate, `31` means Wotrus enhanced certificate, `32` means Wotrus enhanced multi-domain certificate, `33` means WoTrus National Secret Domain name Certificate, `34` means WoTrus National Secret Domain name Certificate (multiple domain names), `35` WoTrus National Secret Domain name Certificate (wildcard), `37` means WoTrus State Secret Enterprise Certificate, `38` means WoTrus State Secret Enterprise Certificate (multiple domain names), `39` means WoTrus State Secret Enterprise Certificate (wildcard), `40` means WoTrus National secret enhanced certificate, `41` means WoTrus National Secret enhanced Certificate (multiple domain names), `42` means TrustAsia- Domain name Certificate (wildcard multiple domain names), `43` means DNSPod Enterprise (OV) SSL Certificate, `44` means DNSPod- Enterprise (OV) wildcard SSL certificate, `45` means DNSPod Enterprise (OV) Multi-domain name SSL Certificate, `46` means DNSPod enhanced (EV) SSL certificate, `47` means DNSPod enhanced (EV) multi-domain name SSL certificate, `48` means DNSPod Domain name Type (DV) SSL Certificate, `49` means DNSPod Domain name Type (DV) wildcard SSL certificate, `50` means DNSPod domain name type (DV) multi-domain name SSL certificate, `51` means DNSPod (State Secret) Enterprise (OV) SSL certificate, `52` DNSPod (National Secret) Enterprise (OV) wildcard SSL certificate, `53` means DNSPod (National Secret) Enterprise (OV) multi-domain SSL certificate, `54` means DNSPod (National Secret) Domain Name (DV) SSL certificate, `55` means DNSPod (National Secret) Domain Name Type (DV) wildcard SSL certificate, `56` means DNSPod (National Secret) Domain Name Type (DV) multi-domain SSL certificate.
        :param pulumi.Input[int] project_id: The ID of project.
        :param pulumi.Input[int] status: SSL certificate status.
        :param pulumi.Input[int] time_span: Certificate period, currently only supports 1 year certificate purchase.
        """
        if alias is not None:
            pulumi.set(__self__, "alias", alias)
        if certificate_id is not None:
            pulumi.set(__self__, "certificate_id", certificate_id)
        if confirm_letter is not None:
            pulumi.set(__self__, "confirm_letter", confirm_letter)
        if domain_num is not None:
            pulumi.set(__self__, "domain_num", domain_num)
        if dv_auths is not None:
            pulumi.set(__self__, "dv_auths", dv_auths)
        if information is not None:
            pulumi.set(__self__, "information", information)
        if order_id is not None:
            pulumi.set(__self__, "order_id", order_id)
        if product_id is not None:
            pulumi.set(__self__, "product_id", product_id)
        if project_id is not None:
            pulumi.set(__self__, "project_id", project_id)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if time_span is not None:
            pulumi.set(__self__, "time_span", time_span)

    @property
    @pulumi.getter
    def alias(self) -> Optional[pulumi.Input[str]]:
        """
        Remark name.
        """
        return pulumi.get(self, "alias")

    @alias.setter
    def alias(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "alias", value)

    @property
    @pulumi.getter(name="certificateId")
    def certificate_id(self) -> Optional[pulumi.Input[str]]:
        """
        Returned certificate ID.
        """
        return pulumi.get(self, "certificate_id")

    @certificate_id.setter
    def certificate_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "certificate_id", value)

    @property
    @pulumi.getter(name="confirmLetter")
    def confirm_letter(self) -> Optional[pulumi.Input[str]]:
        """
        The base64-encoded certificate confirmation file should be in jpg, jpeg, png, pdf, and the size should be between 1kb and 1.4M. Note: it only works when product_id is set to 8, 9 or 10.
        """
        return pulumi.get(self, "confirm_letter")

    @confirm_letter.setter
    def confirm_letter(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "confirm_letter", value)

    @property
    @pulumi.getter(name="domainNum")
    def domain_num(self) -> Optional[pulumi.Input[int]]:
        """
        Number of domain names included in the certificate.
        """
        return pulumi.get(self, "domain_num")

    @domain_num.setter
    def domain_num(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "domain_num", value)

    @property
    @pulumi.getter(name="dvAuths")
    def dv_auths(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['PayCertificateDvAuthArgs']]]]:
        """
        DV certification information.
        """
        return pulumi.get(self, "dv_auths")

    @dv_auths.setter
    def dv_auths(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['PayCertificateDvAuthArgs']]]]):
        pulumi.set(self, "dv_auths", value)

    @property
    @pulumi.getter
    def information(self) -> Optional[pulumi.Input['PayCertificateInformationArgs']]:
        """
        Certificate information.
        """
        return pulumi.get(self, "information")

    @information.setter
    def information(self, value: Optional[pulumi.Input['PayCertificateInformationArgs']]):
        pulumi.set(self, "information", value)

    @property
    @pulumi.getter(name="orderId")
    def order_id(self) -> Optional[pulumi.Input[str]]:
        """
        Order ID returned.
        """
        return pulumi.get(self, "order_id")

    @order_id.setter
    def order_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "order_id", value)

    @property
    @pulumi.getter(name="productId")
    def product_id(self) -> Optional[pulumi.Input[int]]:
        """
        Certificate commodity ID. Valid value ranges: (3~42). `3` means SecureSite enhanced Enterprise Edition (EV Pro), `4` means SecureSite enhanced (EV), `5` means SecureSite Enterprise Professional Edition (OV Pro), `6` means SecureSite Enterprise (OV), `7` means SecureSite Enterprise Type (OV) wildcard, `8` means Geotrust enhanced (EV), `9` means Geotrust enterprise (OV), `10` means Geotrust enterprise (OV) wildcard, `11` means TrustAsia domain type multi-domain SSL certificate, `12` means TrustAsia domain type ( DV) wildcard, `13` means TrustAsia enterprise wildcard (OV) SSL certificate (D3), `14` means TrustAsia enterprise (OV) SSL certificate (D3), `15` means TrustAsia enterprise multi-domain (OV) SSL certificate (D3), `16` means TrustAsia Enhanced (EV) SSL Certificate (D3), `17` means TrustAsia Enhanced Multiple Domain (EV) SSL Certificate (D3), `18` means GlobalSign Enterprise (OV) SSL Certificate, `19` means GlobalSign Enterprise Wildcard (OV) SSL Certificate, `20` means GlobalSign Enhanced (EV) SSL Certificate, `21` means TrustAsia Enterprise Wildcard Multiple Domain (OV) SSL Certificate (D3), `22` means GlobalSign Enterprise Multiple Domain (OV) SSL Certificate, `23` means GlobalSign Enterprise Multiple Wildcard Domain name (OV) SSL certificate, `24` means GlobalSign enhanced multi-domain (EV) SSL certificate, `25` means Wotrus domain type certificate, `26` means Wotrus domain type multi-domain certificate, `27` means Wotrus domain type wildcard certificate, `28` means Wotrus enterprise type certificate, `29` means Wotrus enterprise multi-domain certificate, `30` means Wotrus enterprise wildcard certificate, `31` means Wotrus enhanced certificate, `32` means Wotrus enhanced multi-domain certificate, `33` means WoTrus National Secret Domain name Certificate, `34` means WoTrus National Secret Domain name Certificate (multiple domain names), `35` WoTrus National Secret Domain name Certificate (wildcard), `37` means WoTrus State Secret Enterprise Certificate, `38` means WoTrus State Secret Enterprise Certificate (multiple domain names), `39` means WoTrus State Secret Enterprise Certificate (wildcard), `40` means WoTrus National secret enhanced certificate, `41` means WoTrus National Secret enhanced Certificate (multiple domain names), `42` means TrustAsia- Domain name Certificate (wildcard multiple domain names), `43` means DNSPod Enterprise (OV) SSL Certificate, `44` means DNSPod- Enterprise (OV) wildcard SSL certificate, `45` means DNSPod Enterprise (OV) Multi-domain name SSL Certificate, `46` means DNSPod enhanced (EV) SSL certificate, `47` means DNSPod enhanced (EV) multi-domain name SSL certificate, `48` means DNSPod Domain name Type (DV) SSL Certificate, `49` means DNSPod Domain name Type (DV) wildcard SSL certificate, `50` means DNSPod domain name type (DV) multi-domain name SSL certificate, `51` means DNSPod (State Secret) Enterprise (OV) SSL certificate, `52` DNSPod (National Secret) Enterprise (OV) wildcard SSL certificate, `53` means DNSPod (National Secret) Enterprise (OV) multi-domain SSL certificate, `54` means DNSPod (National Secret) Domain Name (DV) SSL certificate, `55` means DNSPod (National Secret) Domain Name Type (DV) wildcard SSL certificate, `56` means DNSPod (National Secret) Domain Name Type (DV) multi-domain SSL certificate.
        """
        return pulumi.get(self, "product_id")

    @product_id.setter
    def product_id(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "product_id", value)

    @property
    @pulumi.getter(name="projectId")
    def project_id(self) -> Optional[pulumi.Input[int]]:
        """
        The ID of project.
        """
        return pulumi.get(self, "project_id")

    @project_id.setter
    def project_id(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "project_id", value)

    @property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[int]]:
        """
        SSL certificate status.
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "status", value)

    @property
    @pulumi.getter(name="timeSpan")
    def time_span(self) -> Optional[pulumi.Input[int]]:
        """
        Certificate period, currently only supports 1 year certificate purchase.
        """
        return pulumi.get(self, "time_span")

    @time_span.setter
    def time_span(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "time_span", value)


class PayCertificate(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 alias: Optional[pulumi.Input[str]] = None,
                 confirm_letter: Optional[pulumi.Input[str]] = None,
                 domain_num: Optional[pulumi.Input[int]] = None,
                 dv_auths: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['PayCertificateDvAuthArgs']]]]] = None,
                 information: Optional[pulumi.Input[pulumi.InputType['PayCertificateInformationArgs']]] = None,
                 product_id: Optional[pulumi.Input[int]] = None,
                 project_id: Optional[pulumi.Input[int]] = None,
                 time_span: Optional[pulumi.Input[int]] = None,
                 __props__=None):
        """
        Provide a resource to create a payment SSL.

        > **NOTE:** Provides the creation of a paid certificate, including the submission of certificate information and order functions;
        currently, it does not support re-issuing certificates, revoking certificates, and deleting certificates; the certificate remarks
        and belonging items can be updated. The Destroy operation will only cancel the certificate order, and will not delete the
        certificate and refund the fee. If you need a refund, you need to check the current certificate status in the console
        as `Review Cancel`, and then you can click `Request a refund` to refund the fee. To update the information of a certificate,
        we will automatically roll back your certificate if this certificate is already in the validation stage. This process may take
        some time because the CA callback is time-consuming. Please be patient and follow the prompt message. Or, feel free to contact
        Tencent Cloud Support.

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        example = tencentcloud.ssl.PayCertificate("example",
            alias="ssl desc.",
            domain_num=1,
            information=tencentcloud.ssl.PayCertificateInformationArgs(
                admin_email="test@tencent.com",
                admin_first_name="test",
                admin_last_name="test",
                admin_phone_num="12345678901",
                admin_position="developer",
                certificate_domain="www.example.com",
                contact_email="test@tencent.com",
                contact_first_name="test",
                contact_last_name="test",
                contact_number="12345678901",
                contact_position="developer",
                csr_type="online",
                organization_address="广东省深圳市南山区腾讯大厦1000号",
                organization_city="深圳市",
                organization_country="CN",
                organization_division="Qcloud",
                organization_name="Tencent",
                organization_region="广东省",
                phone_area_code="0755",
                phone_number="86013388",
                postal_code="0755",
                verify_type="DNS",
            ),
            product_id=33,
            project_id=0)
        ```
        <!--End PulumiCodeChooser -->

        ## Import

        payment SSL instance can be imported, e.g.

        ```sh
        $ pulumi import tencentcloud:Ssl/payCertificate:PayCertificate ssl iPQNn61x#33#1#1
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] alias: Remark name.
        :param pulumi.Input[str] confirm_letter: The base64-encoded certificate confirmation file should be in jpg, jpeg, png, pdf, and the size should be between 1kb and 1.4M. Note: it only works when product_id is set to 8, 9 or 10.
        :param pulumi.Input[int] domain_num: Number of domain names included in the certificate.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['PayCertificateDvAuthArgs']]]] dv_auths: DV certification information.
        :param pulumi.Input[pulumi.InputType['PayCertificateInformationArgs']] information: Certificate information.
        :param pulumi.Input[int] product_id: Certificate commodity ID. Valid value ranges: (3~42). `3` means SecureSite enhanced Enterprise Edition (EV Pro), `4` means SecureSite enhanced (EV), `5` means SecureSite Enterprise Professional Edition (OV Pro), `6` means SecureSite Enterprise (OV), `7` means SecureSite Enterprise Type (OV) wildcard, `8` means Geotrust enhanced (EV), `9` means Geotrust enterprise (OV), `10` means Geotrust enterprise (OV) wildcard, `11` means TrustAsia domain type multi-domain SSL certificate, `12` means TrustAsia domain type ( DV) wildcard, `13` means TrustAsia enterprise wildcard (OV) SSL certificate (D3), `14` means TrustAsia enterprise (OV) SSL certificate (D3), `15` means TrustAsia enterprise multi-domain (OV) SSL certificate (D3), `16` means TrustAsia Enhanced (EV) SSL Certificate (D3), `17` means TrustAsia Enhanced Multiple Domain (EV) SSL Certificate (D3), `18` means GlobalSign Enterprise (OV) SSL Certificate, `19` means GlobalSign Enterprise Wildcard (OV) SSL Certificate, `20` means GlobalSign Enhanced (EV) SSL Certificate, `21` means TrustAsia Enterprise Wildcard Multiple Domain (OV) SSL Certificate (D3), `22` means GlobalSign Enterprise Multiple Domain (OV) SSL Certificate, `23` means GlobalSign Enterprise Multiple Wildcard Domain name (OV) SSL certificate, `24` means GlobalSign enhanced multi-domain (EV) SSL certificate, `25` means Wotrus domain type certificate, `26` means Wotrus domain type multi-domain certificate, `27` means Wotrus domain type wildcard certificate, `28` means Wotrus enterprise type certificate, `29` means Wotrus enterprise multi-domain certificate, `30` means Wotrus enterprise wildcard certificate, `31` means Wotrus enhanced certificate, `32` means Wotrus enhanced multi-domain certificate, `33` means WoTrus National Secret Domain name Certificate, `34` means WoTrus National Secret Domain name Certificate (multiple domain names), `35` WoTrus National Secret Domain name Certificate (wildcard), `37` means WoTrus State Secret Enterprise Certificate, `38` means WoTrus State Secret Enterprise Certificate (multiple domain names), `39` means WoTrus State Secret Enterprise Certificate (wildcard), `40` means WoTrus National secret enhanced certificate, `41` means WoTrus National Secret enhanced Certificate (multiple domain names), `42` means TrustAsia- Domain name Certificate (wildcard multiple domain names), `43` means DNSPod Enterprise (OV) SSL Certificate, `44` means DNSPod- Enterprise (OV) wildcard SSL certificate, `45` means DNSPod Enterprise (OV) Multi-domain name SSL Certificate, `46` means DNSPod enhanced (EV) SSL certificate, `47` means DNSPod enhanced (EV) multi-domain name SSL certificate, `48` means DNSPod Domain name Type (DV) SSL Certificate, `49` means DNSPod Domain name Type (DV) wildcard SSL certificate, `50` means DNSPod domain name type (DV) multi-domain name SSL certificate, `51` means DNSPod (State Secret) Enterprise (OV) SSL certificate, `52` DNSPod (National Secret) Enterprise (OV) wildcard SSL certificate, `53` means DNSPod (National Secret) Enterprise (OV) multi-domain SSL certificate, `54` means DNSPod (National Secret) Domain Name (DV) SSL certificate, `55` means DNSPod (National Secret) Domain Name Type (DV) wildcard SSL certificate, `56` means DNSPod (National Secret) Domain Name Type (DV) multi-domain SSL certificate.
        :param pulumi.Input[int] project_id: The ID of project.
        :param pulumi.Input[int] time_span: Certificate period, currently only supports 1 year certificate purchase.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: PayCertificateArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Provide a resource to create a payment SSL.

        > **NOTE:** Provides the creation of a paid certificate, including the submission of certificate information and order functions;
        currently, it does not support re-issuing certificates, revoking certificates, and deleting certificates; the certificate remarks
        and belonging items can be updated. The Destroy operation will only cancel the certificate order, and will not delete the
        certificate and refund the fee. If you need a refund, you need to check the current certificate status in the console
        as `Review Cancel`, and then you can click `Request a refund` to refund the fee. To update the information of a certificate,
        we will automatically roll back your certificate if this certificate is already in the validation stage. This process may take
        some time because the CA callback is time-consuming. Please be patient and follow the prompt message. Or, feel free to contact
        Tencent Cloud Support.

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        example = tencentcloud.ssl.PayCertificate("example",
            alias="ssl desc.",
            domain_num=1,
            information=tencentcloud.ssl.PayCertificateInformationArgs(
                admin_email="test@tencent.com",
                admin_first_name="test",
                admin_last_name="test",
                admin_phone_num="12345678901",
                admin_position="developer",
                certificate_domain="www.example.com",
                contact_email="test@tencent.com",
                contact_first_name="test",
                contact_last_name="test",
                contact_number="12345678901",
                contact_position="developer",
                csr_type="online",
                organization_address="广东省深圳市南山区腾讯大厦1000号",
                organization_city="深圳市",
                organization_country="CN",
                organization_division="Qcloud",
                organization_name="Tencent",
                organization_region="广东省",
                phone_area_code="0755",
                phone_number="86013388",
                postal_code="0755",
                verify_type="DNS",
            ),
            product_id=33,
            project_id=0)
        ```
        <!--End PulumiCodeChooser -->

        ## Import

        payment SSL instance can be imported, e.g.

        ```sh
        $ pulumi import tencentcloud:Ssl/payCertificate:PayCertificate ssl iPQNn61x#33#1#1
        ```

        :param str resource_name: The name of the resource.
        :param PayCertificateArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(PayCertificateArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 alias: Optional[pulumi.Input[str]] = None,
                 confirm_letter: Optional[pulumi.Input[str]] = None,
                 domain_num: Optional[pulumi.Input[int]] = None,
                 dv_auths: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['PayCertificateDvAuthArgs']]]]] = None,
                 information: Optional[pulumi.Input[pulumi.InputType['PayCertificateInformationArgs']]] = None,
                 product_id: Optional[pulumi.Input[int]] = None,
                 project_id: Optional[pulumi.Input[int]] = None,
                 time_span: Optional[pulumi.Input[int]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = PayCertificateArgs.__new__(PayCertificateArgs)

            __props__.__dict__["alias"] = alias
            __props__.__dict__["confirm_letter"] = confirm_letter
            if domain_num is None and not opts.urn:
                raise TypeError("Missing required property 'domain_num'")
            __props__.__dict__["domain_num"] = domain_num
            __props__.__dict__["dv_auths"] = dv_auths
            if information is None and not opts.urn:
                raise TypeError("Missing required property 'information'")
            __props__.__dict__["information"] = information
            if product_id is None and not opts.urn:
                raise TypeError("Missing required property 'product_id'")
            __props__.__dict__["product_id"] = product_id
            __props__.__dict__["project_id"] = project_id
            __props__.__dict__["time_span"] = time_span
            __props__.__dict__["certificate_id"] = None
            __props__.__dict__["order_id"] = None
            __props__.__dict__["status"] = None
        super(PayCertificate, __self__).__init__(
            'tencentcloud:Ssl/payCertificate:PayCertificate',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            alias: Optional[pulumi.Input[str]] = None,
            certificate_id: Optional[pulumi.Input[str]] = None,
            confirm_letter: Optional[pulumi.Input[str]] = None,
            domain_num: Optional[pulumi.Input[int]] = None,
            dv_auths: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['PayCertificateDvAuthArgs']]]]] = None,
            information: Optional[pulumi.Input[pulumi.InputType['PayCertificateInformationArgs']]] = None,
            order_id: Optional[pulumi.Input[str]] = None,
            product_id: Optional[pulumi.Input[int]] = None,
            project_id: Optional[pulumi.Input[int]] = None,
            status: Optional[pulumi.Input[int]] = None,
            time_span: Optional[pulumi.Input[int]] = None) -> 'PayCertificate':
        """
        Get an existing PayCertificate resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] alias: Remark name.
        :param pulumi.Input[str] certificate_id: Returned certificate ID.
        :param pulumi.Input[str] confirm_letter: The base64-encoded certificate confirmation file should be in jpg, jpeg, png, pdf, and the size should be between 1kb and 1.4M. Note: it only works when product_id is set to 8, 9 or 10.
        :param pulumi.Input[int] domain_num: Number of domain names included in the certificate.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['PayCertificateDvAuthArgs']]]] dv_auths: DV certification information.
        :param pulumi.Input[pulumi.InputType['PayCertificateInformationArgs']] information: Certificate information.
        :param pulumi.Input[str] order_id: Order ID returned.
        :param pulumi.Input[int] product_id: Certificate commodity ID. Valid value ranges: (3~42). `3` means SecureSite enhanced Enterprise Edition (EV Pro), `4` means SecureSite enhanced (EV), `5` means SecureSite Enterprise Professional Edition (OV Pro), `6` means SecureSite Enterprise (OV), `7` means SecureSite Enterprise Type (OV) wildcard, `8` means Geotrust enhanced (EV), `9` means Geotrust enterprise (OV), `10` means Geotrust enterprise (OV) wildcard, `11` means TrustAsia domain type multi-domain SSL certificate, `12` means TrustAsia domain type ( DV) wildcard, `13` means TrustAsia enterprise wildcard (OV) SSL certificate (D3), `14` means TrustAsia enterprise (OV) SSL certificate (D3), `15` means TrustAsia enterprise multi-domain (OV) SSL certificate (D3), `16` means TrustAsia Enhanced (EV) SSL Certificate (D3), `17` means TrustAsia Enhanced Multiple Domain (EV) SSL Certificate (D3), `18` means GlobalSign Enterprise (OV) SSL Certificate, `19` means GlobalSign Enterprise Wildcard (OV) SSL Certificate, `20` means GlobalSign Enhanced (EV) SSL Certificate, `21` means TrustAsia Enterprise Wildcard Multiple Domain (OV) SSL Certificate (D3), `22` means GlobalSign Enterprise Multiple Domain (OV) SSL Certificate, `23` means GlobalSign Enterprise Multiple Wildcard Domain name (OV) SSL certificate, `24` means GlobalSign enhanced multi-domain (EV) SSL certificate, `25` means Wotrus domain type certificate, `26` means Wotrus domain type multi-domain certificate, `27` means Wotrus domain type wildcard certificate, `28` means Wotrus enterprise type certificate, `29` means Wotrus enterprise multi-domain certificate, `30` means Wotrus enterprise wildcard certificate, `31` means Wotrus enhanced certificate, `32` means Wotrus enhanced multi-domain certificate, `33` means WoTrus National Secret Domain name Certificate, `34` means WoTrus National Secret Domain name Certificate (multiple domain names), `35` WoTrus National Secret Domain name Certificate (wildcard), `37` means WoTrus State Secret Enterprise Certificate, `38` means WoTrus State Secret Enterprise Certificate (multiple domain names), `39` means WoTrus State Secret Enterprise Certificate (wildcard), `40` means WoTrus National secret enhanced certificate, `41` means WoTrus National Secret enhanced Certificate (multiple domain names), `42` means TrustAsia- Domain name Certificate (wildcard multiple domain names), `43` means DNSPod Enterprise (OV) SSL Certificate, `44` means DNSPod- Enterprise (OV) wildcard SSL certificate, `45` means DNSPod Enterprise (OV) Multi-domain name SSL Certificate, `46` means DNSPod enhanced (EV) SSL certificate, `47` means DNSPod enhanced (EV) multi-domain name SSL certificate, `48` means DNSPod Domain name Type (DV) SSL Certificate, `49` means DNSPod Domain name Type (DV) wildcard SSL certificate, `50` means DNSPod domain name type (DV) multi-domain name SSL certificate, `51` means DNSPod (State Secret) Enterprise (OV) SSL certificate, `52` DNSPod (National Secret) Enterprise (OV) wildcard SSL certificate, `53` means DNSPod (National Secret) Enterprise (OV) multi-domain SSL certificate, `54` means DNSPod (National Secret) Domain Name (DV) SSL certificate, `55` means DNSPod (National Secret) Domain Name Type (DV) wildcard SSL certificate, `56` means DNSPod (National Secret) Domain Name Type (DV) multi-domain SSL certificate.
        :param pulumi.Input[int] project_id: The ID of project.
        :param pulumi.Input[int] status: SSL certificate status.
        :param pulumi.Input[int] time_span: Certificate period, currently only supports 1 year certificate purchase.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _PayCertificateState.__new__(_PayCertificateState)

        __props__.__dict__["alias"] = alias
        __props__.__dict__["certificate_id"] = certificate_id
        __props__.__dict__["confirm_letter"] = confirm_letter
        __props__.__dict__["domain_num"] = domain_num
        __props__.__dict__["dv_auths"] = dv_auths
        __props__.__dict__["information"] = information
        __props__.__dict__["order_id"] = order_id
        __props__.__dict__["product_id"] = product_id
        __props__.__dict__["project_id"] = project_id
        __props__.__dict__["status"] = status
        __props__.__dict__["time_span"] = time_span
        return PayCertificate(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter
    def alias(self) -> pulumi.Output[str]:
        """
        Remark name.
        """
        return pulumi.get(self, "alias")

    @property
    @pulumi.getter(name="certificateId")
    def certificate_id(self) -> pulumi.Output[str]:
        """
        Returned certificate ID.
        """
        return pulumi.get(self, "certificate_id")

    @property
    @pulumi.getter(name="confirmLetter")
    def confirm_letter(self) -> pulumi.Output[Optional[str]]:
        """
        The base64-encoded certificate confirmation file should be in jpg, jpeg, png, pdf, and the size should be between 1kb and 1.4M. Note: it only works when product_id is set to 8, 9 or 10.
        """
        return pulumi.get(self, "confirm_letter")

    @property
    @pulumi.getter(name="domainNum")
    def domain_num(self) -> pulumi.Output[int]:
        """
        Number of domain names included in the certificate.
        """
        return pulumi.get(self, "domain_num")

    @property
    @pulumi.getter(name="dvAuths")
    def dv_auths(self) -> pulumi.Output[Sequence['outputs.PayCertificateDvAuth']]:
        """
        DV certification information.
        """
        return pulumi.get(self, "dv_auths")

    @property
    @pulumi.getter
    def information(self) -> pulumi.Output['outputs.PayCertificateInformation']:
        """
        Certificate information.
        """
        return pulumi.get(self, "information")

    @property
    @pulumi.getter(name="orderId")
    def order_id(self) -> pulumi.Output[str]:
        """
        Order ID returned.
        """
        return pulumi.get(self, "order_id")

    @property
    @pulumi.getter(name="productId")
    def product_id(self) -> pulumi.Output[int]:
        """
        Certificate commodity ID. Valid value ranges: (3~42). `3` means SecureSite enhanced Enterprise Edition (EV Pro), `4` means SecureSite enhanced (EV), `5` means SecureSite Enterprise Professional Edition (OV Pro), `6` means SecureSite Enterprise (OV), `7` means SecureSite Enterprise Type (OV) wildcard, `8` means Geotrust enhanced (EV), `9` means Geotrust enterprise (OV), `10` means Geotrust enterprise (OV) wildcard, `11` means TrustAsia domain type multi-domain SSL certificate, `12` means TrustAsia domain type ( DV) wildcard, `13` means TrustAsia enterprise wildcard (OV) SSL certificate (D3), `14` means TrustAsia enterprise (OV) SSL certificate (D3), `15` means TrustAsia enterprise multi-domain (OV) SSL certificate (D3), `16` means TrustAsia Enhanced (EV) SSL Certificate (D3), `17` means TrustAsia Enhanced Multiple Domain (EV) SSL Certificate (D3), `18` means GlobalSign Enterprise (OV) SSL Certificate, `19` means GlobalSign Enterprise Wildcard (OV) SSL Certificate, `20` means GlobalSign Enhanced (EV) SSL Certificate, `21` means TrustAsia Enterprise Wildcard Multiple Domain (OV) SSL Certificate (D3), `22` means GlobalSign Enterprise Multiple Domain (OV) SSL Certificate, `23` means GlobalSign Enterprise Multiple Wildcard Domain name (OV) SSL certificate, `24` means GlobalSign enhanced multi-domain (EV) SSL certificate, `25` means Wotrus domain type certificate, `26` means Wotrus domain type multi-domain certificate, `27` means Wotrus domain type wildcard certificate, `28` means Wotrus enterprise type certificate, `29` means Wotrus enterprise multi-domain certificate, `30` means Wotrus enterprise wildcard certificate, `31` means Wotrus enhanced certificate, `32` means Wotrus enhanced multi-domain certificate, `33` means WoTrus National Secret Domain name Certificate, `34` means WoTrus National Secret Domain name Certificate (multiple domain names), `35` WoTrus National Secret Domain name Certificate (wildcard), `37` means WoTrus State Secret Enterprise Certificate, `38` means WoTrus State Secret Enterprise Certificate (multiple domain names), `39` means WoTrus State Secret Enterprise Certificate (wildcard), `40` means WoTrus National secret enhanced certificate, `41` means WoTrus National Secret enhanced Certificate (multiple domain names), `42` means TrustAsia- Domain name Certificate (wildcard multiple domain names), `43` means DNSPod Enterprise (OV) SSL Certificate, `44` means DNSPod- Enterprise (OV) wildcard SSL certificate, `45` means DNSPod Enterprise (OV) Multi-domain name SSL Certificate, `46` means DNSPod enhanced (EV) SSL certificate, `47` means DNSPod enhanced (EV) multi-domain name SSL certificate, `48` means DNSPod Domain name Type (DV) SSL Certificate, `49` means DNSPod Domain name Type (DV) wildcard SSL certificate, `50` means DNSPod domain name type (DV) multi-domain name SSL certificate, `51` means DNSPod (State Secret) Enterprise (OV) SSL certificate, `52` DNSPod (National Secret) Enterprise (OV) wildcard SSL certificate, `53` means DNSPod (National Secret) Enterprise (OV) multi-domain SSL certificate, `54` means DNSPod (National Secret) Domain Name (DV) SSL certificate, `55` means DNSPod (National Secret) Domain Name Type (DV) wildcard SSL certificate, `56` means DNSPod (National Secret) Domain Name Type (DV) multi-domain SSL certificate.
        """
        return pulumi.get(self, "product_id")

    @property
    @pulumi.getter(name="projectId")
    def project_id(self) -> pulumi.Output[int]:
        """
        The ID of project.
        """
        return pulumi.get(self, "project_id")

    @property
    @pulumi.getter
    def status(self) -> pulumi.Output[int]:
        """
        SSL certificate status.
        """
        return pulumi.get(self, "status")

    @property
    @pulumi.getter(name="timeSpan")
    def time_span(self) -> pulumi.Output[Optional[int]]:
        """
        Certificate period, currently only supports 1 year certificate purchase.
        """
        return pulumi.get(self, "time_span")


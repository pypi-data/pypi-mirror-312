# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetDescribeHostUpdateRecordDetailResult',
    'AwaitableGetDescribeHostUpdateRecordDetailResult',
    'get_describe_host_update_record_detail',
    'get_describe_host_update_record_detail_output',
]

@pulumi.output_type
class GetDescribeHostUpdateRecordDetailResult:
    """
    A collection of values returned by getDescribeHostUpdateRecordDetail.
    """
    def __init__(__self__, deploy_record_id=None, failed_total_count=None, id=None, record_detail_lists=None, result_output_file=None, running_total_count=None, success_total_count=None):
        if deploy_record_id and not isinstance(deploy_record_id, str):
            raise TypeError("Expected argument 'deploy_record_id' to be a str")
        pulumi.set(__self__, "deploy_record_id", deploy_record_id)
        if failed_total_count and not isinstance(failed_total_count, int):
            raise TypeError("Expected argument 'failed_total_count' to be a int")
        pulumi.set(__self__, "failed_total_count", failed_total_count)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if record_detail_lists and not isinstance(record_detail_lists, list):
            raise TypeError("Expected argument 'record_detail_lists' to be a list")
        pulumi.set(__self__, "record_detail_lists", record_detail_lists)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)
        if running_total_count and not isinstance(running_total_count, int):
            raise TypeError("Expected argument 'running_total_count' to be a int")
        pulumi.set(__self__, "running_total_count", running_total_count)
        if success_total_count and not isinstance(success_total_count, int):
            raise TypeError("Expected argument 'success_total_count' to be a int")
        pulumi.set(__self__, "success_total_count", success_total_count)

    @property
    @pulumi.getter(name="deployRecordId")
    def deploy_record_id(self) -> str:
        return pulumi.get(self, "deploy_record_id")

    @property
    @pulumi.getter(name="failedTotalCount")
    def failed_total_count(self) -> int:
        """
        Total number of failuresNote: This field may return NULL, indicating that the valid value cannot be obtained.
        """
        return pulumi.get(self, "failed_total_count")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="recordDetailLists")
    def record_detail_lists(self) -> Sequence['outputs.GetDescribeHostUpdateRecordDetailRecordDetailListResult']:
        """
        Certificate deployment record listNote: This field may return NULL, indicating that the valid value cannot be obtained.
        """
        return pulumi.get(self, "record_detail_lists")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")

    @property
    @pulumi.getter(name="runningTotalCount")
    def running_total_count(self) -> int:
        """
        Total number of deploymentNote: This field may return NULL, indicating that the valid value cannot be obtained.
        """
        return pulumi.get(self, "running_total_count")

    @property
    @pulumi.getter(name="successTotalCount")
    def success_total_count(self) -> int:
        """
        Total successNote: This field may return NULL, indicating that the valid value cannot be obtained.
        """
        return pulumi.get(self, "success_total_count")


class AwaitableGetDescribeHostUpdateRecordDetailResult(GetDescribeHostUpdateRecordDetailResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetDescribeHostUpdateRecordDetailResult(
            deploy_record_id=self.deploy_record_id,
            failed_total_count=self.failed_total_count,
            id=self.id,
            record_detail_lists=self.record_detail_lists,
            result_output_file=self.result_output_file,
            running_total_count=self.running_total_count,
            success_total_count=self.success_total_count)


def get_describe_host_update_record_detail(deploy_record_id: Optional[str] = None,
                                           result_output_file: Optional[str] = None,
                                           opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetDescribeHostUpdateRecordDetailResult:
    """
    Use this data source to query detailed information of ssl describe_host_update_record_detail

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    describe_host_update_record_detail = tencentcloud.Ssl.get_describe_host_update_record_detail(deploy_record_id="35364")
    ```
    <!--End PulumiCodeChooser -->


    :param str deploy_record_id: One -click update record ID.
    :param str result_output_file: Used to save results.
    """
    __args__ = dict()
    __args__['deployRecordId'] = deploy_record_id
    __args__['resultOutputFile'] = result_output_file
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('tencentcloud:Ssl/getDescribeHostUpdateRecordDetail:getDescribeHostUpdateRecordDetail', __args__, opts=opts, typ=GetDescribeHostUpdateRecordDetailResult).value

    return AwaitableGetDescribeHostUpdateRecordDetailResult(
        deploy_record_id=pulumi.get(__ret__, 'deploy_record_id'),
        failed_total_count=pulumi.get(__ret__, 'failed_total_count'),
        id=pulumi.get(__ret__, 'id'),
        record_detail_lists=pulumi.get(__ret__, 'record_detail_lists'),
        result_output_file=pulumi.get(__ret__, 'result_output_file'),
        running_total_count=pulumi.get(__ret__, 'running_total_count'),
        success_total_count=pulumi.get(__ret__, 'success_total_count'))


@_utilities.lift_output_func(get_describe_host_update_record_detail)
def get_describe_host_update_record_detail_output(deploy_record_id: Optional[pulumi.Input[str]] = None,
                                                  result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                                                  opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetDescribeHostUpdateRecordDetailResult]:
    """
    Use this data source to query detailed information of ssl describe_host_update_record_detail

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    describe_host_update_record_detail = tencentcloud.Ssl.get_describe_host_update_record_detail(deploy_record_id="35364")
    ```
    <!--End PulumiCodeChooser -->


    :param str deploy_record_id: One -click update record ID.
    :param str result_output_file: Used to save results.
    """
    ...

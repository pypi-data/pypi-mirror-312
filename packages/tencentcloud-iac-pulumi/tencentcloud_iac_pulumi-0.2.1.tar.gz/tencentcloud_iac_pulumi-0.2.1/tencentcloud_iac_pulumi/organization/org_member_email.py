# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = ['OrgMemberEmailArgs', 'OrgMemberEmail']

@pulumi.input_type
class OrgMemberEmailArgs:
    def __init__(__self__, *,
                 country_code: pulumi.Input[str],
                 email: pulumi.Input[str],
                 member_uin: pulumi.Input[int],
                 phone: pulumi.Input[str]):
        """
        The set of arguments for constructing a OrgMemberEmail resource.
        :param pulumi.Input[str] country_code: International region.
        :param pulumi.Input[str] email: Email address.
        :param pulumi.Input[int] member_uin: Member Uin.
        :param pulumi.Input[str] phone: Phone number.
        """
        pulumi.set(__self__, "country_code", country_code)
        pulumi.set(__self__, "email", email)
        pulumi.set(__self__, "member_uin", member_uin)
        pulumi.set(__self__, "phone", phone)

    @property
    @pulumi.getter(name="countryCode")
    def country_code(self) -> pulumi.Input[str]:
        """
        International region.
        """
        return pulumi.get(self, "country_code")

    @country_code.setter
    def country_code(self, value: pulumi.Input[str]):
        pulumi.set(self, "country_code", value)

    @property
    @pulumi.getter
    def email(self) -> pulumi.Input[str]:
        """
        Email address.
        """
        return pulumi.get(self, "email")

    @email.setter
    def email(self, value: pulumi.Input[str]):
        pulumi.set(self, "email", value)

    @property
    @pulumi.getter(name="memberUin")
    def member_uin(self) -> pulumi.Input[int]:
        """
        Member Uin.
        """
        return pulumi.get(self, "member_uin")

    @member_uin.setter
    def member_uin(self, value: pulumi.Input[int]):
        pulumi.set(self, "member_uin", value)

    @property
    @pulumi.getter
    def phone(self) -> pulumi.Input[str]:
        """
        Phone number.
        """
        return pulumi.get(self, "phone")

    @phone.setter
    def phone(self, value: pulumi.Input[str]):
        pulumi.set(self, "phone", value)


@pulumi.input_type
class _OrgMemberEmailState:
    def __init__(__self__, *,
                 apply_time: Optional[pulumi.Input[str]] = None,
                 bind_id: Optional[pulumi.Input[int]] = None,
                 bind_status: Optional[pulumi.Input[str]] = None,
                 bind_time: Optional[pulumi.Input[str]] = None,
                 country_code: Optional[pulumi.Input[str]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 email: Optional[pulumi.Input[str]] = None,
                 member_uin: Optional[pulumi.Input[int]] = None,
                 phone: Optional[pulumi.Input[str]] = None,
                 phone_bind: Optional[pulumi.Input[int]] = None):
        """
        Input properties used for looking up and filtering OrgMemberEmail resources.
        :param pulumi.Input[str] apply_time: Application timeNote: This field may return NULL, indicating that the valid value cannot be obtained.
        :param pulumi.Input[int] bind_id: Binding IDNote: This field may return NULL, indicating that the valid value cannot be obtained.
        :param pulumi.Input[str] bind_status: Binding status is not binding: unbound, to be activated: value, successful binding: success, binding failure: failedNote: This field may return NULL, indicating that the valid value cannot be obtained.
        :param pulumi.Input[str] bind_time: Binding timeNote: This field may return NULL, indicating that the valid value cannot be obtained.
        :param pulumi.Input[str] country_code: International region.
        :param pulumi.Input[str] description: FailedNote: This field may return NULL, indicating that the valid value cannot be obtained.
        :param pulumi.Input[str] email: Email address.
        :param pulumi.Input[int] member_uin: Member Uin.
        :param pulumi.Input[str] phone: Phone number.
        :param pulumi.Input[int] phone_bind: Safe mobile phone binding state is not bound: 0, has been binded: 1Note: This field may return NULL, indicating that the valid value cannot be obtained.
        """
        if apply_time is not None:
            pulumi.set(__self__, "apply_time", apply_time)
        if bind_id is not None:
            pulumi.set(__self__, "bind_id", bind_id)
        if bind_status is not None:
            pulumi.set(__self__, "bind_status", bind_status)
        if bind_time is not None:
            pulumi.set(__self__, "bind_time", bind_time)
        if country_code is not None:
            pulumi.set(__self__, "country_code", country_code)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if email is not None:
            pulumi.set(__self__, "email", email)
        if member_uin is not None:
            pulumi.set(__self__, "member_uin", member_uin)
        if phone is not None:
            pulumi.set(__self__, "phone", phone)
        if phone_bind is not None:
            pulumi.set(__self__, "phone_bind", phone_bind)

    @property
    @pulumi.getter(name="applyTime")
    def apply_time(self) -> Optional[pulumi.Input[str]]:
        """
        Application timeNote: This field may return NULL, indicating that the valid value cannot be obtained.
        """
        return pulumi.get(self, "apply_time")

    @apply_time.setter
    def apply_time(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "apply_time", value)

    @property
    @pulumi.getter(name="bindId")
    def bind_id(self) -> Optional[pulumi.Input[int]]:
        """
        Binding IDNote: This field may return NULL, indicating that the valid value cannot be obtained.
        """
        return pulumi.get(self, "bind_id")

    @bind_id.setter
    def bind_id(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "bind_id", value)

    @property
    @pulumi.getter(name="bindStatus")
    def bind_status(self) -> Optional[pulumi.Input[str]]:
        """
        Binding status is not binding: unbound, to be activated: value, successful binding: success, binding failure: failedNote: This field may return NULL, indicating that the valid value cannot be obtained.
        """
        return pulumi.get(self, "bind_status")

    @bind_status.setter
    def bind_status(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "bind_status", value)

    @property
    @pulumi.getter(name="bindTime")
    def bind_time(self) -> Optional[pulumi.Input[str]]:
        """
        Binding timeNote: This field may return NULL, indicating that the valid value cannot be obtained.
        """
        return pulumi.get(self, "bind_time")

    @bind_time.setter
    def bind_time(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "bind_time", value)

    @property
    @pulumi.getter(name="countryCode")
    def country_code(self) -> Optional[pulumi.Input[str]]:
        """
        International region.
        """
        return pulumi.get(self, "country_code")

    @country_code.setter
    def country_code(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "country_code", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        FailedNote: This field may return NULL, indicating that the valid value cannot be obtained.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter
    def email(self) -> Optional[pulumi.Input[str]]:
        """
        Email address.
        """
        return pulumi.get(self, "email")

    @email.setter
    def email(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "email", value)

    @property
    @pulumi.getter(name="memberUin")
    def member_uin(self) -> Optional[pulumi.Input[int]]:
        """
        Member Uin.
        """
        return pulumi.get(self, "member_uin")

    @member_uin.setter
    def member_uin(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "member_uin", value)

    @property
    @pulumi.getter
    def phone(self) -> Optional[pulumi.Input[str]]:
        """
        Phone number.
        """
        return pulumi.get(self, "phone")

    @phone.setter
    def phone(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "phone", value)

    @property
    @pulumi.getter(name="phoneBind")
    def phone_bind(self) -> Optional[pulumi.Input[int]]:
        """
        Safe mobile phone binding state is not bound: 0, has been binded: 1Note: This field may return NULL, indicating that the valid value cannot be obtained.
        """
        return pulumi.get(self, "phone_bind")

    @phone_bind.setter
    def phone_bind(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "phone_bind", value)


class OrgMemberEmail(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 country_code: Optional[pulumi.Input[str]] = None,
                 email: Optional[pulumi.Input[str]] = None,
                 member_uin: Optional[pulumi.Input[int]] = None,
                 phone: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Provides a resource to create a organization org_member_email

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        org_member_email = tencentcloud.organization.OrgMemberEmail("orgMemberEmail",
            country_code="86",
            email="iac-example@qq.com",
            member_uin=100033704327,
            phone="12345678901")
        ```
        <!--End PulumiCodeChooser -->

        ## Import

        organization org_member_email can be imported using the id, e.g.

        ```sh
        $ pulumi import tencentcloud:Organization/orgMemberEmail:OrgMemberEmail org_member_email org_member_email_id
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] country_code: International region.
        :param pulumi.Input[str] email: Email address.
        :param pulumi.Input[int] member_uin: Member Uin.
        :param pulumi.Input[str] phone: Phone number.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: OrgMemberEmailArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Provides a resource to create a organization org_member_email

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        org_member_email = tencentcloud.organization.OrgMemberEmail("orgMemberEmail",
            country_code="86",
            email="iac-example@qq.com",
            member_uin=100033704327,
            phone="12345678901")
        ```
        <!--End PulumiCodeChooser -->

        ## Import

        organization org_member_email can be imported using the id, e.g.

        ```sh
        $ pulumi import tencentcloud:Organization/orgMemberEmail:OrgMemberEmail org_member_email org_member_email_id
        ```

        :param str resource_name: The name of the resource.
        :param OrgMemberEmailArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(OrgMemberEmailArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 country_code: Optional[pulumi.Input[str]] = None,
                 email: Optional[pulumi.Input[str]] = None,
                 member_uin: Optional[pulumi.Input[int]] = None,
                 phone: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = OrgMemberEmailArgs.__new__(OrgMemberEmailArgs)

            if country_code is None and not opts.urn:
                raise TypeError("Missing required property 'country_code'")
            __props__.__dict__["country_code"] = country_code
            if email is None and not opts.urn:
                raise TypeError("Missing required property 'email'")
            __props__.__dict__["email"] = email
            if member_uin is None and not opts.urn:
                raise TypeError("Missing required property 'member_uin'")
            __props__.__dict__["member_uin"] = member_uin
            if phone is None and not opts.urn:
                raise TypeError("Missing required property 'phone'")
            __props__.__dict__["phone"] = phone
            __props__.__dict__["apply_time"] = None
            __props__.__dict__["bind_id"] = None
            __props__.__dict__["bind_status"] = None
            __props__.__dict__["bind_time"] = None
            __props__.__dict__["description"] = None
            __props__.__dict__["phone_bind"] = None
        super(OrgMemberEmail, __self__).__init__(
            'tencentcloud:Organization/orgMemberEmail:OrgMemberEmail',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            apply_time: Optional[pulumi.Input[str]] = None,
            bind_id: Optional[pulumi.Input[int]] = None,
            bind_status: Optional[pulumi.Input[str]] = None,
            bind_time: Optional[pulumi.Input[str]] = None,
            country_code: Optional[pulumi.Input[str]] = None,
            description: Optional[pulumi.Input[str]] = None,
            email: Optional[pulumi.Input[str]] = None,
            member_uin: Optional[pulumi.Input[int]] = None,
            phone: Optional[pulumi.Input[str]] = None,
            phone_bind: Optional[pulumi.Input[int]] = None) -> 'OrgMemberEmail':
        """
        Get an existing OrgMemberEmail resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] apply_time: Application timeNote: This field may return NULL, indicating that the valid value cannot be obtained.
        :param pulumi.Input[int] bind_id: Binding IDNote: This field may return NULL, indicating that the valid value cannot be obtained.
        :param pulumi.Input[str] bind_status: Binding status is not binding: unbound, to be activated: value, successful binding: success, binding failure: failedNote: This field may return NULL, indicating that the valid value cannot be obtained.
        :param pulumi.Input[str] bind_time: Binding timeNote: This field may return NULL, indicating that the valid value cannot be obtained.
        :param pulumi.Input[str] country_code: International region.
        :param pulumi.Input[str] description: FailedNote: This field may return NULL, indicating that the valid value cannot be obtained.
        :param pulumi.Input[str] email: Email address.
        :param pulumi.Input[int] member_uin: Member Uin.
        :param pulumi.Input[str] phone: Phone number.
        :param pulumi.Input[int] phone_bind: Safe mobile phone binding state is not bound: 0, has been binded: 1Note: This field may return NULL, indicating that the valid value cannot be obtained.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _OrgMemberEmailState.__new__(_OrgMemberEmailState)

        __props__.__dict__["apply_time"] = apply_time
        __props__.__dict__["bind_id"] = bind_id
        __props__.__dict__["bind_status"] = bind_status
        __props__.__dict__["bind_time"] = bind_time
        __props__.__dict__["country_code"] = country_code
        __props__.__dict__["description"] = description
        __props__.__dict__["email"] = email
        __props__.__dict__["member_uin"] = member_uin
        __props__.__dict__["phone"] = phone
        __props__.__dict__["phone_bind"] = phone_bind
        return OrgMemberEmail(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="applyTime")
    def apply_time(self) -> pulumi.Output[str]:
        """
        Application timeNote: This field may return NULL, indicating that the valid value cannot be obtained.
        """
        return pulumi.get(self, "apply_time")

    @property
    @pulumi.getter(name="bindId")
    def bind_id(self) -> pulumi.Output[int]:
        """
        Binding IDNote: This field may return NULL, indicating that the valid value cannot be obtained.
        """
        return pulumi.get(self, "bind_id")

    @property
    @pulumi.getter(name="bindStatus")
    def bind_status(self) -> pulumi.Output[str]:
        """
        Binding status is not binding: unbound, to be activated: value, successful binding: success, binding failure: failedNote: This field may return NULL, indicating that the valid value cannot be obtained.
        """
        return pulumi.get(self, "bind_status")

    @property
    @pulumi.getter(name="bindTime")
    def bind_time(self) -> pulumi.Output[str]:
        """
        Binding timeNote: This field may return NULL, indicating that the valid value cannot be obtained.
        """
        return pulumi.get(self, "bind_time")

    @property
    @pulumi.getter(name="countryCode")
    def country_code(self) -> pulumi.Output[str]:
        """
        International region.
        """
        return pulumi.get(self, "country_code")

    @property
    @pulumi.getter
    def description(self) -> pulumi.Output[str]:
        """
        FailedNote: This field may return NULL, indicating that the valid value cannot be obtained.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter
    def email(self) -> pulumi.Output[str]:
        """
        Email address.
        """
        return pulumi.get(self, "email")

    @property
    @pulumi.getter(name="memberUin")
    def member_uin(self) -> pulumi.Output[int]:
        """
        Member Uin.
        """
        return pulumi.get(self, "member_uin")

    @property
    @pulumi.getter
    def phone(self) -> pulumi.Output[str]:
        """
        Phone number.
        """
        return pulumi.get(self, "phone")

    @property
    @pulumi.getter(name="phoneBind")
    def phone_bind(self) -> pulumi.Output[int]:
        """
        Safe mobile phone binding state is not bound: 0, has been binded: 1Note: This field may return NULL, indicating that the valid value cannot be obtained.
        """
        return pulumi.get(self, "phone_bind")


# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetMembersResult',
    'AwaitableGetMembersResult',
    'get_members',
    'get_members_output',
]

@pulumi.output_type
class GetMembersResult:
    """
    A collection of values returned by getMembers.
    """
    def __init__(__self__, auth_name=None, id=None, items=None, lang=None, product=None, result_output_file=None, search_key=None):
        if auth_name and not isinstance(auth_name, str):
            raise TypeError("Expected argument 'auth_name' to be a str")
        pulumi.set(__self__, "auth_name", auth_name)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if items and not isinstance(items, list):
            raise TypeError("Expected argument 'items' to be a list")
        pulumi.set(__self__, "items", items)
        if lang and not isinstance(lang, str):
            raise TypeError("Expected argument 'lang' to be a str")
        pulumi.set(__self__, "lang", lang)
        if product and not isinstance(product, str):
            raise TypeError("Expected argument 'product' to be a str")
        pulumi.set(__self__, "product", product)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)
        if search_key and not isinstance(search_key, str):
            raise TypeError("Expected argument 'search_key' to be a str")
        pulumi.set(__self__, "search_key", search_key)

    @property
    @pulumi.getter(name="authName")
    def auth_name(self) -> Optional[str]:
        return pulumi.get(self, "auth_name")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def items(self) -> Sequence['outputs.GetMembersItemResult']:
        """
        Member list.
        """
        return pulumi.get(self, "items")

    @property
    @pulumi.getter
    def lang(self) -> Optional[str]:
        return pulumi.get(self, "lang")

    @property
    @pulumi.getter
    def product(self) -> Optional[str]:
        return pulumi.get(self, "product")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")

    @property
    @pulumi.getter(name="searchKey")
    def search_key(self) -> Optional[str]:
        return pulumi.get(self, "search_key")


class AwaitableGetMembersResult(GetMembersResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetMembersResult(
            auth_name=self.auth_name,
            id=self.id,
            items=self.items,
            lang=self.lang,
            product=self.product,
            result_output_file=self.result_output_file,
            search_key=self.search_key)


def get_members(auth_name: Optional[str] = None,
                lang: Optional[str] = None,
                product: Optional[str] = None,
                result_output_file: Optional[str] = None,
                search_key: Optional[str] = None,
                opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetMembersResult:
    """
    Use this data source to query detailed information of organization members

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    members = tencentcloud.Organization.get_members()
    ```
    <!--End PulumiCodeChooser -->


    :param str auth_name: Entity name.
    :param str lang: Valid values: `en` (Tencent Cloud International); `zh` (Tencent Cloud).
    :param str product: Abbreviation of the trusted service, which is required during querying the trusted service admin.
    :param str result_output_file: Used to save results.
    :param str search_key: Search by member name or ID.
    """
    __args__ = dict()
    __args__['authName'] = auth_name
    __args__['lang'] = lang
    __args__['product'] = product
    __args__['resultOutputFile'] = result_output_file
    __args__['searchKey'] = search_key
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('tencentcloud:Organization/getMembers:getMembers', __args__, opts=opts, typ=GetMembersResult).value

    return AwaitableGetMembersResult(
        auth_name=pulumi.get(__ret__, 'auth_name'),
        id=pulumi.get(__ret__, 'id'),
        items=pulumi.get(__ret__, 'items'),
        lang=pulumi.get(__ret__, 'lang'),
        product=pulumi.get(__ret__, 'product'),
        result_output_file=pulumi.get(__ret__, 'result_output_file'),
        search_key=pulumi.get(__ret__, 'search_key'))


@_utilities.lift_output_func(get_members)
def get_members_output(auth_name: Optional[pulumi.Input[Optional[str]]] = None,
                       lang: Optional[pulumi.Input[Optional[str]]] = None,
                       product: Optional[pulumi.Input[Optional[str]]] = None,
                       result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                       search_key: Optional[pulumi.Input[Optional[str]]] = None,
                       opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetMembersResult]:
    """
    Use this data source to query detailed information of organization members

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    members = tencentcloud.Organization.get_members()
    ```
    <!--End PulumiCodeChooser -->


    :param str auth_name: Entity name.
    :param str lang: Valid values: `en` (Tencent Cloud International); `zh` (Tencent Cloud).
    :param str product: Abbreviation of the trusted service, which is required during querying the trusted service admin.
    :param str result_output_file: Used to save results.
    :param str search_key: Search by member name or ID.
    """
    ...

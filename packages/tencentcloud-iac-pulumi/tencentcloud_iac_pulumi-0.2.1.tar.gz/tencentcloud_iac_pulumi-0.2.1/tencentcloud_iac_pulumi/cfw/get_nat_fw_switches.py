# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetNatFwSwitchesResult',
    'AwaitableGetNatFwSwitchesResult',
    'get_nat_fw_switches',
    'get_nat_fw_switches_output',
]

@pulumi.output_type
class GetNatFwSwitchesResult:
    """
    A collection of values returned by getNatFwSwitches.
    """
    def __init__(__self__, datas=None, id=None, nat_ins_id=None, result_output_file=None, status=None):
        if datas and not isinstance(datas, list):
            raise TypeError("Expected argument 'datas' to be a list")
        pulumi.set(__self__, "datas", datas)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if nat_ins_id and not isinstance(nat_ins_id, str):
            raise TypeError("Expected argument 'nat_ins_id' to be a str")
        pulumi.set(__self__, "nat_ins_id", nat_ins_id)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)
        if status and not isinstance(status, int):
            raise TypeError("Expected argument 'status' to be a int")
        pulumi.set(__self__, "status", status)

    @property
    @pulumi.getter
    def datas(self) -> Sequence['outputs.GetNatFwSwitchesDataResult']:
        """
        NAT border firewall switch list data.
        """
        return pulumi.get(self, "datas")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="natInsId")
    def nat_ins_id(self) -> Optional[str]:
        """
        NAT firewall instance Id.
        """
        return pulumi.get(self, "nat_ins_id")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")

    @property
    @pulumi.getter
    def status(self) -> Optional[int]:
        """
        Switch status.
        """
        return pulumi.get(self, "status")


class AwaitableGetNatFwSwitchesResult(GetNatFwSwitchesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetNatFwSwitchesResult(
            datas=self.datas,
            id=self.id,
            nat_ins_id=self.nat_ins_id,
            result_output_file=self.result_output_file,
            status=self.status)


def get_nat_fw_switches(nat_ins_id: Optional[str] = None,
                        result_output_file: Optional[str] = None,
                        status: Optional[int] = None,
                        opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetNatFwSwitchesResult:
    """
    Use this data source to query detailed information of cfw nat_fw_switches

    ## Example Usage

    ### Query Nat instance'switch by instance id

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    example = tencentcloud.Cfw.get_nat_fw_switches(nat_ins_id="cfwnat-18d2ba18")
    ```
    <!--End PulumiCodeChooser -->

    ### Or filter by switch status

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    example = tencentcloud.Cfw.get_nat_fw_switches(nat_ins_id="cfwnat-18d2ba18",
        status=1)
    ```
    <!--End PulumiCodeChooser -->


    :param str nat_ins_id: Filter the NAT firewall instance to which the NAT firewall subnet switch belongs.
    :param str result_output_file: Used to save results.
    :param int status: Switch status, 1 open; 0 close.
    """
    __args__ = dict()
    __args__['natInsId'] = nat_ins_id
    __args__['resultOutputFile'] = result_output_file
    __args__['status'] = status
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('tencentcloud:Cfw/getNatFwSwitches:getNatFwSwitches', __args__, opts=opts, typ=GetNatFwSwitchesResult).value

    return AwaitableGetNatFwSwitchesResult(
        datas=pulumi.get(__ret__, 'datas'),
        id=pulumi.get(__ret__, 'id'),
        nat_ins_id=pulumi.get(__ret__, 'nat_ins_id'),
        result_output_file=pulumi.get(__ret__, 'result_output_file'),
        status=pulumi.get(__ret__, 'status'))


@_utilities.lift_output_func(get_nat_fw_switches)
def get_nat_fw_switches_output(nat_ins_id: Optional[pulumi.Input[Optional[str]]] = None,
                               result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                               status: Optional[pulumi.Input[Optional[int]]] = None,
                               opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetNatFwSwitchesResult]:
    """
    Use this data source to query detailed information of cfw nat_fw_switches

    ## Example Usage

    ### Query Nat instance'switch by instance id

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    example = tencentcloud.Cfw.get_nat_fw_switches(nat_ins_id="cfwnat-18d2ba18")
    ```
    <!--End PulumiCodeChooser -->

    ### Or filter by switch status

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    example = tencentcloud.Cfw.get_nat_fw_switches(nat_ins_id="cfwnat-18d2ba18",
        status=1)
    ```
    <!--End PulumiCodeChooser -->


    :param str nat_ins_id: Filter the NAT firewall instance to which the NAT firewall subnet switch belongs.
    :param str result_output_file: Used to save results.
    :param int status: Switch status, 1 open; 0 close.
    """
    ...

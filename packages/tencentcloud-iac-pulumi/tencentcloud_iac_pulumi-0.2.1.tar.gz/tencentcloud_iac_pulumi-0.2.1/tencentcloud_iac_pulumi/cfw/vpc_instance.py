# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['VpcInstanceArgs', 'VpcInstance']

@pulumi.input_type
class VpcInstanceArgs:
    def __init__(__self__, *,
                 mode: pulumi.Input[int],
                 switch_mode: pulumi.Input[int],
                 vpc_fw_instances: pulumi.Input[Sequence[pulumi.Input['VpcInstanceVpcFwInstanceArgs']]],
                 ccn_id: Optional[pulumi.Input[str]] = None,
                 fw_vpc_cidr: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a VpcInstance resource.
        :param pulumi.Input[int] mode: Mode 0: private network mode; 1: CCN cloud networking mode.
        :param pulumi.Input[int] switch_mode: Switch mode of firewall instance. 1: Single point intercommunication; 2: Multi-point communication; 4: Custom Routing.
        :param pulumi.Input[Sequence[pulumi.Input['VpcInstanceVpcFwInstanceArgs']]] vpc_fw_instances: List of firewall instances under firewall (group).
        :param pulumi.Input[str] ccn_id: Cloud networking id, suitable for cloud networking mode.
        :param pulumi.Input[str] fw_vpc_cidr: auto Automatically select the firewall network segment; 10.10.10.0/24 The firewall network segment entered by the user.
        :param pulumi.Input[str] name: VPC firewall (group) name.
        """
        pulumi.set(__self__, "mode", mode)
        pulumi.set(__self__, "switch_mode", switch_mode)
        pulumi.set(__self__, "vpc_fw_instances", vpc_fw_instances)
        if ccn_id is not None:
            pulumi.set(__self__, "ccn_id", ccn_id)
        if fw_vpc_cidr is not None:
            pulumi.set(__self__, "fw_vpc_cidr", fw_vpc_cidr)
        if name is not None:
            pulumi.set(__self__, "name", name)

    @property
    @pulumi.getter
    def mode(self) -> pulumi.Input[int]:
        """
        Mode 0: private network mode; 1: CCN cloud networking mode.
        """
        return pulumi.get(self, "mode")

    @mode.setter
    def mode(self, value: pulumi.Input[int]):
        pulumi.set(self, "mode", value)

    @property
    @pulumi.getter(name="switchMode")
    def switch_mode(self) -> pulumi.Input[int]:
        """
        Switch mode of firewall instance. 1: Single point intercommunication; 2: Multi-point communication; 4: Custom Routing.
        """
        return pulumi.get(self, "switch_mode")

    @switch_mode.setter
    def switch_mode(self, value: pulumi.Input[int]):
        pulumi.set(self, "switch_mode", value)

    @property
    @pulumi.getter(name="vpcFwInstances")
    def vpc_fw_instances(self) -> pulumi.Input[Sequence[pulumi.Input['VpcInstanceVpcFwInstanceArgs']]]:
        """
        List of firewall instances under firewall (group).
        """
        return pulumi.get(self, "vpc_fw_instances")

    @vpc_fw_instances.setter
    def vpc_fw_instances(self, value: pulumi.Input[Sequence[pulumi.Input['VpcInstanceVpcFwInstanceArgs']]]):
        pulumi.set(self, "vpc_fw_instances", value)

    @property
    @pulumi.getter(name="ccnId")
    def ccn_id(self) -> Optional[pulumi.Input[str]]:
        """
        Cloud networking id, suitable for cloud networking mode.
        """
        return pulumi.get(self, "ccn_id")

    @ccn_id.setter
    def ccn_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ccn_id", value)

    @property
    @pulumi.getter(name="fwVpcCidr")
    def fw_vpc_cidr(self) -> Optional[pulumi.Input[str]]:
        """
        auto Automatically select the firewall network segment; 10.10.10.0/24 The firewall network segment entered by the user.
        """
        return pulumi.get(self, "fw_vpc_cidr")

    @fw_vpc_cidr.setter
    def fw_vpc_cidr(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "fw_vpc_cidr", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        VPC firewall (group) name.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)


@pulumi.input_type
class _VpcInstanceState:
    def __init__(__self__, *,
                 ccn_id: Optional[pulumi.Input[str]] = None,
                 fw_vpc_cidr: Optional[pulumi.Input[str]] = None,
                 mode: Optional[pulumi.Input[int]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 switch_mode: Optional[pulumi.Input[int]] = None,
                 vpc_fw_instances: Optional[pulumi.Input[Sequence[pulumi.Input['VpcInstanceVpcFwInstanceArgs']]]] = None):
        """
        Input properties used for looking up and filtering VpcInstance resources.
        :param pulumi.Input[str] ccn_id: Cloud networking id, suitable for cloud networking mode.
        :param pulumi.Input[str] fw_vpc_cidr: auto Automatically select the firewall network segment; 10.10.10.0/24 The firewall network segment entered by the user.
        :param pulumi.Input[int] mode: Mode 0: private network mode; 1: CCN cloud networking mode.
        :param pulumi.Input[str] name: VPC firewall (group) name.
        :param pulumi.Input[int] switch_mode: Switch mode of firewall instance. 1: Single point intercommunication; 2: Multi-point communication; 4: Custom Routing.
        :param pulumi.Input[Sequence[pulumi.Input['VpcInstanceVpcFwInstanceArgs']]] vpc_fw_instances: List of firewall instances under firewall (group).
        """
        if ccn_id is not None:
            pulumi.set(__self__, "ccn_id", ccn_id)
        if fw_vpc_cidr is not None:
            pulumi.set(__self__, "fw_vpc_cidr", fw_vpc_cidr)
        if mode is not None:
            pulumi.set(__self__, "mode", mode)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if switch_mode is not None:
            pulumi.set(__self__, "switch_mode", switch_mode)
        if vpc_fw_instances is not None:
            pulumi.set(__self__, "vpc_fw_instances", vpc_fw_instances)

    @property
    @pulumi.getter(name="ccnId")
    def ccn_id(self) -> Optional[pulumi.Input[str]]:
        """
        Cloud networking id, suitable for cloud networking mode.
        """
        return pulumi.get(self, "ccn_id")

    @ccn_id.setter
    def ccn_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ccn_id", value)

    @property
    @pulumi.getter(name="fwVpcCidr")
    def fw_vpc_cidr(self) -> Optional[pulumi.Input[str]]:
        """
        auto Automatically select the firewall network segment; 10.10.10.0/24 The firewall network segment entered by the user.
        """
        return pulumi.get(self, "fw_vpc_cidr")

    @fw_vpc_cidr.setter
    def fw_vpc_cidr(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "fw_vpc_cidr", value)

    @property
    @pulumi.getter
    def mode(self) -> Optional[pulumi.Input[int]]:
        """
        Mode 0: private network mode; 1: CCN cloud networking mode.
        """
        return pulumi.get(self, "mode")

    @mode.setter
    def mode(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "mode", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        VPC firewall (group) name.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="switchMode")
    def switch_mode(self) -> Optional[pulumi.Input[int]]:
        """
        Switch mode of firewall instance. 1: Single point intercommunication; 2: Multi-point communication; 4: Custom Routing.
        """
        return pulumi.get(self, "switch_mode")

    @switch_mode.setter
    def switch_mode(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "switch_mode", value)

    @property
    @pulumi.getter(name="vpcFwInstances")
    def vpc_fw_instances(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['VpcInstanceVpcFwInstanceArgs']]]]:
        """
        List of firewall instances under firewall (group).
        """
        return pulumi.get(self, "vpc_fw_instances")

    @vpc_fw_instances.setter
    def vpc_fw_instances(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['VpcInstanceVpcFwInstanceArgs']]]]):
        pulumi.set(self, "vpc_fw_instances", value)


class VpcInstance(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 ccn_id: Optional[pulumi.Input[str]] = None,
                 fw_vpc_cidr: Optional[pulumi.Input[str]] = None,
                 mode: Optional[pulumi.Input[int]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 switch_mode: Optional[pulumi.Input[int]] = None,
                 vpc_fw_instances: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['VpcInstanceVpcFwInstanceArgs']]]]] = None,
                 __props__=None):
        """
        Provides a resource to create a cfw vpc_instance

        ## Example Usage

        ## Import

        cfw vpc_instance can be imported using the id, e.g.

        ```sh
        $ pulumi import tencentcloud:Cfw/vpcInstance:VpcInstance example cfwg-4ee69507
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] ccn_id: Cloud networking id, suitable for cloud networking mode.
        :param pulumi.Input[str] fw_vpc_cidr: auto Automatically select the firewall network segment; 10.10.10.0/24 The firewall network segment entered by the user.
        :param pulumi.Input[int] mode: Mode 0: private network mode; 1: CCN cloud networking mode.
        :param pulumi.Input[str] name: VPC firewall (group) name.
        :param pulumi.Input[int] switch_mode: Switch mode of firewall instance. 1: Single point intercommunication; 2: Multi-point communication; 4: Custom Routing.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['VpcInstanceVpcFwInstanceArgs']]]] vpc_fw_instances: List of firewall instances under firewall (group).
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: VpcInstanceArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Provides a resource to create a cfw vpc_instance

        ## Example Usage

        ## Import

        cfw vpc_instance can be imported using the id, e.g.

        ```sh
        $ pulumi import tencentcloud:Cfw/vpcInstance:VpcInstance example cfwg-4ee69507
        ```

        :param str resource_name: The name of the resource.
        :param VpcInstanceArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(VpcInstanceArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 ccn_id: Optional[pulumi.Input[str]] = None,
                 fw_vpc_cidr: Optional[pulumi.Input[str]] = None,
                 mode: Optional[pulumi.Input[int]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 switch_mode: Optional[pulumi.Input[int]] = None,
                 vpc_fw_instances: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['VpcInstanceVpcFwInstanceArgs']]]]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = VpcInstanceArgs.__new__(VpcInstanceArgs)

            __props__.__dict__["ccn_id"] = ccn_id
            __props__.__dict__["fw_vpc_cidr"] = fw_vpc_cidr
            if mode is None and not opts.urn:
                raise TypeError("Missing required property 'mode'")
            __props__.__dict__["mode"] = mode
            __props__.__dict__["name"] = name
            if switch_mode is None and not opts.urn:
                raise TypeError("Missing required property 'switch_mode'")
            __props__.__dict__["switch_mode"] = switch_mode
            if vpc_fw_instances is None and not opts.urn:
                raise TypeError("Missing required property 'vpc_fw_instances'")
            __props__.__dict__["vpc_fw_instances"] = vpc_fw_instances
        super(VpcInstance, __self__).__init__(
            'tencentcloud:Cfw/vpcInstance:VpcInstance',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            ccn_id: Optional[pulumi.Input[str]] = None,
            fw_vpc_cidr: Optional[pulumi.Input[str]] = None,
            mode: Optional[pulumi.Input[int]] = None,
            name: Optional[pulumi.Input[str]] = None,
            switch_mode: Optional[pulumi.Input[int]] = None,
            vpc_fw_instances: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['VpcInstanceVpcFwInstanceArgs']]]]] = None) -> 'VpcInstance':
        """
        Get an existing VpcInstance resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] ccn_id: Cloud networking id, suitable for cloud networking mode.
        :param pulumi.Input[str] fw_vpc_cidr: auto Automatically select the firewall network segment; 10.10.10.0/24 The firewall network segment entered by the user.
        :param pulumi.Input[int] mode: Mode 0: private network mode; 1: CCN cloud networking mode.
        :param pulumi.Input[str] name: VPC firewall (group) name.
        :param pulumi.Input[int] switch_mode: Switch mode of firewall instance. 1: Single point intercommunication; 2: Multi-point communication; 4: Custom Routing.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['VpcInstanceVpcFwInstanceArgs']]]] vpc_fw_instances: List of firewall instances under firewall (group).
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _VpcInstanceState.__new__(_VpcInstanceState)

        __props__.__dict__["ccn_id"] = ccn_id
        __props__.__dict__["fw_vpc_cidr"] = fw_vpc_cidr
        __props__.__dict__["mode"] = mode
        __props__.__dict__["name"] = name
        __props__.__dict__["switch_mode"] = switch_mode
        __props__.__dict__["vpc_fw_instances"] = vpc_fw_instances
        return VpcInstance(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="ccnId")
    def ccn_id(self) -> pulumi.Output[Optional[str]]:
        """
        Cloud networking id, suitable for cloud networking mode.
        """
        return pulumi.get(self, "ccn_id")

    @property
    @pulumi.getter(name="fwVpcCidr")
    def fw_vpc_cidr(self) -> pulumi.Output[Optional[str]]:
        """
        auto Automatically select the firewall network segment; 10.10.10.0/24 The firewall network segment entered by the user.
        """
        return pulumi.get(self, "fw_vpc_cidr")

    @property
    @pulumi.getter
    def mode(self) -> pulumi.Output[int]:
        """
        Mode 0: private network mode; 1: CCN cloud networking mode.
        """
        return pulumi.get(self, "mode")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        """
        VPC firewall (group) name.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="switchMode")
    def switch_mode(self) -> pulumi.Output[int]:
        """
        Switch mode of firewall instance. 1: Single point intercommunication; 2: Multi-point communication; 4: Custom Routing.
        """
        return pulumi.get(self, "switch_mode")

    @property
    @pulumi.getter(name="vpcFwInstances")
    def vpc_fw_instances(self) -> pulumi.Output[Sequence['outputs.VpcInstanceVpcFwInstance']]:
        """
        List of firewall instances under firewall (group).
        """
        return pulumi.get(self, "vpc_fw_instances")


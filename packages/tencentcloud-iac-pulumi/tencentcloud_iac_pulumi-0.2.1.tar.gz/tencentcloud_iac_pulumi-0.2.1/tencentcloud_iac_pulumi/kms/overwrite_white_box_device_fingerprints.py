# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['OverwriteWhiteBoxDeviceFingerprintsArgs', 'OverwriteWhiteBoxDeviceFingerprints']

@pulumi.input_type
class OverwriteWhiteBoxDeviceFingerprintsArgs:
    def __init__(__self__, *,
                 key_id: pulumi.Input[str],
                 device_fingerprints: Optional[pulumi.Input[Sequence[pulumi.Input['OverwriteWhiteBoxDeviceFingerprintsDeviceFingerprintArgs']]]] = None):
        """
        The set of arguments for constructing a OverwriteWhiteBoxDeviceFingerprints resource.
        :param pulumi.Input[str] key_id: CMK unique identifier.
        :param pulumi.Input[Sequence[pulumi.Input['OverwriteWhiteBoxDeviceFingerprintsDeviceFingerprintArgs']]] device_fingerprints: Device fingerprint list.
        """
        pulumi.set(__self__, "key_id", key_id)
        if device_fingerprints is not None:
            pulumi.set(__self__, "device_fingerprints", device_fingerprints)

    @property
    @pulumi.getter(name="keyId")
    def key_id(self) -> pulumi.Input[str]:
        """
        CMK unique identifier.
        """
        return pulumi.get(self, "key_id")

    @key_id.setter
    def key_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "key_id", value)

    @property
    @pulumi.getter(name="deviceFingerprints")
    def device_fingerprints(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['OverwriteWhiteBoxDeviceFingerprintsDeviceFingerprintArgs']]]]:
        """
        Device fingerprint list.
        """
        return pulumi.get(self, "device_fingerprints")

    @device_fingerprints.setter
    def device_fingerprints(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['OverwriteWhiteBoxDeviceFingerprintsDeviceFingerprintArgs']]]]):
        pulumi.set(self, "device_fingerprints", value)


@pulumi.input_type
class _OverwriteWhiteBoxDeviceFingerprintsState:
    def __init__(__self__, *,
                 device_fingerprints: Optional[pulumi.Input[Sequence[pulumi.Input['OverwriteWhiteBoxDeviceFingerprintsDeviceFingerprintArgs']]]] = None,
                 key_id: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering OverwriteWhiteBoxDeviceFingerprints resources.
        :param pulumi.Input[Sequence[pulumi.Input['OverwriteWhiteBoxDeviceFingerprintsDeviceFingerprintArgs']]] device_fingerprints: Device fingerprint list.
        :param pulumi.Input[str] key_id: CMK unique identifier.
        """
        if device_fingerprints is not None:
            pulumi.set(__self__, "device_fingerprints", device_fingerprints)
        if key_id is not None:
            pulumi.set(__self__, "key_id", key_id)

    @property
    @pulumi.getter(name="deviceFingerprints")
    def device_fingerprints(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['OverwriteWhiteBoxDeviceFingerprintsDeviceFingerprintArgs']]]]:
        """
        Device fingerprint list.
        """
        return pulumi.get(self, "device_fingerprints")

    @device_fingerprints.setter
    def device_fingerprints(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['OverwriteWhiteBoxDeviceFingerprintsDeviceFingerprintArgs']]]]):
        pulumi.set(self, "device_fingerprints", value)

    @property
    @pulumi.getter(name="keyId")
    def key_id(self) -> Optional[pulumi.Input[str]]:
        """
        CMK unique identifier.
        """
        return pulumi.get(self, "key_id")

    @key_id.setter
    def key_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "key_id", value)


class OverwriteWhiteBoxDeviceFingerprints(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 device_fingerprints: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['OverwriteWhiteBoxDeviceFingerprintsDeviceFingerprintArgs']]]]] = None,
                 key_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Provides a resource to create a kms overwrite_white_box_device_fingerprints

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        example = tencentcloud.kms.OverwriteWhiteBoxDeviceFingerprints("example", key_id="23e80852-1e38-11e9-b129-5cb9019b4b01")
        ```
        <!--End PulumiCodeChooser -->

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['OverwriteWhiteBoxDeviceFingerprintsDeviceFingerprintArgs']]]] device_fingerprints: Device fingerprint list.
        :param pulumi.Input[str] key_id: CMK unique identifier.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: OverwriteWhiteBoxDeviceFingerprintsArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Provides a resource to create a kms overwrite_white_box_device_fingerprints

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        example = tencentcloud.kms.OverwriteWhiteBoxDeviceFingerprints("example", key_id="23e80852-1e38-11e9-b129-5cb9019b4b01")
        ```
        <!--End PulumiCodeChooser -->

        :param str resource_name: The name of the resource.
        :param OverwriteWhiteBoxDeviceFingerprintsArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(OverwriteWhiteBoxDeviceFingerprintsArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 device_fingerprints: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['OverwriteWhiteBoxDeviceFingerprintsDeviceFingerprintArgs']]]]] = None,
                 key_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = OverwriteWhiteBoxDeviceFingerprintsArgs.__new__(OverwriteWhiteBoxDeviceFingerprintsArgs)

            __props__.__dict__["device_fingerprints"] = device_fingerprints
            if key_id is None and not opts.urn:
                raise TypeError("Missing required property 'key_id'")
            __props__.__dict__["key_id"] = key_id
        super(OverwriteWhiteBoxDeviceFingerprints, __self__).__init__(
            'tencentcloud:Kms/overwriteWhiteBoxDeviceFingerprints:OverwriteWhiteBoxDeviceFingerprints',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            device_fingerprints: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['OverwriteWhiteBoxDeviceFingerprintsDeviceFingerprintArgs']]]]] = None,
            key_id: Optional[pulumi.Input[str]] = None) -> 'OverwriteWhiteBoxDeviceFingerprints':
        """
        Get an existing OverwriteWhiteBoxDeviceFingerprints resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['OverwriteWhiteBoxDeviceFingerprintsDeviceFingerprintArgs']]]] device_fingerprints: Device fingerprint list.
        :param pulumi.Input[str] key_id: CMK unique identifier.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _OverwriteWhiteBoxDeviceFingerprintsState.__new__(_OverwriteWhiteBoxDeviceFingerprintsState)

        __props__.__dict__["device_fingerprints"] = device_fingerprints
        __props__.__dict__["key_id"] = key_id
        return OverwriteWhiteBoxDeviceFingerprints(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="deviceFingerprints")
    def device_fingerprints(self) -> pulumi.Output[Optional[Sequence['outputs.OverwriteWhiteBoxDeviceFingerprintsDeviceFingerprint']]]:
        """
        Device fingerprint list.
        """
        return pulumi.get(self, "device_fingerprints")

    @property
    @pulumi.getter(name="keyId")
    def key_id(self) -> pulumi.Output[str]:
        """
        CMK unique identifier.
        """
        return pulumi.get(self, "key_id")


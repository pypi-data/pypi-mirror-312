# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['ModifyInstanceDiskTypeArgs', 'ModifyInstanceDiskType']

@pulumi.input_type
class ModifyInstanceDiskTypeArgs:
    def __init__(__self__, *,
                 instance_id: pulumi.Input[str],
                 data_disks: Optional[pulumi.Input[Sequence[pulumi.Input['ModifyInstanceDiskTypeDataDiskArgs']]]] = None,
                 system_disk: Optional[pulumi.Input['ModifyInstanceDiskTypeSystemDiskArgs']] = None):
        """
        The set of arguments for constructing a ModifyInstanceDiskType resource.
        :param pulumi.Input[str] instance_id: Instance ID. To obtain the instance IDs, you can call DescribeInstances and look for InstanceId in the response.
        :param pulumi.Input[Sequence[pulumi.Input['ModifyInstanceDiskTypeDataDiskArgs']]] data_disks: For instance data disk configuration information, you only need to specify the media type of the target cloud disk to be
               converted, and specify the value of DiskType. Currently, only one data disk conversion is supported. The CdcId parameter
               is only supported for instances of the CDHPAID type.
        :param pulumi.Input['ModifyInstanceDiskTypeSystemDiskArgs'] system_disk: For instance system disk configuration information, you only need to specify the nature type of the target cloud disk to
               be converted, and specify the value of DiskType. Only CDHPAID type instances are supported to specify Cd.
        """
        pulumi.set(__self__, "instance_id", instance_id)
        if data_disks is not None:
            pulumi.set(__self__, "data_disks", data_disks)
        if system_disk is not None:
            pulumi.set(__self__, "system_disk", system_disk)

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> pulumi.Input[str]:
        """
        Instance ID. To obtain the instance IDs, you can call DescribeInstances and look for InstanceId in the response.
        """
        return pulumi.get(self, "instance_id")

    @instance_id.setter
    def instance_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "instance_id", value)

    @property
    @pulumi.getter(name="dataDisks")
    def data_disks(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['ModifyInstanceDiskTypeDataDiskArgs']]]]:
        """
        For instance data disk configuration information, you only need to specify the media type of the target cloud disk to be
        converted, and specify the value of DiskType. Currently, only one data disk conversion is supported. The CdcId parameter
        is only supported for instances of the CDHPAID type.
        """
        return pulumi.get(self, "data_disks")

    @data_disks.setter
    def data_disks(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['ModifyInstanceDiskTypeDataDiskArgs']]]]):
        pulumi.set(self, "data_disks", value)

    @property
    @pulumi.getter(name="systemDisk")
    def system_disk(self) -> Optional[pulumi.Input['ModifyInstanceDiskTypeSystemDiskArgs']]:
        """
        For instance system disk configuration information, you only need to specify the nature type of the target cloud disk to
        be converted, and specify the value of DiskType. Only CDHPAID type instances are supported to specify Cd.
        """
        return pulumi.get(self, "system_disk")

    @system_disk.setter
    def system_disk(self, value: Optional[pulumi.Input['ModifyInstanceDiskTypeSystemDiskArgs']]):
        pulumi.set(self, "system_disk", value)


@pulumi.input_type
class _ModifyInstanceDiskTypeState:
    def __init__(__self__, *,
                 data_disks: Optional[pulumi.Input[Sequence[pulumi.Input['ModifyInstanceDiskTypeDataDiskArgs']]]] = None,
                 instance_id: Optional[pulumi.Input[str]] = None,
                 system_disk: Optional[pulumi.Input['ModifyInstanceDiskTypeSystemDiskArgs']] = None):
        """
        Input properties used for looking up and filtering ModifyInstanceDiskType resources.
        :param pulumi.Input[Sequence[pulumi.Input['ModifyInstanceDiskTypeDataDiskArgs']]] data_disks: For instance data disk configuration information, you only need to specify the media type of the target cloud disk to be
               converted, and specify the value of DiskType. Currently, only one data disk conversion is supported. The CdcId parameter
               is only supported for instances of the CDHPAID type.
        :param pulumi.Input[str] instance_id: Instance ID. To obtain the instance IDs, you can call DescribeInstances and look for InstanceId in the response.
        :param pulumi.Input['ModifyInstanceDiskTypeSystemDiskArgs'] system_disk: For instance system disk configuration information, you only need to specify the nature type of the target cloud disk to
               be converted, and specify the value of DiskType. Only CDHPAID type instances are supported to specify Cd.
        """
        if data_disks is not None:
            pulumi.set(__self__, "data_disks", data_disks)
        if instance_id is not None:
            pulumi.set(__self__, "instance_id", instance_id)
        if system_disk is not None:
            pulumi.set(__self__, "system_disk", system_disk)

    @property
    @pulumi.getter(name="dataDisks")
    def data_disks(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['ModifyInstanceDiskTypeDataDiskArgs']]]]:
        """
        For instance data disk configuration information, you only need to specify the media type of the target cloud disk to be
        converted, and specify the value of DiskType. Currently, only one data disk conversion is supported. The CdcId parameter
        is only supported for instances of the CDHPAID type.
        """
        return pulumi.get(self, "data_disks")

    @data_disks.setter
    def data_disks(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['ModifyInstanceDiskTypeDataDiskArgs']]]]):
        pulumi.set(self, "data_disks", value)

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> Optional[pulumi.Input[str]]:
        """
        Instance ID. To obtain the instance IDs, you can call DescribeInstances and look for InstanceId in the response.
        """
        return pulumi.get(self, "instance_id")

    @instance_id.setter
    def instance_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "instance_id", value)

    @property
    @pulumi.getter(name="systemDisk")
    def system_disk(self) -> Optional[pulumi.Input['ModifyInstanceDiskTypeSystemDiskArgs']]:
        """
        For instance system disk configuration information, you only need to specify the nature type of the target cloud disk to
        be converted, and specify the value of DiskType. Only CDHPAID type instances are supported to specify Cd.
        """
        return pulumi.get(self, "system_disk")

    @system_disk.setter
    def system_disk(self, value: Optional[pulumi.Input['ModifyInstanceDiskTypeSystemDiskArgs']]):
        pulumi.set(self, "system_disk", value)


class ModifyInstanceDiskType(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 data_disks: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['ModifyInstanceDiskTypeDataDiskArgs']]]]] = None,
                 instance_id: Optional[pulumi.Input[str]] = None,
                 system_disk: Optional[pulumi.Input[pulumi.InputType['ModifyInstanceDiskTypeSystemDiskArgs']]] = None,
                 __props__=None):
        """
        Create a ModifyInstanceDiskType resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['ModifyInstanceDiskTypeDataDiskArgs']]]] data_disks: For instance data disk configuration information, you only need to specify the media type of the target cloud disk to be
               converted, and specify the value of DiskType. Currently, only one data disk conversion is supported. The CdcId parameter
               is only supported for instances of the CDHPAID type.
        :param pulumi.Input[str] instance_id: Instance ID. To obtain the instance IDs, you can call DescribeInstances and look for InstanceId in the response.
        :param pulumi.Input[pulumi.InputType['ModifyInstanceDiskTypeSystemDiskArgs']] system_disk: For instance system disk configuration information, you only need to specify the nature type of the target cloud disk to
               be converted, and specify the value of DiskType. Only CDHPAID type instances are supported to specify Cd.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: ModifyInstanceDiskTypeArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a ModifyInstanceDiskType resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param ModifyInstanceDiskTypeArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(ModifyInstanceDiskTypeArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 data_disks: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['ModifyInstanceDiskTypeDataDiskArgs']]]]] = None,
                 instance_id: Optional[pulumi.Input[str]] = None,
                 system_disk: Optional[pulumi.Input[pulumi.InputType['ModifyInstanceDiskTypeSystemDiskArgs']]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = ModifyInstanceDiskTypeArgs.__new__(ModifyInstanceDiskTypeArgs)

            __props__.__dict__["data_disks"] = data_disks
            if instance_id is None and not opts.urn:
                raise TypeError("Missing required property 'instance_id'")
            __props__.__dict__["instance_id"] = instance_id
            __props__.__dict__["system_disk"] = system_disk
        super(ModifyInstanceDiskType, __self__).__init__(
            'tencentcloud:Cvm/modifyInstanceDiskType:ModifyInstanceDiskType',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            data_disks: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['ModifyInstanceDiskTypeDataDiskArgs']]]]] = None,
            instance_id: Optional[pulumi.Input[str]] = None,
            system_disk: Optional[pulumi.Input[pulumi.InputType['ModifyInstanceDiskTypeSystemDiskArgs']]] = None) -> 'ModifyInstanceDiskType':
        """
        Get an existing ModifyInstanceDiskType resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['ModifyInstanceDiskTypeDataDiskArgs']]]] data_disks: For instance data disk configuration information, you only need to specify the media type of the target cloud disk to be
               converted, and specify the value of DiskType. Currently, only one data disk conversion is supported. The CdcId parameter
               is only supported for instances of the CDHPAID type.
        :param pulumi.Input[str] instance_id: Instance ID. To obtain the instance IDs, you can call DescribeInstances and look for InstanceId in the response.
        :param pulumi.Input[pulumi.InputType['ModifyInstanceDiskTypeSystemDiskArgs']] system_disk: For instance system disk configuration information, you only need to specify the nature type of the target cloud disk to
               be converted, and specify the value of DiskType. Only CDHPAID type instances are supported to specify Cd.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _ModifyInstanceDiskTypeState.__new__(_ModifyInstanceDiskTypeState)

        __props__.__dict__["data_disks"] = data_disks
        __props__.__dict__["instance_id"] = instance_id
        __props__.__dict__["system_disk"] = system_disk
        return ModifyInstanceDiskType(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="dataDisks")
    def data_disks(self) -> pulumi.Output[Optional[Sequence['outputs.ModifyInstanceDiskTypeDataDisk']]]:
        """
        For instance data disk configuration information, you only need to specify the media type of the target cloud disk to be
        converted, and specify the value of DiskType. Currently, only one data disk conversion is supported. The CdcId parameter
        is only supported for instances of the CDHPAID type.
        """
        return pulumi.get(self, "data_disks")

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> pulumi.Output[str]:
        """
        Instance ID. To obtain the instance IDs, you can call DescribeInstances and look for InstanceId in the response.
        """
        return pulumi.get(self, "instance_id")

    @property
    @pulumi.getter(name="systemDisk")
    def system_disk(self) -> pulumi.Output[Optional['outputs.ModifyInstanceDiskTypeSystemDisk']]:
        """
        For instance system disk configuration information, you only need to specify the nature type of the target cloud disk to
        be converted, and specify the value of DiskType. Only CDHPAID type instances are supported to specify Cd.
        """
        return pulumi.get(self, "system_disk")


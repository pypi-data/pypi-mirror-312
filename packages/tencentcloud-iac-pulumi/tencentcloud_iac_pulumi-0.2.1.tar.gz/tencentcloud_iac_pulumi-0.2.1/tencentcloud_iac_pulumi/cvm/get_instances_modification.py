# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = [
    'GetInstancesModificationResult',
    'AwaitableGetInstancesModificationResult',
    'get_instances_modification',
    'get_instances_modification_output',
]

@pulumi.output_type
class GetInstancesModificationResult:
    """
    A collection of values returned by getInstancesModification.
    """
    def __init__(__self__, filters=None, id=None, instance_ids=None, instance_type_config_status_lists=None, result_output_file=None):
        if filters and not isinstance(filters, list):
            raise TypeError("Expected argument 'filters' to be a list")
        pulumi.set(__self__, "filters", filters)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if instance_ids and not isinstance(instance_ids, list):
            raise TypeError("Expected argument 'instance_ids' to be a list")
        pulumi.set(__self__, "instance_ids", instance_ids)
        if instance_type_config_status_lists and not isinstance(instance_type_config_status_lists, list):
            raise TypeError("Expected argument 'instance_type_config_status_lists' to be a list")
        pulumi.set(__self__, "instance_type_config_status_lists", instance_type_config_status_lists)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)

    @property
    @pulumi.getter
    def filters(self) -> Optional[Sequence['outputs.GetInstancesModificationFilterResult']]:
        return pulumi.get(self, "filters")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="instanceIds")
    def instance_ids(self) -> Optional[Sequence[str]]:
        return pulumi.get(self, "instance_ids")

    @property
    @pulumi.getter(name="instanceTypeConfigStatusLists")
    def instance_type_config_status_lists(self) -> Sequence['outputs.GetInstancesModificationInstanceTypeConfigStatusListResult']:
        """
        The list of model configurations that can be adjusted by the instance.
        """
        return pulumi.get(self, "instance_type_config_status_lists")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")


class AwaitableGetInstancesModificationResult(GetInstancesModificationResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetInstancesModificationResult(
            filters=self.filters,
            id=self.id,
            instance_ids=self.instance_ids,
            instance_type_config_status_lists=self.instance_type_config_status_lists,
            result_output_file=self.result_output_file)


def get_instances_modification(filters: Optional[Sequence[pulumi.InputType['GetInstancesModificationFilterArgs']]] = None,
                               instance_ids: Optional[Sequence[str]] = None,
                               result_output_file: Optional[str] = None,
                               opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetInstancesModificationResult:
    """
    Use this data source to query cvm instances modification.

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    foo = tencentcloud.Cvm.get_instances_modification(instance_ids=["ins-xxxxxxx"])
    ```
    <!--End PulumiCodeChooser -->


    :param Sequence[pulumi.InputType['GetInstancesModificationFilterArgs']] filters: The upper limit of Filters for each request is 10 and the upper limit for Filter.Values is 2.
    :param Sequence[str] instance_ids: One or more instance ID to be queried. It can be obtained from the InstanceId in the returned value of API DescribeInstances. The maximum number of instances in batch for each request is 20.
    :param str result_output_file: Used to save results.
    """
    __args__ = dict()
    __args__['filters'] = filters
    __args__['instanceIds'] = instance_ids
    __args__['resultOutputFile'] = result_output_file
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('tencentcloud:Cvm/getInstancesModification:getInstancesModification', __args__, opts=opts, typ=GetInstancesModificationResult).value

    return AwaitableGetInstancesModificationResult(
        filters=pulumi.get(__ret__, 'filters'),
        id=pulumi.get(__ret__, 'id'),
        instance_ids=pulumi.get(__ret__, 'instance_ids'),
        instance_type_config_status_lists=pulumi.get(__ret__, 'instance_type_config_status_lists'),
        result_output_file=pulumi.get(__ret__, 'result_output_file'))


@_utilities.lift_output_func(get_instances_modification)
def get_instances_modification_output(filters: Optional[pulumi.Input[Optional[Sequence[pulumi.InputType['GetInstancesModificationFilterArgs']]]]] = None,
                                      instance_ids: Optional[pulumi.Input[Optional[Sequence[str]]]] = None,
                                      result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                                      opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetInstancesModificationResult]:
    """
    Use this data source to query cvm instances modification.

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    foo = tencentcloud.Cvm.get_instances_modification(instance_ids=["ins-xxxxxxx"])
    ```
    <!--End PulumiCodeChooser -->


    :param Sequence[pulumi.InputType['GetInstancesModificationFilterArgs']] filters: The upper limit of Filters for each request is 10 and the upper limit for Filter.Values is 2.
    :param Sequence[str] instance_ids: One or more instance ID to be queried. It can be obtained from the InstanceId in the returned value of API DescribeInstances. The maximum number of instances in batch for each request is 20.
    :param str result_output_file: Used to save results.
    """
    ...

# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['RenewHostArgs', 'RenewHost']

@pulumi.input_type
class RenewHostArgs:
    def __init__(__self__, *,
                 host_charge_prepaid: pulumi.Input['RenewHostHostChargePrepaidArgs'],
                 host_id: pulumi.Input[str]):
        """
        The set of arguments for constructing a RenewHost resource.
        :param pulumi.Input['RenewHostHostChargePrepaidArgs'] host_charge_prepaid: Prepaid mode, that is, yearly and monthly subscription related parameter settings. Through this parameter, you can
               specify attributes such as the purchase duration of the Subscription instance and whether to set automatic renewal. If
               the payment mode of the specified instance is prepaid, this parameter must be passed.
        :param pulumi.Input[str] host_id: CDH instance ID.
        """
        pulumi.set(__self__, "host_charge_prepaid", host_charge_prepaid)
        pulumi.set(__self__, "host_id", host_id)

    @property
    @pulumi.getter(name="hostChargePrepaid")
    def host_charge_prepaid(self) -> pulumi.Input['RenewHostHostChargePrepaidArgs']:
        """
        Prepaid mode, that is, yearly and monthly subscription related parameter settings. Through this parameter, you can
        specify attributes such as the purchase duration of the Subscription instance and whether to set automatic renewal. If
        the payment mode of the specified instance is prepaid, this parameter must be passed.
        """
        return pulumi.get(self, "host_charge_prepaid")

    @host_charge_prepaid.setter
    def host_charge_prepaid(self, value: pulumi.Input['RenewHostHostChargePrepaidArgs']):
        pulumi.set(self, "host_charge_prepaid", value)

    @property
    @pulumi.getter(name="hostId")
    def host_id(self) -> pulumi.Input[str]:
        """
        CDH instance ID.
        """
        return pulumi.get(self, "host_id")

    @host_id.setter
    def host_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "host_id", value)


@pulumi.input_type
class _RenewHostState:
    def __init__(__self__, *,
                 host_charge_prepaid: Optional[pulumi.Input['RenewHostHostChargePrepaidArgs']] = None,
                 host_id: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering RenewHost resources.
        :param pulumi.Input['RenewHostHostChargePrepaidArgs'] host_charge_prepaid: Prepaid mode, that is, yearly and monthly subscription related parameter settings. Through this parameter, you can
               specify attributes such as the purchase duration of the Subscription instance and whether to set automatic renewal. If
               the payment mode of the specified instance is prepaid, this parameter must be passed.
        :param pulumi.Input[str] host_id: CDH instance ID.
        """
        if host_charge_prepaid is not None:
            pulumi.set(__self__, "host_charge_prepaid", host_charge_prepaid)
        if host_id is not None:
            pulumi.set(__self__, "host_id", host_id)

    @property
    @pulumi.getter(name="hostChargePrepaid")
    def host_charge_prepaid(self) -> Optional[pulumi.Input['RenewHostHostChargePrepaidArgs']]:
        """
        Prepaid mode, that is, yearly and monthly subscription related parameter settings. Through this parameter, you can
        specify attributes such as the purchase duration of the Subscription instance and whether to set automatic renewal. If
        the payment mode of the specified instance is prepaid, this parameter must be passed.
        """
        return pulumi.get(self, "host_charge_prepaid")

    @host_charge_prepaid.setter
    def host_charge_prepaid(self, value: Optional[pulumi.Input['RenewHostHostChargePrepaidArgs']]):
        pulumi.set(self, "host_charge_prepaid", value)

    @property
    @pulumi.getter(name="hostId")
    def host_id(self) -> Optional[pulumi.Input[str]]:
        """
        CDH instance ID.
        """
        return pulumi.get(self, "host_id")

    @host_id.setter
    def host_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "host_id", value)


class RenewHost(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 host_charge_prepaid: Optional[pulumi.Input[pulumi.InputType['RenewHostHostChargePrepaidArgs']]] = None,
                 host_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Create a RenewHost resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[pulumi.InputType['RenewHostHostChargePrepaidArgs']] host_charge_prepaid: Prepaid mode, that is, yearly and monthly subscription related parameter settings. Through this parameter, you can
               specify attributes such as the purchase duration of the Subscription instance and whether to set automatic renewal. If
               the payment mode of the specified instance is prepaid, this parameter must be passed.
        :param pulumi.Input[str] host_id: CDH instance ID.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: RenewHostArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a RenewHost resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param RenewHostArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(RenewHostArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 host_charge_prepaid: Optional[pulumi.Input[pulumi.InputType['RenewHostHostChargePrepaidArgs']]] = None,
                 host_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = RenewHostArgs.__new__(RenewHostArgs)

            if host_charge_prepaid is None and not opts.urn:
                raise TypeError("Missing required property 'host_charge_prepaid'")
            __props__.__dict__["host_charge_prepaid"] = host_charge_prepaid
            if host_id is None and not opts.urn:
                raise TypeError("Missing required property 'host_id'")
            __props__.__dict__["host_id"] = host_id
        super(RenewHost, __self__).__init__(
            'tencentcloud:Cvm/renewHost:RenewHost',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            host_charge_prepaid: Optional[pulumi.Input[pulumi.InputType['RenewHostHostChargePrepaidArgs']]] = None,
            host_id: Optional[pulumi.Input[str]] = None) -> 'RenewHost':
        """
        Get an existing RenewHost resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[pulumi.InputType['RenewHostHostChargePrepaidArgs']] host_charge_prepaid: Prepaid mode, that is, yearly and monthly subscription related parameter settings. Through this parameter, you can
               specify attributes such as the purchase duration of the Subscription instance and whether to set automatic renewal. If
               the payment mode of the specified instance is prepaid, this parameter must be passed.
        :param pulumi.Input[str] host_id: CDH instance ID.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _RenewHostState.__new__(_RenewHostState)

        __props__.__dict__["host_charge_prepaid"] = host_charge_prepaid
        __props__.__dict__["host_id"] = host_id
        return RenewHost(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="hostChargePrepaid")
    def host_charge_prepaid(self) -> pulumi.Output['outputs.RenewHostHostChargePrepaid']:
        """
        Prepaid mode, that is, yearly and monthly subscription related parameter settings. Through this parameter, you can
        specify attributes such as the purchase duration of the Subscription instance and whether to set automatic renewal. If
        the payment mode of the specified instance is prepaid, this parameter must be passed.
        """
        return pulumi.get(self, "host_charge_prepaid")

    @property
    @pulumi.getter(name="hostId")
    def host_id(self) -> pulumi.Output[str]:
        """
        CDH instance ID.
        """
        return pulumi.get(self, "host_id")


# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['LaunchTemplateVersionArgs', 'LaunchTemplateVersion']

@pulumi.input_type
class LaunchTemplateVersionArgs:
    def __init__(__self__, *,
                 launch_template_id: pulumi.Input[str],
                 placement: pulumi.Input['LaunchTemplateVersionPlacementArgs'],
                 action_timer: Optional[pulumi.Input['LaunchTemplateVersionActionTimerArgs']] = None,
                 cam_role_name: Optional[pulumi.Input[str]] = None,
                 client_token: Optional[pulumi.Input[str]] = None,
                 data_disks: Optional[pulumi.Input[Sequence[pulumi.Input['LaunchTemplateVersionDataDiskArgs']]]] = None,
                 disable_api_termination: Optional[pulumi.Input[bool]] = None,
                 disaster_recover_group_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 dry_run: Optional[pulumi.Input[bool]] = None,
                 enhanced_service: Optional[pulumi.Input['LaunchTemplateVersionEnhancedServiceArgs']] = None,
                 host_name: Optional[pulumi.Input[str]] = None,
                 hpc_cluster_id: Optional[pulumi.Input[str]] = None,
                 image_id: Optional[pulumi.Input[str]] = None,
                 instance_charge_prepaid: Optional[pulumi.Input['LaunchTemplateVersionInstanceChargePrepaidArgs']] = None,
                 instance_charge_type: Optional[pulumi.Input[str]] = None,
                 instance_count: Optional[pulumi.Input[int]] = None,
                 instance_market_options: Optional[pulumi.Input['LaunchTemplateVersionInstanceMarketOptionsArgs']] = None,
                 instance_name: Optional[pulumi.Input[str]] = None,
                 instance_type: Optional[pulumi.Input[str]] = None,
                 internet_accessible: Optional[pulumi.Input['LaunchTemplateVersionInternetAccessibleArgs']] = None,
                 launch_template_version: Optional[pulumi.Input[int]] = None,
                 launch_template_version_description: Optional[pulumi.Input[str]] = None,
                 login_settings: Optional[pulumi.Input['LaunchTemplateVersionLoginSettingsArgs']] = None,
                 security_group_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 system_disk: Optional[pulumi.Input['LaunchTemplateVersionSystemDiskArgs']] = None,
                 tag_specifications: Optional[pulumi.Input[Sequence[pulumi.Input['LaunchTemplateVersionTagSpecificationArgs']]]] = None,
                 user_data: Optional[pulumi.Input[str]] = None,
                 virtual_private_cloud: Optional[pulumi.Input['LaunchTemplateVersionVirtualPrivateCloudArgs']] = None):
        """
        The set of arguments for constructing a LaunchTemplateVersion resource.
        :param pulumi.Input[str] launch_template_id: Instance launch template ID. This parameter is used as a basis for creating new template versions.
        :param pulumi.Input['LaunchTemplateVersionPlacementArgs'] placement: Location of the instance. You can use this parameter to specify the attributes of the instance, such as its availability zone, project, and CDH (for dedicated CVMs).
        :param pulumi.Input['LaunchTemplateVersionActionTimerArgs'] action_timer: Scheduled tasks.
        :param pulumi.Input[str] cam_role_name: The role name of CAM.
        :param pulumi.Input[str] client_token: A unique string supplied by the client to ensure that the request is idempotent. Its maximum length is 64 ASCII characters. If this parameter is not specified, the idem-potency of the request cannot be guaranteed.
        :param pulumi.Input[Sequence[pulumi.Input['LaunchTemplateVersionDataDiskArgs']]] data_disks: The configuration information of instance data disks. If this parameter is not specified, no data disk will be purchased by default.
        :param pulumi.Input[bool] disable_api_termination: Whether the termination protection is enabled. `TRUE`: Enable instance protection, which means that this instance can not be deleted by an API action.`FALSE`: Do not enable the instance protection. Default value: `FALSE`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] disaster_recover_group_ids: Placement group ID. You can only specify one.
        :param pulumi.Input[bool] dry_run: Whether the request is a dry run only.
        :param pulumi.Input['LaunchTemplateVersionEnhancedServiceArgs'] enhanced_service: Enhanced service. You can use this parameter to specify whether to enable services such as Anti-DDoS and Cloud Monitor. If this parameter is not specified, Cloud Monitor and Anti-DDoS are enabled for public images by default.
        :param pulumi.Input[str] host_name: Hostname of a CVM.
        :param pulumi.Input[str] hpc_cluster_id: HPC cluster ID. The HPC cluster must and can only be specified for a high-performance computing instance.
        :param pulumi.Input[str] image_id: Image ID.
        :param pulumi.Input['LaunchTemplateVersionInstanceChargePrepaidArgs'] instance_charge_prepaid: Describes the billing method of an instance.
        :param pulumi.Input[str] instance_charge_type: The charge type of instance.
        :param pulumi.Input[int] instance_count: The number of instances to be purchased.
        :param pulumi.Input['LaunchTemplateVersionInstanceMarketOptionsArgs'] instance_market_options: Options related to bidding requests.
        :param pulumi.Input[str] instance_name: Instance name to be displayed.
        :param pulumi.Input[str] instance_type: The type of the instance. If this parameter is not specified, the system will dynamically specify the default model according to the resource sales in the current region.
        :param pulumi.Input['LaunchTemplateVersionInternetAccessibleArgs'] internet_accessible: Describes the accessibility of an instance in the public network, including its network billing method, maximum bandwidth, etc.
        :param pulumi.Input[int] launch_template_version: This parameter, when specified, is used to create instance launch templates. If this parameter is not specified, the default version will be used.
        :param pulumi.Input[str] launch_template_version_description: Description of instance launch template versions. This parameter can contain 2-256 characters.
        :param pulumi.Input['LaunchTemplateVersionLoginSettingsArgs'] login_settings: Describes login settings of an instance.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] security_group_ids: Security groups to which the instance belongs. If this parameter is not specified, the instance will be associated with default security groups.
        :param pulumi.Input['LaunchTemplateVersionSystemDiskArgs'] system_disk: System disk configuration information of the instance. If this parameter is not specified, it is assigned according to the system default.
        :param pulumi.Input[Sequence[pulumi.Input['LaunchTemplateVersionTagSpecificationArgs']]] tag_specifications: Description of tags associated with resource instances during instance creation.
        :param pulumi.Input[str] user_data: User data provided to the instance. This parameter needs to be encoded in base64 format with the maximum size of 16 KB.
        :param pulumi.Input['LaunchTemplateVersionVirtualPrivateCloudArgs'] virtual_private_cloud: Describes information on VPC, including subnets, IP addresses, etc.
        """
        pulumi.set(__self__, "launch_template_id", launch_template_id)
        pulumi.set(__self__, "placement", placement)
        if action_timer is not None:
            pulumi.set(__self__, "action_timer", action_timer)
        if cam_role_name is not None:
            pulumi.set(__self__, "cam_role_name", cam_role_name)
        if client_token is not None:
            pulumi.set(__self__, "client_token", client_token)
        if data_disks is not None:
            pulumi.set(__self__, "data_disks", data_disks)
        if disable_api_termination is not None:
            pulumi.set(__self__, "disable_api_termination", disable_api_termination)
        if disaster_recover_group_ids is not None:
            pulumi.set(__self__, "disaster_recover_group_ids", disaster_recover_group_ids)
        if dry_run is not None:
            pulumi.set(__self__, "dry_run", dry_run)
        if enhanced_service is not None:
            pulumi.set(__self__, "enhanced_service", enhanced_service)
        if host_name is not None:
            pulumi.set(__self__, "host_name", host_name)
        if hpc_cluster_id is not None:
            pulumi.set(__self__, "hpc_cluster_id", hpc_cluster_id)
        if image_id is not None:
            pulumi.set(__self__, "image_id", image_id)
        if instance_charge_prepaid is not None:
            pulumi.set(__self__, "instance_charge_prepaid", instance_charge_prepaid)
        if instance_charge_type is not None:
            pulumi.set(__self__, "instance_charge_type", instance_charge_type)
        if instance_count is not None:
            pulumi.set(__self__, "instance_count", instance_count)
        if instance_market_options is not None:
            pulumi.set(__self__, "instance_market_options", instance_market_options)
        if instance_name is not None:
            pulumi.set(__self__, "instance_name", instance_name)
        if instance_type is not None:
            pulumi.set(__self__, "instance_type", instance_type)
        if internet_accessible is not None:
            pulumi.set(__self__, "internet_accessible", internet_accessible)
        if launch_template_version is not None:
            pulumi.set(__self__, "launch_template_version", launch_template_version)
        if launch_template_version_description is not None:
            pulumi.set(__self__, "launch_template_version_description", launch_template_version_description)
        if login_settings is not None:
            pulumi.set(__self__, "login_settings", login_settings)
        if security_group_ids is not None:
            pulumi.set(__self__, "security_group_ids", security_group_ids)
        if system_disk is not None:
            pulumi.set(__self__, "system_disk", system_disk)
        if tag_specifications is not None:
            pulumi.set(__self__, "tag_specifications", tag_specifications)
        if user_data is not None:
            pulumi.set(__self__, "user_data", user_data)
        if virtual_private_cloud is not None:
            pulumi.set(__self__, "virtual_private_cloud", virtual_private_cloud)

    @property
    @pulumi.getter(name="launchTemplateId")
    def launch_template_id(self) -> pulumi.Input[str]:
        """
        Instance launch template ID. This parameter is used as a basis for creating new template versions.
        """
        return pulumi.get(self, "launch_template_id")

    @launch_template_id.setter
    def launch_template_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "launch_template_id", value)

    @property
    @pulumi.getter
    def placement(self) -> pulumi.Input['LaunchTemplateVersionPlacementArgs']:
        """
        Location of the instance. You can use this parameter to specify the attributes of the instance, such as its availability zone, project, and CDH (for dedicated CVMs).
        """
        return pulumi.get(self, "placement")

    @placement.setter
    def placement(self, value: pulumi.Input['LaunchTemplateVersionPlacementArgs']):
        pulumi.set(self, "placement", value)

    @property
    @pulumi.getter(name="actionTimer")
    def action_timer(self) -> Optional[pulumi.Input['LaunchTemplateVersionActionTimerArgs']]:
        """
        Scheduled tasks.
        """
        return pulumi.get(self, "action_timer")

    @action_timer.setter
    def action_timer(self, value: Optional[pulumi.Input['LaunchTemplateVersionActionTimerArgs']]):
        pulumi.set(self, "action_timer", value)

    @property
    @pulumi.getter(name="camRoleName")
    def cam_role_name(self) -> Optional[pulumi.Input[str]]:
        """
        The role name of CAM.
        """
        return pulumi.get(self, "cam_role_name")

    @cam_role_name.setter
    def cam_role_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "cam_role_name", value)

    @property
    @pulumi.getter(name="clientToken")
    def client_token(self) -> Optional[pulumi.Input[str]]:
        """
        A unique string supplied by the client to ensure that the request is idempotent. Its maximum length is 64 ASCII characters. If this parameter is not specified, the idem-potency of the request cannot be guaranteed.
        """
        return pulumi.get(self, "client_token")

    @client_token.setter
    def client_token(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "client_token", value)

    @property
    @pulumi.getter(name="dataDisks")
    def data_disks(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['LaunchTemplateVersionDataDiskArgs']]]]:
        """
        The configuration information of instance data disks. If this parameter is not specified, no data disk will be purchased by default.
        """
        return pulumi.get(self, "data_disks")

    @data_disks.setter
    def data_disks(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['LaunchTemplateVersionDataDiskArgs']]]]):
        pulumi.set(self, "data_disks", value)

    @property
    @pulumi.getter(name="disableApiTermination")
    def disable_api_termination(self) -> Optional[pulumi.Input[bool]]:
        """
        Whether the termination protection is enabled. `TRUE`: Enable instance protection, which means that this instance can not be deleted by an API action.`FALSE`: Do not enable the instance protection. Default value: `FALSE`.
        """
        return pulumi.get(self, "disable_api_termination")

    @disable_api_termination.setter
    def disable_api_termination(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "disable_api_termination", value)

    @property
    @pulumi.getter(name="disasterRecoverGroupIds")
    def disaster_recover_group_ids(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Placement group ID. You can only specify one.
        """
        return pulumi.get(self, "disaster_recover_group_ids")

    @disaster_recover_group_ids.setter
    def disaster_recover_group_ids(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "disaster_recover_group_ids", value)

    @property
    @pulumi.getter(name="dryRun")
    def dry_run(self) -> Optional[pulumi.Input[bool]]:
        """
        Whether the request is a dry run only.
        """
        return pulumi.get(self, "dry_run")

    @dry_run.setter
    def dry_run(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "dry_run", value)

    @property
    @pulumi.getter(name="enhancedService")
    def enhanced_service(self) -> Optional[pulumi.Input['LaunchTemplateVersionEnhancedServiceArgs']]:
        """
        Enhanced service. You can use this parameter to specify whether to enable services such as Anti-DDoS and Cloud Monitor. If this parameter is not specified, Cloud Monitor and Anti-DDoS are enabled for public images by default.
        """
        return pulumi.get(self, "enhanced_service")

    @enhanced_service.setter
    def enhanced_service(self, value: Optional[pulumi.Input['LaunchTemplateVersionEnhancedServiceArgs']]):
        pulumi.set(self, "enhanced_service", value)

    @property
    @pulumi.getter(name="hostName")
    def host_name(self) -> Optional[pulumi.Input[str]]:
        """
        Hostname of a CVM.
        """
        return pulumi.get(self, "host_name")

    @host_name.setter
    def host_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "host_name", value)

    @property
    @pulumi.getter(name="hpcClusterId")
    def hpc_cluster_id(self) -> Optional[pulumi.Input[str]]:
        """
        HPC cluster ID. The HPC cluster must and can only be specified for a high-performance computing instance.
        """
        return pulumi.get(self, "hpc_cluster_id")

    @hpc_cluster_id.setter
    def hpc_cluster_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "hpc_cluster_id", value)

    @property
    @pulumi.getter(name="imageId")
    def image_id(self) -> Optional[pulumi.Input[str]]:
        """
        Image ID.
        """
        return pulumi.get(self, "image_id")

    @image_id.setter
    def image_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "image_id", value)

    @property
    @pulumi.getter(name="instanceChargePrepaid")
    def instance_charge_prepaid(self) -> Optional[pulumi.Input['LaunchTemplateVersionInstanceChargePrepaidArgs']]:
        """
        Describes the billing method of an instance.
        """
        return pulumi.get(self, "instance_charge_prepaid")

    @instance_charge_prepaid.setter
    def instance_charge_prepaid(self, value: Optional[pulumi.Input['LaunchTemplateVersionInstanceChargePrepaidArgs']]):
        pulumi.set(self, "instance_charge_prepaid", value)

    @property
    @pulumi.getter(name="instanceChargeType")
    def instance_charge_type(self) -> Optional[pulumi.Input[str]]:
        """
        The charge type of instance.
        """
        return pulumi.get(self, "instance_charge_type")

    @instance_charge_type.setter
    def instance_charge_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "instance_charge_type", value)

    @property
    @pulumi.getter(name="instanceCount")
    def instance_count(self) -> Optional[pulumi.Input[int]]:
        """
        The number of instances to be purchased.
        """
        return pulumi.get(self, "instance_count")

    @instance_count.setter
    def instance_count(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "instance_count", value)

    @property
    @pulumi.getter(name="instanceMarketOptions")
    def instance_market_options(self) -> Optional[pulumi.Input['LaunchTemplateVersionInstanceMarketOptionsArgs']]:
        """
        Options related to bidding requests.
        """
        return pulumi.get(self, "instance_market_options")

    @instance_market_options.setter
    def instance_market_options(self, value: Optional[pulumi.Input['LaunchTemplateVersionInstanceMarketOptionsArgs']]):
        pulumi.set(self, "instance_market_options", value)

    @property
    @pulumi.getter(name="instanceName")
    def instance_name(self) -> Optional[pulumi.Input[str]]:
        """
        Instance name to be displayed.
        """
        return pulumi.get(self, "instance_name")

    @instance_name.setter
    def instance_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "instance_name", value)

    @property
    @pulumi.getter(name="instanceType")
    def instance_type(self) -> Optional[pulumi.Input[str]]:
        """
        The type of the instance. If this parameter is not specified, the system will dynamically specify the default model according to the resource sales in the current region.
        """
        return pulumi.get(self, "instance_type")

    @instance_type.setter
    def instance_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "instance_type", value)

    @property
    @pulumi.getter(name="internetAccessible")
    def internet_accessible(self) -> Optional[pulumi.Input['LaunchTemplateVersionInternetAccessibleArgs']]:
        """
        Describes the accessibility of an instance in the public network, including its network billing method, maximum bandwidth, etc.
        """
        return pulumi.get(self, "internet_accessible")

    @internet_accessible.setter
    def internet_accessible(self, value: Optional[pulumi.Input['LaunchTemplateVersionInternetAccessibleArgs']]):
        pulumi.set(self, "internet_accessible", value)

    @property
    @pulumi.getter(name="launchTemplateVersion")
    def launch_template_version(self) -> Optional[pulumi.Input[int]]:
        """
        This parameter, when specified, is used to create instance launch templates. If this parameter is not specified, the default version will be used.
        """
        return pulumi.get(self, "launch_template_version")

    @launch_template_version.setter
    def launch_template_version(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "launch_template_version", value)

    @property
    @pulumi.getter(name="launchTemplateVersionDescription")
    def launch_template_version_description(self) -> Optional[pulumi.Input[str]]:
        """
        Description of instance launch template versions. This parameter can contain 2-256 characters.
        """
        return pulumi.get(self, "launch_template_version_description")

    @launch_template_version_description.setter
    def launch_template_version_description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "launch_template_version_description", value)

    @property
    @pulumi.getter(name="loginSettings")
    def login_settings(self) -> Optional[pulumi.Input['LaunchTemplateVersionLoginSettingsArgs']]:
        """
        Describes login settings of an instance.
        """
        return pulumi.get(self, "login_settings")

    @login_settings.setter
    def login_settings(self, value: Optional[pulumi.Input['LaunchTemplateVersionLoginSettingsArgs']]):
        pulumi.set(self, "login_settings", value)

    @property
    @pulumi.getter(name="securityGroupIds")
    def security_group_ids(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Security groups to which the instance belongs. If this parameter is not specified, the instance will be associated with default security groups.
        """
        return pulumi.get(self, "security_group_ids")

    @security_group_ids.setter
    def security_group_ids(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "security_group_ids", value)

    @property
    @pulumi.getter(name="systemDisk")
    def system_disk(self) -> Optional[pulumi.Input['LaunchTemplateVersionSystemDiskArgs']]:
        """
        System disk configuration information of the instance. If this parameter is not specified, it is assigned according to the system default.
        """
        return pulumi.get(self, "system_disk")

    @system_disk.setter
    def system_disk(self, value: Optional[pulumi.Input['LaunchTemplateVersionSystemDiskArgs']]):
        pulumi.set(self, "system_disk", value)

    @property
    @pulumi.getter(name="tagSpecifications")
    def tag_specifications(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['LaunchTemplateVersionTagSpecificationArgs']]]]:
        """
        Description of tags associated with resource instances during instance creation.
        """
        return pulumi.get(self, "tag_specifications")

    @tag_specifications.setter
    def tag_specifications(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['LaunchTemplateVersionTagSpecificationArgs']]]]):
        pulumi.set(self, "tag_specifications", value)

    @property
    @pulumi.getter(name="userData")
    def user_data(self) -> Optional[pulumi.Input[str]]:
        """
        User data provided to the instance. This parameter needs to be encoded in base64 format with the maximum size of 16 KB.
        """
        return pulumi.get(self, "user_data")

    @user_data.setter
    def user_data(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "user_data", value)

    @property
    @pulumi.getter(name="virtualPrivateCloud")
    def virtual_private_cloud(self) -> Optional[pulumi.Input['LaunchTemplateVersionVirtualPrivateCloudArgs']]:
        """
        Describes information on VPC, including subnets, IP addresses, etc.
        """
        return pulumi.get(self, "virtual_private_cloud")

    @virtual_private_cloud.setter
    def virtual_private_cloud(self, value: Optional[pulumi.Input['LaunchTemplateVersionVirtualPrivateCloudArgs']]):
        pulumi.set(self, "virtual_private_cloud", value)


@pulumi.input_type
class _LaunchTemplateVersionState:
    def __init__(__self__, *,
                 action_timer: Optional[pulumi.Input['LaunchTemplateVersionActionTimerArgs']] = None,
                 cam_role_name: Optional[pulumi.Input[str]] = None,
                 client_token: Optional[pulumi.Input[str]] = None,
                 data_disks: Optional[pulumi.Input[Sequence[pulumi.Input['LaunchTemplateVersionDataDiskArgs']]]] = None,
                 disable_api_termination: Optional[pulumi.Input[bool]] = None,
                 disaster_recover_group_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 dry_run: Optional[pulumi.Input[bool]] = None,
                 enhanced_service: Optional[pulumi.Input['LaunchTemplateVersionEnhancedServiceArgs']] = None,
                 host_name: Optional[pulumi.Input[str]] = None,
                 hpc_cluster_id: Optional[pulumi.Input[str]] = None,
                 image_id: Optional[pulumi.Input[str]] = None,
                 instance_charge_prepaid: Optional[pulumi.Input['LaunchTemplateVersionInstanceChargePrepaidArgs']] = None,
                 instance_charge_type: Optional[pulumi.Input[str]] = None,
                 instance_count: Optional[pulumi.Input[int]] = None,
                 instance_market_options: Optional[pulumi.Input['LaunchTemplateVersionInstanceMarketOptionsArgs']] = None,
                 instance_name: Optional[pulumi.Input[str]] = None,
                 instance_type: Optional[pulumi.Input[str]] = None,
                 internet_accessible: Optional[pulumi.Input['LaunchTemplateVersionInternetAccessibleArgs']] = None,
                 launch_template_id: Optional[pulumi.Input[str]] = None,
                 launch_template_version: Optional[pulumi.Input[int]] = None,
                 launch_template_version_description: Optional[pulumi.Input[str]] = None,
                 login_settings: Optional[pulumi.Input['LaunchTemplateVersionLoginSettingsArgs']] = None,
                 placement: Optional[pulumi.Input['LaunchTemplateVersionPlacementArgs']] = None,
                 security_group_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 system_disk: Optional[pulumi.Input['LaunchTemplateVersionSystemDiskArgs']] = None,
                 tag_specifications: Optional[pulumi.Input[Sequence[pulumi.Input['LaunchTemplateVersionTagSpecificationArgs']]]] = None,
                 user_data: Optional[pulumi.Input[str]] = None,
                 virtual_private_cloud: Optional[pulumi.Input['LaunchTemplateVersionVirtualPrivateCloudArgs']] = None):
        """
        Input properties used for looking up and filtering LaunchTemplateVersion resources.
        :param pulumi.Input['LaunchTemplateVersionActionTimerArgs'] action_timer: Scheduled tasks.
        :param pulumi.Input[str] cam_role_name: The role name of CAM.
        :param pulumi.Input[str] client_token: A unique string supplied by the client to ensure that the request is idempotent. Its maximum length is 64 ASCII characters. If this parameter is not specified, the idem-potency of the request cannot be guaranteed.
        :param pulumi.Input[Sequence[pulumi.Input['LaunchTemplateVersionDataDiskArgs']]] data_disks: The configuration information of instance data disks. If this parameter is not specified, no data disk will be purchased by default.
        :param pulumi.Input[bool] disable_api_termination: Whether the termination protection is enabled. `TRUE`: Enable instance protection, which means that this instance can not be deleted by an API action.`FALSE`: Do not enable the instance protection. Default value: `FALSE`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] disaster_recover_group_ids: Placement group ID. You can only specify one.
        :param pulumi.Input[bool] dry_run: Whether the request is a dry run only.
        :param pulumi.Input['LaunchTemplateVersionEnhancedServiceArgs'] enhanced_service: Enhanced service. You can use this parameter to specify whether to enable services such as Anti-DDoS and Cloud Monitor. If this parameter is not specified, Cloud Monitor and Anti-DDoS are enabled for public images by default.
        :param pulumi.Input[str] host_name: Hostname of a CVM.
        :param pulumi.Input[str] hpc_cluster_id: HPC cluster ID. The HPC cluster must and can only be specified for a high-performance computing instance.
        :param pulumi.Input[str] image_id: Image ID.
        :param pulumi.Input['LaunchTemplateVersionInstanceChargePrepaidArgs'] instance_charge_prepaid: Describes the billing method of an instance.
        :param pulumi.Input[str] instance_charge_type: The charge type of instance.
        :param pulumi.Input[int] instance_count: The number of instances to be purchased.
        :param pulumi.Input['LaunchTemplateVersionInstanceMarketOptionsArgs'] instance_market_options: Options related to bidding requests.
        :param pulumi.Input[str] instance_name: Instance name to be displayed.
        :param pulumi.Input[str] instance_type: The type of the instance. If this parameter is not specified, the system will dynamically specify the default model according to the resource sales in the current region.
        :param pulumi.Input['LaunchTemplateVersionInternetAccessibleArgs'] internet_accessible: Describes the accessibility of an instance in the public network, including its network billing method, maximum bandwidth, etc.
        :param pulumi.Input[str] launch_template_id: Instance launch template ID. This parameter is used as a basis for creating new template versions.
        :param pulumi.Input[int] launch_template_version: This parameter, when specified, is used to create instance launch templates. If this parameter is not specified, the default version will be used.
        :param pulumi.Input[str] launch_template_version_description: Description of instance launch template versions. This parameter can contain 2-256 characters.
        :param pulumi.Input['LaunchTemplateVersionLoginSettingsArgs'] login_settings: Describes login settings of an instance.
        :param pulumi.Input['LaunchTemplateVersionPlacementArgs'] placement: Location of the instance. You can use this parameter to specify the attributes of the instance, such as its availability zone, project, and CDH (for dedicated CVMs).
        :param pulumi.Input[Sequence[pulumi.Input[str]]] security_group_ids: Security groups to which the instance belongs. If this parameter is not specified, the instance will be associated with default security groups.
        :param pulumi.Input['LaunchTemplateVersionSystemDiskArgs'] system_disk: System disk configuration information of the instance. If this parameter is not specified, it is assigned according to the system default.
        :param pulumi.Input[Sequence[pulumi.Input['LaunchTemplateVersionTagSpecificationArgs']]] tag_specifications: Description of tags associated with resource instances during instance creation.
        :param pulumi.Input[str] user_data: User data provided to the instance. This parameter needs to be encoded in base64 format with the maximum size of 16 KB.
        :param pulumi.Input['LaunchTemplateVersionVirtualPrivateCloudArgs'] virtual_private_cloud: Describes information on VPC, including subnets, IP addresses, etc.
        """
        if action_timer is not None:
            pulumi.set(__self__, "action_timer", action_timer)
        if cam_role_name is not None:
            pulumi.set(__self__, "cam_role_name", cam_role_name)
        if client_token is not None:
            pulumi.set(__self__, "client_token", client_token)
        if data_disks is not None:
            pulumi.set(__self__, "data_disks", data_disks)
        if disable_api_termination is not None:
            pulumi.set(__self__, "disable_api_termination", disable_api_termination)
        if disaster_recover_group_ids is not None:
            pulumi.set(__self__, "disaster_recover_group_ids", disaster_recover_group_ids)
        if dry_run is not None:
            pulumi.set(__self__, "dry_run", dry_run)
        if enhanced_service is not None:
            pulumi.set(__self__, "enhanced_service", enhanced_service)
        if host_name is not None:
            pulumi.set(__self__, "host_name", host_name)
        if hpc_cluster_id is not None:
            pulumi.set(__self__, "hpc_cluster_id", hpc_cluster_id)
        if image_id is not None:
            pulumi.set(__self__, "image_id", image_id)
        if instance_charge_prepaid is not None:
            pulumi.set(__self__, "instance_charge_prepaid", instance_charge_prepaid)
        if instance_charge_type is not None:
            pulumi.set(__self__, "instance_charge_type", instance_charge_type)
        if instance_count is not None:
            pulumi.set(__self__, "instance_count", instance_count)
        if instance_market_options is not None:
            pulumi.set(__self__, "instance_market_options", instance_market_options)
        if instance_name is not None:
            pulumi.set(__self__, "instance_name", instance_name)
        if instance_type is not None:
            pulumi.set(__self__, "instance_type", instance_type)
        if internet_accessible is not None:
            pulumi.set(__self__, "internet_accessible", internet_accessible)
        if launch_template_id is not None:
            pulumi.set(__self__, "launch_template_id", launch_template_id)
        if launch_template_version is not None:
            pulumi.set(__self__, "launch_template_version", launch_template_version)
        if launch_template_version_description is not None:
            pulumi.set(__self__, "launch_template_version_description", launch_template_version_description)
        if login_settings is not None:
            pulumi.set(__self__, "login_settings", login_settings)
        if placement is not None:
            pulumi.set(__self__, "placement", placement)
        if security_group_ids is not None:
            pulumi.set(__self__, "security_group_ids", security_group_ids)
        if system_disk is not None:
            pulumi.set(__self__, "system_disk", system_disk)
        if tag_specifications is not None:
            pulumi.set(__self__, "tag_specifications", tag_specifications)
        if user_data is not None:
            pulumi.set(__self__, "user_data", user_data)
        if virtual_private_cloud is not None:
            pulumi.set(__self__, "virtual_private_cloud", virtual_private_cloud)

    @property
    @pulumi.getter(name="actionTimer")
    def action_timer(self) -> Optional[pulumi.Input['LaunchTemplateVersionActionTimerArgs']]:
        """
        Scheduled tasks.
        """
        return pulumi.get(self, "action_timer")

    @action_timer.setter
    def action_timer(self, value: Optional[pulumi.Input['LaunchTemplateVersionActionTimerArgs']]):
        pulumi.set(self, "action_timer", value)

    @property
    @pulumi.getter(name="camRoleName")
    def cam_role_name(self) -> Optional[pulumi.Input[str]]:
        """
        The role name of CAM.
        """
        return pulumi.get(self, "cam_role_name")

    @cam_role_name.setter
    def cam_role_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "cam_role_name", value)

    @property
    @pulumi.getter(name="clientToken")
    def client_token(self) -> Optional[pulumi.Input[str]]:
        """
        A unique string supplied by the client to ensure that the request is idempotent. Its maximum length is 64 ASCII characters. If this parameter is not specified, the idem-potency of the request cannot be guaranteed.
        """
        return pulumi.get(self, "client_token")

    @client_token.setter
    def client_token(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "client_token", value)

    @property
    @pulumi.getter(name="dataDisks")
    def data_disks(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['LaunchTemplateVersionDataDiskArgs']]]]:
        """
        The configuration information of instance data disks. If this parameter is not specified, no data disk will be purchased by default.
        """
        return pulumi.get(self, "data_disks")

    @data_disks.setter
    def data_disks(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['LaunchTemplateVersionDataDiskArgs']]]]):
        pulumi.set(self, "data_disks", value)

    @property
    @pulumi.getter(name="disableApiTermination")
    def disable_api_termination(self) -> Optional[pulumi.Input[bool]]:
        """
        Whether the termination protection is enabled. `TRUE`: Enable instance protection, which means that this instance can not be deleted by an API action.`FALSE`: Do not enable the instance protection. Default value: `FALSE`.
        """
        return pulumi.get(self, "disable_api_termination")

    @disable_api_termination.setter
    def disable_api_termination(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "disable_api_termination", value)

    @property
    @pulumi.getter(name="disasterRecoverGroupIds")
    def disaster_recover_group_ids(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Placement group ID. You can only specify one.
        """
        return pulumi.get(self, "disaster_recover_group_ids")

    @disaster_recover_group_ids.setter
    def disaster_recover_group_ids(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "disaster_recover_group_ids", value)

    @property
    @pulumi.getter(name="dryRun")
    def dry_run(self) -> Optional[pulumi.Input[bool]]:
        """
        Whether the request is a dry run only.
        """
        return pulumi.get(self, "dry_run")

    @dry_run.setter
    def dry_run(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "dry_run", value)

    @property
    @pulumi.getter(name="enhancedService")
    def enhanced_service(self) -> Optional[pulumi.Input['LaunchTemplateVersionEnhancedServiceArgs']]:
        """
        Enhanced service. You can use this parameter to specify whether to enable services such as Anti-DDoS and Cloud Monitor. If this parameter is not specified, Cloud Monitor and Anti-DDoS are enabled for public images by default.
        """
        return pulumi.get(self, "enhanced_service")

    @enhanced_service.setter
    def enhanced_service(self, value: Optional[pulumi.Input['LaunchTemplateVersionEnhancedServiceArgs']]):
        pulumi.set(self, "enhanced_service", value)

    @property
    @pulumi.getter(name="hostName")
    def host_name(self) -> Optional[pulumi.Input[str]]:
        """
        Hostname of a CVM.
        """
        return pulumi.get(self, "host_name")

    @host_name.setter
    def host_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "host_name", value)

    @property
    @pulumi.getter(name="hpcClusterId")
    def hpc_cluster_id(self) -> Optional[pulumi.Input[str]]:
        """
        HPC cluster ID. The HPC cluster must and can only be specified for a high-performance computing instance.
        """
        return pulumi.get(self, "hpc_cluster_id")

    @hpc_cluster_id.setter
    def hpc_cluster_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "hpc_cluster_id", value)

    @property
    @pulumi.getter(name="imageId")
    def image_id(self) -> Optional[pulumi.Input[str]]:
        """
        Image ID.
        """
        return pulumi.get(self, "image_id")

    @image_id.setter
    def image_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "image_id", value)

    @property
    @pulumi.getter(name="instanceChargePrepaid")
    def instance_charge_prepaid(self) -> Optional[pulumi.Input['LaunchTemplateVersionInstanceChargePrepaidArgs']]:
        """
        Describes the billing method of an instance.
        """
        return pulumi.get(self, "instance_charge_prepaid")

    @instance_charge_prepaid.setter
    def instance_charge_prepaid(self, value: Optional[pulumi.Input['LaunchTemplateVersionInstanceChargePrepaidArgs']]):
        pulumi.set(self, "instance_charge_prepaid", value)

    @property
    @pulumi.getter(name="instanceChargeType")
    def instance_charge_type(self) -> Optional[pulumi.Input[str]]:
        """
        The charge type of instance.
        """
        return pulumi.get(self, "instance_charge_type")

    @instance_charge_type.setter
    def instance_charge_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "instance_charge_type", value)

    @property
    @pulumi.getter(name="instanceCount")
    def instance_count(self) -> Optional[pulumi.Input[int]]:
        """
        The number of instances to be purchased.
        """
        return pulumi.get(self, "instance_count")

    @instance_count.setter
    def instance_count(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "instance_count", value)

    @property
    @pulumi.getter(name="instanceMarketOptions")
    def instance_market_options(self) -> Optional[pulumi.Input['LaunchTemplateVersionInstanceMarketOptionsArgs']]:
        """
        Options related to bidding requests.
        """
        return pulumi.get(self, "instance_market_options")

    @instance_market_options.setter
    def instance_market_options(self, value: Optional[pulumi.Input['LaunchTemplateVersionInstanceMarketOptionsArgs']]):
        pulumi.set(self, "instance_market_options", value)

    @property
    @pulumi.getter(name="instanceName")
    def instance_name(self) -> Optional[pulumi.Input[str]]:
        """
        Instance name to be displayed.
        """
        return pulumi.get(self, "instance_name")

    @instance_name.setter
    def instance_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "instance_name", value)

    @property
    @pulumi.getter(name="instanceType")
    def instance_type(self) -> Optional[pulumi.Input[str]]:
        """
        The type of the instance. If this parameter is not specified, the system will dynamically specify the default model according to the resource sales in the current region.
        """
        return pulumi.get(self, "instance_type")

    @instance_type.setter
    def instance_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "instance_type", value)

    @property
    @pulumi.getter(name="internetAccessible")
    def internet_accessible(self) -> Optional[pulumi.Input['LaunchTemplateVersionInternetAccessibleArgs']]:
        """
        Describes the accessibility of an instance in the public network, including its network billing method, maximum bandwidth, etc.
        """
        return pulumi.get(self, "internet_accessible")

    @internet_accessible.setter
    def internet_accessible(self, value: Optional[pulumi.Input['LaunchTemplateVersionInternetAccessibleArgs']]):
        pulumi.set(self, "internet_accessible", value)

    @property
    @pulumi.getter(name="launchTemplateId")
    def launch_template_id(self) -> Optional[pulumi.Input[str]]:
        """
        Instance launch template ID. This parameter is used as a basis for creating new template versions.
        """
        return pulumi.get(self, "launch_template_id")

    @launch_template_id.setter
    def launch_template_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "launch_template_id", value)

    @property
    @pulumi.getter(name="launchTemplateVersion")
    def launch_template_version(self) -> Optional[pulumi.Input[int]]:
        """
        This parameter, when specified, is used to create instance launch templates. If this parameter is not specified, the default version will be used.
        """
        return pulumi.get(self, "launch_template_version")

    @launch_template_version.setter
    def launch_template_version(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "launch_template_version", value)

    @property
    @pulumi.getter(name="launchTemplateVersionDescription")
    def launch_template_version_description(self) -> Optional[pulumi.Input[str]]:
        """
        Description of instance launch template versions. This parameter can contain 2-256 characters.
        """
        return pulumi.get(self, "launch_template_version_description")

    @launch_template_version_description.setter
    def launch_template_version_description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "launch_template_version_description", value)

    @property
    @pulumi.getter(name="loginSettings")
    def login_settings(self) -> Optional[pulumi.Input['LaunchTemplateVersionLoginSettingsArgs']]:
        """
        Describes login settings of an instance.
        """
        return pulumi.get(self, "login_settings")

    @login_settings.setter
    def login_settings(self, value: Optional[pulumi.Input['LaunchTemplateVersionLoginSettingsArgs']]):
        pulumi.set(self, "login_settings", value)

    @property
    @pulumi.getter
    def placement(self) -> Optional[pulumi.Input['LaunchTemplateVersionPlacementArgs']]:
        """
        Location of the instance. You can use this parameter to specify the attributes of the instance, such as its availability zone, project, and CDH (for dedicated CVMs).
        """
        return pulumi.get(self, "placement")

    @placement.setter
    def placement(self, value: Optional[pulumi.Input['LaunchTemplateVersionPlacementArgs']]):
        pulumi.set(self, "placement", value)

    @property
    @pulumi.getter(name="securityGroupIds")
    def security_group_ids(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Security groups to which the instance belongs. If this parameter is not specified, the instance will be associated with default security groups.
        """
        return pulumi.get(self, "security_group_ids")

    @security_group_ids.setter
    def security_group_ids(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "security_group_ids", value)

    @property
    @pulumi.getter(name="systemDisk")
    def system_disk(self) -> Optional[pulumi.Input['LaunchTemplateVersionSystemDiskArgs']]:
        """
        System disk configuration information of the instance. If this parameter is not specified, it is assigned according to the system default.
        """
        return pulumi.get(self, "system_disk")

    @system_disk.setter
    def system_disk(self, value: Optional[pulumi.Input['LaunchTemplateVersionSystemDiskArgs']]):
        pulumi.set(self, "system_disk", value)

    @property
    @pulumi.getter(name="tagSpecifications")
    def tag_specifications(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['LaunchTemplateVersionTagSpecificationArgs']]]]:
        """
        Description of tags associated with resource instances during instance creation.
        """
        return pulumi.get(self, "tag_specifications")

    @tag_specifications.setter
    def tag_specifications(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['LaunchTemplateVersionTagSpecificationArgs']]]]):
        pulumi.set(self, "tag_specifications", value)

    @property
    @pulumi.getter(name="userData")
    def user_data(self) -> Optional[pulumi.Input[str]]:
        """
        User data provided to the instance. This parameter needs to be encoded in base64 format with the maximum size of 16 KB.
        """
        return pulumi.get(self, "user_data")

    @user_data.setter
    def user_data(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "user_data", value)

    @property
    @pulumi.getter(name="virtualPrivateCloud")
    def virtual_private_cloud(self) -> Optional[pulumi.Input['LaunchTemplateVersionVirtualPrivateCloudArgs']]:
        """
        Describes information on VPC, including subnets, IP addresses, etc.
        """
        return pulumi.get(self, "virtual_private_cloud")

    @virtual_private_cloud.setter
    def virtual_private_cloud(self, value: Optional[pulumi.Input['LaunchTemplateVersionVirtualPrivateCloudArgs']]):
        pulumi.set(self, "virtual_private_cloud", value)


class LaunchTemplateVersion(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 action_timer: Optional[pulumi.Input[pulumi.InputType['LaunchTemplateVersionActionTimerArgs']]] = None,
                 cam_role_name: Optional[pulumi.Input[str]] = None,
                 client_token: Optional[pulumi.Input[str]] = None,
                 data_disks: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['LaunchTemplateVersionDataDiskArgs']]]]] = None,
                 disable_api_termination: Optional[pulumi.Input[bool]] = None,
                 disaster_recover_group_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 dry_run: Optional[pulumi.Input[bool]] = None,
                 enhanced_service: Optional[pulumi.Input[pulumi.InputType['LaunchTemplateVersionEnhancedServiceArgs']]] = None,
                 host_name: Optional[pulumi.Input[str]] = None,
                 hpc_cluster_id: Optional[pulumi.Input[str]] = None,
                 image_id: Optional[pulumi.Input[str]] = None,
                 instance_charge_prepaid: Optional[pulumi.Input[pulumi.InputType['LaunchTemplateVersionInstanceChargePrepaidArgs']]] = None,
                 instance_charge_type: Optional[pulumi.Input[str]] = None,
                 instance_count: Optional[pulumi.Input[int]] = None,
                 instance_market_options: Optional[pulumi.Input[pulumi.InputType['LaunchTemplateVersionInstanceMarketOptionsArgs']]] = None,
                 instance_name: Optional[pulumi.Input[str]] = None,
                 instance_type: Optional[pulumi.Input[str]] = None,
                 internet_accessible: Optional[pulumi.Input[pulumi.InputType['LaunchTemplateVersionInternetAccessibleArgs']]] = None,
                 launch_template_id: Optional[pulumi.Input[str]] = None,
                 launch_template_version: Optional[pulumi.Input[int]] = None,
                 launch_template_version_description: Optional[pulumi.Input[str]] = None,
                 login_settings: Optional[pulumi.Input[pulumi.InputType['LaunchTemplateVersionLoginSettingsArgs']]] = None,
                 placement: Optional[pulumi.Input[pulumi.InputType['LaunchTemplateVersionPlacementArgs']]] = None,
                 security_group_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 system_disk: Optional[pulumi.Input[pulumi.InputType['LaunchTemplateVersionSystemDiskArgs']]] = None,
                 tag_specifications: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['LaunchTemplateVersionTagSpecificationArgs']]]]] = None,
                 user_data: Optional[pulumi.Input[str]] = None,
                 virtual_private_cloud: Optional[pulumi.Input[pulumi.InputType['LaunchTemplateVersionVirtualPrivateCloudArgs']]] = None,
                 __props__=None):
        """
        Provides a resource to create a cvm launch_template_version

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        foo = tencentcloud.cvm.LaunchTemplateVersion("foo",
            disable_api_termination=False,
            image_id="img-9qrfy1xt",
            instance_type="S5.MEDIUM4",
            launch_template_id="lt-r9ajalbi",
            launch_template_version_description="version description",
            placement=tencentcloud.cvm.LaunchTemplateVersionPlacementArgs(
                project_id=0,
                zone="ap-guangzhou-6",
            ))
        ```
        <!--End PulumiCodeChooser -->

        ## Import

        cvm launch_template_version can be imported using the id, e.g.

        ```sh
        $ pulumi import tencentcloud:Cvm/launchTemplateVersion:LaunchTemplateVersion launch_template_version ${launch_template_id}#${launch_template_version}
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[pulumi.InputType['LaunchTemplateVersionActionTimerArgs']] action_timer: Scheduled tasks.
        :param pulumi.Input[str] cam_role_name: The role name of CAM.
        :param pulumi.Input[str] client_token: A unique string supplied by the client to ensure that the request is idempotent. Its maximum length is 64 ASCII characters. If this parameter is not specified, the idem-potency of the request cannot be guaranteed.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['LaunchTemplateVersionDataDiskArgs']]]] data_disks: The configuration information of instance data disks. If this parameter is not specified, no data disk will be purchased by default.
        :param pulumi.Input[bool] disable_api_termination: Whether the termination protection is enabled. `TRUE`: Enable instance protection, which means that this instance can not be deleted by an API action.`FALSE`: Do not enable the instance protection. Default value: `FALSE`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] disaster_recover_group_ids: Placement group ID. You can only specify one.
        :param pulumi.Input[bool] dry_run: Whether the request is a dry run only.
        :param pulumi.Input[pulumi.InputType['LaunchTemplateVersionEnhancedServiceArgs']] enhanced_service: Enhanced service. You can use this parameter to specify whether to enable services such as Anti-DDoS and Cloud Monitor. If this parameter is not specified, Cloud Monitor and Anti-DDoS are enabled for public images by default.
        :param pulumi.Input[str] host_name: Hostname of a CVM.
        :param pulumi.Input[str] hpc_cluster_id: HPC cluster ID. The HPC cluster must and can only be specified for a high-performance computing instance.
        :param pulumi.Input[str] image_id: Image ID.
        :param pulumi.Input[pulumi.InputType['LaunchTemplateVersionInstanceChargePrepaidArgs']] instance_charge_prepaid: Describes the billing method of an instance.
        :param pulumi.Input[str] instance_charge_type: The charge type of instance.
        :param pulumi.Input[int] instance_count: The number of instances to be purchased.
        :param pulumi.Input[pulumi.InputType['LaunchTemplateVersionInstanceMarketOptionsArgs']] instance_market_options: Options related to bidding requests.
        :param pulumi.Input[str] instance_name: Instance name to be displayed.
        :param pulumi.Input[str] instance_type: The type of the instance. If this parameter is not specified, the system will dynamically specify the default model according to the resource sales in the current region.
        :param pulumi.Input[pulumi.InputType['LaunchTemplateVersionInternetAccessibleArgs']] internet_accessible: Describes the accessibility of an instance in the public network, including its network billing method, maximum bandwidth, etc.
        :param pulumi.Input[str] launch_template_id: Instance launch template ID. This parameter is used as a basis for creating new template versions.
        :param pulumi.Input[int] launch_template_version: This parameter, when specified, is used to create instance launch templates. If this parameter is not specified, the default version will be used.
        :param pulumi.Input[str] launch_template_version_description: Description of instance launch template versions. This parameter can contain 2-256 characters.
        :param pulumi.Input[pulumi.InputType['LaunchTemplateVersionLoginSettingsArgs']] login_settings: Describes login settings of an instance.
        :param pulumi.Input[pulumi.InputType['LaunchTemplateVersionPlacementArgs']] placement: Location of the instance. You can use this parameter to specify the attributes of the instance, such as its availability zone, project, and CDH (for dedicated CVMs).
        :param pulumi.Input[Sequence[pulumi.Input[str]]] security_group_ids: Security groups to which the instance belongs. If this parameter is not specified, the instance will be associated with default security groups.
        :param pulumi.Input[pulumi.InputType['LaunchTemplateVersionSystemDiskArgs']] system_disk: System disk configuration information of the instance. If this parameter is not specified, it is assigned according to the system default.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['LaunchTemplateVersionTagSpecificationArgs']]]] tag_specifications: Description of tags associated with resource instances during instance creation.
        :param pulumi.Input[str] user_data: User data provided to the instance. This parameter needs to be encoded in base64 format with the maximum size of 16 KB.
        :param pulumi.Input[pulumi.InputType['LaunchTemplateVersionVirtualPrivateCloudArgs']] virtual_private_cloud: Describes information on VPC, including subnets, IP addresses, etc.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: LaunchTemplateVersionArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Provides a resource to create a cvm launch_template_version

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        foo = tencentcloud.cvm.LaunchTemplateVersion("foo",
            disable_api_termination=False,
            image_id="img-9qrfy1xt",
            instance_type="S5.MEDIUM4",
            launch_template_id="lt-r9ajalbi",
            launch_template_version_description="version description",
            placement=tencentcloud.cvm.LaunchTemplateVersionPlacementArgs(
                project_id=0,
                zone="ap-guangzhou-6",
            ))
        ```
        <!--End PulumiCodeChooser -->

        ## Import

        cvm launch_template_version can be imported using the id, e.g.

        ```sh
        $ pulumi import tencentcloud:Cvm/launchTemplateVersion:LaunchTemplateVersion launch_template_version ${launch_template_id}#${launch_template_version}
        ```

        :param str resource_name: The name of the resource.
        :param LaunchTemplateVersionArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(LaunchTemplateVersionArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 action_timer: Optional[pulumi.Input[pulumi.InputType['LaunchTemplateVersionActionTimerArgs']]] = None,
                 cam_role_name: Optional[pulumi.Input[str]] = None,
                 client_token: Optional[pulumi.Input[str]] = None,
                 data_disks: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['LaunchTemplateVersionDataDiskArgs']]]]] = None,
                 disable_api_termination: Optional[pulumi.Input[bool]] = None,
                 disaster_recover_group_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 dry_run: Optional[pulumi.Input[bool]] = None,
                 enhanced_service: Optional[pulumi.Input[pulumi.InputType['LaunchTemplateVersionEnhancedServiceArgs']]] = None,
                 host_name: Optional[pulumi.Input[str]] = None,
                 hpc_cluster_id: Optional[pulumi.Input[str]] = None,
                 image_id: Optional[pulumi.Input[str]] = None,
                 instance_charge_prepaid: Optional[pulumi.Input[pulumi.InputType['LaunchTemplateVersionInstanceChargePrepaidArgs']]] = None,
                 instance_charge_type: Optional[pulumi.Input[str]] = None,
                 instance_count: Optional[pulumi.Input[int]] = None,
                 instance_market_options: Optional[pulumi.Input[pulumi.InputType['LaunchTemplateVersionInstanceMarketOptionsArgs']]] = None,
                 instance_name: Optional[pulumi.Input[str]] = None,
                 instance_type: Optional[pulumi.Input[str]] = None,
                 internet_accessible: Optional[pulumi.Input[pulumi.InputType['LaunchTemplateVersionInternetAccessibleArgs']]] = None,
                 launch_template_id: Optional[pulumi.Input[str]] = None,
                 launch_template_version: Optional[pulumi.Input[int]] = None,
                 launch_template_version_description: Optional[pulumi.Input[str]] = None,
                 login_settings: Optional[pulumi.Input[pulumi.InputType['LaunchTemplateVersionLoginSettingsArgs']]] = None,
                 placement: Optional[pulumi.Input[pulumi.InputType['LaunchTemplateVersionPlacementArgs']]] = None,
                 security_group_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 system_disk: Optional[pulumi.Input[pulumi.InputType['LaunchTemplateVersionSystemDiskArgs']]] = None,
                 tag_specifications: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['LaunchTemplateVersionTagSpecificationArgs']]]]] = None,
                 user_data: Optional[pulumi.Input[str]] = None,
                 virtual_private_cloud: Optional[pulumi.Input[pulumi.InputType['LaunchTemplateVersionVirtualPrivateCloudArgs']]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = LaunchTemplateVersionArgs.__new__(LaunchTemplateVersionArgs)

            __props__.__dict__["action_timer"] = action_timer
            __props__.__dict__["cam_role_name"] = cam_role_name
            __props__.__dict__["client_token"] = client_token
            __props__.__dict__["data_disks"] = data_disks
            __props__.__dict__["disable_api_termination"] = disable_api_termination
            __props__.__dict__["disaster_recover_group_ids"] = disaster_recover_group_ids
            __props__.__dict__["dry_run"] = dry_run
            __props__.__dict__["enhanced_service"] = enhanced_service
            __props__.__dict__["host_name"] = host_name
            __props__.__dict__["hpc_cluster_id"] = hpc_cluster_id
            __props__.__dict__["image_id"] = image_id
            __props__.__dict__["instance_charge_prepaid"] = instance_charge_prepaid
            __props__.__dict__["instance_charge_type"] = instance_charge_type
            __props__.__dict__["instance_count"] = instance_count
            __props__.__dict__["instance_market_options"] = instance_market_options
            __props__.__dict__["instance_name"] = instance_name
            __props__.__dict__["instance_type"] = instance_type
            __props__.__dict__["internet_accessible"] = internet_accessible
            if launch_template_id is None and not opts.urn:
                raise TypeError("Missing required property 'launch_template_id'")
            __props__.__dict__["launch_template_id"] = launch_template_id
            __props__.__dict__["launch_template_version"] = launch_template_version
            __props__.__dict__["launch_template_version_description"] = launch_template_version_description
            __props__.__dict__["login_settings"] = login_settings
            if placement is None and not opts.urn:
                raise TypeError("Missing required property 'placement'")
            __props__.__dict__["placement"] = placement
            __props__.__dict__["security_group_ids"] = security_group_ids
            __props__.__dict__["system_disk"] = system_disk
            __props__.__dict__["tag_specifications"] = tag_specifications
            __props__.__dict__["user_data"] = user_data
            __props__.__dict__["virtual_private_cloud"] = virtual_private_cloud
        super(LaunchTemplateVersion, __self__).__init__(
            'tencentcloud:Cvm/launchTemplateVersion:LaunchTemplateVersion',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            action_timer: Optional[pulumi.Input[pulumi.InputType['LaunchTemplateVersionActionTimerArgs']]] = None,
            cam_role_name: Optional[pulumi.Input[str]] = None,
            client_token: Optional[pulumi.Input[str]] = None,
            data_disks: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['LaunchTemplateVersionDataDiskArgs']]]]] = None,
            disable_api_termination: Optional[pulumi.Input[bool]] = None,
            disaster_recover_group_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            dry_run: Optional[pulumi.Input[bool]] = None,
            enhanced_service: Optional[pulumi.Input[pulumi.InputType['LaunchTemplateVersionEnhancedServiceArgs']]] = None,
            host_name: Optional[pulumi.Input[str]] = None,
            hpc_cluster_id: Optional[pulumi.Input[str]] = None,
            image_id: Optional[pulumi.Input[str]] = None,
            instance_charge_prepaid: Optional[pulumi.Input[pulumi.InputType['LaunchTemplateVersionInstanceChargePrepaidArgs']]] = None,
            instance_charge_type: Optional[pulumi.Input[str]] = None,
            instance_count: Optional[pulumi.Input[int]] = None,
            instance_market_options: Optional[pulumi.Input[pulumi.InputType['LaunchTemplateVersionInstanceMarketOptionsArgs']]] = None,
            instance_name: Optional[pulumi.Input[str]] = None,
            instance_type: Optional[pulumi.Input[str]] = None,
            internet_accessible: Optional[pulumi.Input[pulumi.InputType['LaunchTemplateVersionInternetAccessibleArgs']]] = None,
            launch_template_id: Optional[pulumi.Input[str]] = None,
            launch_template_version: Optional[pulumi.Input[int]] = None,
            launch_template_version_description: Optional[pulumi.Input[str]] = None,
            login_settings: Optional[pulumi.Input[pulumi.InputType['LaunchTemplateVersionLoginSettingsArgs']]] = None,
            placement: Optional[pulumi.Input[pulumi.InputType['LaunchTemplateVersionPlacementArgs']]] = None,
            security_group_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            system_disk: Optional[pulumi.Input[pulumi.InputType['LaunchTemplateVersionSystemDiskArgs']]] = None,
            tag_specifications: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['LaunchTemplateVersionTagSpecificationArgs']]]]] = None,
            user_data: Optional[pulumi.Input[str]] = None,
            virtual_private_cloud: Optional[pulumi.Input[pulumi.InputType['LaunchTemplateVersionVirtualPrivateCloudArgs']]] = None) -> 'LaunchTemplateVersion':
        """
        Get an existing LaunchTemplateVersion resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[pulumi.InputType['LaunchTemplateVersionActionTimerArgs']] action_timer: Scheduled tasks.
        :param pulumi.Input[str] cam_role_name: The role name of CAM.
        :param pulumi.Input[str] client_token: A unique string supplied by the client to ensure that the request is idempotent. Its maximum length is 64 ASCII characters. If this parameter is not specified, the idem-potency of the request cannot be guaranteed.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['LaunchTemplateVersionDataDiskArgs']]]] data_disks: The configuration information of instance data disks. If this parameter is not specified, no data disk will be purchased by default.
        :param pulumi.Input[bool] disable_api_termination: Whether the termination protection is enabled. `TRUE`: Enable instance protection, which means that this instance can not be deleted by an API action.`FALSE`: Do not enable the instance protection. Default value: `FALSE`.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] disaster_recover_group_ids: Placement group ID. You can only specify one.
        :param pulumi.Input[bool] dry_run: Whether the request is a dry run only.
        :param pulumi.Input[pulumi.InputType['LaunchTemplateVersionEnhancedServiceArgs']] enhanced_service: Enhanced service. You can use this parameter to specify whether to enable services such as Anti-DDoS and Cloud Monitor. If this parameter is not specified, Cloud Monitor and Anti-DDoS are enabled for public images by default.
        :param pulumi.Input[str] host_name: Hostname of a CVM.
        :param pulumi.Input[str] hpc_cluster_id: HPC cluster ID. The HPC cluster must and can only be specified for a high-performance computing instance.
        :param pulumi.Input[str] image_id: Image ID.
        :param pulumi.Input[pulumi.InputType['LaunchTemplateVersionInstanceChargePrepaidArgs']] instance_charge_prepaid: Describes the billing method of an instance.
        :param pulumi.Input[str] instance_charge_type: The charge type of instance.
        :param pulumi.Input[int] instance_count: The number of instances to be purchased.
        :param pulumi.Input[pulumi.InputType['LaunchTemplateVersionInstanceMarketOptionsArgs']] instance_market_options: Options related to bidding requests.
        :param pulumi.Input[str] instance_name: Instance name to be displayed.
        :param pulumi.Input[str] instance_type: The type of the instance. If this parameter is not specified, the system will dynamically specify the default model according to the resource sales in the current region.
        :param pulumi.Input[pulumi.InputType['LaunchTemplateVersionInternetAccessibleArgs']] internet_accessible: Describes the accessibility of an instance in the public network, including its network billing method, maximum bandwidth, etc.
        :param pulumi.Input[str] launch_template_id: Instance launch template ID. This parameter is used as a basis for creating new template versions.
        :param pulumi.Input[int] launch_template_version: This parameter, when specified, is used to create instance launch templates. If this parameter is not specified, the default version will be used.
        :param pulumi.Input[str] launch_template_version_description: Description of instance launch template versions. This parameter can contain 2-256 characters.
        :param pulumi.Input[pulumi.InputType['LaunchTemplateVersionLoginSettingsArgs']] login_settings: Describes login settings of an instance.
        :param pulumi.Input[pulumi.InputType['LaunchTemplateVersionPlacementArgs']] placement: Location of the instance. You can use this parameter to specify the attributes of the instance, such as its availability zone, project, and CDH (for dedicated CVMs).
        :param pulumi.Input[Sequence[pulumi.Input[str]]] security_group_ids: Security groups to which the instance belongs. If this parameter is not specified, the instance will be associated with default security groups.
        :param pulumi.Input[pulumi.InputType['LaunchTemplateVersionSystemDiskArgs']] system_disk: System disk configuration information of the instance. If this parameter is not specified, it is assigned according to the system default.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['LaunchTemplateVersionTagSpecificationArgs']]]] tag_specifications: Description of tags associated with resource instances during instance creation.
        :param pulumi.Input[str] user_data: User data provided to the instance. This parameter needs to be encoded in base64 format with the maximum size of 16 KB.
        :param pulumi.Input[pulumi.InputType['LaunchTemplateVersionVirtualPrivateCloudArgs']] virtual_private_cloud: Describes information on VPC, including subnets, IP addresses, etc.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _LaunchTemplateVersionState.__new__(_LaunchTemplateVersionState)

        __props__.__dict__["action_timer"] = action_timer
        __props__.__dict__["cam_role_name"] = cam_role_name
        __props__.__dict__["client_token"] = client_token
        __props__.__dict__["data_disks"] = data_disks
        __props__.__dict__["disable_api_termination"] = disable_api_termination
        __props__.__dict__["disaster_recover_group_ids"] = disaster_recover_group_ids
        __props__.__dict__["dry_run"] = dry_run
        __props__.__dict__["enhanced_service"] = enhanced_service
        __props__.__dict__["host_name"] = host_name
        __props__.__dict__["hpc_cluster_id"] = hpc_cluster_id
        __props__.__dict__["image_id"] = image_id
        __props__.__dict__["instance_charge_prepaid"] = instance_charge_prepaid
        __props__.__dict__["instance_charge_type"] = instance_charge_type
        __props__.__dict__["instance_count"] = instance_count
        __props__.__dict__["instance_market_options"] = instance_market_options
        __props__.__dict__["instance_name"] = instance_name
        __props__.__dict__["instance_type"] = instance_type
        __props__.__dict__["internet_accessible"] = internet_accessible
        __props__.__dict__["launch_template_id"] = launch_template_id
        __props__.__dict__["launch_template_version"] = launch_template_version
        __props__.__dict__["launch_template_version_description"] = launch_template_version_description
        __props__.__dict__["login_settings"] = login_settings
        __props__.__dict__["placement"] = placement
        __props__.__dict__["security_group_ids"] = security_group_ids
        __props__.__dict__["system_disk"] = system_disk
        __props__.__dict__["tag_specifications"] = tag_specifications
        __props__.__dict__["user_data"] = user_data
        __props__.__dict__["virtual_private_cloud"] = virtual_private_cloud
        return LaunchTemplateVersion(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="actionTimer")
    def action_timer(self) -> pulumi.Output['outputs.LaunchTemplateVersionActionTimer']:
        """
        Scheduled tasks.
        """
        return pulumi.get(self, "action_timer")

    @property
    @pulumi.getter(name="camRoleName")
    def cam_role_name(self) -> pulumi.Output[str]:
        """
        The role name of CAM.
        """
        return pulumi.get(self, "cam_role_name")

    @property
    @pulumi.getter(name="clientToken")
    def client_token(self) -> pulumi.Output[str]:
        """
        A unique string supplied by the client to ensure that the request is idempotent. Its maximum length is 64 ASCII characters. If this parameter is not specified, the idem-potency of the request cannot be guaranteed.
        """
        return pulumi.get(self, "client_token")

    @property
    @pulumi.getter(name="dataDisks")
    def data_disks(self) -> pulumi.Output[Sequence['outputs.LaunchTemplateVersionDataDisk']]:
        """
        The configuration information of instance data disks. If this parameter is not specified, no data disk will be purchased by default.
        """
        return pulumi.get(self, "data_disks")

    @property
    @pulumi.getter(name="disableApiTermination")
    def disable_api_termination(self) -> pulumi.Output[bool]:
        """
        Whether the termination protection is enabled. `TRUE`: Enable instance protection, which means that this instance can not be deleted by an API action.`FALSE`: Do not enable the instance protection. Default value: `FALSE`.
        """
        return pulumi.get(self, "disable_api_termination")

    @property
    @pulumi.getter(name="disasterRecoverGroupIds")
    def disaster_recover_group_ids(self) -> pulumi.Output[Optional[Sequence[str]]]:
        """
        Placement group ID. You can only specify one.
        """
        return pulumi.get(self, "disaster_recover_group_ids")

    @property
    @pulumi.getter(name="dryRun")
    def dry_run(self) -> pulumi.Output[bool]:
        """
        Whether the request is a dry run only.
        """
        return pulumi.get(self, "dry_run")

    @property
    @pulumi.getter(name="enhancedService")
    def enhanced_service(self) -> pulumi.Output['outputs.LaunchTemplateVersionEnhancedService']:
        """
        Enhanced service. You can use this parameter to specify whether to enable services such as Anti-DDoS and Cloud Monitor. If this parameter is not specified, Cloud Monitor and Anti-DDoS are enabled for public images by default.
        """
        return pulumi.get(self, "enhanced_service")

    @property
    @pulumi.getter(name="hostName")
    def host_name(self) -> pulumi.Output[str]:
        """
        Hostname of a CVM.
        """
        return pulumi.get(self, "host_name")

    @property
    @pulumi.getter(name="hpcClusterId")
    def hpc_cluster_id(self) -> pulumi.Output[str]:
        """
        HPC cluster ID. The HPC cluster must and can only be specified for a high-performance computing instance.
        """
        return pulumi.get(self, "hpc_cluster_id")

    @property
    @pulumi.getter(name="imageId")
    def image_id(self) -> pulumi.Output[str]:
        """
        Image ID.
        """
        return pulumi.get(self, "image_id")

    @property
    @pulumi.getter(name="instanceChargePrepaid")
    def instance_charge_prepaid(self) -> pulumi.Output['outputs.LaunchTemplateVersionInstanceChargePrepaid']:
        """
        Describes the billing method of an instance.
        """
        return pulumi.get(self, "instance_charge_prepaid")

    @property
    @pulumi.getter(name="instanceChargeType")
    def instance_charge_type(self) -> pulumi.Output[str]:
        """
        The charge type of instance.
        """
        return pulumi.get(self, "instance_charge_type")

    @property
    @pulumi.getter(name="instanceCount")
    def instance_count(self) -> pulumi.Output[int]:
        """
        The number of instances to be purchased.
        """
        return pulumi.get(self, "instance_count")

    @property
    @pulumi.getter(name="instanceMarketOptions")
    def instance_market_options(self) -> pulumi.Output['outputs.LaunchTemplateVersionInstanceMarketOptions']:
        """
        Options related to bidding requests.
        """
        return pulumi.get(self, "instance_market_options")

    @property
    @pulumi.getter(name="instanceName")
    def instance_name(self) -> pulumi.Output[str]:
        """
        Instance name to be displayed.
        """
        return pulumi.get(self, "instance_name")

    @property
    @pulumi.getter(name="instanceType")
    def instance_type(self) -> pulumi.Output[str]:
        """
        The type of the instance. If this parameter is not specified, the system will dynamically specify the default model according to the resource sales in the current region.
        """
        return pulumi.get(self, "instance_type")

    @property
    @pulumi.getter(name="internetAccessible")
    def internet_accessible(self) -> pulumi.Output['outputs.LaunchTemplateVersionInternetAccessible']:
        """
        Describes the accessibility of an instance in the public network, including its network billing method, maximum bandwidth, etc.
        """
        return pulumi.get(self, "internet_accessible")

    @property
    @pulumi.getter(name="launchTemplateId")
    def launch_template_id(self) -> pulumi.Output[str]:
        """
        Instance launch template ID. This parameter is used as a basis for creating new template versions.
        """
        return pulumi.get(self, "launch_template_id")

    @property
    @pulumi.getter(name="launchTemplateVersion")
    def launch_template_version(self) -> pulumi.Output[int]:
        """
        This parameter, when specified, is used to create instance launch templates. If this parameter is not specified, the default version will be used.
        """
        return pulumi.get(self, "launch_template_version")

    @property
    @pulumi.getter(name="launchTemplateVersionDescription")
    def launch_template_version_description(self) -> pulumi.Output[str]:
        """
        Description of instance launch template versions. This parameter can contain 2-256 characters.
        """
        return pulumi.get(self, "launch_template_version_description")

    @property
    @pulumi.getter(name="loginSettings")
    def login_settings(self) -> pulumi.Output['outputs.LaunchTemplateVersionLoginSettings']:
        """
        Describes login settings of an instance.
        """
        return pulumi.get(self, "login_settings")

    @property
    @pulumi.getter
    def placement(self) -> pulumi.Output['outputs.LaunchTemplateVersionPlacement']:
        """
        Location of the instance. You can use this parameter to specify the attributes of the instance, such as its availability zone, project, and CDH (for dedicated CVMs).
        """
        return pulumi.get(self, "placement")

    @property
    @pulumi.getter(name="securityGroupIds")
    def security_group_ids(self) -> pulumi.Output[Sequence[str]]:
        """
        Security groups to which the instance belongs. If this parameter is not specified, the instance will be associated with default security groups.
        """
        return pulumi.get(self, "security_group_ids")

    @property
    @pulumi.getter(name="systemDisk")
    def system_disk(self) -> pulumi.Output['outputs.LaunchTemplateVersionSystemDisk']:
        """
        System disk configuration information of the instance. If this parameter is not specified, it is assigned according to the system default.
        """
        return pulumi.get(self, "system_disk")

    @property
    @pulumi.getter(name="tagSpecifications")
    def tag_specifications(self) -> pulumi.Output[Sequence['outputs.LaunchTemplateVersionTagSpecification']]:
        """
        Description of tags associated with resource instances during instance creation.
        """
        return pulumi.get(self, "tag_specifications")

    @property
    @pulumi.getter(name="userData")
    def user_data(self) -> pulumi.Output[str]:
        """
        User data provided to the instance. This parameter needs to be encoded in base64 format with the maximum size of 16 KB.
        """
        return pulumi.get(self, "user_data")

    @property
    @pulumi.getter(name="virtualPrivateCloud")
    def virtual_private_cloud(self) -> pulumi.Output['outputs.LaunchTemplateVersionVirtualPrivateCloud']:
        """
        Describes information on VPC, including subnets, IP addresses, etc.
        """
        return pulumi.get(self, "virtual_private_cloud")


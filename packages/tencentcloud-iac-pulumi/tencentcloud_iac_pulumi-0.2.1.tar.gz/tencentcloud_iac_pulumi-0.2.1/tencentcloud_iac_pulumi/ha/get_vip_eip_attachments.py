# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetVipEipAttachmentsResult',
    'AwaitableGetVipEipAttachmentsResult',
    'get_vip_eip_attachments',
    'get_vip_eip_attachments_output',
]

@pulumi.output_type
class GetVipEipAttachmentsResult:
    """
    A collection of values returned by getVipEipAttachments.
    """
    def __init__(__self__, address_ip=None, ha_vip_eip_attachment_lists=None, havip_id=None, id=None, result_output_file=None):
        if address_ip and not isinstance(address_ip, str):
            raise TypeError("Expected argument 'address_ip' to be a str")
        pulumi.set(__self__, "address_ip", address_ip)
        if ha_vip_eip_attachment_lists and not isinstance(ha_vip_eip_attachment_lists, list):
            raise TypeError("Expected argument 'ha_vip_eip_attachment_lists' to be a list")
        pulumi.set(__self__, "ha_vip_eip_attachment_lists", ha_vip_eip_attachment_lists)
        if havip_id and not isinstance(havip_id, str):
            raise TypeError("Expected argument 'havip_id' to be a str")
        pulumi.set(__self__, "havip_id", havip_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)

    @property
    @pulumi.getter(name="addressIp")
    def address_ip(self) -> Optional[str]:
        """
        Public IP address of EIP.
        """
        return pulumi.get(self, "address_ip")

    @property
    @pulumi.getter(name="haVipEipAttachmentLists")
    def ha_vip_eip_attachment_lists(self) -> Sequence['outputs.GetVipEipAttachmentsHaVipEipAttachmentListResult']:
        """
        A list of HA VIP EIP attachments. Each element contains the following attributes:
        """
        return pulumi.get(self, "ha_vip_eip_attachment_lists")

    @property
    @pulumi.getter(name="havipId")
    def havip_id(self) -> str:
        """
        ID of the attached HA VIP.
        """
        return pulumi.get(self, "havip_id")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")


class AwaitableGetVipEipAttachmentsResult(GetVipEipAttachmentsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetVipEipAttachmentsResult(
            address_ip=self.address_ip,
            ha_vip_eip_attachment_lists=self.ha_vip_eip_attachment_lists,
            havip_id=self.havip_id,
            id=self.id,
            result_output_file=self.result_output_file)


def get_vip_eip_attachments(address_ip: Optional[str] = None,
                            havip_id: Optional[str] = None,
                            result_output_file: Optional[str] = None,
                            opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetVipEipAttachmentsResult:
    """
    Use this data source to query detailed information of HA VIP EIP attachments

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    foo = tencentcloud.Ha.get_vip_eip_attachments(address_ip="1.1.1.1",
        havip_id="havip-kjqwe4ba")
    ```
    <!--End PulumiCodeChooser -->


    :param str address_ip: Public IP address of EIP to be queried.
    :param str havip_id: ID of the attached HA VIP to be queried.
    :param str result_output_file: Used to save results.
    """
    __args__ = dict()
    __args__['addressIp'] = address_ip
    __args__['havipId'] = havip_id
    __args__['resultOutputFile'] = result_output_file
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('tencentcloud:Ha/getVipEipAttachments:getVipEipAttachments', __args__, opts=opts, typ=GetVipEipAttachmentsResult).value

    return AwaitableGetVipEipAttachmentsResult(
        address_ip=pulumi.get(__ret__, 'address_ip'),
        ha_vip_eip_attachment_lists=pulumi.get(__ret__, 'ha_vip_eip_attachment_lists'),
        havip_id=pulumi.get(__ret__, 'havip_id'),
        id=pulumi.get(__ret__, 'id'),
        result_output_file=pulumi.get(__ret__, 'result_output_file'))


@_utilities.lift_output_func(get_vip_eip_attachments)
def get_vip_eip_attachments_output(address_ip: Optional[pulumi.Input[Optional[str]]] = None,
                                   havip_id: Optional[pulumi.Input[str]] = None,
                                   result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                                   opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetVipEipAttachmentsResult]:
    """
    Use this data source to query detailed information of HA VIP EIP attachments

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    foo = tencentcloud.Ha.get_vip_eip_attachments(address_ip="1.1.1.1",
        havip_id="havip-kjqwe4ba")
    ```
    <!--End PulumiCodeChooser -->


    :param str address_ip: Public IP address of EIP to be queried.
    :param str havip_id: ID of the attached HA VIP to be queried.
    :param str result_output_file: Used to save results.
    """
    ...

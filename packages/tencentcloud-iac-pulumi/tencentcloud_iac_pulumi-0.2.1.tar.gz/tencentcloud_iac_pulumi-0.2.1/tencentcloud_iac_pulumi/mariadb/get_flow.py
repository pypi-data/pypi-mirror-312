# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'GetFlowResult',
    'AwaitableGetFlowResult',
    'get_flow',
    'get_flow_output',
]

@pulumi.output_type
class GetFlowResult:
    """
    A collection of values returned by getFlow.
    """
    def __init__(__self__, flow_id=None, id=None, result_output_file=None, status=None):
        if flow_id and not isinstance(flow_id, int):
            raise TypeError("Expected argument 'flow_id' to be a int")
        pulumi.set(__self__, "flow_id", flow_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)
        if status and not isinstance(status, int):
            raise TypeError("Expected argument 'status' to be a int")
        pulumi.set(__self__, "status", status)

    @property
    @pulumi.getter(name="flowId")
    def flow_id(self) -> int:
        return pulumi.get(self, "flow_id")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")

    @property
    @pulumi.getter
    def status(self) -> int:
        """
        Flow status. 0: succeeded, 1: failed, 2: running.
        """
        return pulumi.get(self, "status")


class AwaitableGetFlowResult(GetFlowResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetFlowResult(
            flow_id=self.flow_id,
            id=self.id,
            result_output_file=self.result_output_file,
            status=self.status)


def get_flow(flow_id: Optional[int] = None,
             result_output_file: Optional[str] = None,
             opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetFlowResult:
    """
    Use this data source to query detailed information of mariadb flow

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    flow = tencentcloud.Mariadb.get_flow(flow_id=1307)
    ```
    <!--End PulumiCodeChooser -->


    :param int flow_id: Flow ID returned by async request API.
    :param str result_output_file: Used to save results.
    """
    __args__ = dict()
    __args__['flowId'] = flow_id
    __args__['resultOutputFile'] = result_output_file
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('tencentcloud:Mariadb/getFlow:getFlow', __args__, opts=opts, typ=GetFlowResult).value

    return AwaitableGetFlowResult(
        flow_id=pulumi.get(__ret__, 'flow_id'),
        id=pulumi.get(__ret__, 'id'),
        result_output_file=pulumi.get(__ret__, 'result_output_file'),
        status=pulumi.get(__ret__, 'status'))


@_utilities.lift_output_func(get_flow)
def get_flow_output(flow_id: Optional[pulumi.Input[int]] = None,
                    result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                    opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetFlowResult]:
    """
    Use this data source to query detailed information of mariadb flow

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    flow = tencentcloud.Mariadb.get_flow(flow_id=1307)
    ```
    <!--End PulumiCodeChooser -->


    :param int flow_id: Flow ID returned by async request API.
    :param str result_output_file: Used to save results.
    """
    ...

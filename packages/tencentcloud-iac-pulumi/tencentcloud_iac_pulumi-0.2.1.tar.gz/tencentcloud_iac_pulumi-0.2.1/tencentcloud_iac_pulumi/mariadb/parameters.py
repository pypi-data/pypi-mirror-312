# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['ParametersArgs', 'Parameters']

@pulumi.input_type
class ParametersArgs:
    def __init__(__self__, *,
                 instance_id: pulumi.Input[str],
                 params: pulumi.Input[Sequence[pulumi.Input['ParametersParamArgs']]]):
        """
        The set of arguments for constructing a Parameters resource.
        :param pulumi.Input[str] instance_id: instance id.
        :param pulumi.Input[Sequence[pulumi.Input['ParametersParamArgs']]] params: Number of days to keep, no more than 30.
        """
        pulumi.set(__self__, "instance_id", instance_id)
        pulumi.set(__self__, "params", params)

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> pulumi.Input[str]:
        """
        instance id.
        """
        return pulumi.get(self, "instance_id")

    @instance_id.setter
    def instance_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "instance_id", value)

    @property
    @pulumi.getter
    def params(self) -> pulumi.Input[Sequence[pulumi.Input['ParametersParamArgs']]]:
        """
        Number of days to keep, no more than 30.
        """
        return pulumi.get(self, "params")

    @params.setter
    def params(self, value: pulumi.Input[Sequence[pulumi.Input['ParametersParamArgs']]]):
        pulumi.set(self, "params", value)


@pulumi.input_type
class _ParametersState:
    def __init__(__self__, *,
                 instance_id: Optional[pulumi.Input[str]] = None,
                 params: Optional[pulumi.Input[Sequence[pulumi.Input['ParametersParamArgs']]]] = None):
        """
        Input properties used for looking up and filtering Parameters resources.
        :param pulumi.Input[str] instance_id: instance id.
        :param pulumi.Input[Sequence[pulumi.Input['ParametersParamArgs']]] params: Number of days to keep, no more than 30.
        """
        if instance_id is not None:
            pulumi.set(__self__, "instance_id", instance_id)
        if params is not None:
            pulumi.set(__self__, "params", params)

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> Optional[pulumi.Input[str]]:
        """
        instance id.
        """
        return pulumi.get(self, "instance_id")

    @instance_id.setter
    def instance_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "instance_id", value)

    @property
    @pulumi.getter
    def params(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['ParametersParamArgs']]]]:
        """
        Number of days to keep, no more than 30.
        """
        return pulumi.get(self, "params")

    @params.setter
    def params(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['ParametersParamArgs']]]]):
        pulumi.set(self, "params", value)


class Parameters(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 instance_id: Optional[pulumi.Input[str]] = None,
                 params: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['ParametersParamArgs']]]]] = None,
                 __props__=None):
        """
        Provides a resource to create a mariadb parameters

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        parameters = tencentcloud.mariadb.Parameters("parameters",
            instance_id="tdsql-4pzs5b67",
            params=[
                tencentcloud.mariadb.ParametersParamArgs(
                    param="auto_increment_increment",
                    value="1",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="auto_increment_offset",
                    value="1",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="autocommit",
                    value="ON",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="character_set_server",
                    value="utf8mb4",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="collation_connection",
                    value="utf8mb4_general_ci",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="collation_database",
                    value="utf8mb4_general_ci",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="collation_server",
                    value="utf8mb4_general_ci",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="connect_timeout",
                    value="10",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="default_collation_for_utf8mb4",
                    value="utf8mb4_general_ci",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="default_week_format",
                    value="0",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="delay_key_write",
                    value="ON",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="delayed_insert_limit",
                    value="100",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="delayed_insert_timeout",
                    value="300",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="delayed_queue_size",
                    value="1000",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="div_precision_increment",
                    value="4",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="event_scheduler",
                    value="ON",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="group_concat_max_len",
                    value="1024",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="innodb_concurrency_tickets",
                    value="5000",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="innodb_flush_log_at_trx_commit",
                    value="1",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="innodb_lock_wait_timeout",
                    value="20",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="innodb_max_dirty_pages_pct",
                    value="70.000000",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="innodb_old_blocks_pct",
                    value="37",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="innodb_old_blocks_time",
                    value="1000",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="innodb_purge_batch_size",
                    value="1000",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="innodb_read_ahead_threshold",
                    value="56",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="innodb_stats_method",
                    value="nulls_equal",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="innodb_stats_on_metadata",
                    value="OFF",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="innodb_strict_mode",
                    value="OFF",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="innodb_table_locks",
                    value="ON",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="innodb_thread_concurrency",
                    value="0",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="interactive_timeout",
                    value="28800",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="key_cache_age_threshold",
                    value="300",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="key_cache_block_size",
                    value="1024",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="key_cache_division_limit",
                    value="100",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="local_infile",
                    value="OFF",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="lock_wait_timeout",
                    value="5",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="log_queries_not_using_indexes",
                    value="OFF",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="long_query_time",
                    value="1.000000",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="low_priority_updates",
                    value="OFF",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="max_allowed_packet",
                    value="1073741824",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="max_binlog_size",
                    value="536870912",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="max_connect_errors",
                    value="2000",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="max_connections",
                    value="10000",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="max_execution_time",
                    value="0",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="max_prepared_stmt_count",
                    value="200000",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="myisam_sort_buffer_size",
                    value="4194304",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="net_buffer_length",
                    value="16384",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="net_read_timeout",
                    value="150",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="net_retry_count",
                    value="10",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="net_write_timeout",
                    value="300",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="query_alloc_block_size",
                    value="16384",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="query_prealloc_size",
                    value="24576",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="slow_launch_time",
                    value="2",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="sort_buffer_size",
                    value="2097152",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="sql_mode",
                    value="NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="sql_require_primary_key",
                    value="ON",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="sql_safe_updates",
                    value="OFF",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="sqlasyntimeout",
                    value="30",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="sync_binlog",
                    value="1",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="table_definition_cache",
                    value="10240",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="table_open_cache",
                    value="20480",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="time_zone",
                    value="+08:00",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="tmp_table_size",
                    value="33554432",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="tx_isolation",
                    value="READ-COMMITTED",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="wait_timeout",
                    value="28800",
                ),
            ])
        ```
        <!--End PulumiCodeChooser -->

        ## Import

        mariadb parameters can be imported using the id, e.g.

        ```sh
        $ pulumi import tencentcloud:Mariadb/parameters:Parameters parameters tdsql-4pzs5b67
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] instance_id: instance id.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['ParametersParamArgs']]]] params: Number of days to keep, no more than 30.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: ParametersArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Provides a resource to create a mariadb parameters

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        parameters = tencentcloud.mariadb.Parameters("parameters",
            instance_id="tdsql-4pzs5b67",
            params=[
                tencentcloud.mariadb.ParametersParamArgs(
                    param="auto_increment_increment",
                    value="1",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="auto_increment_offset",
                    value="1",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="autocommit",
                    value="ON",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="character_set_server",
                    value="utf8mb4",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="collation_connection",
                    value="utf8mb4_general_ci",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="collation_database",
                    value="utf8mb4_general_ci",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="collation_server",
                    value="utf8mb4_general_ci",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="connect_timeout",
                    value="10",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="default_collation_for_utf8mb4",
                    value="utf8mb4_general_ci",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="default_week_format",
                    value="0",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="delay_key_write",
                    value="ON",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="delayed_insert_limit",
                    value="100",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="delayed_insert_timeout",
                    value="300",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="delayed_queue_size",
                    value="1000",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="div_precision_increment",
                    value="4",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="event_scheduler",
                    value="ON",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="group_concat_max_len",
                    value="1024",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="innodb_concurrency_tickets",
                    value="5000",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="innodb_flush_log_at_trx_commit",
                    value="1",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="innodb_lock_wait_timeout",
                    value="20",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="innodb_max_dirty_pages_pct",
                    value="70.000000",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="innodb_old_blocks_pct",
                    value="37",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="innodb_old_blocks_time",
                    value="1000",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="innodb_purge_batch_size",
                    value="1000",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="innodb_read_ahead_threshold",
                    value="56",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="innodb_stats_method",
                    value="nulls_equal",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="innodb_stats_on_metadata",
                    value="OFF",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="innodb_strict_mode",
                    value="OFF",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="innodb_table_locks",
                    value="ON",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="innodb_thread_concurrency",
                    value="0",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="interactive_timeout",
                    value="28800",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="key_cache_age_threshold",
                    value="300",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="key_cache_block_size",
                    value="1024",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="key_cache_division_limit",
                    value="100",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="local_infile",
                    value="OFF",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="lock_wait_timeout",
                    value="5",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="log_queries_not_using_indexes",
                    value="OFF",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="long_query_time",
                    value="1.000000",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="low_priority_updates",
                    value="OFF",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="max_allowed_packet",
                    value="1073741824",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="max_binlog_size",
                    value="536870912",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="max_connect_errors",
                    value="2000",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="max_connections",
                    value="10000",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="max_execution_time",
                    value="0",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="max_prepared_stmt_count",
                    value="200000",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="myisam_sort_buffer_size",
                    value="4194304",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="net_buffer_length",
                    value="16384",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="net_read_timeout",
                    value="150",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="net_retry_count",
                    value="10",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="net_write_timeout",
                    value="300",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="query_alloc_block_size",
                    value="16384",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="query_prealloc_size",
                    value="24576",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="slow_launch_time",
                    value="2",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="sort_buffer_size",
                    value="2097152",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="sql_mode",
                    value="NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="sql_require_primary_key",
                    value="ON",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="sql_safe_updates",
                    value="OFF",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="sqlasyntimeout",
                    value="30",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="sync_binlog",
                    value="1",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="table_definition_cache",
                    value="10240",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="table_open_cache",
                    value="20480",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="time_zone",
                    value="+08:00",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="tmp_table_size",
                    value="33554432",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="tx_isolation",
                    value="READ-COMMITTED",
                ),
                tencentcloud.mariadb.ParametersParamArgs(
                    param="wait_timeout",
                    value="28800",
                ),
            ])
        ```
        <!--End PulumiCodeChooser -->

        ## Import

        mariadb parameters can be imported using the id, e.g.

        ```sh
        $ pulumi import tencentcloud:Mariadb/parameters:Parameters parameters tdsql-4pzs5b67
        ```

        :param str resource_name: The name of the resource.
        :param ParametersArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(ParametersArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 instance_id: Optional[pulumi.Input[str]] = None,
                 params: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['ParametersParamArgs']]]]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = ParametersArgs.__new__(ParametersArgs)

            if instance_id is None and not opts.urn:
                raise TypeError("Missing required property 'instance_id'")
            __props__.__dict__["instance_id"] = instance_id
            if params is None and not opts.urn:
                raise TypeError("Missing required property 'params'")
            __props__.__dict__["params"] = params
        super(Parameters, __self__).__init__(
            'tencentcloud:Mariadb/parameters:Parameters',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            instance_id: Optional[pulumi.Input[str]] = None,
            params: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['ParametersParamArgs']]]]] = None) -> 'Parameters':
        """
        Get an existing Parameters resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] instance_id: instance id.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['ParametersParamArgs']]]] params: Number of days to keep, no more than 30.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _ParametersState.__new__(_ParametersState)

        __props__.__dict__["instance_id"] = instance_id
        __props__.__dict__["params"] = params
        return Parameters(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> pulumi.Output[str]:
        """
        instance id.
        """
        return pulumi.get(self, "instance_id")

    @property
    @pulumi.getter
    def params(self) -> pulumi.Output[Sequence['outputs.ParametersParam']]:
        """
        Number of days to keep, no more than 30.
        """
        return pulumi.get(self, "params")


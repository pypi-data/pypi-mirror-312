# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetSecretVersionsResult',
    'AwaitableGetSecretVersionsResult',
    'get_secret_versions',
    'get_secret_versions_output',
]

@pulumi.output_type
class GetSecretVersionsResult:
    """
    A collection of values returned by getSecretVersions.
    """
    def __init__(__self__, id=None, result_output_file=None, secret_name=None, secret_version_lists=None, version_id=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)
        if secret_name and not isinstance(secret_name, str):
            raise TypeError("Expected argument 'secret_name' to be a str")
        pulumi.set(__self__, "secret_name", secret_name)
        if secret_version_lists and not isinstance(secret_version_lists, list):
            raise TypeError("Expected argument 'secret_version_lists' to be a list")
        pulumi.set(__self__, "secret_version_lists", secret_version_lists)
        if version_id and not isinstance(version_id, str):
            raise TypeError("Expected argument 'version_id' to be a str")
        pulumi.set(__self__, "version_id", version_id)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")

    @property
    @pulumi.getter(name="secretName")
    def secret_name(self) -> str:
        return pulumi.get(self, "secret_name")

    @property
    @pulumi.getter(name="secretVersionLists")
    def secret_version_lists(self) -> Sequence['outputs.GetSecretVersionsSecretVersionListResult']:
        """
        A list of SSM secret versions. When secret status is `Disabled`, this field will not update anymore.
        """
        return pulumi.get(self, "secret_version_lists")

    @property
    @pulumi.getter(name="versionId")
    def version_id(self) -> Optional[str]:
        """
        Version of secret.
        """
        return pulumi.get(self, "version_id")


class AwaitableGetSecretVersionsResult(GetSecretVersionsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetSecretVersionsResult(
            id=self.id,
            result_output_file=self.result_output_file,
            secret_name=self.secret_name,
            secret_version_lists=self.secret_version_lists,
            version_id=self.version_id)


def get_secret_versions(result_output_file: Optional[str] = None,
                        secret_name: Optional[str] = None,
                        version_id: Optional[str] = None,
                        opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetSecretVersionsResult:
    """
    Use this data source to query detailed information of SSM secret version

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud
    import tencentcloud_iac_pulumi as tencentcloud

    example_secret = tencentcloud.ssm.Secret("exampleSecret",
        secret_name="tf-example",
        description="desc.",
        tags={
            "createdBy": "terraform",
        })
    v1 = tencentcloud.ssm.SecretVersion("v1",
        secret_name=example_secret.secret_name,
        version_id="v1",
        secret_binary="MTIzMTIzMTIzMTIzMTIzQQ==")
    example_secret_versions = tencentcloud.Ssm.get_secret_versions_output(secret_name=v1.secret_name,
        version_id=v1.version_id)
    ```
    <!--End PulumiCodeChooser -->


    :param str result_output_file: Used to save results.
    :param str secret_name: Secret name used to filter result.
    :param str version_id: VersionId used to filter result.
    """
    __args__ = dict()
    __args__['resultOutputFile'] = result_output_file
    __args__['secretName'] = secret_name
    __args__['versionId'] = version_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('tencentcloud:Ssm/getSecretVersions:getSecretVersions', __args__, opts=opts, typ=GetSecretVersionsResult).value

    return AwaitableGetSecretVersionsResult(
        id=pulumi.get(__ret__, 'id'),
        result_output_file=pulumi.get(__ret__, 'result_output_file'),
        secret_name=pulumi.get(__ret__, 'secret_name'),
        secret_version_lists=pulumi.get(__ret__, 'secret_version_lists'),
        version_id=pulumi.get(__ret__, 'version_id'))


@_utilities.lift_output_func(get_secret_versions)
def get_secret_versions_output(result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                               secret_name: Optional[pulumi.Input[str]] = None,
                               version_id: Optional[pulumi.Input[Optional[str]]] = None,
                               opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetSecretVersionsResult]:
    """
    Use this data source to query detailed information of SSM secret version

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud
    import tencentcloud_iac_pulumi as tencentcloud

    example_secret = tencentcloud.ssm.Secret("exampleSecret",
        secret_name="tf-example",
        description="desc.",
        tags={
            "createdBy": "terraform",
        })
    v1 = tencentcloud.ssm.SecretVersion("v1",
        secret_name=example_secret.secret_name,
        version_id="v1",
        secret_binary="MTIzMTIzMTIzMTIzMTIzQQ==")
    example_secret_versions = tencentcloud.Ssm.get_secret_versions_output(secret_name=v1.secret_name,
        version_id=v1.version_id)
    ```
    <!--End PulumiCodeChooser -->


    :param str result_output_file: Used to save results.
    :param str secret_name: Secret name used to filter result.
    :param str version_id: VersionId used to filter result.
    """
    ...

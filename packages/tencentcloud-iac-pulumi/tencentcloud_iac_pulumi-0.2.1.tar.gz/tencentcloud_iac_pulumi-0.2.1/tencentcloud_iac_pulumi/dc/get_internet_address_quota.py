# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'GetInternetAddressQuotaResult',
    'AwaitableGetInternetAddressQuotaResult',
    'get_internet_address_quota',
    'get_internet_address_quota_output',
]

@pulumi.output_type
class GetInternetAddressQuotaResult:
    """
    A collection of values returned by getInternetAddressQuota.
    """
    def __init__(__self__, id=None, ipv4_bgp_num=None, ipv4_bgp_quota=None, ipv4_other_num=None, ipv4_other_quota=None, ipv6_prefix_len=None, result_output_file=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if ipv4_bgp_num and not isinstance(ipv4_bgp_num, int):
            raise TypeError("Expected argument 'ipv4_bgp_num' to be a int")
        pulumi.set(__self__, "ipv4_bgp_num", ipv4_bgp_num)
        if ipv4_bgp_quota and not isinstance(ipv4_bgp_quota, int):
            raise TypeError("Expected argument 'ipv4_bgp_quota' to be a int")
        pulumi.set(__self__, "ipv4_bgp_quota", ipv4_bgp_quota)
        if ipv4_other_num and not isinstance(ipv4_other_num, int):
            raise TypeError("Expected argument 'ipv4_other_num' to be a int")
        pulumi.set(__self__, "ipv4_other_num", ipv4_other_num)
        if ipv4_other_quota and not isinstance(ipv4_other_quota, int):
            raise TypeError("Expected argument 'ipv4_other_quota' to be a int")
        pulumi.set(__self__, "ipv4_other_quota", ipv4_other_quota)
        if ipv6_prefix_len and not isinstance(ipv6_prefix_len, int):
            raise TypeError("Expected argument 'ipv6_prefix_len' to be a int")
        pulumi.set(__self__, "ipv6_prefix_len", ipv6_prefix_len)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="ipv4BgpNum")
    def ipv4_bgp_num(self) -> int:
        """
        Number of used BGP type IPv4 Internet addresses.
        """
        return pulumi.get(self, "ipv4_bgp_num")

    @property
    @pulumi.getter(name="ipv4BgpQuota")
    def ipv4_bgp_quota(self) -> int:
        """
        BGP type IPv4 Internet address quota.
        """
        return pulumi.get(self, "ipv4_bgp_quota")

    @property
    @pulumi.getter(name="ipv4OtherNum")
    def ipv4_other_num(self) -> int:
        """
        The number of non-BGP Internet addresses used.
        """
        return pulumi.get(self, "ipv4_other_num")

    @property
    @pulumi.getter(name="ipv4OtherQuota")
    def ipv4_other_quota(self) -> int:
        """
        Non-BGP type IPv4 Internet address quota.
        """
        return pulumi.get(self, "ipv4_other_quota")

    @property
    @pulumi.getter(name="ipv6PrefixLen")
    def ipv6_prefix_len(self) -> int:
        """
        The minimum prefix length allowed on the IPv6 Internet public network.
        """
        return pulumi.get(self, "ipv6_prefix_len")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")


class AwaitableGetInternetAddressQuotaResult(GetInternetAddressQuotaResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetInternetAddressQuotaResult(
            id=self.id,
            ipv4_bgp_num=self.ipv4_bgp_num,
            ipv4_bgp_quota=self.ipv4_bgp_quota,
            ipv4_other_num=self.ipv4_other_num,
            ipv4_other_quota=self.ipv4_other_quota,
            ipv6_prefix_len=self.ipv6_prefix_len,
            result_output_file=self.result_output_file)


def get_internet_address_quota(result_output_file: Optional[str] = None,
                               opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetInternetAddressQuotaResult:
    """
    Use this data source to query detailed information of dc internet_address_quota

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    internet_address_quota = tencentcloud.Dc.get_internet_address_quota()
    ```
    <!--End PulumiCodeChooser -->


    :param str result_output_file: Used to save results.
    """
    __args__ = dict()
    __args__['resultOutputFile'] = result_output_file
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('tencentcloud:Dc/getInternetAddressQuota:getInternetAddressQuota', __args__, opts=opts, typ=GetInternetAddressQuotaResult).value

    return AwaitableGetInternetAddressQuotaResult(
        id=pulumi.get(__ret__, 'id'),
        ipv4_bgp_num=pulumi.get(__ret__, 'ipv4_bgp_num'),
        ipv4_bgp_quota=pulumi.get(__ret__, 'ipv4_bgp_quota'),
        ipv4_other_num=pulumi.get(__ret__, 'ipv4_other_num'),
        ipv4_other_quota=pulumi.get(__ret__, 'ipv4_other_quota'),
        ipv6_prefix_len=pulumi.get(__ret__, 'ipv6_prefix_len'),
        result_output_file=pulumi.get(__ret__, 'result_output_file'))


@_utilities.lift_output_func(get_internet_address_quota)
def get_internet_address_quota_output(result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                                      opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetInternetAddressQuotaResult]:
    """
    Use this data source to query detailed information of dc internet_address_quota

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    internet_address_quota = tencentcloud.Dc.get_internet_address_quota()
    ```
    <!--End PulumiCodeChooser -->


    :param str result_output_file: Used to save results.
    """
    ...

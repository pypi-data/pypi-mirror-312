# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetAccessPointsResult',
    'AwaitableGetAccessPointsResult',
    'get_access_points',
    'get_access_points_output',
]

@pulumi.output_type
class GetAccessPointsResult:
    """
    A collection of values returned by getAccessPoints.
    """
    def __init__(__self__, access_point_sets=None, id=None, region_id=None, result_output_file=None):
        if access_point_sets and not isinstance(access_point_sets, list):
            raise TypeError("Expected argument 'access_point_sets' to be a list")
        pulumi.set(__self__, "access_point_sets", access_point_sets)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if region_id and not isinstance(region_id, str):
            raise TypeError("Expected argument 'region_id' to be a str")
        pulumi.set(__self__, "region_id", region_id)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)

    @property
    @pulumi.getter(name="accessPointSets")
    def access_point_sets(self) -> Sequence['outputs.GetAccessPointsAccessPointSetResult']:
        """
        Access point information.
        """
        return pulumi.get(self, "access_point_sets")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="regionId")
    def region_id(self) -> Optional[str]:
        """
        ID of the region that manages the access point.
        """
        return pulumi.get(self, "region_id")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")


class AwaitableGetAccessPointsResult(GetAccessPointsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetAccessPointsResult(
            access_point_sets=self.access_point_sets,
            id=self.id,
            region_id=self.region_id,
            result_output_file=self.result_output_file)


def get_access_points(region_id: Optional[str] = None,
                      result_output_file: Optional[str] = None,
                      opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetAccessPointsResult:
    """
    Use this data source to query detailed information of dc access_points

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    access_points = tencentcloud.Dc.get_access_points(region_id="ap-guangzhou")
    ```
    <!--End PulumiCodeChooser -->


    :param str region_id: Access point region, which can be queried through `DescribeRegions`.You can call `DescribeRegions` to get the region ID.
    :param str result_output_file: Used to save results.
    """
    __args__ = dict()
    __args__['regionId'] = region_id
    __args__['resultOutputFile'] = result_output_file
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('tencentcloud:Dc/getAccessPoints:getAccessPoints', __args__, opts=opts, typ=GetAccessPointsResult).value

    return AwaitableGetAccessPointsResult(
        access_point_sets=pulumi.get(__ret__, 'access_point_sets'),
        id=pulumi.get(__ret__, 'id'),
        region_id=pulumi.get(__ret__, 'region_id'),
        result_output_file=pulumi.get(__ret__, 'result_output_file'))


@_utilities.lift_output_func(get_access_points)
def get_access_points_output(region_id: Optional[pulumi.Input[Optional[str]]] = None,
                             result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                             opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetAccessPointsResult]:
    """
    Use this data source to query detailed information of dc access_points

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    access_points = tencentcloud.Dc.get_access_points(region_id="ap-guangzhou")
    ```
    <!--End PulumiCodeChooser -->


    :param str region_id: Access point region, which can be queried through `DescribeRegions`.You can call `DescribeRegions` to get the region ID.
    :param str result_output_file: Used to save results.
    """
    ...

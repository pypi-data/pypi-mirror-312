# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = ['ObjectDownloadOperationArgs', 'ObjectDownloadOperation']

@pulumi.input_type
class ObjectDownloadOperationArgs:
    def __init__(__self__, *,
                 bucket: pulumi.Input[str],
                 download_path: pulumi.Input[str],
                 key: pulumi.Input[str]):
        """
        The set of arguments for constructing a ObjectDownloadOperation resource.
        :param pulumi.Input[str] bucket: Bucket.
        :param pulumi.Input[str] download_path: Download path.
        :param pulumi.Input[str] key: Object key.
        """
        pulumi.set(__self__, "bucket", bucket)
        pulumi.set(__self__, "download_path", download_path)
        pulumi.set(__self__, "key", key)

    @property
    @pulumi.getter
    def bucket(self) -> pulumi.Input[str]:
        """
        Bucket.
        """
        return pulumi.get(self, "bucket")

    @bucket.setter
    def bucket(self, value: pulumi.Input[str]):
        pulumi.set(self, "bucket", value)

    @property
    @pulumi.getter(name="downloadPath")
    def download_path(self) -> pulumi.Input[str]:
        """
        Download path.
        """
        return pulumi.get(self, "download_path")

    @download_path.setter
    def download_path(self, value: pulumi.Input[str]):
        pulumi.set(self, "download_path", value)

    @property
    @pulumi.getter
    def key(self) -> pulumi.Input[str]:
        """
        Object key.
        """
        return pulumi.get(self, "key")

    @key.setter
    def key(self, value: pulumi.Input[str]):
        pulumi.set(self, "key", value)


@pulumi.input_type
class _ObjectDownloadOperationState:
    def __init__(__self__, *,
                 bucket: Optional[pulumi.Input[str]] = None,
                 download_path: Optional[pulumi.Input[str]] = None,
                 key: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering ObjectDownloadOperation resources.
        :param pulumi.Input[str] bucket: Bucket.
        :param pulumi.Input[str] download_path: Download path.
        :param pulumi.Input[str] key: Object key.
        """
        if bucket is not None:
            pulumi.set(__self__, "bucket", bucket)
        if download_path is not None:
            pulumi.set(__self__, "download_path", download_path)
        if key is not None:
            pulumi.set(__self__, "key", key)

    @property
    @pulumi.getter
    def bucket(self) -> Optional[pulumi.Input[str]]:
        """
        Bucket.
        """
        return pulumi.get(self, "bucket")

    @bucket.setter
    def bucket(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "bucket", value)

    @property
    @pulumi.getter(name="downloadPath")
    def download_path(self) -> Optional[pulumi.Input[str]]:
        """
        Download path.
        """
        return pulumi.get(self, "download_path")

    @download_path.setter
    def download_path(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "download_path", value)

    @property
    @pulumi.getter
    def key(self) -> Optional[pulumi.Input[str]]:
        """
        Object key.
        """
        return pulumi.get(self, "key")

    @key.setter
    def key(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "key", value)


class ObjectDownloadOperation(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 bucket: Optional[pulumi.Input[str]] = None,
                 download_path: Optional[pulumi.Input[str]] = None,
                 key: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Provides a resource to download object

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        object_download = tencentcloud.cos.ObjectDownloadOperation("objectDownload",
            bucket="xxxxxxx",
            download_path="/tmp/test.txt",
            key="test.txt")
        ```
        <!--End PulumiCodeChooser -->

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] bucket: Bucket.
        :param pulumi.Input[str] download_path: Download path.
        :param pulumi.Input[str] key: Object key.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: ObjectDownloadOperationArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Provides a resource to download object

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        object_download = tencentcloud.cos.ObjectDownloadOperation("objectDownload",
            bucket="xxxxxxx",
            download_path="/tmp/test.txt",
            key="test.txt")
        ```
        <!--End PulumiCodeChooser -->

        :param str resource_name: The name of the resource.
        :param ObjectDownloadOperationArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(ObjectDownloadOperationArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 bucket: Optional[pulumi.Input[str]] = None,
                 download_path: Optional[pulumi.Input[str]] = None,
                 key: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = ObjectDownloadOperationArgs.__new__(ObjectDownloadOperationArgs)

            if bucket is None and not opts.urn:
                raise TypeError("Missing required property 'bucket'")
            __props__.__dict__["bucket"] = bucket
            if download_path is None and not opts.urn:
                raise TypeError("Missing required property 'download_path'")
            __props__.__dict__["download_path"] = download_path
            if key is None and not opts.urn:
                raise TypeError("Missing required property 'key'")
            __props__.__dict__["key"] = key
        super(ObjectDownloadOperation, __self__).__init__(
            'tencentcloud:Cos/objectDownloadOperation:ObjectDownloadOperation',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            bucket: Optional[pulumi.Input[str]] = None,
            download_path: Optional[pulumi.Input[str]] = None,
            key: Optional[pulumi.Input[str]] = None) -> 'ObjectDownloadOperation':
        """
        Get an existing ObjectDownloadOperation resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] bucket: Bucket.
        :param pulumi.Input[str] download_path: Download path.
        :param pulumi.Input[str] key: Object key.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _ObjectDownloadOperationState.__new__(_ObjectDownloadOperationState)

        __props__.__dict__["bucket"] = bucket
        __props__.__dict__["download_path"] = download_path
        __props__.__dict__["key"] = key
        return ObjectDownloadOperation(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter
    def bucket(self) -> pulumi.Output[str]:
        """
        Bucket.
        """
        return pulumi.get(self, "bucket")

    @property
    @pulumi.getter(name="downloadPath")
    def download_path(self) -> pulumi.Output[str]:
        """
        Download path.
        """
        return pulumi.get(self, "download_path")

    @property
    @pulumi.getter
    def key(self) -> pulumi.Output[str]:
        """
        Object key.
        """
        return pulumi.get(self, "key")


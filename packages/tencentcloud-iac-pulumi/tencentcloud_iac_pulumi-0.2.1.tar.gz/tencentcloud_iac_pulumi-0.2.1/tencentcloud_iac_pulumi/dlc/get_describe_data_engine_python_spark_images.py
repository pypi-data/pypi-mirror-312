# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetDescribeDataEnginePythonSparkImagesResult',
    'AwaitableGetDescribeDataEnginePythonSparkImagesResult',
    'get_describe_data_engine_python_spark_images',
    'get_describe_data_engine_python_spark_images_output',
]

@pulumi.output_type
class GetDescribeDataEnginePythonSparkImagesResult:
    """
    A collection of values returned by getDescribeDataEnginePythonSparkImages.
    """
    def __init__(__self__, child_image_version_id=None, id=None, python_spark_images=None, result_output_file=None):
        if child_image_version_id and not isinstance(child_image_version_id, str):
            raise TypeError("Expected argument 'child_image_version_id' to be a str")
        pulumi.set(__self__, "child_image_version_id", child_image_version_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if python_spark_images and not isinstance(python_spark_images, list):
            raise TypeError("Expected argument 'python_spark_images' to be a list")
        pulumi.set(__self__, "python_spark_images", python_spark_images)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)

    @property
    @pulumi.getter(name="childImageVersionId")
    def child_image_version_id(self) -> str:
        """
        Engine Image version id.
        """
        return pulumi.get(self, "child_image_version_id")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="pythonSparkImages")
    def python_spark_images(self) -> Sequence['outputs.GetDescribeDataEnginePythonSparkImagesPythonSparkImageResult']:
        """
        Pyspark image list.
        """
        return pulumi.get(self, "python_spark_images")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")


class AwaitableGetDescribeDataEnginePythonSparkImagesResult(GetDescribeDataEnginePythonSparkImagesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetDescribeDataEnginePythonSparkImagesResult(
            child_image_version_id=self.child_image_version_id,
            id=self.id,
            python_spark_images=self.python_spark_images,
            result_output_file=self.result_output_file)


def get_describe_data_engine_python_spark_images(child_image_version_id: Optional[str] = None,
                                                 result_output_file: Optional[str] = None,
                                                 opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetDescribeDataEnginePythonSparkImagesResult:
    """
    Use this data source to query detailed information of dlc describe_data_engine_python_spark_images

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    describe_data_engine_python_spark_images = tencentcloud.Dlc.get_describe_data_engine_python_spark_images(child_image_version_id="d3ftghd4-9a7e-4f64-a3f4-f38507c69742")
    ```
    <!--End PulumiCodeChooser -->


    :param str child_image_version_id: Engine Image version id.
    :param str result_output_file: Used to save results.
    """
    __args__ = dict()
    __args__['childImageVersionId'] = child_image_version_id
    __args__['resultOutputFile'] = result_output_file
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('tencentcloud:Dlc/getDescribeDataEnginePythonSparkImages:getDescribeDataEnginePythonSparkImages', __args__, opts=opts, typ=GetDescribeDataEnginePythonSparkImagesResult).value

    return AwaitableGetDescribeDataEnginePythonSparkImagesResult(
        child_image_version_id=pulumi.get(__ret__, 'child_image_version_id'),
        id=pulumi.get(__ret__, 'id'),
        python_spark_images=pulumi.get(__ret__, 'python_spark_images'),
        result_output_file=pulumi.get(__ret__, 'result_output_file'))


@_utilities.lift_output_func(get_describe_data_engine_python_spark_images)
def get_describe_data_engine_python_spark_images_output(child_image_version_id: Optional[pulumi.Input[str]] = None,
                                                        result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                                                        opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetDescribeDataEnginePythonSparkImagesResult]:
    """
    Use this data source to query detailed information of dlc describe_data_engine_python_spark_images

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    describe_data_engine_python_spark_images = tencentcloud.Dlc.get_describe_data_engine_python_spark_images(child_image_version_id="d3ftghd4-9a7e-4f64-a3f4-f38507c69742")
    ```
    <!--End PulumiCodeChooser -->


    :param str child_image_version_id: Engine Image version id.
    :param str result_output_file: Used to save results.
    """
    ...

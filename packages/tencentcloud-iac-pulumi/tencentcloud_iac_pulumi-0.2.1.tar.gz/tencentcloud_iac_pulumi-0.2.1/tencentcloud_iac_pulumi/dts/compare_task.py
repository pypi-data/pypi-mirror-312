# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['CompareTaskArgs', 'CompareTask']

@pulumi.input_type
class CompareTaskArgs:
    def __init__(__self__, *,
                 job_id: pulumi.Input[str],
                 object_mode: Optional[pulumi.Input[str]] = None,
                 objects: Optional[pulumi.Input['CompareTaskObjectsArgs']] = None,
                 task_name: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a CompareTask resource.
        :param pulumi.Input[str] job_id: job id.
        :param pulumi.Input[str] object_mode: object mode.
        :param pulumi.Input['CompareTaskObjectsArgs'] objects: objects.
        :param pulumi.Input[str] task_name: task name.
        """
        pulumi.set(__self__, "job_id", job_id)
        if object_mode is not None:
            pulumi.set(__self__, "object_mode", object_mode)
        if objects is not None:
            pulumi.set(__self__, "objects", objects)
        if task_name is not None:
            pulumi.set(__self__, "task_name", task_name)

    @property
    @pulumi.getter(name="jobId")
    def job_id(self) -> pulumi.Input[str]:
        """
        job id.
        """
        return pulumi.get(self, "job_id")

    @job_id.setter
    def job_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "job_id", value)

    @property
    @pulumi.getter(name="objectMode")
    def object_mode(self) -> Optional[pulumi.Input[str]]:
        """
        object mode.
        """
        return pulumi.get(self, "object_mode")

    @object_mode.setter
    def object_mode(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "object_mode", value)

    @property
    @pulumi.getter
    def objects(self) -> Optional[pulumi.Input['CompareTaskObjectsArgs']]:
        """
        objects.
        """
        return pulumi.get(self, "objects")

    @objects.setter
    def objects(self, value: Optional[pulumi.Input['CompareTaskObjectsArgs']]):
        pulumi.set(self, "objects", value)

    @property
    @pulumi.getter(name="taskName")
    def task_name(self) -> Optional[pulumi.Input[str]]:
        """
        task name.
        """
        return pulumi.get(self, "task_name")

    @task_name.setter
    def task_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "task_name", value)


@pulumi.input_type
class _CompareTaskState:
    def __init__(__self__, *,
                 compare_task_id: Optional[pulumi.Input[str]] = None,
                 job_id: Optional[pulumi.Input[str]] = None,
                 object_mode: Optional[pulumi.Input[str]] = None,
                 objects: Optional[pulumi.Input['CompareTaskObjectsArgs']] = None,
                 task_name: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering CompareTask resources.
        :param pulumi.Input[str] compare_task_id: compare task id.
        :param pulumi.Input[str] job_id: job id.
        :param pulumi.Input[str] object_mode: object mode.
        :param pulumi.Input['CompareTaskObjectsArgs'] objects: objects.
        :param pulumi.Input[str] task_name: task name.
        """
        if compare_task_id is not None:
            pulumi.set(__self__, "compare_task_id", compare_task_id)
        if job_id is not None:
            pulumi.set(__self__, "job_id", job_id)
        if object_mode is not None:
            pulumi.set(__self__, "object_mode", object_mode)
        if objects is not None:
            pulumi.set(__self__, "objects", objects)
        if task_name is not None:
            pulumi.set(__self__, "task_name", task_name)

    @property
    @pulumi.getter(name="compareTaskId")
    def compare_task_id(self) -> Optional[pulumi.Input[str]]:
        """
        compare task id.
        """
        return pulumi.get(self, "compare_task_id")

    @compare_task_id.setter
    def compare_task_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "compare_task_id", value)

    @property
    @pulumi.getter(name="jobId")
    def job_id(self) -> Optional[pulumi.Input[str]]:
        """
        job id.
        """
        return pulumi.get(self, "job_id")

    @job_id.setter
    def job_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "job_id", value)

    @property
    @pulumi.getter(name="objectMode")
    def object_mode(self) -> Optional[pulumi.Input[str]]:
        """
        object mode.
        """
        return pulumi.get(self, "object_mode")

    @object_mode.setter
    def object_mode(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "object_mode", value)

    @property
    @pulumi.getter
    def objects(self) -> Optional[pulumi.Input['CompareTaskObjectsArgs']]:
        """
        objects.
        """
        return pulumi.get(self, "objects")

    @objects.setter
    def objects(self, value: Optional[pulumi.Input['CompareTaskObjectsArgs']]):
        pulumi.set(self, "objects", value)

    @property
    @pulumi.getter(name="taskName")
    def task_name(self) -> Optional[pulumi.Input[str]]:
        """
        task name.
        """
        return pulumi.get(self, "task_name")

    @task_name.setter
    def task_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "task_name", value)


class CompareTask(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 job_id: Optional[pulumi.Input[str]] = None,
                 object_mode: Optional[pulumi.Input[str]] = None,
                 objects: Optional[pulumi.Input[pulumi.InputType['CompareTaskObjectsArgs']]] = None,
                 task_name: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Provides a resource to create a dts compare_task

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        compare_task = tencentcloud.dts.CompareTask("compareTask",
            job_id="",
            object_mode="",
            objects=tencentcloud.dts.CompareTaskObjectsArgs(
                object_items=[tencentcloud.dts.CompareTaskObjectsObjectItemArgs(
                    db_mode="",
                    db_name="",
                    schema_name="",
                    table_mode="",
                    tables=[tencentcloud.dts.CompareTaskObjectsObjectItemTableArgs(
                        table_name="",
                    )],
                    view_mode="",
                    views=[tencentcloud.dts.CompareTaskObjectsObjectItemViewArgs(
                        view_name="",
                    )],
                )],
                object_mode="",
            ),
            task_name="")
        ```
        <!--End PulumiCodeChooser -->

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] job_id: job id.
        :param pulumi.Input[str] object_mode: object mode.
        :param pulumi.Input[pulumi.InputType['CompareTaskObjectsArgs']] objects: objects.
        :param pulumi.Input[str] task_name: task name.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: CompareTaskArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Provides a resource to create a dts compare_task

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        compare_task = tencentcloud.dts.CompareTask("compareTask",
            job_id="",
            object_mode="",
            objects=tencentcloud.dts.CompareTaskObjectsArgs(
                object_items=[tencentcloud.dts.CompareTaskObjectsObjectItemArgs(
                    db_mode="",
                    db_name="",
                    schema_name="",
                    table_mode="",
                    tables=[tencentcloud.dts.CompareTaskObjectsObjectItemTableArgs(
                        table_name="",
                    )],
                    view_mode="",
                    views=[tencentcloud.dts.CompareTaskObjectsObjectItemViewArgs(
                        view_name="",
                    )],
                )],
                object_mode="",
            ),
            task_name="")
        ```
        <!--End PulumiCodeChooser -->

        :param str resource_name: The name of the resource.
        :param CompareTaskArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(CompareTaskArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 job_id: Optional[pulumi.Input[str]] = None,
                 object_mode: Optional[pulumi.Input[str]] = None,
                 objects: Optional[pulumi.Input[pulumi.InputType['CompareTaskObjectsArgs']]] = None,
                 task_name: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = CompareTaskArgs.__new__(CompareTaskArgs)

            if job_id is None and not opts.urn:
                raise TypeError("Missing required property 'job_id'")
            __props__.__dict__["job_id"] = job_id
            __props__.__dict__["object_mode"] = object_mode
            __props__.__dict__["objects"] = objects
            __props__.__dict__["task_name"] = task_name
            __props__.__dict__["compare_task_id"] = None
        super(CompareTask, __self__).__init__(
            'tencentcloud:Dts/compareTask:CompareTask',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            compare_task_id: Optional[pulumi.Input[str]] = None,
            job_id: Optional[pulumi.Input[str]] = None,
            object_mode: Optional[pulumi.Input[str]] = None,
            objects: Optional[pulumi.Input[pulumi.InputType['CompareTaskObjectsArgs']]] = None,
            task_name: Optional[pulumi.Input[str]] = None) -> 'CompareTask':
        """
        Get an existing CompareTask resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] compare_task_id: compare task id.
        :param pulumi.Input[str] job_id: job id.
        :param pulumi.Input[str] object_mode: object mode.
        :param pulumi.Input[pulumi.InputType['CompareTaskObjectsArgs']] objects: objects.
        :param pulumi.Input[str] task_name: task name.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _CompareTaskState.__new__(_CompareTaskState)

        __props__.__dict__["compare_task_id"] = compare_task_id
        __props__.__dict__["job_id"] = job_id
        __props__.__dict__["object_mode"] = object_mode
        __props__.__dict__["objects"] = objects
        __props__.__dict__["task_name"] = task_name
        return CompareTask(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="compareTaskId")
    def compare_task_id(self) -> pulumi.Output[str]:
        """
        compare task id.
        """
        return pulumi.get(self, "compare_task_id")

    @property
    @pulumi.getter(name="jobId")
    def job_id(self) -> pulumi.Output[str]:
        """
        job id.
        """
        return pulumi.get(self, "job_id")

    @property
    @pulumi.getter(name="objectMode")
    def object_mode(self) -> pulumi.Output[Optional[str]]:
        """
        object mode.
        """
        return pulumi.get(self, "object_mode")

    @property
    @pulumi.getter
    def objects(self) -> pulumi.Output[Optional['outputs.CompareTaskObjects']]:
        """
        objects.
        """
        return pulumi.get(self, "objects")

    @property
    @pulumi.getter(name="taskName")
    def task_name(self) -> pulumi.Output[Optional[str]]:
        """
        task name.
        """
        return pulumi.get(self, "task_name")


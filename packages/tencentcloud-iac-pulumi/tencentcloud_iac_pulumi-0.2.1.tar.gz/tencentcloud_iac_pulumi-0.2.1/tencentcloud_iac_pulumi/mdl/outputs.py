# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'StreamLiveInputInputSetting',
]

@pulumi.output_type
class StreamLiveInputInputSetting(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "appName":
            suggest = "app_name"
        elif key == "delayTime":
            suggest = "delay_time"
        elif key == "inputAddress":
            suggest = "input_address"
        elif key == "inputDomain":
            suggest = "input_domain"
        elif key == "sourceType":
            suggest = "source_type"
        elif key == "sourceUrl":
            suggest = "source_url"
        elif key == "streamName":
            suggest = "stream_name"
        elif key == "userName":
            suggest = "user_name"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in StreamLiveInputInputSetting. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        StreamLiveInputInputSetting.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        StreamLiveInputInputSetting.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 app_name: Optional[str] = None,
                 delay_time: Optional[int] = None,
                 input_address: Optional[str] = None,
                 input_domain: Optional[str] = None,
                 password: Optional[str] = None,
                 source_type: Optional[str] = None,
                 source_url: Optional[str] = None,
                 stream_name: Optional[str] = None,
                 user_name: Optional[str] = None):
        """
        :param str app_name: Application name, which is valid if `Type` is `RTMP_PUSH` and can contain 1-32 letters and digitsNote: This field may return `null`, indicating that no valid value was found.
        :param int delay_time: Delayed time (ms) for playback, which is valid if `Type` is `RTMP_PUSH`Value range: 0 (default) or 10000-600000The value must be a multiple of 1,000.Note: This field may return `null`, indicating that no valid value was found.
        :param str input_address: RTP/UDP input address, which does not need to be entered for the input parameter.Note: this field may return null, indicating that no valid values can be obtained.
        :param str input_domain: The domain of an SRT_PUSH address. If this is a request parameter, you do not need to specify it.Note: This field may return `null`, indicating that no valid value was found.
        :param str password: The password, which is used for authentication.Note: This field may return `null`, indicating that no valid value was found.
        :param str source_type: Source type for stream pulling and relaying. To pull content from private-read COS buckets under the current account, set this parameter to `TencentCOS`; otherwise, leave it empty.Note: this field may return `null`, indicating that no valid value was found.
        :param str source_url: Source URL, which is valid if `Type` is `RTMP_PULL`, `HLS_PULL`, or `MP4_PULL` and can contain 1-512 charactersNote: This field may return `null`, indicating that no valid value was found.
        :param str stream_name: Stream name, which is valid if `Type` is `RTMP_PUSH` and can contain 1-32 letters and digitsNote: This field may return `null`, indicating that no valid value was found.
        :param str user_name: The username, which is used for authentication.Note: This field may return `null`, indicating that no valid value was found.
        """
        if app_name is not None:
            pulumi.set(__self__, "app_name", app_name)
        if delay_time is not None:
            pulumi.set(__self__, "delay_time", delay_time)
        if input_address is not None:
            pulumi.set(__self__, "input_address", input_address)
        if input_domain is not None:
            pulumi.set(__self__, "input_domain", input_domain)
        if password is not None:
            pulumi.set(__self__, "password", password)
        if source_type is not None:
            pulumi.set(__self__, "source_type", source_type)
        if source_url is not None:
            pulumi.set(__self__, "source_url", source_url)
        if stream_name is not None:
            pulumi.set(__self__, "stream_name", stream_name)
        if user_name is not None:
            pulumi.set(__self__, "user_name", user_name)

    @property
    @pulumi.getter(name="appName")
    def app_name(self) -> Optional[str]:
        """
        Application name, which is valid if `Type` is `RTMP_PUSH` and can contain 1-32 letters and digitsNote: This field may return `null`, indicating that no valid value was found.
        """
        return pulumi.get(self, "app_name")

    @property
    @pulumi.getter(name="delayTime")
    def delay_time(self) -> Optional[int]:
        """
        Delayed time (ms) for playback, which is valid if `Type` is `RTMP_PUSH`Value range: 0 (default) or 10000-600000The value must be a multiple of 1,000.Note: This field may return `null`, indicating that no valid value was found.
        """
        return pulumi.get(self, "delay_time")

    @property
    @pulumi.getter(name="inputAddress")
    def input_address(self) -> Optional[str]:
        """
        RTP/UDP input address, which does not need to be entered for the input parameter.Note: this field may return null, indicating that no valid values can be obtained.
        """
        return pulumi.get(self, "input_address")

    @property
    @pulumi.getter(name="inputDomain")
    def input_domain(self) -> Optional[str]:
        """
        The domain of an SRT_PUSH address. If this is a request parameter, you do not need to specify it.Note: This field may return `null`, indicating that no valid value was found.
        """
        return pulumi.get(self, "input_domain")

    @property
    @pulumi.getter
    def password(self) -> Optional[str]:
        """
        The password, which is used for authentication.Note: This field may return `null`, indicating that no valid value was found.
        """
        return pulumi.get(self, "password")

    @property
    @pulumi.getter(name="sourceType")
    def source_type(self) -> Optional[str]:
        """
        Source type for stream pulling and relaying. To pull content from private-read COS buckets under the current account, set this parameter to `TencentCOS`; otherwise, leave it empty.Note: this field may return `null`, indicating that no valid value was found.
        """
        return pulumi.get(self, "source_type")

    @property
    @pulumi.getter(name="sourceUrl")
    def source_url(self) -> Optional[str]:
        """
        Source URL, which is valid if `Type` is `RTMP_PULL`, `HLS_PULL`, or `MP4_PULL` and can contain 1-512 charactersNote: This field may return `null`, indicating that no valid value was found.
        """
        return pulumi.get(self, "source_url")

    @property
    @pulumi.getter(name="streamName")
    def stream_name(self) -> Optional[str]:
        """
        Stream name, which is valid if `Type` is `RTMP_PUSH` and can contain 1-32 letters and digitsNote: This field may return `null`, indicating that no valid value was found.
        """
        return pulumi.get(self, "stream_name")

    @property
    @pulumi.getter(name="userName")
    def user_name(self) -> Optional[str]:
        """
        The username, which is used for authentication.Note: This field may return `null`, indicating that no valid value was found.
        """
        return pulumi.get(self, "user_name")



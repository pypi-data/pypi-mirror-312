# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetListEntitiesForPolicyResult',
    'AwaitableGetListEntitiesForPolicyResult',
    'get_list_entities_for_policy',
    'get_list_entities_for_policy_output',
]

@pulumi.output_type
class GetListEntitiesForPolicyResult:
    """
    A collection of values returned by getListEntitiesForPolicy.
    """
    def __init__(__self__, entity_filter=None, id=None, lists=None, policy_id=None, result_output_file=None, rp=None):
        if entity_filter and not isinstance(entity_filter, str):
            raise TypeError("Expected argument 'entity_filter' to be a str")
        pulumi.set(__self__, "entity_filter", entity_filter)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if lists and not isinstance(lists, list):
            raise TypeError("Expected argument 'lists' to be a list")
        pulumi.set(__self__, "lists", lists)
        if policy_id and not isinstance(policy_id, int):
            raise TypeError("Expected argument 'policy_id' to be a int")
        pulumi.set(__self__, "policy_id", policy_id)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)
        if rp and not isinstance(rp, int):
            raise TypeError("Expected argument 'rp' to be a int")
        pulumi.set(__self__, "rp", rp)

    @property
    @pulumi.getter(name="entityFilter")
    def entity_filter(self) -> Optional[str]:
        return pulumi.get(self, "entity_filter")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def lists(self) -> Sequence['outputs.GetListEntitiesForPolicyListResult']:
        """
        Entity ListNote: This field may return null, indicating that a valid value cannot be obtained.
        """
        return pulumi.get(self, "lists")

    @property
    @pulumi.getter(name="policyId")
    def policy_id(self) -> int:
        return pulumi.get(self, "policy_id")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")

    @property
    @pulumi.getter
    def rp(self) -> Optional[int]:
        return pulumi.get(self, "rp")


class AwaitableGetListEntitiesForPolicyResult(GetListEntitiesForPolicyResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetListEntitiesForPolicyResult(
            entity_filter=self.entity_filter,
            id=self.id,
            lists=self.lists,
            policy_id=self.policy_id,
            result_output_file=self.result_output_file,
            rp=self.rp)


def get_list_entities_for_policy(entity_filter: Optional[str] = None,
                                 policy_id: Optional[int] = None,
                                 result_output_file: Optional[str] = None,
                                 rp: Optional[int] = None,
                                 opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetListEntitiesForPolicyResult:
    """
    Use this data source to query detailed information of cam list_entities_for_policy

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    list_entities_for_policy = tencentcloud.Cam.get_list_entities_for_policy(entity_filter="All",
        policy_id=1)
    ```
    <!--End PulumiCodeChooser -->


    :param str entity_filter: Can take values of &amp;amp;#39;All&amp;amp;#39;, &amp;amp;#39;User&amp;amp;#39;, &amp;amp;#39;Group&amp;amp;#39;, and &amp;amp;#39;Role&amp;amp;#39;. &amp;amp;#39;All&amp;amp;#39; represents obtaining all entity types, &amp;amp;#39;User&amp;amp;#39; represents only obtaining sub accounts, &amp;amp;#39;Group&amp;amp;#39; represents only obtaining user groups, and &amp;amp;#39;Role&amp;amp;#39; represents only obtaining roles. The default value is&amp;amp;#39; All &amp;amp;#39;.
    :param int policy_id: Policy Id.
    :param str result_output_file: Used to save results.
    :param int rp: Per page size, default value is 20.
    """
    __args__ = dict()
    __args__['entityFilter'] = entity_filter
    __args__['policyId'] = policy_id
    __args__['resultOutputFile'] = result_output_file
    __args__['rp'] = rp
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('tencentcloud:Cam/getListEntitiesForPolicy:getListEntitiesForPolicy', __args__, opts=opts, typ=GetListEntitiesForPolicyResult).value

    return AwaitableGetListEntitiesForPolicyResult(
        entity_filter=pulumi.get(__ret__, 'entity_filter'),
        id=pulumi.get(__ret__, 'id'),
        lists=pulumi.get(__ret__, 'lists'),
        policy_id=pulumi.get(__ret__, 'policy_id'),
        result_output_file=pulumi.get(__ret__, 'result_output_file'),
        rp=pulumi.get(__ret__, 'rp'))


@_utilities.lift_output_func(get_list_entities_for_policy)
def get_list_entities_for_policy_output(entity_filter: Optional[pulumi.Input[Optional[str]]] = None,
                                        policy_id: Optional[pulumi.Input[int]] = None,
                                        result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                                        rp: Optional[pulumi.Input[Optional[int]]] = None,
                                        opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetListEntitiesForPolicyResult]:
    """
    Use this data source to query detailed information of cam list_entities_for_policy

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    list_entities_for_policy = tencentcloud.Cam.get_list_entities_for_policy(entity_filter="All",
        policy_id=1)
    ```
    <!--End PulumiCodeChooser -->


    :param str entity_filter: Can take values of &amp;amp;#39;All&amp;amp;#39;, &amp;amp;#39;User&amp;amp;#39;, &amp;amp;#39;Group&amp;amp;#39;, and &amp;amp;#39;Role&amp;amp;#39;. &amp;amp;#39;All&amp;amp;#39; represents obtaining all entity types, &amp;amp;#39;User&amp;amp;#39; represents only obtaining sub accounts, &amp;amp;#39;Group&amp;amp;#39; represents only obtaining user groups, and &amp;amp;#39;Role&amp;amp;#39; represents only obtaining roles. The default value is&amp;amp;#39; All &amp;amp;#39;.
    :param int policy_id: Policy Id.
    :param str result_output_file: Used to save results.
    :param int rp: Per page size, default value is 20.
    """
    ...

# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'GetOidcConfigResult',
    'AwaitableGetOidcConfigResult',
    'get_oidc_config',
    'get_oidc_config_output',
]

@pulumi.output_type
class GetOidcConfigResult:
    """
    A collection of values returned by getOidcConfig.
    """
    def __init__(__self__, client_ids=None, description=None, id=None, identity_key=None, identity_url=None, name=None, provider_type=None, result_output_file=None, status=None):
        if client_ids and not isinstance(client_ids, list):
            raise TypeError("Expected argument 'client_ids' to be a list")
        pulumi.set(__self__, "client_ids", client_ids)
        if description and not isinstance(description, str):
            raise TypeError("Expected argument 'description' to be a str")
        pulumi.set(__self__, "description", description)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if identity_key and not isinstance(identity_key, str):
            raise TypeError("Expected argument 'identity_key' to be a str")
        pulumi.set(__self__, "identity_key", identity_key)
        if identity_url and not isinstance(identity_url, str):
            raise TypeError("Expected argument 'identity_url' to be a str")
        pulumi.set(__self__, "identity_url", identity_url)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if provider_type and not isinstance(provider_type, int):
            raise TypeError("Expected argument 'provider_type' to be a int")
        pulumi.set(__self__, "provider_type", provider_type)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)
        if status and not isinstance(status, int):
            raise TypeError("Expected argument 'status' to be a int")
        pulumi.set(__self__, "status", status)

    @property
    @pulumi.getter(name="clientIds")
    def client_ids(self) -> Sequence[str]:
        """
        Client ID.
        """
        return pulumi.get(self, "client_ids")

    @property
    @pulumi.getter
    def description(self) -> str:
        """
        Description.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="identityKey")
    def identity_key(self) -> str:
        """
        Public key for signature.
        """
        return pulumi.get(self, "identity_key")

    @property
    @pulumi.getter(name="identityUrl")
    def identity_url(self) -> str:
        """
        IdP URL.
        """
        return pulumi.get(self, "identity_url")

    @property
    @pulumi.getter
    def name(self) -> str:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="providerType")
    def provider_type(self) -> int:
        """
        IdP type. 11: Role IdP.
        """
        return pulumi.get(self, "provider_type")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")

    @property
    @pulumi.getter
    def status(self) -> int:
        """
        Status. 0: Not set; 2: Disabled; 11: Enabled.
        """
        return pulumi.get(self, "status")


class AwaitableGetOidcConfigResult(GetOidcConfigResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetOidcConfigResult(
            client_ids=self.client_ids,
            description=self.description,
            id=self.id,
            identity_key=self.identity_key,
            identity_url=self.identity_url,
            name=self.name,
            provider_type=self.provider_type,
            result_output_file=self.result_output_file,
            status=self.status)


def get_oidc_config(name: Optional[str] = None,
                    result_output_file: Optional[str] = None,
                    opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetOidcConfigResult:
    """
    Use this data source to query detailed information of cam oidc_config

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    oidc_config = tencentcloud.Cam.get_oidc_config(name="cls-kzilgv5m")
    pulumi.export("identityKey", oidc_config.identity_key)
    pulumi.export("identityUrl", oidc_config.identity_url)
    ```
    <!--End PulumiCodeChooser -->


    :param str name: Name.
    :param str result_output_file: Used to save results.
    """
    __args__ = dict()
    __args__['name'] = name
    __args__['resultOutputFile'] = result_output_file
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('tencentcloud:Cam/getOidcConfig:getOidcConfig', __args__, opts=opts, typ=GetOidcConfigResult).value

    return AwaitableGetOidcConfigResult(
        client_ids=pulumi.get(__ret__, 'client_ids'),
        description=pulumi.get(__ret__, 'description'),
        id=pulumi.get(__ret__, 'id'),
        identity_key=pulumi.get(__ret__, 'identity_key'),
        identity_url=pulumi.get(__ret__, 'identity_url'),
        name=pulumi.get(__ret__, 'name'),
        provider_type=pulumi.get(__ret__, 'provider_type'),
        result_output_file=pulumi.get(__ret__, 'result_output_file'),
        status=pulumi.get(__ret__, 'status'))


@_utilities.lift_output_func(get_oidc_config)
def get_oidc_config_output(name: Optional[pulumi.Input[str]] = None,
                           result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                           opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetOidcConfigResult]:
    """
    Use this data source to query detailed information of cam oidc_config

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    oidc_config = tencentcloud.Cam.get_oidc_config(name="cls-kzilgv5m")
    pulumi.export("identityKey", oidc_config.identity_key)
    pulumi.export("identityUrl", oidc_config.identity_url)
    ```
    <!--End PulumiCodeChooser -->


    :param str name: Name.
    :param str result_output_file: Used to save results.
    """
    ...

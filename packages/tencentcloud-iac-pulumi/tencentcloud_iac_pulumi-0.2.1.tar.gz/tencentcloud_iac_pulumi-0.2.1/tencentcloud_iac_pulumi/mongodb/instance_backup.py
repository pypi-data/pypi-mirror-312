# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = ['InstanceBackupArgs', 'InstanceBackup']

@pulumi.input_type
class InstanceBackupArgs:
    def __init__(__self__, *,
                 backup_method: pulumi.Input[int],
                 instance_id: pulumi.Input[str],
                 backup_remark: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a InstanceBackup resource.
        :param pulumi.Input[int] backup_method: 0:logical backup, 1:physical backup.
        :param pulumi.Input[str] instance_id: Instance ID, the format is: cmgo-9d0p6umb.Same as the instance ID displayed in the cloud database console page.
        :param pulumi.Input[str] backup_remark: backup notes.
        """
        pulumi.set(__self__, "backup_method", backup_method)
        pulumi.set(__self__, "instance_id", instance_id)
        if backup_remark is not None:
            pulumi.set(__self__, "backup_remark", backup_remark)

    @property
    @pulumi.getter(name="backupMethod")
    def backup_method(self) -> pulumi.Input[int]:
        """
        0:logical backup, 1:physical backup.
        """
        return pulumi.get(self, "backup_method")

    @backup_method.setter
    def backup_method(self, value: pulumi.Input[int]):
        pulumi.set(self, "backup_method", value)

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> pulumi.Input[str]:
        """
        Instance ID, the format is: cmgo-9d0p6umb.Same as the instance ID displayed in the cloud database console page.
        """
        return pulumi.get(self, "instance_id")

    @instance_id.setter
    def instance_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "instance_id", value)

    @property
    @pulumi.getter(name="backupRemark")
    def backup_remark(self) -> Optional[pulumi.Input[str]]:
        """
        backup notes.
        """
        return pulumi.get(self, "backup_remark")

    @backup_remark.setter
    def backup_remark(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "backup_remark", value)


@pulumi.input_type
class _InstanceBackupState:
    def __init__(__self__, *,
                 backup_method: Optional[pulumi.Input[int]] = None,
                 backup_remark: Optional[pulumi.Input[str]] = None,
                 instance_id: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering InstanceBackup resources.
        :param pulumi.Input[int] backup_method: 0:logical backup, 1:physical backup.
        :param pulumi.Input[str] backup_remark: backup notes.
        :param pulumi.Input[str] instance_id: Instance ID, the format is: cmgo-9d0p6umb.Same as the instance ID displayed in the cloud database console page.
        """
        if backup_method is not None:
            pulumi.set(__self__, "backup_method", backup_method)
        if backup_remark is not None:
            pulumi.set(__self__, "backup_remark", backup_remark)
        if instance_id is not None:
            pulumi.set(__self__, "instance_id", instance_id)

    @property
    @pulumi.getter(name="backupMethod")
    def backup_method(self) -> Optional[pulumi.Input[int]]:
        """
        0:logical backup, 1:physical backup.
        """
        return pulumi.get(self, "backup_method")

    @backup_method.setter
    def backup_method(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "backup_method", value)

    @property
    @pulumi.getter(name="backupRemark")
    def backup_remark(self) -> Optional[pulumi.Input[str]]:
        """
        backup notes.
        """
        return pulumi.get(self, "backup_remark")

    @backup_remark.setter
    def backup_remark(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "backup_remark", value)

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> Optional[pulumi.Input[str]]:
        """
        Instance ID, the format is: cmgo-9d0p6umb.Same as the instance ID displayed in the cloud database console page.
        """
        return pulumi.get(self, "instance_id")

    @instance_id.setter
    def instance_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "instance_id", value)


class InstanceBackup(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 backup_method: Optional[pulumi.Input[int]] = None,
                 backup_remark: Optional[pulumi.Input[str]] = None,
                 instance_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Provides a resource to create a mongodb instance_backup

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        instance_backup = tencentcloud.mongodb.InstanceBackup("instanceBackup",
            backup_method=0,
            backup_remark="my backup",
            instance_id="cmgo-9d0p6umb")
        ```
        <!--End PulumiCodeChooser -->

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[int] backup_method: 0:logical backup, 1:physical backup.
        :param pulumi.Input[str] backup_remark: backup notes.
        :param pulumi.Input[str] instance_id: Instance ID, the format is: cmgo-9d0p6umb.Same as the instance ID displayed in the cloud database console page.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: InstanceBackupArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Provides a resource to create a mongodb instance_backup

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        instance_backup = tencentcloud.mongodb.InstanceBackup("instanceBackup",
            backup_method=0,
            backup_remark="my backup",
            instance_id="cmgo-9d0p6umb")
        ```
        <!--End PulumiCodeChooser -->

        :param str resource_name: The name of the resource.
        :param InstanceBackupArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(InstanceBackupArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 backup_method: Optional[pulumi.Input[int]] = None,
                 backup_remark: Optional[pulumi.Input[str]] = None,
                 instance_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = InstanceBackupArgs.__new__(InstanceBackupArgs)

            if backup_method is None and not opts.urn:
                raise TypeError("Missing required property 'backup_method'")
            __props__.__dict__["backup_method"] = backup_method
            __props__.__dict__["backup_remark"] = backup_remark
            if instance_id is None and not opts.urn:
                raise TypeError("Missing required property 'instance_id'")
            __props__.__dict__["instance_id"] = instance_id
        super(InstanceBackup, __self__).__init__(
            'tencentcloud:Mongodb/instanceBackup:InstanceBackup',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            backup_method: Optional[pulumi.Input[int]] = None,
            backup_remark: Optional[pulumi.Input[str]] = None,
            instance_id: Optional[pulumi.Input[str]] = None) -> 'InstanceBackup':
        """
        Get an existing InstanceBackup resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[int] backup_method: 0:logical backup, 1:physical backup.
        :param pulumi.Input[str] backup_remark: backup notes.
        :param pulumi.Input[str] instance_id: Instance ID, the format is: cmgo-9d0p6umb.Same as the instance ID displayed in the cloud database console page.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _InstanceBackupState.__new__(_InstanceBackupState)

        __props__.__dict__["backup_method"] = backup_method
        __props__.__dict__["backup_remark"] = backup_remark
        __props__.__dict__["instance_id"] = instance_id
        return InstanceBackup(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="backupMethod")
    def backup_method(self) -> pulumi.Output[int]:
        """
        0:logical backup, 1:physical backup.
        """
        return pulumi.get(self, "backup_method")

    @property
    @pulumi.getter(name="backupRemark")
    def backup_remark(self) -> pulumi.Output[Optional[str]]:
        """
        backup notes.
        """
        return pulumi.get(self, "backup_remark")

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> pulumi.Output[str]:
        """
        Instance ID, the format is: cmgo-9d0p6umb.Same as the instance ID displayed in the cloud database console page.
        """
        return pulumi.get(self, "instance_id")


# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetInstanceCurrentOpResult',
    'AwaitableGetInstanceCurrentOpResult',
    'get_instance_current_op',
    'get_instance_current_op_output',
]

@pulumi.output_type
class GetInstanceCurrentOpResult:
    """
    A collection of values returned by getInstanceCurrentOp.
    """
    def __init__(__self__, current_ops=None, id=None, instance_id=None, millisecond_running=None, ns=None, op=None, order_by=None, order_by_type=None, replica_set_name=None, result_output_file=None, state=None):
        if current_ops and not isinstance(current_ops, list):
            raise TypeError("Expected argument 'current_ops' to be a list")
        pulumi.set(__self__, "current_ops", current_ops)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if instance_id and not isinstance(instance_id, str):
            raise TypeError("Expected argument 'instance_id' to be a str")
        pulumi.set(__self__, "instance_id", instance_id)
        if millisecond_running and not isinstance(millisecond_running, int):
            raise TypeError("Expected argument 'millisecond_running' to be a int")
        pulumi.set(__self__, "millisecond_running", millisecond_running)
        if ns and not isinstance(ns, str):
            raise TypeError("Expected argument 'ns' to be a str")
        pulumi.set(__self__, "ns", ns)
        if op and not isinstance(op, str):
            raise TypeError("Expected argument 'op' to be a str")
        pulumi.set(__self__, "op", op)
        if order_by and not isinstance(order_by, str):
            raise TypeError("Expected argument 'order_by' to be a str")
        pulumi.set(__self__, "order_by", order_by)
        if order_by_type and not isinstance(order_by_type, str):
            raise TypeError("Expected argument 'order_by_type' to be a str")
        pulumi.set(__self__, "order_by_type", order_by_type)
        if replica_set_name and not isinstance(replica_set_name, str):
            raise TypeError("Expected argument 'replica_set_name' to be a str")
        pulumi.set(__self__, "replica_set_name", replica_set_name)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)
        if state and not isinstance(state, str):
            raise TypeError("Expected argument 'state' to be a str")
        pulumi.set(__self__, "state", state)

    @property
    @pulumi.getter(name="currentOps")
    def current_ops(self) -> Sequence['outputs.GetInstanceCurrentOpCurrentOpResult']:
        """
        current operation list.
        """
        return pulumi.get(self, "current_ops")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> str:
        return pulumi.get(self, "instance_id")

    @property
    @pulumi.getter(name="millisecondRunning")
    def millisecond_running(self) -> Optional[int]:
        return pulumi.get(self, "millisecond_running")

    @property
    @pulumi.getter
    def ns(self) -> Optional[str]:
        """
        operation namespace.
        """
        return pulumi.get(self, "ns")

    @property
    @pulumi.getter
    def op(self) -> Optional[str]:
        """
        operation value.
        """
        return pulumi.get(self, "op")

    @property
    @pulumi.getter(name="orderBy")
    def order_by(self) -> Optional[str]:
        return pulumi.get(self, "order_by")

    @property
    @pulumi.getter(name="orderByType")
    def order_by_type(self) -> Optional[str]:
        return pulumi.get(self, "order_by_type")

    @property
    @pulumi.getter(name="replicaSetName")
    def replica_set_name(self) -> Optional[str]:
        """
        Replication name.
        """
        return pulumi.get(self, "replica_set_name")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")

    @property
    @pulumi.getter
    def state(self) -> Optional[str]:
        """
        operation state.
        """
        return pulumi.get(self, "state")


class AwaitableGetInstanceCurrentOpResult(GetInstanceCurrentOpResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetInstanceCurrentOpResult(
            current_ops=self.current_ops,
            id=self.id,
            instance_id=self.instance_id,
            millisecond_running=self.millisecond_running,
            ns=self.ns,
            op=self.op,
            order_by=self.order_by,
            order_by_type=self.order_by_type,
            replica_set_name=self.replica_set_name,
            result_output_file=self.result_output_file,
            state=self.state)


def get_instance_current_op(instance_id: Optional[str] = None,
                            millisecond_running: Optional[int] = None,
                            ns: Optional[str] = None,
                            op: Optional[str] = None,
                            order_by: Optional[str] = None,
                            order_by_type: Optional[str] = None,
                            replica_set_name: Optional[str] = None,
                            result_output_file: Optional[str] = None,
                            state: Optional[str] = None,
                            opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetInstanceCurrentOpResult:
    """
    Use this data source to query detailed information of mongodb instance_current_op

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    instance_current_op = tencentcloud.Mongodb.get_instance_current_op(instance_id="cmgo-b43i3wkj",
        op="command",
        order_by_type="desc")
    ```
    <!--End PulumiCodeChooser -->


    :param str instance_id: Instance ID, the format is: cmgo-9d0p6umb.Same as the instance ID displayed in the cloud database console page.
    :param int millisecond_running: Filter condition, the time that the operation has been executed (unit: millisecond),the result will return the operation that exceeds the set time, the default value is 0,and the value range is [0, 3600000].
    :param str ns: Filter condition, the namespace namespace to which the operation belongs, in the format of db.collection.
    :param str op: Filter condition, operation type, possible values: none, update, insert, query, command, getmore,remove and killcursors.
    :param str order_by: Returns the sorted field of the result set, currently supports: MicrosecsRunning/microsecsrunning,the default is ascending sort.
    :param str order_by_type: Returns the sorting method of the result set, possible values: ASC/asc or DESC/desc.
    :param str replica_set_name: filter condition, shard name.
    :param str result_output_file: Used to save results.
    :param str state: Filter condition, node status, possible value: primary, secondary.
    """
    __args__ = dict()
    __args__['instanceId'] = instance_id
    __args__['millisecondRunning'] = millisecond_running
    __args__['ns'] = ns
    __args__['op'] = op
    __args__['orderBy'] = order_by
    __args__['orderByType'] = order_by_type
    __args__['replicaSetName'] = replica_set_name
    __args__['resultOutputFile'] = result_output_file
    __args__['state'] = state
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('tencentcloud:Mongodb/getInstanceCurrentOp:getInstanceCurrentOp', __args__, opts=opts, typ=GetInstanceCurrentOpResult).value

    return AwaitableGetInstanceCurrentOpResult(
        current_ops=pulumi.get(__ret__, 'current_ops'),
        id=pulumi.get(__ret__, 'id'),
        instance_id=pulumi.get(__ret__, 'instance_id'),
        millisecond_running=pulumi.get(__ret__, 'millisecond_running'),
        ns=pulumi.get(__ret__, 'ns'),
        op=pulumi.get(__ret__, 'op'),
        order_by=pulumi.get(__ret__, 'order_by'),
        order_by_type=pulumi.get(__ret__, 'order_by_type'),
        replica_set_name=pulumi.get(__ret__, 'replica_set_name'),
        result_output_file=pulumi.get(__ret__, 'result_output_file'),
        state=pulumi.get(__ret__, 'state'))


@_utilities.lift_output_func(get_instance_current_op)
def get_instance_current_op_output(instance_id: Optional[pulumi.Input[str]] = None,
                                   millisecond_running: Optional[pulumi.Input[Optional[int]]] = None,
                                   ns: Optional[pulumi.Input[Optional[str]]] = None,
                                   op: Optional[pulumi.Input[Optional[str]]] = None,
                                   order_by: Optional[pulumi.Input[Optional[str]]] = None,
                                   order_by_type: Optional[pulumi.Input[Optional[str]]] = None,
                                   replica_set_name: Optional[pulumi.Input[Optional[str]]] = None,
                                   result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                                   state: Optional[pulumi.Input[Optional[str]]] = None,
                                   opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetInstanceCurrentOpResult]:
    """
    Use this data source to query detailed information of mongodb instance_current_op

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    instance_current_op = tencentcloud.Mongodb.get_instance_current_op(instance_id="cmgo-b43i3wkj",
        op="command",
        order_by_type="desc")
    ```
    <!--End PulumiCodeChooser -->


    :param str instance_id: Instance ID, the format is: cmgo-9d0p6umb.Same as the instance ID displayed in the cloud database console page.
    :param int millisecond_running: Filter condition, the time that the operation has been executed (unit: millisecond),the result will return the operation that exceeds the set time, the default value is 0,and the value range is [0, 3600000].
    :param str ns: Filter condition, the namespace namespace to which the operation belongs, in the format of db.collection.
    :param str op: Filter condition, operation type, possible values: none, update, insert, query, command, getmore,remove and killcursors.
    :param str order_by: Returns the sorted field of the result set, currently supports: MicrosecsRunning/microsecsrunning,the default is ascending sort.
    :param str order_by_type: Returns the sorting method of the result set, possible values: ASC/asc or DESC/desc.
    :param str replica_set_name: filter condition, shard name.
    :param str result_output_file: Used to save results.
    :param str state: Filter condition, node status, possible value: primary, secondary.
    """
    ...

# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetInstanceBackupsResult',
    'AwaitableGetInstanceBackupsResult',
    'get_instance_backups',
    'get_instance_backups_output',
]

@pulumi.output_type
class GetInstanceBackupsResult:
    """
    A collection of values returned by getInstanceBackups.
    """
    def __init__(__self__, backup_lists=None, backup_method=None, id=None, instance_id=None, result_output_file=None):
        if backup_lists and not isinstance(backup_lists, list):
            raise TypeError("Expected argument 'backup_lists' to be a list")
        pulumi.set(__self__, "backup_lists", backup_lists)
        if backup_method and not isinstance(backup_method, int):
            raise TypeError("Expected argument 'backup_method' to be a int")
        pulumi.set(__self__, "backup_method", backup_method)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if instance_id and not isinstance(instance_id, str):
            raise TypeError("Expected argument 'instance_id' to be a str")
        pulumi.set(__self__, "instance_id", instance_id)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)

    @property
    @pulumi.getter(name="backupLists")
    def backup_lists(self) -> Sequence['outputs.GetInstanceBackupsBackupListResult']:
        """
        backup list.
        """
        return pulumi.get(self, "backup_lists")

    @property
    @pulumi.getter(name="backupMethod")
    def backup_method(self) -> Optional[int]:
        """
        Backup method.
        """
        return pulumi.get(self, "backup_method")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> str:
        """
        Instance ID.
        """
        return pulumi.get(self, "instance_id")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")


class AwaitableGetInstanceBackupsResult(GetInstanceBackupsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetInstanceBackupsResult(
            backup_lists=self.backup_lists,
            backup_method=self.backup_method,
            id=self.id,
            instance_id=self.instance_id,
            result_output_file=self.result_output_file)


def get_instance_backups(backup_method: Optional[int] = None,
                         instance_id: Optional[str] = None,
                         result_output_file: Optional[str] = None,
                         opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetInstanceBackupsResult:
    """
    Use this data source to query detailed information of mongodb instance_backups

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    instance_backups = tencentcloud.Mongodb.get_instance_backups(backup_method=0,
        instance_id="cmgo-9d0p6umb")
    ```
    <!--End PulumiCodeChooser -->


    :param int backup_method: Backup mode, currently supported: 0-logic backup, 1-physical backup, 2-all backups.The default is logical backup.
    :param str instance_id: Instance ID, the format is: cmgo-9d0p6umb.Same as the instance ID displayed in the cloud database console page.
    :param str result_output_file: Used to save results.
    """
    __args__ = dict()
    __args__['backupMethod'] = backup_method
    __args__['instanceId'] = instance_id
    __args__['resultOutputFile'] = result_output_file
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('tencentcloud:Mongodb/getInstanceBackups:getInstanceBackups', __args__, opts=opts, typ=GetInstanceBackupsResult).value

    return AwaitableGetInstanceBackupsResult(
        backup_lists=pulumi.get(__ret__, 'backup_lists'),
        backup_method=pulumi.get(__ret__, 'backup_method'),
        id=pulumi.get(__ret__, 'id'),
        instance_id=pulumi.get(__ret__, 'instance_id'),
        result_output_file=pulumi.get(__ret__, 'result_output_file'))


@_utilities.lift_output_func(get_instance_backups)
def get_instance_backups_output(backup_method: Optional[pulumi.Input[Optional[int]]] = None,
                                instance_id: Optional[pulumi.Input[str]] = None,
                                result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                                opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetInstanceBackupsResult]:
    """
    Use this data source to query detailed information of mongodb instance_backups

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    instance_backups = tencentcloud.Mongodb.get_instance_backups(backup_method=0,
        instance_id="cmgo-9d0p6umb")
    ```
    <!--End PulumiCodeChooser -->


    :param int backup_method: Backup mode, currently supported: 0-logic backup, 1-physical backup, 2-all backups.The default is logical backup.
    :param str instance_id: Instance ID, the format is: cmgo-9d0p6umb.Same as the instance ID displayed in the cloud database console page.
    :param str result_output_file: Used to save results.
    """
    ...

# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetInstanceQpsLimitResult',
    'AwaitableGetInstanceQpsLimitResult',
    'get_instance_qps_limit',
    'get_instance_qps_limit_output',
]

@pulumi.output_type
class GetInstanceQpsLimitResult:
    """
    A collection of values returned by getInstanceQpsLimit.
    """
    def __init__(__self__, id=None, instance_id=None, qps_datas=None, result_output_file=None, type=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if instance_id and not isinstance(instance_id, str):
            raise TypeError("Expected argument 'instance_id' to be a str")
        pulumi.set(__self__, "instance_id", instance_id)
        if qps_datas and not isinstance(qps_datas, list):
            raise TypeError("Expected argument 'qps_datas' to be a list")
        pulumi.set(__self__, "qps_datas", qps_datas)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)
        if type and not isinstance(type, str):
            raise TypeError("Expected argument 'type' to be a str")
        pulumi.set(__self__, "type", type)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> str:
        return pulumi.get(self, "instance_id")

    @property
    @pulumi.getter(name="qpsDatas")
    def qps_datas(self) -> Sequence['outputs.GetInstanceQpsLimitQpsDataResult']:
        """
        Qps info.
        """
        return pulumi.get(self, "qps_datas")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")

    @property
    @pulumi.getter
    def type(self) -> Optional[str]:
        return pulumi.get(self, "type")


class AwaitableGetInstanceQpsLimitResult(GetInstanceQpsLimitResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetInstanceQpsLimitResult(
            id=self.id,
            instance_id=self.instance_id,
            qps_datas=self.qps_datas,
            result_output_file=self.result_output_file,
            type=self.type)


def get_instance_qps_limit(instance_id: Optional[str] = None,
                           result_output_file: Optional[str] = None,
                           type: Optional[str] = None,
                           opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetInstanceQpsLimitResult:
    """
    Use this data source to query detailed information of waf instance_qps_limit

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    example = tencentcloud.Waf.get_instance_qps_limit(instance_id="waf_2kxtlbky00b3b4qz")
    ```
    <!--End PulumiCodeChooser -->


    :param str instance_id: Unique ID of Instance.
    :param str result_output_file: Used to save results.
    :param str type: Instance type.
    """
    __args__ = dict()
    __args__['instanceId'] = instance_id
    __args__['resultOutputFile'] = result_output_file
    __args__['type'] = type
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('tencentcloud:Waf/getInstanceQpsLimit:getInstanceQpsLimit', __args__, opts=opts, typ=GetInstanceQpsLimitResult).value

    return AwaitableGetInstanceQpsLimitResult(
        id=pulumi.get(__ret__, 'id'),
        instance_id=pulumi.get(__ret__, 'instance_id'),
        qps_datas=pulumi.get(__ret__, 'qps_datas'),
        result_output_file=pulumi.get(__ret__, 'result_output_file'),
        type=pulumi.get(__ret__, 'type'))


@_utilities.lift_output_func(get_instance_qps_limit)
def get_instance_qps_limit_output(instance_id: Optional[pulumi.Input[str]] = None,
                                  result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                                  type: Optional[pulumi.Input[Optional[str]]] = None,
                                  opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetInstanceQpsLimitResult]:
    """
    Use this data source to query detailed information of waf instance_qps_limit

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    example = tencentcloud.Waf.get_instance_qps_limit(instance_id="waf_2kxtlbky00b3b4qz")
    ```
    <!--End PulumiCodeChooser -->


    :param str instance_id: Unique ID of Instance.
    :param str result_output_file: Used to save results.
    :param str type: Instance type.
    """
    ...

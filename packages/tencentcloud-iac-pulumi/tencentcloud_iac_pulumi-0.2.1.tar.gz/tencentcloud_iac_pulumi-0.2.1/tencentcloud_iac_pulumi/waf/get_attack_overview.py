# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'GetAttackOverviewResult',
    'AwaitableGetAttackOverviewResult',
    'get_attack_overview',
    'get_attack_overview_output',
]

@pulumi.output_type
class GetAttackOverviewResult:
    """
    A collection of values returned by getAttackOverview.
    """
    def __init__(__self__, access_count=None, acl_count=None, api_assets_count=None, api_risk_event_count=None, appid=None, attack_count=None, bot_count=None, cc_count=None, domain=None, edition=None, from_time=None, id=None, instance_id=None, result_output_file=None, to_time=None):
        if access_count and not isinstance(access_count, int):
            raise TypeError("Expected argument 'access_count' to be a int")
        pulumi.set(__self__, "access_count", access_count)
        if acl_count and not isinstance(acl_count, int):
            raise TypeError("Expected argument 'acl_count' to be a int")
        pulumi.set(__self__, "acl_count", acl_count)
        if api_assets_count and not isinstance(api_assets_count, int):
            raise TypeError("Expected argument 'api_assets_count' to be a int")
        pulumi.set(__self__, "api_assets_count", api_assets_count)
        if api_risk_event_count and not isinstance(api_risk_event_count, int):
            raise TypeError("Expected argument 'api_risk_event_count' to be a int")
        pulumi.set(__self__, "api_risk_event_count", api_risk_event_count)
        if appid and not isinstance(appid, int):
            raise TypeError("Expected argument 'appid' to be a int")
        pulumi.set(__self__, "appid", appid)
        if attack_count and not isinstance(attack_count, int):
            raise TypeError("Expected argument 'attack_count' to be a int")
        pulumi.set(__self__, "attack_count", attack_count)
        if bot_count and not isinstance(bot_count, int):
            raise TypeError("Expected argument 'bot_count' to be a int")
        pulumi.set(__self__, "bot_count", bot_count)
        if cc_count and not isinstance(cc_count, int):
            raise TypeError("Expected argument 'cc_count' to be a int")
        pulumi.set(__self__, "cc_count", cc_count)
        if domain and not isinstance(domain, str):
            raise TypeError("Expected argument 'domain' to be a str")
        pulumi.set(__self__, "domain", domain)
        if edition and not isinstance(edition, str):
            raise TypeError("Expected argument 'edition' to be a str")
        pulumi.set(__self__, "edition", edition)
        if from_time and not isinstance(from_time, str):
            raise TypeError("Expected argument 'from_time' to be a str")
        pulumi.set(__self__, "from_time", from_time)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if instance_id and not isinstance(instance_id, str):
            raise TypeError("Expected argument 'instance_id' to be a str")
        pulumi.set(__self__, "instance_id", instance_id)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)
        if to_time and not isinstance(to_time, str):
            raise TypeError("Expected argument 'to_time' to be a str")
        pulumi.set(__self__, "to_time", to_time)

    @property
    @pulumi.getter(name="accessCount")
    def access_count(self) -> int:
        """
        Access count.
        """
        return pulumi.get(self, "access_count")

    @property
    @pulumi.getter(name="aclCount")
    def acl_count(self) -> int:
        """
        Access control count.
        """
        return pulumi.get(self, "acl_count")

    @property
    @pulumi.getter(name="apiAssetsCount")
    def api_assets_count(self) -> int:
        """
        Api asset count.
        """
        return pulumi.get(self, "api_assets_count")

    @property
    @pulumi.getter(name="apiRiskEventCount")
    def api_risk_event_count(self) -> int:
        """
        Number of API risk events.
        """
        return pulumi.get(self, "api_risk_event_count")

    @property
    @pulumi.getter
    def appid(self) -> Optional[int]:
        return pulumi.get(self, "appid")

    @property
    @pulumi.getter(name="attackCount")
    def attack_count(self) -> int:
        """
        Attack count.
        """
        return pulumi.get(self, "attack_count")

    @property
    @pulumi.getter(name="botCount")
    def bot_count(self) -> int:
        """
        Bot attack count.
        """
        return pulumi.get(self, "bot_count")

    @property
    @pulumi.getter(name="ccCount")
    def cc_count(self) -> int:
        """
        CC attack count.
        """
        return pulumi.get(self, "cc_count")

    @property
    @pulumi.getter
    def domain(self) -> Optional[str]:
        return pulumi.get(self, "domain")

    @property
    @pulumi.getter
    def edition(self) -> Optional[str]:
        return pulumi.get(self, "edition")

    @property
    @pulumi.getter(name="fromTime")
    def from_time(self) -> str:
        return pulumi.get(self, "from_time")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> Optional[str]:
        return pulumi.get(self, "instance_id")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")

    @property
    @pulumi.getter(name="toTime")
    def to_time(self) -> str:
        return pulumi.get(self, "to_time")


class AwaitableGetAttackOverviewResult(GetAttackOverviewResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetAttackOverviewResult(
            access_count=self.access_count,
            acl_count=self.acl_count,
            api_assets_count=self.api_assets_count,
            api_risk_event_count=self.api_risk_event_count,
            appid=self.appid,
            attack_count=self.attack_count,
            bot_count=self.bot_count,
            cc_count=self.cc_count,
            domain=self.domain,
            edition=self.edition,
            from_time=self.from_time,
            id=self.id,
            instance_id=self.instance_id,
            result_output_file=self.result_output_file,
            to_time=self.to_time)


def get_attack_overview(appid: Optional[int] = None,
                        domain: Optional[str] = None,
                        edition: Optional[str] = None,
                        from_time: Optional[str] = None,
                        instance_id: Optional[str] = None,
                        result_output_file: Optional[str] = None,
                        to_time: Optional[str] = None,
                        opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetAttackOverviewResult:
    """
    Use this data source to query detailed information of waf attack_overview

    ## Example Usage

    ### Basic Query

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    example = tencentcloud.Waf.get_attack_overview(from_time="2023-09-01 00:00:00",
        to_time="2023-09-07 00:00:00")
    ```
    <!--End PulumiCodeChooser -->

    ### Query by filter

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    example = tencentcloud.Waf.get_attack_overview(appid=1304251372,
        domain="test.com",
        edition="clb-waf",
        from_time="2023-09-01 00:00:00",
        instance_id="waf_2kxtlbky00b2v1fn",
        to_time="2023-09-07 00:00:00")
    ```
    <!--End PulumiCodeChooser -->


    :param int appid: App id.
    :param str domain: Domain.
    :param str edition: support `sparta-waf`, `clb-waf`, otherwise not filter.
    :param str from_time: Begin time.
    :param str instance_id: Waf instanceId, otherwise not filter.
    :param str result_output_file: Used to save results.
    :param str to_time: End time.
    """
    __args__ = dict()
    __args__['appid'] = appid
    __args__['domain'] = domain
    __args__['edition'] = edition
    __args__['fromTime'] = from_time
    __args__['instanceId'] = instance_id
    __args__['resultOutputFile'] = result_output_file
    __args__['toTime'] = to_time
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('tencentcloud:Waf/getAttackOverview:getAttackOverview', __args__, opts=opts, typ=GetAttackOverviewResult).value

    return AwaitableGetAttackOverviewResult(
        access_count=pulumi.get(__ret__, 'access_count'),
        acl_count=pulumi.get(__ret__, 'acl_count'),
        api_assets_count=pulumi.get(__ret__, 'api_assets_count'),
        api_risk_event_count=pulumi.get(__ret__, 'api_risk_event_count'),
        appid=pulumi.get(__ret__, 'appid'),
        attack_count=pulumi.get(__ret__, 'attack_count'),
        bot_count=pulumi.get(__ret__, 'bot_count'),
        cc_count=pulumi.get(__ret__, 'cc_count'),
        domain=pulumi.get(__ret__, 'domain'),
        edition=pulumi.get(__ret__, 'edition'),
        from_time=pulumi.get(__ret__, 'from_time'),
        id=pulumi.get(__ret__, 'id'),
        instance_id=pulumi.get(__ret__, 'instance_id'),
        result_output_file=pulumi.get(__ret__, 'result_output_file'),
        to_time=pulumi.get(__ret__, 'to_time'))


@_utilities.lift_output_func(get_attack_overview)
def get_attack_overview_output(appid: Optional[pulumi.Input[Optional[int]]] = None,
                               domain: Optional[pulumi.Input[Optional[str]]] = None,
                               edition: Optional[pulumi.Input[Optional[str]]] = None,
                               from_time: Optional[pulumi.Input[str]] = None,
                               instance_id: Optional[pulumi.Input[Optional[str]]] = None,
                               result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                               to_time: Optional[pulumi.Input[str]] = None,
                               opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetAttackOverviewResult]:
    """
    Use this data source to query detailed information of waf attack_overview

    ## Example Usage

    ### Basic Query

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    example = tencentcloud.Waf.get_attack_overview(from_time="2023-09-01 00:00:00",
        to_time="2023-09-07 00:00:00")
    ```
    <!--End PulumiCodeChooser -->

    ### Query by filter

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    example = tencentcloud.Waf.get_attack_overview(appid=1304251372,
        domain="test.com",
        edition="clb-waf",
        from_time="2023-09-01 00:00:00",
        instance_id="waf_2kxtlbky00b2v1fn",
        to_time="2023-09-07 00:00:00")
    ```
    <!--End PulumiCodeChooser -->


    :param int appid: App id.
    :param str domain: Domain.
    :param str edition: support `sparta-waf`, `clb-waf`, otherwise not filter.
    :param str from_time: Begin time.
    :param str instance_id: Waf instanceId, otherwise not filter.
    :param str result_output_file: Used to save results.
    :param str to_time: End time.
    """
    ...

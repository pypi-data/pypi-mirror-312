# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = ['SaasInstanceArgs', 'SaasInstance']

@pulumi.input_type
class SaasInstanceArgs:
    def __init__(__self__, *,
                 goods_category: pulumi.Input[str],
                 api_security: Optional[pulumi.Input[int]] = None,
                 auto_renew_flag: Optional[pulumi.Input[int]] = None,
                 bot_management: Optional[pulumi.Input[int]] = None,
                 elastic_mode: Optional[pulumi.Input[int]] = None,
                 instance_name: Optional[pulumi.Input[str]] = None,
                 qps_limit: Optional[pulumi.Input[int]] = None,
                 real_region: Optional[pulumi.Input[str]] = None,
                 time_span: Optional[pulumi.Input[int]] = None,
                 time_unit: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a SaasInstance resource.
        :param pulumi.Input[str] goods_category: Billing order parameters. support premium_saas, enterprise_saas, ultimate_saas.
        :param pulumi.Input[int] api_security: Whether to purchase API Security, 1: yes, 0: no. Default is 0.
        :param pulumi.Input[int] auto_renew_flag: Auto renew flag, 1: enable, 0: disable.
        :param pulumi.Input[int] bot_management: Whether to purchase Bot management, 1: yes, 0: no. Default is 0.
        :param pulumi.Input[int] elastic_mode: Is elastic billing enabled, 1: enable, 0: disable.
        :param pulumi.Input[str] instance_name: Waf instance name.
        :param pulumi.Input[int] qps_limit: QPS Limit, Minimum setting 10000. Only `elastic_mode` is 1, can be set.
        :param pulumi.Input[str] real_region: region. If Region is `ap-guangzhou`, support: gz, sh, bj, cd (Means: GuangZhou, ShangHai, BeiJing, ChengDu); If Region is `ap-seoul`, support: hk, sg, th, kr, in, de, ca, use, sao, usw, jkt (Means: HongKong, Singapore, Bandkok, Seoul, Mumbai, Frankfurt, Toronto, Virginia, SaoPaulo, SiliconValley, Jakarta).
        :param pulumi.Input[int] time_span: Time interval.
        :param pulumi.Input[str] time_unit: Time unit, support d, m, y. d: day, m: month, y: year.
        """
        pulumi.set(__self__, "goods_category", goods_category)
        if api_security is not None:
            pulumi.set(__self__, "api_security", api_security)
        if auto_renew_flag is not None:
            pulumi.set(__self__, "auto_renew_flag", auto_renew_flag)
        if bot_management is not None:
            pulumi.set(__self__, "bot_management", bot_management)
        if elastic_mode is not None:
            pulumi.set(__self__, "elastic_mode", elastic_mode)
        if instance_name is not None:
            pulumi.set(__self__, "instance_name", instance_name)
        if qps_limit is not None:
            pulumi.set(__self__, "qps_limit", qps_limit)
        if real_region is not None:
            pulumi.set(__self__, "real_region", real_region)
        if time_span is not None:
            pulumi.set(__self__, "time_span", time_span)
        if time_unit is not None:
            pulumi.set(__self__, "time_unit", time_unit)

    @property
    @pulumi.getter(name="goodsCategory")
    def goods_category(self) -> pulumi.Input[str]:
        """
        Billing order parameters. support premium_saas, enterprise_saas, ultimate_saas.
        """
        return pulumi.get(self, "goods_category")

    @goods_category.setter
    def goods_category(self, value: pulumi.Input[str]):
        pulumi.set(self, "goods_category", value)

    @property
    @pulumi.getter(name="apiSecurity")
    def api_security(self) -> Optional[pulumi.Input[int]]:
        """
        Whether to purchase API Security, 1: yes, 0: no. Default is 0.
        """
        return pulumi.get(self, "api_security")

    @api_security.setter
    def api_security(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "api_security", value)

    @property
    @pulumi.getter(name="autoRenewFlag")
    def auto_renew_flag(self) -> Optional[pulumi.Input[int]]:
        """
        Auto renew flag, 1: enable, 0: disable.
        """
        return pulumi.get(self, "auto_renew_flag")

    @auto_renew_flag.setter
    def auto_renew_flag(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "auto_renew_flag", value)

    @property
    @pulumi.getter(name="botManagement")
    def bot_management(self) -> Optional[pulumi.Input[int]]:
        """
        Whether to purchase Bot management, 1: yes, 0: no. Default is 0.
        """
        return pulumi.get(self, "bot_management")

    @bot_management.setter
    def bot_management(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "bot_management", value)

    @property
    @pulumi.getter(name="elasticMode")
    def elastic_mode(self) -> Optional[pulumi.Input[int]]:
        """
        Is elastic billing enabled, 1: enable, 0: disable.
        """
        return pulumi.get(self, "elastic_mode")

    @elastic_mode.setter
    def elastic_mode(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "elastic_mode", value)

    @property
    @pulumi.getter(name="instanceName")
    def instance_name(self) -> Optional[pulumi.Input[str]]:
        """
        Waf instance name.
        """
        return pulumi.get(self, "instance_name")

    @instance_name.setter
    def instance_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "instance_name", value)

    @property
    @pulumi.getter(name="qpsLimit")
    def qps_limit(self) -> Optional[pulumi.Input[int]]:
        """
        QPS Limit, Minimum setting 10000. Only `elastic_mode` is 1, can be set.
        """
        return pulumi.get(self, "qps_limit")

    @qps_limit.setter
    def qps_limit(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "qps_limit", value)

    @property
    @pulumi.getter(name="realRegion")
    def real_region(self) -> Optional[pulumi.Input[str]]:
        """
        region. If Region is `ap-guangzhou`, support: gz, sh, bj, cd (Means: GuangZhou, ShangHai, BeiJing, ChengDu); If Region is `ap-seoul`, support: hk, sg, th, kr, in, de, ca, use, sao, usw, jkt (Means: HongKong, Singapore, Bandkok, Seoul, Mumbai, Frankfurt, Toronto, Virginia, SaoPaulo, SiliconValley, Jakarta).
        """
        return pulumi.get(self, "real_region")

    @real_region.setter
    def real_region(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "real_region", value)

    @property
    @pulumi.getter(name="timeSpan")
    def time_span(self) -> Optional[pulumi.Input[int]]:
        """
        Time interval.
        """
        return pulumi.get(self, "time_span")

    @time_span.setter
    def time_span(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "time_span", value)

    @property
    @pulumi.getter(name="timeUnit")
    def time_unit(self) -> Optional[pulumi.Input[str]]:
        """
        Time unit, support d, m, y. d: day, m: month, y: year.
        """
        return pulumi.get(self, "time_unit")

    @time_unit.setter
    def time_unit(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "time_unit", value)


@pulumi.input_type
class _SaasInstanceState:
    def __init__(__self__, *,
                 api_security: Optional[pulumi.Input[int]] = None,
                 auto_renew_flag: Optional[pulumi.Input[int]] = None,
                 begin_time: Optional[pulumi.Input[str]] = None,
                 bot_management: Optional[pulumi.Input[int]] = None,
                 edition: Optional[pulumi.Input[str]] = None,
                 elastic_mode: Optional[pulumi.Input[int]] = None,
                 goods_category: Optional[pulumi.Input[str]] = None,
                 instance_id: Optional[pulumi.Input[str]] = None,
                 instance_name: Optional[pulumi.Input[str]] = None,
                 qps_limit: Optional[pulumi.Input[int]] = None,
                 real_region: Optional[pulumi.Input[str]] = None,
                 status: Optional[pulumi.Input[int]] = None,
                 time_span: Optional[pulumi.Input[int]] = None,
                 time_unit: Optional[pulumi.Input[str]] = None,
                 valid_time: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering SaasInstance resources.
        :param pulumi.Input[int] api_security: Whether to purchase API Security, 1: yes, 0: no. Default is 0.
        :param pulumi.Input[int] auto_renew_flag: Auto renew flag, 1: enable, 0: disable.
        :param pulumi.Input[str] begin_time: waf instance start time.
        :param pulumi.Input[int] bot_management: Whether to purchase Bot management, 1: yes, 0: no. Default is 0.
        :param pulumi.Input[str] edition: waf instance edition, clb or saas.
        :param pulumi.Input[int] elastic_mode: Is elastic billing enabled, 1: enable, 0: disable.
        :param pulumi.Input[str] goods_category: Billing order parameters. support premium_saas, enterprise_saas, ultimate_saas.
        :param pulumi.Input[str] instance_id: waf instance id.
        :param pulumi.Input[str] instance_name: Waf instance name.
        :param pulumi.Input[int] qps_limit: QPS Limit, Minimum setting 10000. Only `elastic_mode` is 1, can be set.
        :param pulumi.Input[str] real_region: region. If Region is `ap-guangzhou`, support: gz, sh, bj, cd (Means: GuangZhou, ShangHai, BeiJing, ChengDu); If Region is `ap-seoul`, support: hk, sg, th, kr, in, de, ca, use, sao, usw, jkt (Means: HongKong, Singapore, Bandkok, Seoul, Mumbai, Frankfurt, Toronto, Virginia, SaoPaulo, SiliconValley, Jakarta).
        :param pulumi.Input[int] status: waf instance status.
        :param pulumi.Input[int] time_span: Time interval.
        :param pulumi.Input[str] time_unit: Time unit, support d, m, y. d: day, m: month, y: year.
        :param pulumi.Input[str] valid_time: waf instance valid time.
        """
        if api_security is not None:
            pulumi.set(__self__, "api_security", api_security)
        if auto_renew_flag is not None:
            pulumi.set(__self__, "auto_renew_flag", auto_renew_flag)
        if begin_time is not None:
            pulumi.set(__self__, "begin_time", begin_time)
        if bot_management is not None:
            pulumi.set(__self__, "bot_management", bot_management)
        if edition is not None:
            pulumi.set(__self__, "edition", edition)
        if elastic_mode is not None:
            pulumi.set(__self__, "elastic_mode", elastic_mode)
        if goods_category is not None:
            pulumi.set(__self__, "goods_category", goods_category)
        if instance_id is not None:
            pulumi.set(__self__, "instance_id", instance_id)
        if instance_name is not None:
            pulumi.set(__self__, "instance_name", instance_name)
        if qps_limit is not None:
            pulumi.set(__self__, "qps_limit", qps_limit)
        if real_region is not None:
            pulumi.set(__self__, "real_region", real_region)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if time_span is not None:
            pulumi.set(__self__, "time_span", time_span)
        if time_unit is not None:
            pulumi.set(__self__, "time_unit", time_unit)
        if valid_time is not None:
            pulumi.set(__self__, "valid_time", valid_time)

    @property
    @pulumi.getter(name="apiSecurity")
    def api_security(self) -> Optional[pulumi.Input[int]]:
        """
        Whether to purchase API Security, 1: yes, 0: no. Default is 0.
        """
        return pulumi.get(self, "api_security")

    @api_security.setter
    def api_security(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "api_security", value)

    @property
    @pulumi.getter(name="autoRenewFlag")
    def auto_renew_flag(self) -> Optional[pulumi.Input[int]]:
        """
        Auto renew flag, 1: enable, 0: disable.
        """
        return pulumi.get(self, "auto_renew_flag")

    @auto_renew_flag.setter
    def auto_renew_flag(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "auto_renew_flag", value)

    @property
    @pulumi.getter(name="beginTime")
    def begin_time(self) -> Optional[pulumi.Input[str]]:
        """
        waf instance start time.
        """
        return pulumi.get(self, "begin_time")

    @begin_time.setter
    def begin_time(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "begin_time", value)

    @property
    @pulumi.getter(name="botManagement")
    def bot_management(self) -> Optional[pulumi.Input[int]]:
        """
        Whether to purchase Bot management, 1: yes, 0: no. Default is 0.
        """
        return pulumi.get(self, "bot_management")

    @bot_management.setter
    def bot_management(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "bot_management", value)

    @property
    @pulumi.getter
    def edition(self) -> Optional[pulumi.Input[str]]:
        """
        waf instance edition, clb or saas.
        """
        return pulumi.get(self, "edition")

    @edition.setter
    def edition(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "edition", value)

    @property
    @pulumi.getter(name="elasticMode")
    def elastic_mode(self) -> Optional[pulumi.Input[int]]:
        """
        Is elastic billing enabled, 1: enable, 0: disable.
        """
        return pulumi.get(self, "elastic_mode")

    @elastic_mode.setter
    def elastic_mode(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "elastic_mode", value)

    @property
    @pulumi.getter(name="goodsCategory")
    def goods_category(self) -> Optional[pulumi.Input[str]]:
        """
        Billing order parameters. support premium_saas, enterprise_saas, ultimate_saas.
        """
        return pulumi.get(self, "goods_category")

    @goods_category.setter
    def goods_category(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "goods_category", value)

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> Optional[pulumi.Input[str]]:
        """
        waf instance id.
        """
        return pulumi.get(self, "instance_id")

    @instance_id.setter
    def instance_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "instance_id", value)

    @property
    @pulumi.getter(name="instanceName")
    def instance_name(self) -> Optional[pulumi.Input[str]]:
        """
        Waf instance name.
        """
        return pulumi.get(self, "instance_name")

    @instance_name.setter
    def instance_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "instance_name", value)

    @property
    @pulumi.getter(name="qpsLimit")
    def qps_limit(self) -> Optional[pulumi.Input[int]]:
        """
        QPS Limit, Minimum setting 10000. Only `elastic_mode` is 1, can be set.
        """
        return pulumi.get(self, "qps_limit")

    @qps_limit.setter
    def qps_limit(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "qps_limit", value)

    @property
    @pulumi.getter(name="realRegion")
    def real_region(self) -> Optional[pulumi.Input[str]]:
        """
        region. If Region is `ap-guangzhou`, support: gz, sh, bj, cd (Means: GuangZhou, ShangHai, BeiJing, ChengDu); If Region is `ap-seoul`, support: hk, sg, th, kr, in, de, ca, use, sao, usw, jkt (Means: HongKong, Singapore, Bandkok, Seoul, Mumbai, Frankfurt, Toronto, Virginia, SaoPaulo, SiliconValley, Jakarta).
        """
        return pulumi.get(self, "real_region")

    @real_region.setter
    def real_region(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "real_region", value)

    @property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[int]]:
        """
        waf instance status.
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "status", value)

    @property
    @pulumi.getter(name="timeSpan")
    def time_span(self) -> Optional[pulumi.Input[int]]:
        """
        Time interval.
        """
        return pulumi.get(self, "time_span")

    @time_span.setter
    def time_span(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "time_span", value)

    @property
    @pulumi.getter(name="timeUnit")
    def time_unit(self) -> Optional[pulumi.Input[str]]:
        """
        Time unit, support d, m, y. d: day, m: month, y: year.
        """
        return pulumi.get(self, "time_unit")

    @time_unit.setter
    def time_unit(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "time_unit", value)

    @property
    @pulumi.getter(name="validTime")
    def valid_time(self) -> Optional[pulumi.Input[str]]:
        """
        waf instance valid time.
        """
        return pulumi.get(self, "valid_time")

    @valid_time.setter
    def valid_time(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "valid_time", value)


class SaasInstance(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 api_security: Optional[pulumi.Input[int]] = None,
                 auto_renew_flag: Optional[pulumi.Input[int]] = None,
                 bot_management: Optional[pulumi.Input[int]] = None,
                 elastic_mode: Optional[pulumi.Input[int]] = None,
                 goods_category: Optional[pulumi.Input[str]] = None,
                 instance_name: Optional[pulumi.Input[str]] = None,
                 qps_limit: Optional[pulumi.Input[int]] = None,
                 real_region: Optional[pulumi.Input[str]] = None,
                 time_span: Optional[pulumi.Input[int]] = None,
                 time_unit: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Provides a resource to create a waf saas instance

        > **NOTE:** Region only supports `ap-guangzhou` and `ap-seoul`.

        ## Example Usage

        ### Create a basic waf premium saas instance

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        example = tencentcloud.waf.SaasInstance("example",
            goods_category="premium_saas",
            instance_name="tf-example-saas-waf")
        ```
        <!--End PulumiCodeChooser -->

        ### Create a complete waf ultimate_saas instance

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        example = tencentcloud.waf.SaasInstance("example",
            api_security=1,
            auto_renew_flag=1,
            bot_management=1,
            elastic_mode=1,
            goods_category="ultimate_saas",
            instance_name="tf-example-saas-waf",
            real_region="gz",
            time_span=1,
            time_unit="m")
        ```
        <!--End PulumiCodeChooser -->

        ### Set waf ultimate_saas instance qps limit

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        example = tencentcloud.waf.SaasInstance("example",
            api_security=1,
            auto_renew_flag=1,
            bot_management=1,
            elastic_mode=1,
            goods_category="ultimate_saas",
            instance_name="tf-example-saas-waf",
            qps_limit=200000,
            real_region="gz",
            time_span=1,
            time_unit="m")
        ```
        <!--End PulumiCodeChooser -->

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[int] api_security: Whether to purchase API Security, 1: yes, 0: no. Default is 0.
        :param pulumi.Input[int] auto_renew_flag: Auto renew flag, 1: enable, 0: disable.
        :param pulumi.Input[int] bot_management: Whether to purchase Bot management, 1: yes, 0: no. Default is 0.
        :param pulumi.Input[int] elastic_mode: Is elastic billing enabled, 1: enable, 0: disable.
        :param pulumi.Input[str] goods_category: Billing order parameters. support premium_saas, enterprise_saas, ultimate_saas.
        :param pulumi.Input[str] instance_name: Waf instance name.
        :param pulumi.Input[int] qps_limit: QPS Limit, Minimum setting 10000. Only `elastic_mode` is 1, can be set.
        :param pulumi.Input[str] real_region: region. If Region is `ap-guangzhou`, support: gz, sh, bj, cd (Means: GuangZhou, ShangHai, BeiJing, ChengDu); If Region is `ap-seoul`, support: hk, sg, th, kr, in, de, ca, use, sao, usw, jkt (Means: HongKong, Singapore, Bandkok, Seoul, Mumbai, Frankfurt, Toronto, Virginia, SaoPaulo, SiliconValley, Jakarta).
        :param pulumi.Input[int] time_span: Time interval.
        :param pulumi.Input[str] time_unit: Time unit, support d, m, y. d: day, m: month, y: year.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: SaasInstanceArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Provides a resource to create a waf saas instance

        > **NOTE:** Region only supports `ap-guangzhou` and `ap-seoul`.

        ## Example Usage

        ### Create a basic waf premium saas instance

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        example = tencentcloud.waf.SaasInstance("example",
            goods_category="premium_saas",
            instance_name="tf-example-saas-waf")
        ```
        <!--End PulumiCodeChooser -->

        ### Create a complete waf ultimate_saas instance

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        example = tencentcloud.waf.SaasInstance("example",
            api_security=1,
            auto_renew_flag=1,
            bot_management=1,
            elastic_mode=1,
            goods_category="ultimate_saas",
            instance_name="tf-example-saas-waf",
            real_region="gz",
            time_span=1,
            time_unit="m")
        ```
        <!--End PulumiCodeChooser -->

        ### Set waf ultimate_saas instance qps limit

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        example = tencentcloud.waf.SaasInstance("example",
            api_security=1,
            auto_renew_flag=1,
            bot_management=1,
            elastic_mode=1,
            goods_category="ultimate_saas",
            instance_name="tf-example-saas-waf",
            qps_limit=200000,
            real_region="gz",
            time_span=1,
            time_unit="m")
        ```
        <!--End PulumiCodeChooser -->

        :param str resource_name: The name of the resource.
        :param SaasInstanceArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(SaasInstanceArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 api_security: Optional[pulumi.Input[int]] = None,
                 auto_renew_flag: Optional[pulumi.Input[int]] = None,
                 bot_management: Optional[pulumi.Input[int]] = None,
                 elastic_mode: Optional[pulumi.Input[int]] = None,
                 goods_category: Optional[pulumi.Input[str]] = None,
                 instance_name: Optional[pulumi.Input[str]] = None,
                 qps_limit: Optional[pulumi.Input[int]] = None,
                 real_region: Optional[pulumi.Input[str]] = None,
                 time_span: Optional[pulumi.Input[int]] = None,
                 time_unit: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = SaasInstanceArgs.__new__(SaasInstanceArgs)

            __props__.__dict__["api_security"] = api_security
            __props__.__dict__["auto_renew_flag"] = auto_renew_flag
            __props__.__dict__["bot_management"] = bot_management
            __props__.__dict__["elastic_mode"] = elastic_mode
            if goods_category is None and not opts.urn:
                raise TypeError("Missing required property 'goods_category'")
            __props__.__dict__["goods_category"] = goods_category
            __props__.__dict__["instance_name"] = instance_name
            __props__.__dict__["qps_limit"] = qps_limit
            __props__.__dict__["real_region"] = real_region
            __props__.__dict__["time_span"] = time_span
            __props__.__dict__["time_unit"] = time_unit
            __props__.__dict__["begin_time"] = None
            __props__.__dict__["edition"] = None
            __props__.__dict__["instance_id"] = None
            __props__.__dict__["status"] = None
            __props__.__dict__["valid_time"] = None
        super(SaasInstance, __self__).__init__(
            'tencentcloud:Waf/saasInstance:SaasInstance',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            api_security: Optional[pulumi.Input[int]] = None,
            auto_renew_flag: Optional[pulumi.Input[int]] = None,
            begin_time: Optional[pulumi.Input[str]] = None,
            bot_management: Optional[pulumi.Input[int]] = None,
            edition: Optional[pulumi.Input[str]] = None,
            elastic_mode: Optional[pulumi.Input[int]] = None,
            goods_category: Optional[pulumi.Input[str]] = None,
            instance_id: Optional[pulumi.Input[str]] = None,
            instance_name: Optional[pulumi.Input[str]] = None,
            qps_limit: Optional[pulumi.Input[int]] = None,
            real_region: Optional[pulumi.Input[str]] = None,
            status: Optional[pulumi.Input[int]] = None,
            time_span: Optional[pulumi.Input[int]] = None,
            time_unit: Optional[pulumi.Input[str]] = None,
            valid_time: Optional[pulumi.Input[str]] = None) -> 'SaasInstance':
        """
        Get an existing SaasInstance resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[int] api_security: Whether to purchase API Security, 1: yes, 0: no. Default is 0.
        :param pulumi.Input[int] auto_renew_flag: Auto renew flag, 1: enable, 0: disable.
        :param pulumi.Input[str] begin_time: waf instance start time.
        :param pulumi.Input[int] bot_management: Whether to purchase Bot management, 1: yes, 0: no. Default is 0.
        :param pulumi.Input[str] edition: waf instance edition, clb or saas.
        :param pulumi.Input[int] elastic_mode: Is elastic billing enabled, 1: enable, 0: disable.
        :param pulumi.Input[str] goods_category: Billing order parameters. support premium_saas, enterprise_saas, ultimate_saas.
        :param pulumi.Input[str] instance_id: waf instance id.
        :param pulumi.Input[str] instance_name: Waf instance name.
        :param pulumi.Input[int] qps_limit: QPS Limit, Minimum setting 10000. Only `elastic_mode` is 1, can be set.
        :param pulumi.Input[str] real_region: region. If Region is `ap-guangzhou`, support: gz, sh, bj, cd (Means: GuangZhou, ShangHai, BeiJing, ChengDu); If Region is `ap-seoul`, support: hk, sg, th, kr, in, de, ca, use, sao, usw, jkt (Means: HongKong, Singapore, Bandkok, Seoul, Mumbai, Frankfurt, Toronto, Virginia, SaoPaulo, SiliconValley, Jakarta).
        :param pulumi.Input[int] status: waf instance status.
        :param pulumi.Input[int] time_span: Time interval.
        :param pulumi.Input[str] time_unit: Time unit, support d, m, y. d: day, m: month, y: year.
        :param pulumi.Input[str] valid_time: waf instance valid time.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _SaasInstanceState.__new__(_SaasInstanceState)

        __props__.__dict__["api_security"] = api_security
        __props__.__dict__["auto_renew_flag"] = auto_renew_flag
        __props__.__dict__["begin_time"] = begin_time
        __props__.__dict__["bot_management"] = bot_management
        __props__.__dict__["edition"] = edition
        __props__.__dict__["elastic_mode"] = elastic_mode
        __props__.__dict__["goods_category"] = goods_category
        __props__.__dict__["instance_id"] = instance_id
        __props__.__dict__["instance_name"] = instance_name
        __props__.__dict__["qps_limit"] = qps_limit
        __props__.__dict__["real_region"] = real_region
        __props__.__dict__["status"] = status
        __props__.__dict__["time_span"] = time_span
        __props__.__dict__["time_unit"] = time_unit
        __props__.__dict__["valid_time"] = valid_time
        return SaasInstance(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="apiSecurity")
    def api_security(self) -> pulumi.Output[Optional[int]]:
        """
        Whether to purchase API Security, 1: yes, 0: no. Default is 0.
        """
        return pulumi.get(self, "api_security")

    @property
    @pulumi.getter(name="autoRenewFlag")
    def auto_renew_flag(self) -> pulumi.Output[Optional[int]]:
        """
        Auto renew flag, 1: enable, 0: disable.
        """
        return pulumi.get(self, "auto_renew_flag")

    @property
    @pulumi.getter(name="beginTime")
    def begin_time(self) -> pulumi.Output[str]:
        """
        waf instance start time.
        """
        return pulumi.get(self, "begin_time")

    @property
    @pulumi.getter(name="botManagement")
    def bot_management(self) -> pulumi.Output[Optional[int]]:
        """
        Whether to purchase Bot management, 1: yes, 0: no. Default is 0.
        """
        return pulumi.get(self, "bot_management")

    @property
    @pulumi.getter
    def edition(self) -> pulumi.Output[str]:
        """
        waf instance edition, clb or saas.
        """
        return pulumi.get(self, "edition")

    @property
    @pulumi.getter(name="elasticMode")
    def elastic_mode(self) -> pulumi.Output[Optional[int]]:
        """
        Is elastic billing enabled, 1: enable, 0: disable.
        """
        return pulumi.get(self, "elastic_mode")

    @property
    @pulumi.getter(name="goodsCategory")
    def goods_category(self) -> pulumi.Output[str]:
        """
        Billing order parameters. support premium_saas, enterprise_saas, ultimate_saas.
        """
        return pulumi.get(self, "goods_category")

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> pulumi.Output[str]:
        """
        waf instance id.
        """
        return pulumi.get(self, "instance_id")

    @property
    @pulumi.getter(name="instanceName")
    def instance_name(self) -> pulumi.Output[str]:
        """
        Waf instance name.
        """
        return pulumi.get(self, "instance_name")

    @property
    @pulumi.getter(name="qpsLimit")
    def qps_limit(self) -> pulumi.Output[int]:
        """
        QPS Limit, Minimum setting 10000. Only `elastic_mode` is 1, can be set.
        """
        return pulumi.get(self, "qps_limit")

    @property
    @pulumi.getter(name="realRegion")
    def real_region(self) -> pulumi.Output[Optional[str]]:
        """
        region. If Region is `ap-guangzhou`, support: gz, sh, bj, cd (Means: GuangZhou, ShangHai, BeiJing, ChengDu); If Region is `ap-seoul`, support: hk, sg, th, kr, in, de, ca, use, sao, usw, jkt (Means: HongKong, Singapore, Bandkok, Seoul, Mumbai, Frankfurt, Toronto, Virginia, SaoPaulo, SiliconValley, Jakarta).
        """
        return pulumi.get(self, "real_region")

    @property
    @pulumi.getter
    def status(self) -> pulumi.Output[int]:
        """
        waf instance status.
        """
        return pulumi.get(self, "status")

    @property
    @pulumi.getter(name="timeSpan")
    def time_span(self) -> pulumi.Output[Optional[int]]:
        """
        Time interval.
        """
        return pulumi.get(self, "time_span")

    @property
    @pulumi.getter(name="timeUnit")
    def time_unit(self) -> pulumi.Output[Optional[str]]:
        """
        Time unit, support d, m, y. d: day, m: month, y: year.
        """
        return pulumi.get(self, "time_unit")

    @property
    @pulumi.getter(name="validTime")
    def valid_time(self) -> pulumi.Output[str]:
        """
        waf instance valid time.
        """
        return pulumi.get(self, "valid_time")


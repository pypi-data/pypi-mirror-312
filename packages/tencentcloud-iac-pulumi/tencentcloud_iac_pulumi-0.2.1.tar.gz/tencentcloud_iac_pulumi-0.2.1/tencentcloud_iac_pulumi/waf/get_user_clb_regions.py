# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetUserClbRegionsResult',
    'AwaitableGetUserClbRegionsResult',
    'get_user_clb_regions',
    'get_user_clb_regions_output',
]

@pulumi.output_type
class GetUserClbRegionsResult:
    """
    A collection of values returned by getUserClbRegions.
    """
    def __init__(__self__, datas=None, id=None, result_output_file=None, rich_datas=None):
        if datas and not isinstance(datas, list):
            raise TypeError("Expected argument 'datas' to be a list")
        pulumi.set(__self__, "datas", datas)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)
        if rich_datas and not isinstance(rich_datas, list):
            raise TypeError("Expected argument 'rich_datas' to be a list")
        pulumi.set(__self__, "rich_datas", rich_datas)

    @property
    @pulumi.getter
    def datas(self) -> Sequence[str]:
        """
        Region list(ap-xxx format).
        """
        return pulumi.get(self, "datas")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")

    @property
    @pulumi.getter(name="richDatas")
    def rich_datas(self) -> Sequence['outputs.GetUserClbRegionsRichDataResult']:
        """
        Detail info for region.
        """
        return pulumi.get(self, "rich_datas")


class AwaitableGetUserClbRegionsResult(GetUserClbRegionsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetUserClbRegionsResult(
            datas=self.datas,
            id=self.id,
            result_output_file=self.result_output_file,
            rich_datas=self.rich_datas)


def get_user_clb_regions(result_output_file: Optional[str] = None,
                         opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetUserClbRegionsResult:
    """
    Use this data source to query detailed information of waf user_clb_regions

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    example = tencentcloud.Waf.get_user_clb_regions()
    ```
    <!--End PulumiCodeChooser -->


    :param str result_output_file: Used to save results.
    """
    __args__ = dict()
    __args__['resultOutputFile'] = result_output_file
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('tencentcloud:Waf/getUserClbRegions:getUserClbRegions', __args__, opts=opts, typ=GetUserClbRegionsResult).value

    return AwaitableGetUserClbRegionsResult(
        datas=pulumi.get(__ret__, 'datas'),
        id=pulumi.get(__ret__, 'id'),
        result_output_file=pulumi.get(__ret__, 'result_output_file'),
        rich_datas=pulumi.get(__ret__, 'rich_datas'))


@_utilities.lift_output_func(get_user_clb_regions)
def get_user_clb_regions_output(result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                                opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetUserClbRegionsResult]:
    """
    Use this data source to query detailed information of waf user_clb_regions

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    example = tencentcloud.Waf.get_user_clb_regions()
    ```
    <!--End PulumiCodeChooser -->


    :param str result_output_file: Used to save results.
    """
    ...

# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetInstancesResult',
    'AwaitableGetInstancesResult',
    'get_instances',
    'get_instances_output',
]

@pulumi.output_type
class GetInstancesResult:
    """
    A collection of values returned by getInstances.
    """
    def __init__(__self__, availability_zone=None, cdh_instance_lists=None, host_id=None, host_name=None, host_state=None, id=None, project_id=None, result_output_file=None):
        if availability_zone and not isinstance(availability_zone, str):
            raise TypeError("Expected argument 'availability_zone' to be a str")
        pulumi.set(__self__, "availability_zone", availability_zone)
        if cdh_instance_lists and not isinstance(cdh_instance_lists, list):
            raise TypeError("Expected argument 'cdh_instance_lists' to be a list")
        pulumi.set(__self__, "cdh_instance_lists", cdh_instance_lists)
        if host_id and not isinstance(host_id, str):
            raise TypeError("Expected argument 'host_id' to be a str")
        pulumi.set(__self__, "host_id", host_id)
        if host_name and not isinstance(host_name, str):
            raise TypeError("Expected argument 'host_name' to be a str")
        pulumi.set(__self__, "host_name", host_name)
        if host_state and not isinstance(host_state, str):
            raise TypeError("Expected argument 'host_state' to be a str")
        pulumi.set(__self__, "host_state", host_state)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if project_id and not isinstance(project_id, int):
            raise TypeError("Expected argument 'project_id' to be a int")
        pulumi.set(__self__, "project_id", project_id)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)

    @property
    @pulumi.getter(name="availabilityZone")
    def availability_zone(self) -> Optional[str]:
        """
        The available zone that the CDH instance locates at.
        """
        return pulumi.get(self, "availability_zone")

    @property
    @pulumi.getter(name="cdhInstanceLists")
    def cdh_instance_lists(self) -> Sequence['outputs.GetInstancesCdhInstanceListResult']:
        """
        An information list of cdh instance. Each element contains the following attributes:
        """
        return pulumi.get(self, "cdh_instance_lists")

    @property
    @pulumi.getter(name="hostId")
    def host_id(self) -> Optional[str]:
        """
        ID of the CDH instance.
        """
        return pulumi.get(self, "host_id")

    @property
    @pulumi.getter(name="hostName")
    def host_name(self) -> Optional[str]:
        """
        Name of the CDH instance.
        """
        return pulumi.get(self, "host_name")

    @property
    @pulumi.getter(name="hostState")
    def host_state(self) -> Optional[str]:
        """
        State of the CDH instance.
        """
        return pulumi.get(self, "host_state")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="projectId")
    def project_id(self) -> Optional[int]:
        """
        The project CDH belongs to.
        """
        return pulumi.get(self, "project_id")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")


class AwaitableGetInstancesResult(GetInstancesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetInstancesResult(
            availability_zone=self.availability_zone,
            cdh_instance_lists=self.cdh_instance_lists,
            host_id=self.host_id,
            host_name=self.host_name,
            host_state=self.host_state,
            id=self.id,
            project_id=self.project_id,
            result_output_file=self.result_output_file)


def get_instances(availability_zone: Optional[str] = None,
                  host_id: Optional[str] = None,
                  host_name: Optional[str] = None,
                  host_state: Optional[str] = None,
                  project_id: Optional[int] = None,
                  result_output_file: Optional[str] = None,
                  opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetInstancesResult:
    """
    Use this data source to query CDH instances.

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    list = tencentcloud.Cdh.get_instances(availability_zone="ap-guangzhou-3",
        host_id="host-d6s7i5q4",
        host_name="test",
        host_state="RUNNING",
        project_id=1154137)
    ```
    <!--End PulumiCodeChooser -->


    :param str availability_zone: The available zone that the CDH instance locates at.
    :param str host_id: ID of the CDH instances to be queried.
    :param str host_name: Name of the CDH instances to be queried.
    :param str host_state: State of the CDH instances to be queried. Valid values: `PENDING`, `LAUNCH_FAILURE`, `RUNNING`, `EXPIRED`.
    :param int project_id: The project CDH belongs to.
    :param str result_output_file: Used to save results.
    """
    __args__ = dict()
    __args__['availabilityZone'] = availability_zone
    __args__['hostId'] = host_id
    __args__['hostName'] = host_name
    __args__['hostState'] = host_state
    __args__['projectId'] = project_id
    __args__['resultOutputFile'] = result_output_file
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('tencentcloud:Cdh/getInstances:getInstances', __args__, opts=opts, typ=GetInstancesResult).value

    return AwaitableGetInstancesResult(
        availability_zone=pulumi.get(__ret__, 'availability_zone'),
        cdh_instance_lists=pulumi.get(__ret__, 'cdh_instance_lists'),
        host_id=pulumi.get(__ret__, 'host_id'),
        host_name=pulumi.get(__ret__, 'host_name'),
        host_state=pulumi.get(__ret__, 'host_state'),
        id=pulumi.get(__ret__, 'id'),
        project_id=pulumi.get(__ret__, 'project_id'),
        result_output_file=pulumi.get(__ret__, 'result_output_file'))


@_utilities.lift_output_func(get_instances)
def get_instances_output(availability_zone: Optional[pulumi.Input[Optional[str]]] = None,
                         host_id: Optional[pulumi.Input[Optional[str]]] = None,
                         host_name: Optional[pulumi.Input[Optional[str]]] = None,
                         host_state: Optional[pulumi.Input[Optional[str]]] = None,
                         project_id: Optional[pulumi.Input[Optional[int]]] = None,
                         result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                         opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetInstancesResult]:
    """
    Use this data source to query CDH instances.

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    list = tencentcloud.Cdh.get_instances(availability_zone="ap-guangzhou-3",
        host_id="host-d6s7i5q4",
        host_name="test",
        host_state="RUNNING",
        project_id=1154137)
    ```
    <!--End PulumiCodeChooser -->


    :param str availability_zone: The available zone that the CDH instance locates at.
    :param str host_id: ID of the CDH instances to be queried.
    :param str host_name: Name of the CDH instances to be queried.
    :param str host_state: State of the CDH instances to be queried. Valid values: `PENDING`, `LAUNCH_FAILURE`, `RUNNING`, `EXPIRED`.
    :param int project_id: The project CDH belongs to.
    :param str result_output_file: Used to save results.
    """
    ...

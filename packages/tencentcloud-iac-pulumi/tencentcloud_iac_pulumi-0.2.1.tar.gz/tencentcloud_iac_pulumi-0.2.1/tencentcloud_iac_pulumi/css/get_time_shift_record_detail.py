# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetTimeShiftRecordDetailResult',
    'AwaitableGetTimeShiftRecordDetailResult',
    'get_time_shift_record_detail',
    'get_time_shift_record_detail_output',
]

@pulumi.output_type
class GetTimeShiftRecordDetailResult:
    """
    A collection of values returned by getTimeShiftRecordDetail.
    """
    def __init__(__self__, app_name=None, domain=None, domain_group=None, end_time=None, id=None, record_lists=None, result_output_file=None, start_time=None, stream_name=None, trans_code_id=None):
        if app_name and not isinstance(app_name, str):
            raise TypeError("Expected argument 'app_name' to be a str")
        pulumi.set(__self__, "app_name", app_name)
        if domain and not isinstance(domain, str):
            raise TypeError("Expected argument 'domain' to be a str")
        pulumi.set(__self__, "domain", domain)
        if domain_group and not isinstance(domain_group, str):
            raise TypeError("Expected argument 'domain_group' to be a str")
        pulumi.set(__self__, "domain_group", domain_group)
        if end_time and not isinstance(end_time, int):
            raise TypeError("Expected argument 'end_time' to be a int")
        pulumi.set(__self__, "end_time", end_time)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if record_lists and not isinstance(record_lists, list):
            raise TypeError("Expected argument 'record_lists' to be a list")
        pulumi.set(__self__, "record_lists", record_lists)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)
        if start_time and not isinstance(start_time, int):
            raise TypeError("Expected argument 'start_time' to be a int")
        pulumi.set(__self__, "start_time", start_time)
        if stream_name and not isinstance(stream_name, str):
            raise TypeError("Expected argument 'stream_name' to be a str")
        pulumi.set(__self__, "stream_name", stream_name)
        if trans_code_id and not isinstance(trans_code_id, int):
            raise TypeError("Expected argument 'trans_code_id' to be a int")
        pulumi.set(__self__, "trans_code_id", trans_code_id)

    @property
    @pulumi.getter(name="appName")
    def app_name(self) -> str:
        return pulumi.get(self, "app_name")

    @property
    @pulumi.getter
    def domain(self) -> str:
        return pulumi.get(self, "domain")

    @property
    @pulumi.getter(name="domainGroup")
    def domain_group(self) -> Optional[str]:
        return pulumi.get(self, "domain_group")

    @property
    @pulumi.getter(name="endTime")
    def end_time(self) -> int:
        """
        The end time of the recording session is specified in Unix timestamp.
        """
        return pulumi.get(self, "end_time")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="recordLists")
    def record_lists(self) -> Sequence['outputs.GetTimeShiftRecordDetailRecordListResult']:
        """
        The array of time-shift recording sessions.Note: This field may return null, indicating that no valid value was found.
        """
        return pulumi.get(self, "record_lists")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")

    @property
    @pulumi.getter(name="startTime")
    def start_time(self) -> int:
        """
        The start time of the recording session is specified in Unix timestamp.
        """
        return pulumi.get(self, "start_time")

    @property
    @pulumi.getter(name="streamName")
    def stream_name(self) -> str:
        return pulumi.get(self, "stream_name")

    @property
    @pulumi.getter(name="transCodeId")
    def trans_code_id(self) -> Optional[int]:
        return pulumi.get(self, "trans_code_id")


class AwaitableGetTimeShiftRecordDetailResult(GetTimeShiftRecordDetailResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetTimeShiftRecordDetailResult(
            app_name=self.app_name,
            domain=self.domain,
            domain_group=self.domain_group,
            end_time=self.end_time,
            id=self.id,
            record_lists=self.record_lists,
            result_output_file=self.result_output_file,
            start_time=self.start_time,
            stream_name=self.stream_name,
            trans_code_id=self.trans_code_id)


def get_time_shift_record_detail(app_name: Optional[str] = None,
                                 domain: Optional[str] = None,
                                 domain_group: Optional[str] = None,
                                 end_time: Optional[int] = None,
                                 result_output_file: Optional[str] = None,
                                 start_time: Optional[int] = None,
                                 stream_name: Optional[str] = None,
                                 trans_code_id: Optional[int] = None,
                                 opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetTimeShiftRecordDetailResult:
    """
    Use this data source to query detailed information of css time_shift_record_detail

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    time_shift_record_detail = tencentcloud.Css.get_time_shift_record_detail(app_name="qqq",
        domain="177154.push.tlivecloud.com",
        domain_group="tf-test",
        end_time=1698820641,
        start_time=1698768000,
        stream_name="live",
        trans_code_id=0)
    ```
    <!--End PulumiCodeChooser -->


    :param str app_name: Push path.
    :param str domain: Push domain.
    :param str domain_group: The streaming domain belongs to a group. If there is no domain group or the domain group is an empty string, it can be left blank.
    :param int end_time: The ending time of the query range is specified in Unix timestamp.
    :param str result_output_file: Used to save results.
    :param int start_time: The starting time of the query range is specified in Unix timestamp.
    :param str stream_name: Stream name.
    :param int trans_code_id: The transcoding template ID can be left blank if it is 0.
    """
    __args__ = dict()
    __args__['appName'] = app_name
    __args__['domain'] = domain
    __args__['domainGroup'] = domain_group
    __args__['endTime'] = end_time
    __args__['resultOutputFile'] = result_output_file
    __args__['startTime'] = start_time
    __args__['streamName'] = stream_name
    __args__['transCodeId'] = trans_code_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('tencentcloud:Css/getTimeShiftRecordDetail:getTimeShiftRecordDetail', __args__, opts=opts, typ=GetTimeShiftRecordDetailResult).value

    return AwaitableGetTimeShiftRecordDetailResult(
        app_name=pulumi.get(__ret__, 'app_name'),
        domain=pulumi.get(__ret__, 'domain'),
        domain_group=pulumi.get(__ret__, 'domain_group'),
        end_time=pulumi.get(__ret__, 'end_time'),
        id=pulumi.get(__ret__, 'id'),
        record_lists=pulumi.get(__ret__, 'record_lists'),
        result_output_file=pulumi.get(__ret__, 'result_output_file'),
        start_time=pulumi.get(__ret__, 'start_time'),
        stream_name=pulumi.get(__ret__, 'stream_name'),
        trans_code_id=pulumi.get(__ret__, 'trans_code_id'))


@_utilities.lift_output_func(get_time_shift_record_detail)
def get_time_shift_record_detail_output(app_name: Optional[pulumi.Input[str]] = None,
                                        domain: Optional[pulumi.Input[str]] = None,
                                        domain_group: Optional[pulumi.Input[Optional[str]]] = None,
                                        end_time: Optional[pulumi.Input[int]] = None,
                                        result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                                        start_time: Optional[pulumi.Input[int]] = None,
                                        stream_name: Optional[pulumi.Input[str]] = None,
                                        trans_code_id: Optional[pulumi.Input[Optional[int]]] = None,
                                        opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetTimeShiftRecordDetailResult]:
    """
    Use this data source to query detailed information of css time_shift_record_detail

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    time_shift_record_detail = tencentcloud.Css.get_time_shift_record_detail(app_name="qqq",
        domain="177154.push.tlivecloud.com",
        domain_group="tf-test",
        end_time=1698820641,
        start_time=1698768000,
        stream_name="live",
        trans_code_id=0)
    ```
    <!--End PulumiCodeChooser -->


    :param str app_name: Push path.
    :param str domain: Push domain.
    :param str domain_group: The streaming domain belongs to a group. If there is no domain group or the domain group is an empty string, it can be left blank.
    :param int end_time: The ending time of the query range is specified in Unix timestamp.
    :param str result_output_file: Used to save results.
    :param int start_time: The starting time of the query range is specified in Unix timestamp.
    :param str stream_name: Stream name.
    :param int trans_code_id: The transcoding template ID can be left blank if it is 0.
    """
    ...

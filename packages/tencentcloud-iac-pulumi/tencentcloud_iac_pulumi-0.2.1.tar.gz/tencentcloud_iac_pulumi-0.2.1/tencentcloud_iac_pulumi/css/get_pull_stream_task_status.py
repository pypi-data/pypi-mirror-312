# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetPullStreamTaskStatusResult',
    'AwaitableGetPullStreamTaskStatusResult',
    'get_pull_stream_task_status',
    'get_pull_stream_task_status_output',
]

@pulumi.output_type
class GetPullStreamTaskStatusResult:
    """
    A collection of values returned by getPullStreamTaskStatus.
    """
    def __init__(__self__, id=None, result_output_file=None, task_id=None, task_status_infos=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)
        if task_id and not isinstance(task_id, str):
            raise TypeError("Expected argument 'task_id' to be a str")
        pulumi.set(__self__, "task_id", task_id)
        if task_status_infos and not isinstance(task_status_infos, list):
            raise TypeError("Expected argument 'task_status_infos' to be a list")
        pulumi.set(__self__, "task_status_infos", task_status_infos)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")

    @property
    @pulumi.getter(name="taskId")
    def task_id(self) -> str:
        return pulumi.get(self, "task_id")

    @property
    @pulumi.getter(name="taskStatusInfos")
    def task_status_infos(self) -> Sequence['outputs.GetPullStreamTaskStatusTaskStatusInfoResult']:
        """
        Task status info.
        """
        return pulumi.get(self, "task_status_infos")


class AwaitableGetPullStreamTaskStatusResult(GetPullStreamTaskStatusResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetPullStreamTaskStatusResult(
            id=self.id,
            result_output_file=self.result_output_file,
            task_id=self.task_id,
            task_status_infos=self.task_status_infos)


def get_pull_stream_task_status(result_output_file: Optional[str] = None,
                                task_id: Optional[str] = None,
                                opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetPullStreamTaskStatusResult:
    """
    Use this data source to query detailed information of css pull_stream_task_status

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    pull_stream_task_status = tencentcloud.Css.get_pull_stream_task_status(task_id="63229997")
    ```
    <!--End PulumiCodeChooser -->


    :param str result_output_file: Used to save results.
    :param str task_id: Task ID.
    """
    __args__ = dict()
    __args__['resultOutputFile'] = result_output_file
    __args__['taskId'] = task_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('tencentcloud:Css/getPullStreamTaskStatus:getPullStreamTaskStatus', __args__, opts=opts, typ=GetPullStreamTaskStatusResult).value

    return AwaitableGetPullStreamTaskStatusResult(
        id=pulumi.get(__ret__, 'id'),
        result_output_file=pulumi.get(__ret__, 'result_output_file'),
        task_id=pulumi.get(__ret__, 'task_id'),
        task_status_infos=pulumi.get(__ret__, 'task_status_infos'))


@_utilities.lift_output_func(get_pull_stream_task_status)
def get_pull_stream_task_status_output(result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                                       task_id: Optional[pulumi.Input[str]] = None,
                                       opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetPullStreamTaskStatusResult]:
    """
    Use this data source to query detailed information of css pull_stream_task_status

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    pull_stream_task_status = tencentcloud.Css.get_pull_stream_task_status(task_id="63229997")
    ```
    <!--End PulumiCodeChooser -->


    :param str result_output_file: Used to save results.
    :param str task_id: Task ID.
    """
    ...

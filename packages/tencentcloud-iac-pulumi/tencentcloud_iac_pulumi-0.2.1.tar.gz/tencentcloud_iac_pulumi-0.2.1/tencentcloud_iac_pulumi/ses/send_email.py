# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['SendEmailArgs', 'SendEmail']

@pulumi.input_type
class SendEmailArgs:
    def __init__(__self__, *,
                 destinations: pulumi.Input[Sequence[pulumi.Input[str]]],
                 from_email_address: pulumi.Input[str],
                 subject: pulumi.Input[str],
                 attachments: Optional[pulumi.Input[Sequence[pulumi.Input['SendEmailAttachmentArgs']]]] = None,
                 bccs: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 ccs: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 reply_to_addresses: Optional[pulumi.Input[str]] = None,
                 template: Optional[pulumi.Input['SendEmailTemplateArgs']] = None,
                 trigger_type: Optional[pulumi.Input[int]] = None,
                 unsubscribe: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a SendEmail resource.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] destinations: Recipient email addresses. You can send an email to up to 50 recipients at a time. Note: the email content will display all recipient addresses. To send one-to-one emails to several recipients, please call the API multiple times to send the emails.
        :param pulumi.Input[str] from_email_address: Sender address. Enter a sender address, for example, noreply@mail.qcloud.com.To display the sender name, enter the address in the following format:Sender.
        :param pulumi.Input[str] subject: Email subject.
        :param pulumi.Input[Sequence[pulumi.Input['SendEmailAttachmentArgs']]] attachments: Parameters for the attachments to be sent. The TencentCloud API supports a request packet of up to 8 MB in size,and the size of the attachment content will increase by 1.5 times after Base64 encoding. Therefore,you need to keep the total size of all attachments below 4 MB. If the entire request exceeds 8 MB,the API will return an error.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] bccs: The email address of the cc recipient can support up to 20 cc recipients.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] ccs: Cc recipient email address, up to 20 people can be copied.
        :param pulumi.Input[str] reply_to_addresses: Reply-to address. You can enter a valid personal email address that can receive emails. If this parameter is left empty, reply emails will fail to be sent.
        :param pulumi.Input['SendEmailTemplateArgs'] template: Template parameters for template-based sending. As Simple has been disused, Template is required.
        :param pulumi.Input[int] trigger_type: Email triggering type. 0 (default): non-trigger-based, suitable for marketing emails and non-immediate emails;1: trigger-based, suitable for immediate emails such as emails containing verification codes.If the size of an email exceeds a specified value,the system will automatically choose the non-trigger-based type.
        :param pulumi.Input[str] unsubscribe: Unsubscribe link option.  0: Do not add unsubscribe link; 1: English 2: Simplified Chinese;  3: Traditional Chinese; 4: Spanish; 5: French;  6: German; 7: Japanese; 8: Korean;  9: Arabic; 10: Thai.
        """
        pulumi.set(__self__, "destinations", destinations)
        pulumi.set(__self__, "from_email_address", from_email_address)
        pulumi.set(__self__, "subject", subject)
        if attachments is not None:
            pulumi.set(__self__, "attachments", attachments)
        if bccs is not None:
            pulumi.set(__self__, "bccs", bccs)
        if ccs is not None:
            pulumi.set(__self__, "ccs", ccs)
        if reply_to_addresses is not None:
            pulumi.set(__self__, "reply_to_addresses", reply_to_addresses)
        if template is not None:
            pulumi.set(__self__, "template", template)
        if trigger_type is not None:
            pulumi.set(__self__, "trigger_type", trigger_type)
        if unsubscribe is not None:
            pulumi.set(__self__, "unsubscribe", unsubscribe)

    @property
    @pulumi.getter
    def destinations(self) -> pulumi.Input[Sequence[pulumi.Input[str]]]:
        """
        Recipient email addresses. You can send an email to up to 50 recipients at a time. Note: the email content will display all recipient addresses. To send one-to-one emails to several recipients, please call the API multiple times to send the emails.
        """
        return pulumi.get(self, "destinations")

    @destinations.setter
    def destinations(self, value: pulumi.Input[Sequence[pulumi.Input[str]]]):
        pulumi.set(self, "destinations", value)

    @property
    @pulumi.getter(name="fromEmailAddress")
    def from_email_address(self) -> pulumi.Input[str]:
        """
        Sender address. Enter a sender address, for example, noreply@mail.qcloud.com.To display the sender name, enter the address in the following format:Sender.
        """
        return pulumi.get(self, "from_email_address")

    @from_email_address.setter
    def from_email_address(self, value: pulumi.Input[str]):
        pulumi.set(self, "from_email_address", value)

    @property
    @pulumi.getter
    def subject(self) -> pulumi.Input[str]:
        """
        Email subject.
        """
        return pulumi.get(self, "subject")

    @subject.setter
    def subject(self, value: pulumi.Input[str]):
        pulumi.set(self, "subject", value)

    @property
    @pulumi.getter
    def attachments(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['SendEmailAttachmentArgs']]]]:
        """
        Parameters for the attachments to be sent. The TencentCloud API supports a request packet of up to 8 MB in size,and the size of the attachment content will increase by 1.5 times after Base64 encoding. Therefore,you need to keep the total size of all attachments below 4 MB. If the entire request exceeds 8 MB,the API will return an error.
        """
        return pulumi.get(self, "attachments")

    @attachments.setter
    def attachments(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['SendEmailAttachmentArgs']]]]):
        pulumi.set(self, "attachments", value)

    @property
    @pulumi.getter
    def bccs(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        The email address of the cc recipient can support up to 20 cc recipients.
        """
        return pulumi.get(self, "bccs")

    @bccs.setter
    def bccs(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "bccs", value)

    @property
    @pulumi.getter
    def ccs(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Cc recipient email address, up to 20 people can be copied.
        """
        return pulumi.get(self, "ccs")

    @ccs.setter
    def ccs(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "ccs", value)

    @property
    @pulumi.getter(name="replyToAddresses")
    def reply_to_addresses(self) -> Optional[pulumi.Input[str]]:
        """
        Reply-to address. You can enter a valid personal email address that can receive emails. If this parameter is left empty, reply emails will fail to be sent.
        """
        return pulumi.get(self, "reply_to_addresses")

    @reply_to_addresses.setter
    def reply_to_addresses(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "reply_to_addresses", value)

    @property
    @pulumi.getter
    def template(self) -> Optional[pulumi.Input['SendEmailTemplateArgs']]:
        """
        Template parameters for template-based sending. As Simple has been disused, Template is required.
        """
        return pulumi.get(self, "template")

    @template.setter
    def template(self, value: Optional[pulumi.Input['SendEmailTemplateArgs']]):
        pulumi.set(self, "template", value)

    @property
    @pulumi.getter(name="triggerType")
    def trigger_type(self) -> Optional[pulumi.Input[int]]:
        """
        Email triggering type. 0 (default): non-trigger-based, suitable for marketing emails and non-immediate emails;1: trigger-based, suitable for immediate emails such as emails containing verification codes.If the size of an email exceeds a specified value,the system will automatically choose the non-trigger-based type.
        """
        return pulumi.get(self, "trigger_type")

    @trigger_type.setter
    def trigger_type(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "trigger_type", value)

    @property
    @pulumi.getter
    def unsubscribe(self) -> Optional[pulumi.Input[str]]:
        """
        Unsubscribe link option.  0: Do not add unsubscribe link; 1: English 2: Simplified Chinese;  3: Traditional Chinese; 4: Spanish; 5: French;  6: German; 7: Japanese; 8: Korean;  9: Arabic; 10: Thai.
        """
        return pulumi.get(self, "unsubscribe")

    @unsubscribe.setter
    def unsubscribe(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "unsubscribe", value)


@pulumi.input_type
class _SendEmailState:
    def __init__(__self__, *,
                 attachments: Optional[pulumi.Input[Sequence[pulumi.Input['SendEmailAttachmentArgs']]]] = None,
                 bccs: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 ccs: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 destinations: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 from_email_address: Optional[pulumi.Input[str]] = None,
                 reply_to_addresses: Optional[pulumi.Input[str]] = None,
                 subject: Optional[pulumi.Input[str]] = None,
                 template: Optional[pulumi.Input['SendEmailTemplateArgs']] = None,
                 trigger_type: Optional[pulumi.Input[int]] = None,
                 unsubscribe: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering SendEmail resources.
        :param pulumi.Input[Sequence[pulumi.Input['SendEmailAttachmentArgs']]] attachments: Parameters for the attachments to be sent. The TencentCloud API supports a request packet of up to 8 MB in size,and the size of the attachment content will increase by 1.5 times after Base64 encoding. Therefore,you need to keep the total size of all attachments below 4 MB. If the entire request exceeds 8 MB,the API will return an error.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] bccs: The email address of the cc recipient can support up to 20 cc recipients.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] ccs: Cc recipient email address, up to 20 people can be copied.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] destinations: Recipient email addresses. You can send an email to up to 50 recipients at a time. Note: the email content will display all recipient addresses. To send one-to-one emails to several recipients, please call the API multiple times to send the emails.
        :param pulumi.Input[str] from_email_address: Sender address. Enter a sender address, for example, noreply@mail.qcloud.com.To display the sender name, enter the address in the following format:Sender.
        :param pulumi.Input[str] reply_to_addresses: Reply-to address. You can enter a valid personal email address that can receive emails. If this parameter is left empty, reply emails will fail to be sent.
        :param pulumi.Input[str] subject: Email subject.
        :param pulumi.Input['SendEmailTemplateArgs'] template: Template parameters for template-based sending. As Simple has been disused, Template is required.
        :param pulumi.Input[int] trigger_type: Email triggering type. 0 (default): non-trigger-based, suitable for marketing emails and non-immediate emails;1: trigger-based, suitable for immediate emails such as emails containing verification codes.If the size of an email exceeds a specified value,the system will automatically choose the non-trigger-based type.
        :param pulumi.Input[str] unsubscribe: Unsubscribe link option.  0: Do not add unsubscribe link; 1: English 2: Simplified Chinese;  3: Traditional Chinese; 4: Spanish; 5: French;  6: German; 7: Japanese; 8: Korean;  9: Arabic; 10: Thai.
        """
        if attachments is not None:
            pulumi.set(__self__, "attachments", attachments)
        if bccs is not None:
            pulumi.set(__self__, "bccs", bccs)
        if ccs is not None:
            pulumi.set(__self__, "ccs", ccs)
        if destinations is not None:
            pulumi.set(__self__, "destinations", destinations)
        if from_email_address is not None:
            pulumi.set(__self__, "from_email_address", from_email_address)
        if reply_to_addresses is not None:
            pulumi.set(__self__, "reply_to_addresses", reply_to_addresses)
        if subject is not None:
            pulumi.set(__self__, "subject", subject)
        if template is not None:
            pulumi.set(__self__, "template", template)
        if trigger_type is not None:
            pulumi.set(__self__, "trigger_type", trigger_type)
        if unsubscribe is not None:
            pulumi.set(__self__, "unsubscribe", unsubscribe)

    @property
    @pulumi.getter
    def attachments(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['SendEmailAttachmentArgs']]]]:
        """
        Parameters for the attachments to be sent. The TencentCloud API supports a request packet of up to 8 MB in size,and the size of the attachment content will increase by 1.5 times after Base64 encoding. Therefore,you need to keep the total size of all attachments below 4 MB. If the entire request exceeds 8 MB,the API will return an error.
        """
        return pulumi.get(self, "attachments")

    @attachments.setter
    def attachments(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['SendEmailAttachmentArgs']]]]):
        pulumi.set(self, "attachments", value)

    @property
    @pulumi.getter
    def bccs(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        The email address of the cc recipient can support up to 20 cc recipients.
        """
        return pulumi.get(self, "bccs")

    @bccs.setter
    def bccs(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "bccs", value)

    @property
    @pulumi.getter
    def ccs(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Cc recipient email address, up to 20 people can be copied.
        """
        return pulumi.get(self, "ccs")

    @ccs.setter
    def ccs(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "ccs", value)

    @property
    @pulumi.getter
    def destinations(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Recipient email addresses. You can send an email to up to 50 recipients at a time. Note: the email content will display all recipient addresses. To send one-to-one emails to several recipients, please call the API multiple times to send the emails.
        """
        return pulumi.get(self, "destinations")

    @destinations.setter
    def destinations(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "destinations", value)

    @property
    @pulumi.getter(name="fromEmailAddress")
    def from_email_address(self) -> Optional[pulumi.Input[str]]:
        """
        Sender address. Enter a sender address, for example, noreply@mail.qcloud.com.To display the sender name, enter the address in the following format:Sender.
        """
        return pulumi.get(self, "from_email_address")

    @from_email_address.setter
    def from_email_address(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "from_email_address", value)

    @property
    @pulumi.getter(name="replyToAddresses")
    def reply_to_addresses(self) -> Optional[pulumi.Input[str]]:
        """
        Reply-to address. You can enter a valid personal email address that can receive emails. If this parameter is left empty, reply emails will fail to be sent.
        """
        return pulumi.get(self, "reply_to_addresses")

    @reply_to_addresses.setter
    def reply_to_addresses(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "reply_to_addresses", value)

    @property
    @pulumi.getter
    def subject(self) -> Optional[pulumi.Input[str]]:
        """
        Email subject.
        """
        return pulumi.get(self, "subject")

    @subject.setter
    def subject(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "subject", value)

    @property
    @pulumi.getter
    def template(self) -> Optional[pulumi.Input['SendEmailTemplateArgs']]:
        """
        Template parameters for template-based sending. As Simple has been disused, Template is required.
        """
        return pulumi.get(self, "template")

    @template.setter
    def template(self, value: Optional[pulumi.Input['SendEmailTemplateArgs']]):
        pulumi.set(self, "template", value)

    @property
    @pulumi.getter(name="triggerType")
    def trigger_type(self) -> Optional[pulumi.Input[int]]:
        """
        Email triggering type. 0 (default): non-trigger-based, suitable for marketing emails and non-immediate emails;1: trigger-based, suitable for immediate emails such as emails containing verification codes.If the size of an email exceeds a specified value,the system will automatically choose the non-trigger-based type.
        """
        return pulumi.get(self, "trigger_type")

    @trigger_type.setter
    def trigger_type(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "trigger_type", value)

    @property
    @pulumi.getter
    def unsubscribe(self) -> Optional[pulumi.Input[str]]:
        """
        Unsubscribe link option.  0: Do not add unsubscribe link; 1: English 2: Simplified Chinese;  3: Traditional Chinese; 4: Spanish; 5: French;  6: German; 7: Japanese; 8: Korean;  9: Arabic; 10: Thai.
        """
        return pulumi.get(self, "unsubscribe")

    @unsubscribe.setter
    def unsubscribe(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "unsubscribe", value)


class SendEmail(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 attachments: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['SendEmailAttachmentArgs']]]]] = None,
                 bccs: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 ccs: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 destinations: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 from_email_address: Optional[pulumi.Input[str]] = None,
                 reply_to_addresses: Optional[pulumi.Input[str]] = None,
                 subject: Optional[pulumi.Input[str]] = None,
                 template: Optional[pulumi.Input[pulumi.InputType['SendEmailTemplateArgs']]] = None,
                 trigger_type: Optional[pulumi.Input[int]] = None,
                 unsubscribe: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Provides a resource to create a ses send_email

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        send_email = tencentcloud.ses.SendEmail("sendEmail",
            destinations=["1055482519@qq.com"],
            from_email_address="aaa@iac-tf.cloud",
            reply_to_addresses="aaa@iac-tf.cloud",
            subject="test subject",
            template=tencentcloud.ses.SendEmailTemplateArgs(
                template_data="{\\"name\\":\\"xxx\\",\\"age\\":\\"xx\\"}",
                template_id=99629,
            ),
            trigger_type=1,
            unsubscribe="1")
        ```
        <!--End PulumiCodeChooser -->

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['SendEmailAttachmentArgs']]]] attachments: Parameters for the attachments to be sent. The TencentCloud API supports a request packet of up to 8 MB in size,and the size of the attachment content will increase by 1.5 times after Base64 encoding. Therefore,you need to keep the total size of all attachments below 4 MB. If the entire request exceeds 8 MB,the API will return an error.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] bccs: The email address of the cc recipient can support up to 20 cc recipients.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] ccs: Cc recipient email address, up to 20 people can be copied.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] destinations: Recipient email addresses. You can send an email to up to 50 recipients at a time. Note: the email content will display all recipient addresses. To send one-to-one emails to several recipients, please call the API multiple times to send the emails.
        :param pulumi.Input[str] from_email_address: Sender address. Enter a sender address, for example, noreply@mail.qcloud.com.To display the sender name, enter the address in the following format:Sender.
        :param pulumi.Input[str] reply_to_addresses: Reply-to address. You can enter a valid personal email address that can receive emails. If this parameter is left empty, reply emails will fail to be sent.
        :param pulumi.Input[str] subject: Email subject.
        :param pulumi.Input[pulumi.InputType['SendEmailTemplateArgs']] template: Template parameters for template-based sending. As Simple has been disused, Template is required.
        :param pulumi.Input[int] trigger_type: Email triggering type. 0 (default): non-trigger-based, suitable for marketing emails and non-immediate emails;1: trigger-based, suitable for immediate emails such as emails containing verification codes.If the size of an email exceeds a specified value,the system will automatically choose the non-trigger-based type.
        :param pulumi.Input[str] unsubscribe: Unsubscribe link option.  0: Do not add unsubscribe link; 1: English 2: Simplified Chinese;  3: Traditional Chinese; 4: Spanish; 5: French;  6: German; 7: Japanese; 8: Korean;  9: Arabic; 10: Thai.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: SendEmailArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Provides a resource to create a ses send_email

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        send_email = tencentcloud.ses.SendEmail("sendEmail",
            destinations=["1055482519@qq.com"],
            from_email_address="aaa@iac-tf.cloud",
            reply_to_addresses="aaa@iac-tf.cloud",
            subject="test subject",
            template=tencentcloud.ses.SendEmailTemplateArgs(
                template_data="{\\"name\\":\\"xxx\\",\\"age\\":\\"xx\\"}",
                template_id=99629,
            ),
            trigger_type=1,
            unsubscribe="1")
        ```
        <!--End PulumiCodeChooser -->

        :param str resource_name: The name of the resource.
        :param SendEmailArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(SendEmailArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 attachments: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['SendEmailAttachmentArgs']]]]] = None,
                 bccs: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 ccs: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 destinations: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 from_email_address: Optional[pulumi.Input[str]] = None,
                 reply_to_addresses: Optional[pulumi.Input[str]] = None,
                 subject: Optional[pulumi.Input[str]] = None,
                 template: Optional[pulumi.Input[pulumi.InputType['SendEmailTemplateArgs']]] = None,
                 trigger_type: Optional[pulumi.Input[int]] = None,
                 unsubscribe: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = SendEmailArgs.__new__(SendEmailArgs)

            __props__.__dict__["attachments"] = attachments
            __props__.__dict__["bccs"] = bccs
            __props__.__dict__["ccs"] = ccs
            if destinations is None and not opts.urn:
                raise TypeError("Missing required property 'destinations'")
            __props__.__dict__["destinations"] = destinations
            if from_email_address is None and not opts.urn:
                raise TypeError("Missing required property 'from_email_address'")
            __props__.__dict__["from_email_address"] = from_email_address
            __props__.__dict__["reply_to_addresses"] = reply_to_addresses
            if subject is None and not opts.urn:
                raise TypeError("Missing required property 'subject'")
            __props__.__dict__["subject"] = subject
            __props__.__dict__["template"] = template
            __props__.__dict__["trigger_type"] = trigger_type
            __props__.__dict__["unsubscribe"] = unsubscribe
        super(SendEmail, __self__).__init__(
            'tencentcloud:Ses/sendEmail:SendEmail',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            attachments: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['SendEmailAttachmentArgs']]]]] = None,
            bccs: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            ccs: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            destinations: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            from_email_address: Optional[pulumi.Input[str]] = None,
            reply_to_addresses: Optional[pulumi.Input[str]] = None,
            subject: Optional[pulumi.Input[str]] = None,
            template: Optional[pulumi.Input[pulumi.InputType['SendEmailTemplateArgs']]] = None,
            trigger_type: Optional[pulumi.Input[int]] = None,
            unsubscribe: Optional[pulumi.Input[str]] = None) -> 'SendEmail':
        """
        Get an existing SendEmail resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['SendEmailAttachmentArgs']]]] attachments: Parameters for the attachments to be sent. The TencentCloud API supports a request packet of up to 8 MB in size,and the size of the attachment content will increase by 1.5 times after Base64 encoding. Therefore,you need to keep the total size of all attachments below 4 MB. If the entire request exceeds 8 MB,the API will return an error.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] bccs: The email address of the cc recipient can support up to 20 cc recipients.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] ccs: Cc recipient email address, up to 20 people can be copied.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] destinations: Recipient email addresses. You can send an email to up to 50 recipients at a time. Note: the email content will display all recipient addresses. To send one-to-one emails to several recipients, please call the API multiple times to send the emails.
        :param pulumi.Input[str] from_email_address: Sender address. Enter a sender address, for example, noreply@mail.qcloud.com.To display the sender name, enter the address in the following format:Sender.
        :param pulumi.Input[str] reply_to_addresses: Reply-to address. You can enter a valid personal email address that can receive emails. If this parameter is left empty, reply emails will fail to be sent.
        :param pulumi.Input[str] subject: Email subject.
        :param pulumi.Input[pulumi.InputType['SendEmailTemplateArgs']] template: Template parameters for template-based sending. As Simple has been disused, Template is required.
        :param pulumi.Input[int] trigger_type: Email triggering type. 0 (default): non-trigger-based, suitable for marketing emails and non-immediate emails;1: trigger-based, suitable for immediate emails such as emails containing verification codes.If the size of an email exceeds a specified value,the system will automatically choose the non-trigger-based type.
        :param pulumi.Input[str] unsubscribe: Unsubscribe link option.  0: Do not add unsubscribe link; 1: English 2: Simplified Chinese;  3: Traditional Chinese; 4: Spanish; 5: French;  6: German; 7: Japanese; 8: Korean;  9: Arabic; 10: Thai.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _SendEmailState.__new__(_SendEmailState)

        __props__.__dict__["attachments"] = attachments
        __props__.__dict__["bccs"] = bccs
        __props__.__dict__["ccs"] = ccs
        __props__.__dict__["destinations"] = destinations
        __props__.__dict__["from_email_address"] = from_email_address
        __props__.__dict__["reply_to_addresses"] = reply_to_addresses
        __props__.__dict__["subject"] = subject
        __props__.__dict__["template"] = template
        __props__.__dict__["trigger_type"] = trigger_type
        __props__.__dict__["unsubscribe"] = unsubscribe
        return SendEmail(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter
    def attachments(self) -> pulumi.Output[Optional[Sequence['outputs.SendEmailAttachment']]]:
        """
        Parameters for the attachments to be sent. The TencentCloud API supports a request packet of up to 8 MB in size,and the size of the attachment content will increase by 1.5 times after Base64 encoding. Therefore,you need to keep the total size of all attachments below 4 MB. If the entire request exceeds 8 MB,the API will return an error.
        """
        return pulumi.get(self, "attachments")

    @property
    @pulumi.getter
    def bccs(self) -> pulumi.Output[Optional[Sequence[str]]]:
        """
        The email address of the cc recipient can support up to 20 cc recipients.
        """
        return pulumi.get(self, "bccs")

    @property
    @pulumi.getter
    def ccs(self) -> pulumi.Output[Optional[Sequence[str]]]:
        """
        Cc recipient email address, up to 20 people can be copied.
        """
        return pulumi.get(self, "ccs")

    @property
    @pulumi.getter
    def destinations(self) -> pulumi.Output[Sequence[str]]:
        """
        Recipient email addresses. You can send an email to up to 50 recipients at a time. Note: the email content will display all recipient addresses. To send one-to-one emails to several recipients, please call the API multiple times to send the emails.
        """
        return pulumi.get(self, "destinations")

    @property
    @pulumi.getter(name="fromEmailAddress")
    def from_email_address(self) -> pulumi.Output[str]:
        """
        Sender address. Enter a sender address, for example, noreply@mail.qcloud.com.To display the sender name, enter the address in the following format:Sender.
        """
        return pulumi.get(self, "from_email_address")

    @property
    @pulumi.getter(name="replyToAddresses")
    def reply_to_addresses(self) -> pulumi.Output[Optional[str]]:
        """
        Reply-to address. You can enter a valid personal email address that can receive emails. If this parameter is left empty, reply emails will fail to be sent.
        """
        return pulumi.get(self, "reply_to_addresses")

    @property
    @pulumi.getter
    def subject(self) -> pulumi.Output[str]:
        """
        Email subject.
        """
        return pulumi.get(self, "subject")

    @property
    @pulumi.getter
    def template(self) -> pulumi.Output[Optional['outputs.SendEmailTemplate']]:
        """
        Template parameters for template-based sending. As Simple has been disused, Template is required.
        """
        return pulumi.get(self, "template")

    @property
    @pulumi.getter(name="triggerType")
    def trigger_type(self) -> pulumi.Output[Optional[int]]:
        """
        Email triggering type. 0 (default): non-trigger-based, suitable for marketing emails and non-immediate emails;1: trigger-based, suitable for immediate emails such as emails containing verification codes.If the size of an email exceeds a specified value,the system will automatically choose the non-trigger-based type.
        """
        return pulumi.get(self, "trigger_type")

    @property
    @pulumi.getter
    def unsubscribe(self) -> pulumi.Output[Optional[str]]:
        """
        Unsubscribe link option.  0: Do not add unsubscribe link; 1: English 2: Simplified Chinese;  3: Traditional Chinese; 4: Spanish; 5: French;  6: German; 7: Japanese; 8: Korean;  9: Arabic; 10: Thai.
        """
        return pulumi.get(self, "unsubscribe")


# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetEmailIdentitiesResult',
    'AwaitableGetEmailIdentitiesResult',
    'get_email_identities',
    'get_email_identities_output',
]

@pulumi.output_type
class GetEmailIdentitiesResult:
    """
    A collection of values returned by getEmailIdentities.
    """
    def __init__(__self__, email_identities=None, id=None, max_daily_quota=None, max_reputation_level=None, result_output_file=None):
        if email_identities and not isinstance(email_identities, list):
            raise TypeError("Expected argument 'email_identities' to be a list")
        pulumi.set(__self__, "email_identities", email_identities)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if max_daily_quota and not isinstance(max_daily_quota, int):
            raise TypeError("Expected argument 'max_daily_quota' to be a int")
        pulumi.set(__self__, "max_daily_quota", max_daily_quota)
        if max_reputation_level and not isinstance(max_reputation_level, int):
            raise TypeError("Expected argument 'max_reputation_level' to be a int")
        pulumi.set(__self__, "max_reputation_level", max_reputation_level)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)

    @property
    @pulumi.getter(name="emailIdentities")
    def email_identities(self) -> Sequence['outputs.GetEmailIdentitiesEmailIdentityResult']:
        """
        Sending domain name list.
        """
        return pulumi.get(self, "email_identities")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="maxDailyQuota")
    def max_daily_quota(self) -> int:
        """
        Maximum daily sending volume for a single domain name.
        """
        return pulumi.get(self, "max_daily_quota")

    @property
    @pulumi.getter(name="maxReputationLevel")
    def max_reputation_level(self) -> int:
        """
        Maximum credit rating.
        """
        return pulumi.get(self, "max_reputation_level")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")


class AwaitableGetEmailIdentitiesResult(GetEmailIdentitiesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetEmailIdentitiesResult(
            email_identities=self.email_identities,
            id=self.id,
            max_daily_quota=self.max_daily_quota,
            max_reputation_level=self.max_reputation_level,
            result_output_file=self.result_output_file)


def get_email_identities(result_output_file: Optional[str] = None,
                         opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetEmailIdentitiesResult:
    """
    Use this data source to query detailed information of ses email_identities

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    email_identities = tencentcloud.Ses.get_email_identities()
    ```
    <!--End PulumiCodeChooser -->


    :param str result_output_file: Used to save results.
    """
    __args__ = dict()
    __args__['resultOutputFile'] = result_output_file
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('tencentcloud:Ses/getEmailIdentities:getEmailIdentities', __args__, opts=opts, typ=GetEmailIdentitiesResult).value

    return AwaitableGetEmailIdentitiesResult(
        email_identities=pulumi.get(__ret__, 'email_identities'),
        id=pulumi.get(__ret__, 'id'),
        max_daily_quota=pulumi.get(__ret__, 'max_daily_quota'),
        max_reputation_level=pulumi.get(__ret__, 'max_reputation_level'),
        result_output_file=pulumi.get(__ret__, 'result_output_file'))


@_utilities.lift_output_func(get_email_identities)
def get_email_identities_output(result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                                opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetEmailIdentitiesResult]:
    """
    Use this data source to query detailed information of ses email_identities

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    email_identities = tencentcloud.Ses.get_email_identities()
    ```
    <!--End PulumiCodeChooser -->


    :param str result_output_file: Used to save results.
    """
    ...

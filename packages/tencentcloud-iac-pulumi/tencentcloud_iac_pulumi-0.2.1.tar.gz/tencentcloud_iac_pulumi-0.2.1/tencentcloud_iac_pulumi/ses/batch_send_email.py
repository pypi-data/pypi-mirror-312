# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['BatchSendEmailArgs', 'BatchSendEmail']

@pulumi.input_type
class BatchSendEmailArgs:
    def __init__(__self__, *,
                 from_email_address: pulumi.Input[str],
                 receiver_id: pulumi.Input[int],
                 subject: pulumi.Input[str],
                 task_type: pulumi.Input[int],
                 ad_location: Optional[pulumi.Input[int]] = None,
                 attachments: Optional[pulumi.Input[Sequence[pulumi.Input['BatchSendEmailAttachmentArgs']]]] = None,
                 cycle_param: Optional[pulumi.Input['BatchSendEmailCycleParamArgs']] = None,
                 reply_to_addresses: Optional[pulumi.Input[str]] = None,
                 template: Optional[pulumi.Input['BatchSendEmailTemplateArgs']] = None,
                 timed_param: Optional[pulumi.Input['BatchSendEmailTimedParamArgs']] = None,
                 unsubscribe: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a BatchSendEmail resource.
        :param pulumi.Input[str] from_email_address: Sender address. Enter a sender address such as noreply@mail.qcloud.com. To display the sender name, enter the address in the following format:sender &amp;amp;lt;email address&amp;amp;gt;. For example:Tencent Cloud team &amp;amp;lt;noreply@mail.qcloud.com&amp;amp;gt;.
        :param pulumi.Input[int] receiver_id: Recipient group ID.
        :param pulumi.Input[str] subject: Email subject.
        :param pulumi.Input[int] task_type: Task type. 1: immediate; 2: scheduled; 3: recurring.
        :param pulumi.Input[int] ad_location: Whether to add an ad tag. 0: Add no tag; 1: Add before the subject; 2: Add after the subject.
        :param pulumi.Input[Sequence[pulumi.Input['BatchSendEmailAttachmentArgs']]] attachments: Attachment parameters to set when you need to send attachments. This parameter is currently unavailable.
        :param pulumi.Input['BatchSendEmailCycleParamArgs'] cycle_param: Parameter required for a recurring sending task.
        :param pulumi.Input[str] reply_to_addresses: Reply-to address. You can enter a valid personal email address that can receive emails. If this parameter is left empty, reply emails will fail to be sent.
        :param pulumi.Input['BatchSendEmailTemplateArgs'] template: Template when emails are sent using a template.
        :param pulumi.Input['BatchSendEmailTimedParamArgs'] timed_param: Parameter required for a scheduled sending task.
        :param pulumi.Input[str] unsubscribe: Unsubscribe link option.  0: Do not add unsubscribe link; 1: English 2: Simplified Chinese;  3: Traditional Chinese; 4: Spanish; 5: French;  6: German; 7: Japanese; 8: Korean;  9: Arabic; 10: Thai.
        """
        pulumi.set(__self__, "from_email_address", from_email_address)
        pulumi.set(__self__, "receiver_id", receiver_id)
        pulumi.set(__self__, "subject", subject)
        pulumi.set(__self__, "task_type", task_type)
        if ad_location is not None:
            pulumi.set(__self__, "ad_location", ad_location)
        if attachments is not None:
            pulumi.set(__self__, "attachments", attachments)
        if cycle_param is not None:
            pulumi.set(__self__, "cycle_param", cycle_param)
        if reply_to_addresses is not None:
            pulumi.set(__self__, "reply_to_addresses", reply_to_addresses)
        if template is not None:
            pulumi.set(__self__, "template", template)
        if timed_param is not None:
            pulumi.set(__self__, "timed_param", timed_param)
        if unsubscribe is not None:
            pulumi.set(__self__, "unsubscribe", unsubscribe)

    @property
    @pulumi.getter(name="fromEmailAddress")
    def from_email_address(self) -> pulumi.Input[str]:
        """
        Sender address. Enter a sender address such as noreply@mail.qcloud.com. To display the sender name, enter the address in the following format:sender &amp;amp;lt;email address&amp;amp;gt;. For example:Tencent Cloud team &amp;amp;lt;noreply@mail.qcloud.com&amp;amp;gt;.
        """
        return pulumi.get(self, "from_email_address")

    @from_email_address.setter
    def from_email_address(self, value: pulumi.Input[str]):
        pulumi.set(self, "from_email_address", value)

    @property
    @pulumi.getter(name="receiverId")
    def receiver_id(self) -> pulumi.Input[int]:
        """
        Recipient group ID.
        """
        return pulumi.get(self, "receiver_id")

    @receiver_id.setter
    def receiver_id(self, value: pulumi.Input[int]):
        pulumi.set(self, "receiver_id", value)

    @property
    @pulumi.getter
    def subject(self) -> pulumi.Input[str]:
        """
        Email subject.
        """
        return pulumi.get(self, "subject")

    @subject.setter
    def subject(self, value: pulumi.Input[str]):
        pulumi.set(self, "subject", value)

    @property
    @pulumi.getter(name="taskType")
    def task_type(self) -> pulumi.Input[int]:
        """
        Task type. 1: immediate; 2: scheduled; 3: recurring.
        """
        return pulumi.get(self, "task_type")

    @task_type.setter
    def task_type(self, value: pulumi.Input[int]):
        pulumi.set(self, "task_type", value)

    @property
    @pulumi.getter(name="adLocation")
    def ad_location(self) -> Optional[pulumi.Input[int]]:
        """
        Whether to add an ad tag. 0: Add no tag; 1: Add before the subject; 2: Add after the subject.
        """
        return pulumi.get(self, "ad_location")

    @ad_location.setter
    def ad_location(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "ad_location", value)

    @property
    @pulumi.getter
    def attachments(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['BatchSendEmailAttachmentArgs']]]]:
        """
        Attachment parameters to set when you need to send attachments. This parameter is currently unavailable.
        """
        return pulumi.get(self, "attachments")

    @attachments.setter
    def attachments(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['BatchSendEmailAttachmentArgs']]]]):
        pulumi.set(self, "attachments", value)

    @property
    @pulumi.getter(name="cycleParam")
    def cycle_param(self) -> Optional[pulumi.Input['BatchSendEmailCycleParamArgs']]:
        """
        Parameter required for a recurring sending task.
        """
        return pulumi.get(self, "cycle_param")

    @cycle_param.setter
    def cycle_param(self, value: Optional[pulumi.Input['BatchSendEmailCycleParamArgs']]):
        pulumi.set(self, "cycle_param", value)

    @property
    @pulumi.getter(name="replyToAddresses")
    def reply_to_addresses(self) -> Optional[pulumi.Input[str]]:
        """
        Reply-to address. You can enter a valid personal email address that can receive emails. If this parameter is left empty, reply emails will fail to be sent.
        """
        return pulumi.get(self, "reply_to_addresses")

    @reply_to_addresses.setter
    def reply_to_addresses(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "reply_to_addresses", value)

    @property
    @pulumi.getter
    def template(self) -> Optional[pulumi.Input['BatchSendEmailTemplateArgs']]:
        """
        Template when emails are sent using a template.
        """
        return pulumi.get(self, "template")

    @template.setter
    def template(self, value: Optional[pulumi.Input['BatchSendEmailTemplateArgs']]):
        pulumi.set(self, "template", value)

    @property
    @pulumi.getter(name="timedParam")
    def timed_param(self) -> Optional[pulumi.Input['BatchSendEmailTimedParamArgs']]:
        """
        Parameter required for a scheduled sending task.
        """
        return pulumi.get(self, "timed_param")

    @timed_param.setter
    def timed_param(self, value: Optional[pulumi.Input['BatchSendEmailTimedParamArgs']]):
        pulumi.set(self, "timed_param", value)

    @property
    @pulumi.getter
    def unsubscribe(self) -> Optional[pulumi.Input[str]]:
        """
        Unsubscribe link option.  0: Do not add unsubscribe link; 1: English 2: Simplified Chinese;  3: Traditional Chinese; 4: Spanish; 5: French;  6: German; 7: Japanese; 8: Korean;  9: Arabic; 10: Thai.
        """
        return pulumi.get(self, "unsubscribe")

    @unsubscribe.setter
    def unsubscribe(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "unsubscribe", value)


@pulumi.input_type
class _BatchSendEmailState:
    def __init__(__self__, *,
                 ad_location: Optional[pulumi.Input[int]] = None,
                 attachments: Optional[pulumi.Input[Sequence[pulumi.Input['BatchSendEmailAttachmentArgs']]]] = None,
                 cycle_param: Optional[pulumi.Input['BatchSendEmailCycleParamArgs']] = None,
                 from_email_address: Optional[pulumi.Input[str]] = None,
                 receiver_id: Optional[pulumi.Input[int]] = None,
                 reply_to_addresses: Optional[pulumi.Input[str]] = None,
                 subject: Optional[pulumi.Input[str]] = None,
                 task_type: Optional[pulumi.Input[int]] = None,
                 template: Optional[pulumi.Input['BatchSendEmailTemplateArgs']] = None,
                 timed_param: Optional[pulumi.Input['BatchSendEmailTimedParamArgs']] = None,
                 unsubscribe: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering BatchSendEmail resources.
        :param pulumi.Input[int] ad_location: Whether to add an ad tag. 0: Add no tag; 1: Add before the subject; 2: Add after the subject.
        :param pulumi.Input[Sequence[pulumi.Input['BatchSendEmailAttachmentArgs']]] attachments: Attachment parameters to set when you need to send attachments. This parameter is currently unavailable.
        :param pulumi.Input['BatchSendEmailCycleParamArgs'] cycle_param: Parameter required for a recurring sending task.
        :param pulumi.Input[str] from_email_address: Sender address. Enter a sender address such as noreply@mail.qcloud.com. To display the sender name, enter the address in the following format:sender &amp;amp;lt;email address&amp;amp;gt;. For example:Tencent Cloud team &amp;amp;lt;noreply@mail.qcloud.com&amp;amp;gt;.
        :param pulumi.Input[int] receiver_id: Recipient group ID.
        :param pulumi.Input[str] reply_to_addresses: Reply-to address. You can enter a valid personal email address that can receive emails. If this parameter is left empty, reply emails will fail to be sent.
        :param pulumi.Input[str] subject: Email subject.
        :param pulumi.Input[int] task_type: Task type. 1: immediate; 2: scheduled; 3: recurring.
        :param pulumi.Input['BatchSendEmailTemplateArgs'] template: Template when emails are sent using a template.
        :param pulumi.Input['BatchSendEmailTimedParamArgs'] timed_param: Parameter required for a scheduled sending task.
        :param pulumi.Input[str] unsubscribe: Unsubscribe link option.  0: Do not add unsubscribe link; 1: English 2: Simplified Chinese;  3: Traditional Chinese; 4: Spanish; 5: French;  6: German; 7: Japanese; 8: Korean;  9: Arabic; 10: Thai.
        """
        if ad_location is not None:
            pulumi.set(__self__, "ad_location", ad_location)
        if attachments is not None:
            pulumi.set(__self__, "attachments", attachments)
        if cycle_param is not None:
            pulumi.set(__self__, "cycle_param", cycle_param)
        if from_email_address is not None:
            pulumi.set(__self__, "from_email_address", from_email_address)
        if receiver_id is not None:
            pulumi.set(__self__, "receiver_id", receiver_id)
        if reply_to_addresses is not None:
            pulumi.set(__self__, "reply_to_addresses", reply_to_addresses)
        if subject is not None:
            pulumi.set(__self__, "subject", subject)
        if task_type is not None:
            pulumi.set(__self__, "task_type", task_type)
        if template is not None:
            pulumi.set(__self__, "template", template)
        if timed_param is not None:
            pulumi.set(__self__, "timed_param", timed_param)
        if unsubscribe is not None:
            pulumi.set(__self__, "unsubscribe", unsubscribe)

    @property
    @pulumi.getter(name="adLocation")
    def ad_location(self) -> Optional[pulumi.Input[int]]:
        """
        Whether to add an ad tag. 0: Add no tag; 1: Add before the subject; 2: Add after the subject.
        """
        return pulumi.get(self, "ad_location")

    @ad_location.setter
    def ad_location(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "ad_location", value)

    @property
    @pulumi.getter
    def attachments(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['BatchSendEmailAttachmentArgs']]]]:
        """
        Attachment parameters to set when you need to send attachments. This parameter is currently unavailable.
        """
        return pulumi.get(self, "attachments")

    @attachments.setter
    def attachments(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['BatchSendEmailAttachmentArgs']]]]):
        pulumi.set(self, "attachments", value)

    @property
    @pulumi.getter(name="cycleParam")
    def cycle_param(self) -> Optional[pulumi.Input['BatchSendEmailCycleParamArgs']]:
        """
        Parameter required for a recurring sending task.
        """
        return pulumi.get(self, "cycle_param")

    @cycle_param.setter
    def cycle_param(self, value: Optional[pulumi.Input['BatchSendEmailCycleParamArgs']]):
        pulumi.set(self, "cycle_param", value)

    @property
    @pulumi.getter(name="fromEmailAddress")
    def from_email_address(self) -> Optional[pulumi.Input[str]]:
        """
        Sender address. Enter a sender address such as noreply@mail.qcloud.com. To display the sender name, enter the address in the following format:sender &amp;amp;lt;email address&amp;amp;gt;. For example:Tencent Cloud team &amp;amp;lt;noreply@mail.qcloud.com&amp;amp;gt;.
        """
        return pulumi.get(self, "from_email_address")

    @from_email_address.setter
    def from_email_address(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "from_email_address", value)

    @property
    @pulumi.getter(name="receiverId")
    def receiver_id(self) -> Optional[pulumi.Input[int]]:
        """
        Recipient group ID.
        """
        return pulumi.get(self, "receiver_id")

    @receiver_id.setter
    def receiver_id(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "receiver_id", value)

    @property
    @pulumi.getter(name="replyToAddresses")
    def reply_to_addresses(self) -> Optional[pulumi.Input[str]]:
        """
        Reply-to address. You can enter a valid personal email address that can receive emails. If this parameter is left empty, reply emails will fail to be sent.
        """
        return pulumi.get(self, "reply_to_addresses")

    @reply_to_addresses.setter
    def reply_to_addresses(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "reply_to_addresses", value)

    @property
    @pulumi.getter
    def subject(self) -> Optional[pulumi.Input[str]]:
        """
        Email subject.
        """
        return pulumi.get(self, "subject")

    @subject.setter
    def subject(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "subject", value)

    @property
    @pulumi.getter(name="taskType")
    def task_type(self) -> Optional[pulumi.Input[int]]:
        """
        Task type. 1: immediate; 2: scheduled; 3: recurring.
        """
        return pulumi.get(self, "task_type")

    @task_type.setter
    def task_type(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "task_type", value)

    @property
    @pulumi.getter
    def template(self) -> Optional[pulumi.Input['BatchSendEmailTemplateArgs']]:
        """
        Template when emails are sent using a template.
        """
        return pulumi.get(self, "template")

    @template.setter
    def template(self, value: Optional[pulumi.Input['BatchSendEmailTemplateArgs']]):
        pulumi.set(self, "template", value)

    @property
    @pulumi.getter(name="timedParam")
    def timed_param(self) -> Optional[pulumi.Input['BatchSendEmailTimedParamArgs']]:
        """
        Parameter required for a scheduled sending task.
        """
        return pulumi.get(self, "timed_param")

    @timed_param.setter
    def timed_param(self, value: Optional[pulumi.Input['BatchSendEmailTimedParamArgs']]):
        pulumi.set(self, "timed_param", value)

    @property
    @pulumi.getter
    def unsubscribe(self) -> Optional[pulumi.Input[str]]:
        """
        Unsubscribe link option.  0: Do not add unsubscribe link; 1: English 2: Simplified Chinese;  3: Traditional Chinese; 4: Spanish; 5: French;  6: German; 7: Japanese; 8: Korean;  9: Arabic; 10: Thai.
        """
        return pulumi.get(self, "unsubscribe")

    @unsubscribe.setter
    def unsubscribe(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "unsubscribe", value)


class BatchSendEmail(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 ad_location: Optional[pulumi.Input[int]] = None,
                 attachments: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['BatchSendEmailAttachmentArgs']]]]] = None,
                 cycle_param: Optional[pulumi.Input[pulumi.InputType['BatchSendEmailCycleParamArgs']]] = None,
                 from_email_address: Optional[pulumi.Input[str]] = None,
                 receiver_id: Optional[pulumi.Input[int]] = None,
                 reply_to_addresses: Optional[pulumi.Input[str]] = None,
                 subject: Optional[pulumi.Input[str]] = None,
                 task_type: Optional[pulumi.Input[int]] = None,
                 template: Optional[pulumi.Input[pulumi.InputType['BatchSendEmailTemplateArgs']]] = None,
                 timed_param: Optional[pulumi.Input[pulumi.InputType['BatchSendEmailTimedParamArgs']]] = None,
                 unsubscribe: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Provides a resource to create a ses batch_send_email

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        batch_send_email = tencentcloud.ses.BatchSendEmail("batchSendEmail",
            ad_location=0,
            cycle_param=tencentcloud.ses.BatchSendEmailCycleParamArgs(
                begin_time="2023-09-07 15:10:00",
                interval_time=1,
            ),
            from_email_address="aaa@iac-tf.cloud",
            receiver_id=1063742,
            reply_to_addresses="reply@mail.qcloud.com",
            subject="terraform test",
            task_type=1,
            template=tencentcloud.ses.BatchSendEmailTemplateArgs(
                template_data="{\\"name\\":\\"xxx\\",\\"age\\":\\"xx\\"}",
                template_id=99629,
            ),
            timed_param=tencentcloud.ses.BatchSendEmailTimedParamArgs(
                begin_time="2023-09-07 15:20:00",
            ),
            unsubscribe="0")
        ```
        <!--End PulumiCodeChooser -->

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[int] ad_location: Whether to add an ad tag. 0: Add no tag; 1: Add before the subject; 2: Add after the subject.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['BatchSendEmailAttachmentArgs']]]] attachments: Attachment parameters to set when you need to send attachments. This parameter is currently unavailable.
        :param pulumi.Input[pulumi.InputType['BatchSendEmailCycleParamArgs']] cycle_param: Parameter required for a recurring sending task.
        :param pulumi.Input[str] from_email_address: Sender address. Enter a sender address such as noreply@mail.qcloud.com. To display the sender name, enter the address in the following format:sender &amp;amp;lt;email address&amp;amp;gt;. For example:Tencent Cloud team &amp;amp;lt;noreply@mail.qcloud.com&amp;amp;gt;.
        :param pulumi.Input[int] receiver_id: Recipient group ID.
        :param pulumi.Input[str] reply_to_addresses: Reply-to address. You can enter a valid personal email address that can receive emails. If this parameter is left empty, reply emails will fail to be sent.
        :param pulumi.Input[str] subject: Email subject.
        :param pulumi.Input[int] task_type: Task type. 1: immediate; 2: scheduled; 3: recurring.
        :param pulumi.Input[pulumi.InputType['BatchSendEmailTemplateArgs']] template: Template when emails are sent using a template.
        :param pulumi.Input[pulumi.InputType['BatchSendEmailTimedParamArgs']] timed_param: Parameter required for a scheduled sending task.
        :param pulumi.Input[str] unsubscribe: Unsubscribe link option.  0: Do not add unsubscribe link; 1: English 2: Simplified Chinese;  3: Traditional Chinese; 4: Spanish; 5: French;  6: German; 7: Japanese; 8: Korean;  9: Arabic; 10: Thai.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: BatchSendEmailArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Provides a resource to create a ses batch_send_email

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        batch_send_email = tencentcloud.ses.BatchSendEmail("batchSendEmail",
            ad_location=0,
            cycle_param=tencentcloud.ses.BatchSendEmailCycleParamArgs(
                begin_time="2023-09-07 15:10:00",
                interval_time=1,
            ),
            from_email_address="aaa@iac-tf.cloud",
            receiver_id=1063742,
            reply_to_addresses="reply@mail.qcloud.com",
            subject="terraform test",
            task_type=1,
            template=tencentcloud.ses.BatchSendEmailTemplateArgs(
                template_data="{\\"name\\":\\"xxx\\",\\"age\\":\\"xx\\"}",
                template_id=99629,
            ),
            timed_param=tencentcloud.ses.BatchSendEmailTimedParamArgs(
                begin_time="2023-09-07 15:20:00",
            ),
            unsubscribe="0")
        ```
        <!--End PulumiCodeChooser -->

        :param str resource_name: The name of the resource.
        :param BatchSendEmailArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(BatchSendEmailArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 ad_location: Optional[pulumi.Input[int]] = None,
                 attachments: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['BatchSendEmailAttachmentArgs']]]]] = None,
                 cycle_param: Optional[pulumi.Input[pulumi.InputType['BatchSendEmailCycleParamArgs']]] = None,
                 from_email_address: Optional[pulumi.Input[str]] = None,
                 receiver_id: Optional[pulumi.Input[int]] = None,
                 reply_to_addresses: Optional[pulumi.Input[str]] = None,
                 subject: Optional[pulumi.Input[str]] = None,
                 task_type: Optional[pulumi.Input[int]] = None,
                 template: Optional[pulumi.Input[pulumi.InputType['BatchSendEmailTemplateArgs']]] = None,
                 timed_param: Optional[pulumi.Input[pulumi.InputType['BatchSendEmailTimedParamArgs']]] = None,
                 unsubscribe: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = BatchSendEmailArgs.__new__(BatchSendEmailArgs)

            __props__.__dict__["ad_location"] = ad_location
            __props__.__dict__["attachments"] = attachments
            __props__.__dict__["cycle_param"] = cycle_param
            if from_email_address is None and not opts.urn:
                raise TypeError("Missing required property 'from_email_address'")
            __props__.__dict__["from_email_address"] = from_email_address
            if receiver_id is None and not opts.urn:
                raise TypeError("Missing required property 'receiver_id'")
            __props__.__dict__["receiver_id"] = receiver_id
            __props__.__dict__["reply_to_addresses"] = reply_to_addresses
            if subject is None and not opts.urn:
                raise TypeError("Missing required property 'subject'")
            __props__.__dict__["subject"] = subject
            if task_type is None and not opts.urn:
                raise TypeError("Missing required property 'task_type'")
            __props__.__dict__["task_type"] = task_type
            __props__.__dict__["template"] = template
            __props__.__dict__["timed_param"] = timed_param
            __props__.__dict__["unsubscribe"] = unsubscribe
        super(BatchSendEmail, __self__).__init__(
            'tencentcloud:Ses/batchSendEmail:BatchSendEmail',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            ad_location: Optional[pulumi.Input[int]] = None,
            attachments: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['BatchSendEmailAttachmentArgs']]]]] = None,
            cycle_param: Optional[pulumi.Input[pulumi.InputType['BatchSendEmailCycleParamArgs']]] = None,
            from_email_address: Optional[pulumi.Input[str]] = None,
            receiver_id: Optional[pulumi.Input[int]] = None,
            reply_to_addresses: Optional[pulumi.Input[str]] = None,
            subject: Optional[pulumi.Input[str]] = None,
            task_type: Optional[pulumi.Input[int]] = None,
            template: Optional[pulumi.Input[pulumi.InputType['BatchSendEmailTemplateArgs']]] = None,
            timed_param: Optional[pulumi.Input[pulumi.InputType['BatchSendEmailTimedParamArgs']]] = None,
            unsubscribe: Optional[pulumi.Input[str]] = None) -> 'BatchSendEmail':
        """
        Get an existing BatchSendEmail resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[int] ad_location: Whether to add an ad tag. 0: Add no tag; 1: Add before the subject; 2: Add after the subject.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['BatchSendEmailAttachmentArgs']]]] attachments: Attachment parameters to set when you need to send attachments. This parameter is currently unavailable.
        :param pulumi.Input[pulumi.InputType['BatchSendEmailCycleParamArgs']] cycle_param: Parameter required for a recurring sending task.
        :param pulumi.Input[str] from_email_address: Sender address. Enter a sender address such as noreply@mail.qcloud.com. To display the sender name, enter the address in the following format:sender &amp;amp;lt;email address&amp;amp;gt;. For example:Tencent Cloud team &amp;amp;lt;noreply@mail.qcloud.com&amp;amp;gt;.
        :param pulumi.Input[int] receiver_id: Recipient group ID.
        :param pulumi.Input[str] reply_to_addresses: Reply-to address. You can enter a valid personal email address that can receive emails. If this parameter is left empty, reply emails will fail to be sent.
        :param pulumi.Input[str] subject: Email subject.
        :param pulumi.Input[int] task_type: Task type. 1: immediate; 2: scheduled; 3: recurring.
        :param pulumi.Input[pulumi.InputType['BatchSendEmailTemplateArgs']] template: Template when emails are sent using a template.
        :param pulumi.Input[pulumi.InputType['BatchSendEmailTimedParamArgs']] timed_param: Parameter required for a scheduled sending task.
        :param pulumi.Input[str] unsubscribe: Unsubscribe link option.  0: Do not add unsubscribe link; 1: English 2: Simplified Chinese;  3: Traditional Chinese; 4: Spanish; 5: French;  6: German; 7: Japanese; 8: Korean;  9: Arabic; 10: Thai.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _BatchSendEmailState.__new__(_BatchSendEmailState)

        __props__.__dict__["ad_location"] = ad_location
        __props__.__dict__["attachments"] = attachments
        __props__.__dict__["cycle_param"] = cycle_param
        __props__.__dict__["from_email_address"] = from_email_address
        __props__.__dict__["receiver_id"] = receiver_id
        __props__.__dict__["reply_to_addresses"] = reply_to_addresses
        __props__.__dict__["subject"] = subject
        __props__.__dict__["task_type"] = task_type
        __props__.__dict__["template"] = template
        __props__.__dict__["timed_param"] = timed_param
        __props__.__dict__["unsubscribe"] = unsubscribe
        return BatchSendEmail(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="adLocation")
    def ad_location(self) -> pulumi.Output[Optional[int]]:
        """
        Whether to add an ad tag. 0: Add no tag; 1: Add before the subject; 2: Add after the subject.
        """
        return pulumi.get(self, "ad_location")

    @property
    @pulumi.getter
    def attachments(self) -> pulumi.Output[Optional[Sequence['outputs.BatchSendEmailAttachment']]]:
        """
        Attachment parameters to set when you need to send attachments. This parameter is currently unavailable.
        """
        return pulumi.get(self, "attachments")

    @property
    @pulumi.getter(name="cycleParam")
    def cycle_param(self) -> pulumi.Output[Optional['outputs.BatchSendEmailCycleParam']]:
        """
        Parameter required for a recurring sending task.
        """
        return pulumi.get(self, "cycle_param")

    @property
    @pulumi.getter(name="fromEmailAddress")
    def from_email_address(self) -> pulumi.Output[str]:
        """
        Sender address. Enter a sender address such as noreply@mail.qcloud.com. To display the sender name, enter the address in the following format:sender &amp;amp;lt;email address&amp;amp;gt;. For example:Tencent Cloud team &amp;amp;lt;noreply@mail.qcloud.com&amp;amp;gt;.
        """
        return pulumi.get(self, "from_email_address")

    @property
    @pulumi.getter(name="receiverId")
    def receiver_id(self) -> pulumi.Output[int]:
        """
        Recipient group ID.
        """
        return pulumi.get(self, "receiver_id")

    @property
    @pulumi.getter(name="replyToAddresses")
    def reply_to_addresses(self) -> pulumi.Output[Optional[str]]:
        """
        Reply-to address. You can enter a valid personal email address that can receive emails. If this parameter is left empty, reply emails will fail to be sent.
        """
        return pulumi.get(self, "reply_to_addresses")

    @property
    @pulumi.getter
    def subject(self) -> pulumi.Output[str]:
        """
        Email subject.
        """
        return pulumi.get(self, "subject")

    @property
    @pulumi.getter(name="taskType")
    def task_type(self) -> pulumi.Output[int]:
        """
        Task type. 1: immediate; 2: scheduled; 3: recurring.
        """
        return pulumi.get(self, "task_type")

    @property
    @pulumi.getter
    def template(self) -> pulumi.Output[Optional['outputs.BatchSendEmailTemplate']]:
        """
        Template when emails are sent using a template.
        """
        return pulumi.get(self, "template")

    @property
    @pulumi.getter(name="timedParam")
    def timed_param(self) -> pulumi.Output[Optional['outputs.BatchSendEmailTimedParam']]:
        """
        Parameter required for a scheduled sending task.
        """
        return pulumi.get(self, "timed_param")

    @property
    @pulumi.getter
    def unsubscribe(self) -> pulumi.Output[Optional[str]]:
        """
        Unsubscribe link option.  0: Do not add unsubscribe link; 1: English 2: Simplified Chinese;  3: Traditional Chinese; 4: Spanish; 5: French;  6: German; 7: Japanese; 8: Korean;  9: Arabic; 10: Thai.
        """
        return pulumi.get(self, "unsubscribe")


# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetTemplateGroupsResult',
    'AwaitableGetTemplateGroupsResult',
    'get_template_groups',
    'get_template_groups_output',
]

@pulumi.output_type
class GetTemplateGroupsResult:
    """
    A collection of values returned by getTemplateGroups.
    """
    def __init__(__self__, group_lists=None, id=None, name=None, result_output_file=None):
        if group_lists and not isinstance(group_lists, list):
            raise TypeError("Expected argument 'group_lists' to be a list")
        pulumi.set(__self__, "group_lists", group_lists)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)

    @property
    @pulumi.getter(name="groupLists")
    def group_lists(self) -> Sequence['outputs.GetTemplateGroupsGroupListResult']:
        """
        Information list of the dedicated address template groups.
        """
        return pulumi.get(self, "group_lists")

    @property
    @pulumi.getter
    def id(self) -> Optional[str]:
        """
        Id of the address template group.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def name(self) -> Optional[str]:
        """
        Name of address template group.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")


class AwaitableGetTemplateGroupsResult(GetTemplateGroupsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetTemplateGroupsResult(
            group_lists=self.group_lists,
            id=self.id,
            name=self.name,
            result_output_file=self.result_output_file)


def get_template_groups(id: Optional[str] = None,
                        name: Optional[str] = None,
                        result_output_file: Optional[str] = None,
                        opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetTemplateGroupsResult:
    """
    Use this data source to query detailed information of address template groups.

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    name = tencentcloud.Address.get_template_groups(name="test")
    ```
    <!--End PulumiCodeChooser -->


    :param str id: Id of the address template group to query.
    :param str name: Name of the address template group to query.
    :param str result_output_file: Used to save results.
    """
    __args__ = dict()
    __args__['id'] = id
    __args__['name'] = name
    __args__['resultOutputFile'] = result_output_file
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('tencentcloud:Address/getTemplateGroups:getTemplateGroups', __args__, opts=opts, typ=GetTemplateGroupsResult).value

    return AwaitableGetTemplateGroupsResult(
        group_lists=pulumi.get(__ret__, 'group_lists'),
        id=pulumi.get(__ret__, 'id'),
        name=pulumi.get(__ret__, 'name'),
        result_output_file=pulumi.get(__ret__, 'result_output_file'))


@_utilities.lift_output_func(get_template_groups)
def get_template_groups_output(id: Optional[pulumi.Input[Optional[str]]] = None,
                               name: Optional[pulumi.Input[Optional[str]]] = None,
                               result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                               opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetTemplateGroupsResult]:
    """
    Use this data source to query detailed information of address template groups.

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    name = tencentcloud.Address.get_template_groups(name="test")
    ```
    <!--End PulumiCodeChooser -->


    :param str id: Id of the address template group to query.
    :param str name: Name of the address template group to query.
    :param str result_output_file: Used to save results.
    """
    ...

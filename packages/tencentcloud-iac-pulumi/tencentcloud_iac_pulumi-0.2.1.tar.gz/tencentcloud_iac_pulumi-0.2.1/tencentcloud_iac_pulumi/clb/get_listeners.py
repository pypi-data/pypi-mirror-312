# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetListenersResult',
    'AwaitableGetListenersResult',
    'get_listeners',
    'get_listeners_output',
]

@pulumi.output_type
class GetListenersResult:
    """
    A collection of values returned by getListeners.
    """
    def __init__(__self__, clb_id=None, id=None, listener_id=None, listener_lists=None, port=None, protocol=None, result_output_file=None):
        if clb_id and not isinstance(clb_id, str):
            raise TypeError("Expected argument 'clb_id' to be a str")
        pulumi.set(__self__, "clb_id", clb_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if listener_id and not isinstance(listener_id, str):
            raise TypeError("Expected argument 'listener_id' to be a str")
        pulumi.set(__self__, "listener_id", listener_id)
        if listener_lists and not isinstance(listener_lists, list):
            raise TypeError("Expected argument 'listener_lists' to be a list")
        pulumi.set(__self__, "listener_lists", listener_lists)
        if port and not isinstance(port, int):
            raise TypeError("Expected argument 'port' to be a int")
        pulumi.set(__self__, "port", port)
        if protocol and not isinstance(protocol, str):
            raise TypeError("Expected argument 'protocol' to be a str")
        pulumi.set(__self__, "protocol", protocol)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)

    @property
    @pulumi.getter(name="clbId")
    def clb_id(self) -> str:
        """
        ID of the CLB.
        """
        return pulumi.get(self, "clb_id")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="listenerId")
    def listener_id(self) -> Optional[str]:
        """
        ID of the listener.
        """
        return pulumi.get(self, "listener_id")

    @property
    @pulumi.getter(name="listenerLists")
    def listener_lists(self) -> Sequence['outputs.GetListenersListenerListResult']:
        """
        A list of listeners of cloud load balancers. Each element contains the following attributes:
        """
        return pulumi.get(self, "listener_lists")

    @property
    @pulumi.getter
    def port(self) -> Optional[int]:
        """
        Port of the CLB listener.
        """
        return pulumi.get(self, "port")

    @property
    @pulumi.getter
    def protocol(self) -> Optional[str]:
        """
        Protocol of the listener. Available values are `HTTP`, `HTTPS`, `TCP`, `UDP`, `TCP_SSL`.
        """
        return pulumi.get(self, "protocol")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")


class AwaitableGetListenersResult(GetListenersResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetListenersResult(
            clb_id=self.clb_id,
            id=self.id,
            listener_id=self.listener_id,
            listener_lists=self.listener_lists,
            port=self.port,
            protocol=self.protocol,
            result_output_file=self.result_output_file)


def get_listeners(clb_id: Optional[str] = None,
                  listener_id: Optional[str] = None,
                  port: Optional[int] = None,
                  protocol: Optional[str] = None,
                  result_output_file: Optional[str] = None,
                  opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetListenersResult:
    """
    Use this data source to query detailed information of CLB listener

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    foo = tencentcloud.Clb.get_listeners(clb_id="lb-k2zjp9lv",
        listener_id="lbl-mwr6vbtv",
        port=80,
        protocol="TCP")
    ```
    <!--End PulumiCodeChooser -->


    :param str clb_id: Id of the CLB to be queried.
    :param str listener_id: Id of the listener to be queried.
    :param int port: Port of the CLB listener.
    :param str protocol: Type of protocol within the listener, and available values are `TCP`, `UDP`, `HTTP`, `HTTPS` and `TCP_SSL`.
    :param str result_output_file: Used to save results.
    """
    __args__ = dict()
    __args__['clbId'] = clb_id
    __args__['listenerId'] = listener_id
    __args__['port'] = port
    __args__['protocol'] = protocol
    __args__['resultOutputFile'] = result_output_file
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('tencentcloud:Clb/getListeners:getListeners', __args__, opts=opts, typ=GetListenersResult).value

    return AwaitableGetListenersResult(
        clb_id=pulumi.get(__ret__, 'clb_id'),
        id=pulumi.get(__ret__, 'id'),
        listener_id=pulumi.get(__ret__, 'listener_id'),
        listener_lists=pulumi.get(__ret__, 'listener_lists'),
        port=pulumi.get(__ret__, 'port'),
        protocol=pulumi.get(__ret__, 'protocol'),
        result_output_file=pulumi.get(__ret__, 'result_output_file'))


@_utilities.lift_output_func(get_listeners)
def get_listeners_output(clb_id: Optional[pulumi.Input[str]] = None,
                         listener_id: Optional[pulumi.Input[Optional[str]]] = None,
                         port: Optional[pulumi.Input[Optional[int]]] = None,
                         protocol: Optional[pulumi.Input[Optional[str]]] = None,
                         result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                         opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetListenersResult]:
    """
    Use this data source to query detailed information of CLB listener

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    foo = tencentcloud.Clb.get_listeners(clb_id="lb-k2zjp9lv",
        listener_id="lbl-mwr6vbtv",
        port=80,
        protocol="TCP")
    ```
    <!--End PulumiCodeChooser -->


    :param str clb_id: Id of the CLB to be queried.
    :param str listener_id: Id of the listener to be queried.
    :param int port: Port of the CLB listener.
    :param str protocol: Type of protocol within the listener, and available values are `TCP`, `UDP`, `HTTP`, `HTTPS` and `TCP_SSL`.
    :param str result_output_file: Used to save results.
    """
    ...

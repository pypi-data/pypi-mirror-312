# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetAttachmentsResult',
    'AwaitableGetAttachmentsResult',
    'get_attachments',
    'get_attachments_output',
]

@pulumi.output_type
class GetAttachmentsResult:
    """
    A collection of values returned by getAttachments.
    """
    def __init__(__self__, attachment_lists=None, clb_id=None, id=None, listener_id=None, result_output_file=None, rule_id=None):
        if attachment_lists and not isinstance(attachment_lists, list):
            raise TypeError("Expected argument 'attachment_lists' to be a list")
        pulumi.set(__self__, "attachment_lists", attachment_lists)
        if clb_id and not isinstance(clb_id, str):
            raise TypeError("Expected argument 'clb_id' to be a str")
        pulumi.set(__self__, "clb_id", clb_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if listener_id and not isinstance(listener_id, str):
            raise TypeError("Expected argument 'listener_id' to be a str")
        pulumi.set(__self__, "listener_id", listener_id)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)
        if rule_id and not isinstance(rule_id, str):
            raise TypeError("Expected argument 'rule_id' to be a str")
        pulumi.set(__self__, "rule_id", rule_id)

    @property
    @pulumi.getter(name="attachmentLists")
    def attachment_lists(self) -> Sequence['outputs.GetAttachmentsAttachmentListResult']:
        """
        A list of cloud load balancer attachment configurations. Each element contains the following attributes:
        """
        return pulumi.get(self, "attachment_lists")

    @property
    @pulumi.getter(name="clbId")
    def clb_id(self) -> str:
        """
        ID of the CLB.
        """
        return pulumi.get(self, "clb_id")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="listenerId")
    def listener_id(self) -> str:
        """
        ID of the CLB listener.
        """
        return pulumi.get(self, "listener_id")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")

    @property
    @pulumi.getter(name="ruleId")
    def rule_id(self) -> Optional[str]:
        """
        ID of the CLB listener rule.
        """
        return pulumi.get(self, "rule_id")


class AwaitableGetAttachmentsResult(GetAttachmentsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetAttachmentsResult(
            attachment_lists=self.attachment_lists,
            clb_id=self.clb_id,
            id=self.id,
            listener_id=self.listener_id,
            result_output_file=self.result_output_file,
            rule_id=self.rule_id)


def get_attachments(clb_id: Optional[str] = None,
                    listener_id: Optional[str] = None,
                    result_output_file: Optional[str] = None,
                    rule_id: Optional[str] = None,
                    opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetAttachmentsResult:
    """
    Use this data source to query detailed information of CLB attachments

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    clblab = tencentcloud.Clb.get_attachments(clb_id="lb-k2zjp9lv",
        listener_id="lbl-hh141sn9",
        rule_id="loc-4xxr2cy7")
    ```
    <!--End PulumiCodeChooser -->


    :param str clb_id: ID of the CLB to be queried.
    :param str listener_id: ID of the CLB listener to be queried.
    :param str result_output_file: Used to save results.
    :param str rule_id: ID of the CLB listener rule. If the protocol of listener is `HTTP`/`HTTPS`, this para is required.
    """
    __args__ = dict()
    __args__['clbId'] = clb_id
    __args__['listenerId'] = listener_id
    __args__['resultOutputFile'] = result_output_file
    __args__['ruleId'] = rule_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('tencentcloud:Clb/getAttachments:getAttachments', __args__, opts=opts, typ=GetAttachmentsResult).value

    return AwaitableGetAttachmentsResult(
        attachment_lists=pulumi.get(__ret__, 'attachment_lists'),
        clb_id=pulumi.get(__ret__, 'clb_id'),
        id=pulumi.get(__ret__, 'id'),
        listener_id=pulumi.get(__ret__, 'listener_id'),
        result_output_file=pulumi.get(__ret__, 'result_output_file'),
        rule_id=pulumi.get(__ret__, 'rule_id'))


@_utilities.lift_output_func(get_attachments)
def get_attachments_output(clb_id: Optional[pulumi.Input[str]] = None,
                           listener_id: Optional[pulumi.Input[str]] = None,
                           result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                           rule_id: Optional[pulumi.Input[Optional[str]]] = None,
                           opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetAttachmentsResult]:
    """
    Use this data source to query detailed information of CLB attachments

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    clblab = tencentcloud.Clb.get_attachments(clb_id="lb-k2zjp9lv",
        listener_id="lbl-hh141sn9",
        rule_id="loc-4xxr2cy7")
    ```
    <!--End PulumiCodeChooser -->


    :param str clb_id: ID of the CLB to be queried.
    :param str listener_id: ID of the CLB listener to be queried.
    :param str result_output_file: Used to save results.
    :param str rule_id: ID of the CLB listener rule. If the protocol of listener is `HTTP`/`HTTPS`, this para is required.
    """
    ...

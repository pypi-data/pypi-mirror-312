# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetTargetHealthResult',
    'AwaitableGetTargetHealthResult',
    'get_target_health',
    'get_target_health_output',
]

@pulumi.output_type
class GetTargetHealthResult:
    """
    A collection of values returned by getTargetHealth.
    """
    def __init__(__self__, id=None, load_balancer_ids=None, load_balancers=None, result_output_file=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if load_balancer_ids and not isinstance(load_balancer_ids, list):
            raise TypeError("Expected argument 'load_balancer_ids' to be a list")
        pulumi.set(__self__, "load_balancer_ids", load_balancer_ids)
        if load_balancers and not isinstance(load_balancers, list):
            raise TypeError("Expected argument 'load_balancers' to be a list")
        pulumi.set(__self__, "load_balancers", load_balancers)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="loadBalancerIds")
    def load_balancer_ids(self) -> Sequence[str]:
        return pulumi.get(self, "load_balancer_ids")

    @property
    @pulumi.getter(name="loadBalancers")
    def load_balancers(self) -> Sequence['outputs.GetTargetHealthLoadBalancerResult']:
        """
        CLB instance list. Note: This field may return null, indicating that no valid values can be obtained.
        """
        return pulumi.get(self, "load_balancers")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")


class AwaitableGetTargetHealthResult(GetTargetHealthResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetTargetHealthResult(
            id=self.id,
            load_balancer_ids=self.load_balancer_ids,
            load_balancers=self.load_balancers,
            result_output_file=self.result_output_file)


def get_target_health(load_balancer_ids: Optional[Sequence[str]] = None,
                      result_output_file: Optional[str] = None,
                      opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetTargetHealthResult:
    """
    Use this data source to query detailed information of clb target_health

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    target_health = tencentcloud.Clb.get_target_health(load_balancer_ids=["lb-5dnrkgry"])
    ```
    <!--End PulumiCodeChooser -->


    :param Sequence[str] load_balancer_ids: List of IDs of CLB instances to be queried.
    :param str result_output_file: Used to save results.
    """
    __args__ = dict()
    __args__['loadBalancerIds'] = load_balancer_ids
    __args__['resultOutputFile'] = result_output_file
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('tencentcloud:Clb/getTargetHealth:getTargetHealth', __args__, opts=opts, typ=GetTargetHealthResult).value

    return AwaitableGetTargetHealthResult(
        id=pulumi.get(__ret__, 'id'),
        load_balancer_ids=pulumi.get(__ret__, 'load_balancer_ids'),
        load_balancers=pulumi.get(__ret__, 'load_balancers'),
        result_output_file=pulumi.get(__ret__, 'result_output_file'))


@_utilities.lift_output_func(get_target_health)
def get_target_health_output(load_balancer_ids: Optional[pulumi.Input[Sequence[str]]] = None,
                             result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                             opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetTargetHealthResult]:
    """
    Use this data source to query detailed information of clb target_health

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    target_health = tencentcloud.Clb.get_target_health(load_balancer_ids=["lb-5dnrkgry"])
    ```
    <!--End PulumiCodeChooser -->


    :param Sequence[str] load_balancer_ids: List of IDs of CLB instances to be queried.
    :param str result_output_file: Used to save results.
    """
    ...

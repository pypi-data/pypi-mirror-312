# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = [
    'GetListenersByTargetsResult',
    'AwaitableGetListenersByTargetsResult',
    'get_listeners_by_targets',
    'get_listeners_by_targets_output',
]

@pulumi.output_type
class GetListenersByTargetsResult:
    """
    A collection of values returned by getListenersByTargets.
    """
    def __init__(__self__, backends=None, id=None, load_balancers=None, result_output_file=None):
        if backends and not isinstance(backends, list):
            raise TypeError("Expected argument 'backends' to be a list")
        pulumi.set(__self__, "backends", backends)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if load_balancers and not isinstance(load_balancers, list):
            raise TypeError("Expected argument 'load_balancers' to be a list")
        pulumi.set(__self__, "load_balancers", load_balancers)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)

    @property
    @pulumi.getter
    def backends(self) -> Sequence['outputs.GetListenersByTargetsBackendResult']:
        return pulumi.get(self, "backends")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="loadBalancers")
    def load_balancers(self) -> Sequence['outputs.GetListenersByTargetsLoadBalancerResult']:
        """
        Detail of the CLB instance.
        """
        return pulumi.get(self, "load_balancers")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")


class AwaitableGetListenersByTargetsResult(GetListenersByTargetsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetListenersByTargetsResult(
            backends=self.backends,
            id=self.id,
            load_balancers=self.load_balancers,
            result_output_file=self.result_output_file)


def get_listeners_by_targets(backends: Optional[Sequence[pulumi.InputType['GetListenersByTargetsBackendArgs']]] = None,
                             result_output_file: Optional[str] = None,
                             opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetListenersByTargetsResult:
    """
    Use this data source to query detailed information of clb listeners_by_targets

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    listeners_by_targets = tencentcloud.Clb.get_listeners_by_targets(backends=[tencentcloud.clb.GetListenersByTargetsBackendArgs(
        private_ip="106.52.160.211",
        vpc_id="vpc-4owdpnwr",
    )])
    ```
    <!--End PulumiCodeChooser -->


    :param Sequence[pulumi.InputType['GetListenersByTargetsBackendArgs']] backends: List of private network IPs to be queried.
    :param str result_output_file: Used to save results.
    """
    __args__ = dict()
    __args__['backends'] = backends
    __args__['resultOutputFile'] = result_output_file
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('tencentcloud:Clb/getListenersByTargets:getListenersByTargets', __args__, opts=opts, typ=GetListenersByTargetsResult).value

    return AwaitableGetListenersByTargetsResult(
        backends=pulumi.get(__ret__, 'backends'),
        id=pulumi.get(__ret__, 'id'),
        load_balancers=pulumi.get(__ret__, 'load_balancers'),
        result_output_file=pulumi.get(__ret__, 'result_output_file'))


@_utilities.lift_output_func(get_listeners_by_targets)
def get_listeners_by_targets_output(backends: Optional[pulumi.Input[Sequence[pulumi.InputType['GetListenersByTargetsBackendArgs']]]] = None,
                                    result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                                    opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetListenersByTargetsResult]:
    """
    Use this data source to query detailed information of clb listeners_by_targets

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    listeners_by_targets = tencentcloud.Clb.get_listeners_by_targets(backends=[tencentcloud.clb.GetListenersByTargetsBackendArgs(
        private_ip="106.52.160.211",
        vpc_id="vpc-4owdpnwr",
    )])
    ```
    <!--End PulumiCodeChooser -->


    :param Sequence[pulumi.InputType['GetListenersByTargetsBackendArgs']] backends: List of private network IPs to be queried.
    :param str result_output_file: Used to save results.
    """
    ...

# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = ['SecurityGroupAttachmentArgs', 'SecurityGroupAttachment']

@pulumi.input_type
class SecurityGroupAttachmentArgs:
    def __init__(__self__, *,
                 load_balancer_ids: pulumi.Input[str],
                 security_group: pulumi.Input[str]):
        """
        The set of arguments for constructing a SecurityGroupAttachment resource.
        :param pulumi.Input[str] load_balancer_ids: Array of CLB instance IDs. Only support set one security group now.
        :param pulumi.Input[str] security_group: Security group ID, such as esg-12345678.
        """
        pulumi.set(__self__, "load_balancer_ids", load_balancer_ids)
        pulumi.set(__self__, "security_group", security_group)

    @property
    @pulumi.getter(name="loadBalancerIds")
    def load_balancer_ids(self) -> pulumi.Input[str]:
        """
        Array of CLB instance IDs. Only support set one security group now.
        """
        return pulumi.get(self, "load_balancer_ids")

    @load_balancer_ids.setter
    def load_balancer_ids(self, value: pulumi.Input[str]):
        pulumi.set(self, "load_balancer_ids", value)

    @property
    @pulumi.getter(name="securityGroup")
    def security_group(self) -> pulumi.Input[str]:
        """
        Security group ID, such as esg-12345678.
        """
        return pulumi.get(self, "security_group")

    @security_group.setter
    def security_group(self, value: pulumi.Input[str]):
        pulumi.set(self, "security_group", value)


@pulumi.input_type
class _SecurityGroupAttachmentState:
    def __init__(__self__, *,
                 load_balancer_ids: Optional[pulumi.Input[str]] = None,
                 security_group: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering SecurityGroupAttachment resources.
        :param pulumi.Input[str] load_balancer_ids: Array of CLB instance IDs. Only support set one security group now.
        :param pulumi.Input[str] security_group: Security group ID, such as esg-12345678.
        """
        if load_balancer_ids is not None:
            pulumi.set(__self__, "load_balancer_ids", load_balancer_ids)
        if security_group is not None:
            pulumi.set(__self__, "security_group", security_group)

    @property
    @pulumi.getter(name="loadBalancerIds")
    def load_balancer_ids(self) -> Optional[pulumi.Input[str]]:
        """
        Array of CLB instance IDs. Only support set one security group now.
        """
        return pulumi.get(self, "load_balancer_ids")

    @load_balancer_ids.setter
    def load_balancer_ids(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "load_balancer_ids", value)

    @property
    @pulumi.getter(name="securityGroup")
    def security_group(self) -> Optional[pulumi.Input[str]]:
        """
        Security group ID, such as esg-12345678.
        """
        return pulumi.get(self, "security_group")

    @security_group.setter
    def security_group(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "security_group", value)


class SecurityGroupAttachment(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 load_balancer_ids: Optional[pulumi.Input[str]] = None,
                 security_group: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Provides a resource to create a clb security_group_attachment

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        security_group_attachment = tencentcloud.clb.SecurityGroupAttachment("securityGroupAttachment",
            load_balancer_ids="lb-5dnrkgry",
            security_group="sg-ijato2x1")
        ```
        <!--End PulumiCodeChooser -->

        ## Import

        clb security_group_attachment can be imported using the id, e.g.

        ```sh
        $ pulumi import tencentcloud:Clb/securityGroupAttachment:SecurityGroupAttachment security_group_attachment security_group_id#clb_id
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] load_balancer_ids: Array of CLB instance IDs. Only support set one security group now.
        :param pulumi.Input[str] security_group: Security group ID, such as esg-12345678.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: SecurityGroupAttachmentArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Provides a resource to create a clb security_group_attachment

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        security_group_attachment = tencentcloud.clb.SecurityGroupAttachment("securityGroupAttachment",
            load_balancer_ids="lb-5dnrkgry",
            security_group="sg-ijato2x1")
        ```
        <!--End PulumiCodeChooser -->

        ## Import

        clb security_group_attachment can be imported using the id, e.g.

        ```sh
        $ pulumi import tencentcloud:Clb/securityGroupAttachment:SecurityGroupAttachment security_group_attachment security_group_id#clb_id
        ```

        :param str resource_name: The name of the resource.
        :param SecurityGroupAttachmentArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(SecurityGroupAttachmentArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 load_balancer_ids: Optional[pulumi.Input[str]] = None,
                 security_group: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = SecurityGroupAttachmentArgs.__new__(SecurityGroupAttachmentArgs)

            if load_balancer_ids is None and not opts.urn:
                raise TypeError("Missing required property 'load_balancer_ids'")
            __props__.__dict__["load_balancer_ids"] = load_balancer_ids
            if security_group is None and not opts.urn:
                raise TypeError("Missing required property 'security_group'")
            __props__.__dict__["security_group"] = security_group
        super(SecurityGroupAttachment, __self__).__init__(
            'tencentcloud:Clb/securityGroupAttachment:SecurityGroupAttachment',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            load_balancer_ids: Optional[pulumi.Input[str]] = None,
            security_group: Optional[pulumi.Input[str]] = None) -> 'SecurityGroupAttachment':
        """
        Get an existing SecurityGroupAttachment resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] load_balancer_ids: Array of CLB instance IDs. Only support set one security group now.
        :param pulumi.Input[str] security_group: Security group ID, such as esg-12345678.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _SecurityGroupAttachmentState.__new__(_SecurityGroupAttachmentState)

        __props__.__dict__["load_balancer_ids"] = load_balancer_ids
        __props__.__dict__["security_group"] = security_group
        return SecurityGroupAttachment(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="loadBalancerIds")
    def load_balancer_ids(self) -> pulumi.Output[str]:
        """
        Array of CLB instance IDs. Only support set one security group now.
        """
        return pulumi.get(self, "load_balancer_ids")

    @property
    @pulumi.getter(name="securityGroup")
    def security_group(self) -> pulumi.Output[str]:
        """
        Security group ID, such as esg-12345678.
        """
        return pulumi.get(self, "security_group")


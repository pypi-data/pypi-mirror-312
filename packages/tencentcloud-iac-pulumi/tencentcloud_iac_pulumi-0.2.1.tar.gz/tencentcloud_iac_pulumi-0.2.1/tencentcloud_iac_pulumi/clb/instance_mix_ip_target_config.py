# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = ['InstanceMixIpTargetConfigArgs', 'InstanceMixIpTargetConfig']

@pulumi.input_type
class InstanceMixIpTargetConfigArgs:
    def __init__(__self__, *,
                 load_balancer_id: pulumi.Input[str],
                 mix_ip_target: pulumi.Input[bool]):
        """
        The set of arguments for constructing a InstanceMixIpTargetConfig resource.
        :param pulumi.Input[str] load_balancer_id: ID of CLB instances to be queried.
        :param pulumi.Input[bool] mix_ip_target: False: closed True:open.
        """
        pulumi.set(__self__, "load_balancer_id", load_balancer_id)
        pulumi.set(__self__, "mix_ip_target", mix_ip_target)

    @property
    @pulumi.getter(name="loadBalancerId")
    def load_balancer_id(self) -> pulumi.Input[str]:
        """
        ID of CLB instances to be queried.
        """
        return pulumi.get(self, "load_balancer_id")

    @load_balancer_id.setter
    def load_balancer_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "load_balancer_id", value)

    @property
    @pulumi.getter(name="mixIpTarget")
    def mix_ip_target(self) -> pulumi.Input[bool]:
        """
        False: closed True:open.
        """
        return pulumi.get(self, "mix_ip_target")

    @mix_ip_target.setter
    def mix_ip_target(self, value: pulumi.Input[bool]):
        pulumi.set(self, "mix_ip_target", value)


@pulumi.input_type
class _InstanceMixIpTargetConfigState:
    def __init__(__self__, *,
                 load_balancer_id: Optional[pulumi.Input[str]] = None,
                 mix_ip_target: Optional[pulumi.Input[bool]] = None):
        """
        Input properties used for looking up and filtering InstanceMixIpTargetConfig resources.
        :param pulumi.Input[str] load_balancer_id: ID of CLB instances to be queried.
        :param pulumi.Input[bool] mix_ip_target: False: closed True:open.
        """
        if load_balancer_id is not None:
            pulumi.set(__self__, "load_balancer_id", load_balancer_id)
        if mix_ip_target is not None:
            pulumi.set(__self__, "mix_ip_target", mix_ip_target)

    @property
    @pulumi.getter(name="loadBalancerId")
    def load_balancer_id(self) -> Optional[pulumi.Input[str]]:
        """
        ID of CLB instances to be queried.
        """
        return pulumi.get(self, "load_balancer_id")

    @load_balancer_id.setter
    def load_balancer_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "load_balancer_id", value)

    @property
    @pulumi.getter(name="mixIpTarget")
    def mix_ip_target(self) -> Optional[pulumi.Input[bool]]:
        """
        False: closed True:open.
        """
        return pulumi.get(self, "mix_ip_target")

    @mix_ip_target.setter
    def mix_ip_target(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "mix_ip_target", value)


class InstanceMixIpTargetConfig(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 load_balancer_id: Optional[pulumi.Input[str]] = None,
                 mix_ip_target: Optional[pulumi.Input[bool]] = None,
                 __props__=None):
        """
        Provides a resource to create a clb instance_mix_ip_target_config

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        instance_mix_ip_target_config = tencentcloud.clb.InstanceMixIpTargetConfig("instanceMixIpTargetConfig",
            load_balancer_id="lb-5dnrkgry",
            mix_ip_target=False)
        ```
        <!--End PulumiCodeChooser -->

        ## Import

        clb instance_mix_ip_target_config can be imported using the id, e.g.

        ```sh
        $ pulumi import tencentcloud:Clb/instanceMixIpTargetConfig:InstanceMixIpTargetConfig instance_mix_ip_target_config instance_id
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] load_balancer_id: ID of CLB instances to be queried.
        :param pulumi.Input[bool] mix_ip_target: False: closed True:open.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: InstanceMixIpTargetConfigArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Provides a resource to create a clb instance_mix_ip_target_config

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        instance_mix_ip_target_config = tencentcloud.clb.InstanceMixIpTargetConfig("instanceMixIpTargetConfig",
            load_balancer_id="lb-5dnrkgry",
            mix_ip_target=False)
        ```
        <!--End PulumiCodeChooser -->

        ## Import

        clb instance_mix_ip_target_config can be imported using the id, e.g.

        ```sh
        $ pulumi import tencentcloud:Clb/instanceMixIpTargetConfig:InstanceMixIpTargetConfig instance_mix_ip_target_config instance_id
        ```

        :param str resource_name: The name of the resource.
        :param InstanceMixIpTargetConfigArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(InstanceMixIpTargetConfigArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 load_balancer_id: Optional[pulumi.Input[str]] = None,
                 mix_ip_target: Optional[pulumi.Input[bool]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = InstanceMixIpTargetConfigArgs.__new__(InstanceMixIpTargetConfigArgs)

            if load_balancer_id is None and not opts.urn:
                raise TypeError("Missing required property 'load_balancer_id'")
            __props__.__dict__["load_balancer_id"] = load_balancer_id
            if mix_ip_target is None and not opts.urn:
                raise TypeError("Missing required property 'mix_ip_target'")
            __props__.__dict__["mix_ip_target"] = mix_ip_target
        super(InstanceMixIpTargetConfig, __self__).__init__(
            'tencentcloud:Clb/instanceMixIpTargetConfig:InstanceMixIpTargetConfig',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            load_balancer_id: Optional[pulumi.Input[str]] = None,
            mix_ip_target: Optional[pulumi.Input[bool]] = None) -> 'InstanceMixIpTargetConfig':
        """
        Get an existing InstanceMixIpTargetConfig resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] load_balancer_id: ID of CLB instances to be queried.
        :param pulumi.Input[bool] mix_ip_target: False: closed True:open.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _InstanceMixIpTargetConfigState.__new__(_InstanceMixIpTargetConfigState)

        __props__.__dict__["load_balancer_id"] = load_balancer_id
        __props__.__dict__["mix_ip_target"] = mix_ip_target
        return InstanceMixIpTargetConfig(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="loadBalancerId")
    def load_balancer_id(self) -> pulumi.Output[str]:
        """
        ID of CLB instances to be queried.
        """
        return pulumi.get(self, "load_balancer_id")

    @property
    @pulumi.getter(name="mixIpTarget")
    def mix_ip_target(self) -> pulumi.Output[bool]:
        """
        False: closed True:open.
        """
        return pulumi.get(self, "mix_ip_target")


# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = ['BucketPicStyleArgs', 'BucketPicStyle']

@pulumi.input_type
class BucketPicStyleArgs:
    def __init__(__self__, *,
                 bucket: pulumi.Input[str],
                 style_body: pulumi.Input[str],
                 style_name: pulumi.Input[str]):
        """
        The set of arguments for constructing a BucketPicStyle resource.
        :param pulumi.Input[str] bucket: bucket name.
        :param pulumi.Input[str] style_body: style details, example: mageMogr2/grayscale/1.
        :param pulumi.Input[str] style_name: style name, style names are case-sensitive, and a combination of uppercase and lowercase letters, numbers, and `$ + _ ( )` is supported.
        """
        pulumi.set(__self__, "bucket", bucket)
        pulumi.set(__self__, "style_body", style_body)
        pulumi.set(__self__, "style_name", style_name)

    @property
    @pulumi.getter
    def bucket(self) -> pulumi.Input[str]:
        """
        bucket name.
        """
        return pulumi.get(self, "bucket")

    @bucket.setter
    def bucket(self, value: pulumi.Input[str]):
        pulumi.set(self, "bucket", value)

    @property
    @pulumi.getter(name="styleBody")
    def style_body(self) -> pulumi.Input[str]:
        """
        style details, example: mageMogr2/grayscale/1.
        """
        return pulumi.get(self, "style_body")

    @style_body.setter
    def style_body(self, value: pulumi.Input[str]):
        pulumi.set(self, "style_body", value)

    @property
    @pulumi.getter(name="styleName")
    def style_name(self) -> pulumi.Input[str]:
        """
        style name, style names are case-sensitive, and a combination of uppercase and lowercase letters, numbers, and `$ + _ ( )` is supported.
        """
        return pulumi.get(self, "style_name")

    @style_name.setter
    def style_name(self, value: pulumi.Input[str]):
        pulumi.set(self, "style_name", value)


@pulumi.input_type
class _BucketPicStyleState:
    def __init__(__self__, *,
                 bucket: Optional[pulumi.Input[str]] = None,
                 style_body: Optional[pulumi.Input[str]] = None,
                 style_name: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering BucketPicStyle resources.
        :param pulumi.Input[str] bucket: bucket name.
        :param pulumi.Input[str] style_body: style details, example: mageMogr2/grayscale/1.
        :param pulumi.Input[str] style_name: style name, style names are case-sensitive, and a combination of uppercase and lowercase letters, numbers, and `$ + _ ( )` is supported.
        """
        if bucket is not None:
            pulumi.set(__self__, "bucket", bucket)
        if style_body is not None:
            pulumi.set(__self__, "style_body", style_body)
        if style_name is not None:
            pulumi.set(__self__, "style_name", style_name)

    @property
    @pulumi.getter
    def bucket(self) -> Optional[pulumi.Input[str]]:
        """
        bucket name.
        """
        return pulumi.get(self, "bucket")

    @bucket.setter
    def bucket(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "bucket", value)

    @property
    @pulumi.getter(name="styleBody")
    def style_body(self) -> Optional[pulumi.Input[str]]:
        """
        style details, example: mageMogr2/grayscale/1.
        """
        return pulumi.get(self, "style_body")

    @style_body.setter
    def style_body(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "style_body", value)

    @property
    @pulumi.getter(name="styleName")
    def style_name(self) -> Optional[pulumi.Input[str]]:
        """
        style name, style names are case-sensitive, and a combination of uppercase and lowercase letters, numbers, and `$ + _ ( )` is supported.
        """
        return pulumi.get(self, "style_name")

    @style_name.setter
    def style_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "style_name", value)


class BucketPicStyle(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 bucket: Optional[pulumi.Input[str]] = None,
                 style_body: Optional[pulumi.Input[str]] = None,
                 style_name: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Provides a resource to create a ci bucket_pic_style

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        bucket_pic_style = tencentcloud.ci.BucketPicStyle("bucketPicStyle",
            bucket="terraform-ci-xxxxxx",
            style_body="imageMogr2/thumbnail/20x/crop/20x20/gravity/center/interlace/0/quality/100",
            style_name="rayscale_2")
        ```
        <!--End PulumiCodeChooser -->

        ## Import

        ci bucket_pic_style can be imported using the bucket#styleName, e.g.

        ```sh
        $ pulumi import tencentcloud:Ci/bucketPicStyle:BucketPicStyle bucket_pic_style terraform-ci-xxxxxx#rayscale_2
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] bucket: bucket name.
        :param pulumi.Input[str] style_body: style details, example: mageMogr2/grayscale/1.
        :param pulumi.Input[str] style_name: style name, style names are case-sensitive, and a combination of uppercase and lowercase letters, numbers, and `$ + _ ( )` is supported.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: BucketPicStyleArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Provides a resource to create a ci bucket_pic_style

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        bucket_pic_style = tencentcloud.ci.BucketPicStyle("bucketPicStyle",
            bucket="terraform-ci-xxxxxx",
            style_body="imageMogr2/thumbnail/20x/crop/20x20/gravity/center/interlace/0/quality/100",
            style_name="rayscale_2")
        ```
        <!--End PulumiCodeChooser -->

        ## Import

        ci bucket_pic_style can be imported using the bucket#styleName, e.g.

        ```sh
        $ pulumi import tencentcloud:Ci/bucketPicStyle:BucketPicStyle bucket_pic_style terraform-ci-xxxxxx#rayscale_2
        ```

        :param str resource_name: The name of the resource.
        :param BucketPicStyleArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(BucketPicStyleArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 bucket: Optional[pulumi.Input[str]] = None,
                 style_body: Optional[pulumi.Input[str]] = None,
                 style_name: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = BucketPicStyleArgs.__new__(BucketPicStyleArgs)

            if bucket is None and not opts.urn:
                raise TypeError("Missing required property 'bucket'")
            __props__.__dict__["bucket"] = bucket
            if style_body is None and not opts.urn:
                raise TypeError("Missing required property 'style_body'")
            __props__.__dict__["style_body"] = style_body
            if style_name is None and not opts.urn:
                raise TypeError("Missing required property 'style_name'")
            __props__.__dict__["style_name"] = style_name
        super(BucketPicStyle, __self__).__init__(
            'tencentcloud:Ci/bucketPicStyle:BucketPicStyle',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            bucket: Optional[pulumi.Input[str]] = None,
            style_body: Optional[pulumi.Input[str]] = None,
            style_name: Optional[pulumi.Input[str]] = None) -> 'BucketPicStyle':
        """
        Get an existing BucketPicStyle resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] bucket: bucket name.
        :param pulumi.Input[str] style_body: style details, example: mageMogr2/grayscale/1.
        :param pulumi.Input[str] style_name: style name, style names are case-sensitive, and a combination of uppercase and lowercase letters, numbers, and `$ + _ ( )` is supported.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _BucketPicStyleState.__new__(_BucketPicStyleState)

        __props__.__dict__["bucket"] = bucket
        __props__.__dict__["style_body"] = style_body
        __props__.__dict__["style_name"] = style_name
        return BucketPicStyle(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter
    def bucket(self) -> pulumi.Output[str]:
        """
        bucket name.
        """
        return pulumi.get(self, "bucket")

    @property
    @pulumi.getter(name="styleBody")
    def style_body(self) -> pulumi.Output[str]:
        """
        style details, example: mageMogr2/grayscale/1.
        """
        return pulumi.get(self, "style_body")

    @property
    @pulumi.getter(name="styleName")
    def style_name(self) -> pulumi.Output[str]:
        """
        style name, style names are case-sensitive, and a combination of uppercase and lowercase letters, numbers, and `$ + _ ( )` is supported.
        """
        return pulumi.get(self, "style_name")


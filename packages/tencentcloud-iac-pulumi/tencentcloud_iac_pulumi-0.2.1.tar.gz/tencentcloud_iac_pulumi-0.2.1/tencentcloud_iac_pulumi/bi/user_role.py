# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = ['UserRoleArgs', 'UserRole']

@pulumi.input_type
class UserRoleArgs:
    def __init__(__self__, *,
                 area_code: pulumi.Input[str],
                 email: pulumi.Input[str],
                 phone_number: pulumi.Input[str],
                 role_id_lists: pulumi.Input[Sequence[pulumi.Input[int]]],
                 user_id: pulumi.Input[str],
                 user_name: pulumi.Input[str]):
        """
        The set of arguments for constructing a UserRole resource.
        :param pulumi.Input[str] area_code: Mobile area code(Note: This field may return null, indicating that no valid value can be obtained).
        :param pulumi.Input[str] email: E-mail(Note: This field may return null, indicating that no valid value can be obtained).
        :param pulumi.Input[str] phone_number: Phone number(Note: This field may return null, indicating that no valid value can be obtained).
        :param pulumi.Input[Sequence[pulumi.Input[int]]] role_id_lists: Role id list.
        :param pulumi.Input[str] user_id: User id.
        :param pulumi.Input[str] user_name: Username.
        """
        pulumi.set(__self__, "area_code", area_code)
        pulumi.set(__self__, "email", email)
        pulumi.set(__self__, "phone_number", phone_number)
        pulumi.set(__self__, "role_id_lists", role_id_lists)
        pulumi.set(__self__, "user_id", user_id)
        pulumi.set(__self__, "user_name", user_name)

    @property
    @pulumi.getter(name="areaCode")
    def area_code(self) -> pulumi.Input[str]:
        """
        Mobile area code(Note: This field may return null, indicating that no valid value can be obtained).
        """
        return pulumi.get(self, "area_code")

    @area_code.setter
    def area_code(self, value: pulumi.Input[str]):
        pulumi.set(self, "area_code", value)

    @property
    @pulumi.getter
    def email(self) -> pulumi.Input[str]:
        """
        E-mail(Note: This field may return null, indicating that no valid value can be obtained).
        """
        return pulumi.get(self, "email")

    @email.setter
    def email(self, value: pulumi.Input[str]):
        pulumi.set(self, "email", value)

    @property
    @pulumi.getter(name="phoneNumber")
    def phone_number(self) -> pulumi.Input[str]:
        """
        Phone number(Note: This field may return null, indicating that no valid value can be obtained).
        """
        return pulumi.get(self, "phone_number")

    @phone_number.setter
    def phone_number(self, value: pulumi.Input[str]):
        pulumi.set(self, "phone_number", value)

    @property
    @pulumi.getter(name="roleIdLists")
    def role_id_lists(self) -> pulumi.Input[Sequence[pulumi.Input[int]]]:
        """
        Role id list.
        """
        return pulumi.get(self, "role_id_lists")

    @role_id_lists.setter
    def role_id_lists(self, value: pulumi.Input[Sequence[pulumi.Input[int]]]):
        pulumi.set(self, "role_id_lists", value)

    @property
    @pulumi.getter(name="userId")
    def user_id(self) -> pulumi.Input[str]:
        """
        User id.
        """
        return pulumi.get(self, "user_id")

    @user_id.setter
    def user_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "user_id", value)

    @property
    @pulumi.getter(name="userName")
    def user_name(self) -> pulumi.Input[str]:
        """
        Username.
        """
        return pulumi.get(self, "user_name")

    @user_name.setter
    def user_name(self, value: pulumi.Input[str]):
        pulumi.set(self, "user_name", value)


@pulumi.input_type
class _UserRoleState:
    def __init__(__self__, *,
                 area_code: Optional[pulumi.Input[str]] = None,
                 email: Optional[pulumi.Input[str]] = None,
                 phone_number: Optional[pulumi.Input[str]] = None,
                 role_id_lists: Optional[pulumi.Input[Sequence[pulumi.Input[int]]]] = None,
                 user_id: Optional[pulumi.Input[str]] = None,
                 user_name: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering UserRole resources.
        :param pulumi.Input[str] area_code: Mobile area code(Note: This field may return null, indicating that no valid value can be obtained).
        :param pulumi.Input[str] email: E-mail(Note: This field may return null, indicating that no valid value can be obtained).
        :param pulumi.Input[str] phone_number: Phone number(Note: This field may return null, indicating that no valid value can be obtained).
        :param pulumi.Input[Sequence[pulumi.Input[int]]] role_id_lists: Role id list.
        :param pulumi.Input[str] user_id: User id.
        :param pulumi.Input[str] user_name: Username.
        """
        if area_code is not None:
            pulumi.set(__self__, "area_code", area_code)
        if email is not None:
            pulumi.set(__self__, "email", email)
        if phone_number is not None:
            pulumi.set(__self__, "phone_number", phone_number)
        if role_id_lists is not None:
            pulumi.set(__self__, "role_id_lists", role_id_lists)
        if user_id is not None:
            pulumi.set(__self__, "user_id", user_id)
        if user_name is not None:
            pulumi.set(__self__, "user_name", user_name)

    @property
    @pulumi.getter(name="areaCode")
    def area_code(self) -> Optional[pulumi.Input[str]]:
        """
        Mobile area code(Note: This field may return null, indicating that no valid value can be obtained).
        """
        return pulumi.get(self, "area_code")

    @area_code.setter
    def area_code(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "area_code", value)

    @property
    @pulumi.getter
    def email(self) -> Optional[pulumi.Input[str]]:
        """
        E-mail(Note: This field may return null, indicating that no valid value can be obtained).
        """
        return pulumi.get(self, "email")

    @email.setter
    def email(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "email", value)

    @property
    @pulumi.getter(name="phoneNumber")
    def phone_number(self) -> Optional[pulumi.Input[str]]:
        """
        Phone number(Note: This field may return null, indicating that no valid value can be obtained).
        """
        return pulumi.get(self, "phone_number")

    @phone_number.setter
    def phone_number(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "phone_number", value)

    @property
    @pulumi.getter(name="roleIdLists")
    def role_id_lists(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[int]]]]:
        """
        Role id list.
        """
        return pulumi.get(self, "role_id_lists")

    @role_id_lists.setter
    def role_id_lists(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[int]]]]):
        pulumi.set(self, "role_id_lists", value)

    @property
    @pulumi.getter(name="userId")
    def user_id(self) -> Optional[pulumi.Input[str]]:
        """
        User id.
        """
        return pulumi.get(self, "user_id")

    @user_id.setter
    def user_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "user_id", value)

    @property
    @pulumi.getter(name="userName")
    def user_name(self) -> Optional[pulumi.Input[str]]:
        """
        Username.
        """
        return pulumi.get(self, "user_name")

    @user_name.setter
    def user_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "user_name", value)


class UserRole(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 area_code: Optional[pulumi.Input[str]] = None,
                 email: Optional[pulumi.Input[str]] = None,
                 phone_number: Optional[pulumi.Input[str]] = None,
                 role_id_lists: Optional[pulumi.Input[Sequence[pulumi.Input[int]]]] = None,
                 user_id: Optional[pulumi.Input[str]] = None,
                 user_name: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Provides a resource to create a bi user_role

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        user_role = tencentcloud.bi.UserRole("userRole",
            area_code="+83",
            email="1055000000@qq.com",
            phone_number="13470010000",
            role_id_lists=[10629359],
            user_id="100032767426",
            user_name="keep-iac-test")
        ```
        <!--End PulumiCodeChooser -->

        ## Import

        bi user_role can be imported using the id, e.g.

        ```sh
        $ pulumi import tencentcloud:Bi/userRole:UserRole user_role user_id
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] area_code: Mobile area code(Note: This field may return null, indicating that no valid value can be obtained).
        :param pulumi.Input[str] email: E-mail(Note: This field may return null, indicating that no valid value can be obtained).
        :param pulumi.Input[str] phone_number: Phone number(Note: This field may return null, indicating that no valid value can be obtained).
        :param pulumi.Input[Sequence[pulumi.Input[int]]] role_id_lists: Role id list.
        :param pulumi.Input[str] user_id: User id.
        :param pulumi.Input[str] user_name: Username.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: UserRoleArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Provides a resource to create a bi user_role

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        user_role = tencentcloud.bi.UserRole("userRole",
            area_code="+83",
            email="1055000000@qq.com",
            phone_number="13470010000",
            role_id_lists=[10629359],
            user_id="100032767426",
            user_name="keep-iac-test")
        ```
        <!--End PulumiCodeChooser -->

        ## Import

        bi user_role can be imported using the id, e.g.

        ```sh
        $ pulumi import tencentcloud:Bi/userRole:UserRole user_role user_id
        ```

        :param str resource_name: The name of the resource.
        :param UserRoleArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(UserRoleArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 area_code: Optional[pulumi.Input[str]] = None,
                 email: Optional[pulumi.Input[str]] = None,
                 phone_number: Optional[pulumi.Input[str]] = None,
                 role_id_lists: Optional[pulumi.Input[Sequence[pulumi.Input[int]]]] = None,
                 user_id: Optional[pulumi.Input[str]] = None,
                 user_name: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = UserRoleArgs.__new__(UserRoleArgs)

            if area_code is None and not opts.urn:
                raise TypeError("Missing required property 'area_code'")
            __props__.__dict__["area_code"] = area_code
            if email is None and not opts.urn:
                raise TypeError("Missing required property 'email'")
            __props__.__dict__["email"] = email
            if phone_number is None and not opts.urn:
                raise TypeError("Missing required property 'phone_number'")
            __props__.__dict__["phone_number"] = phone_number
            if role_id_lists is None and not opts.urn:
                raise TypeError("Missing required property 'role_id_lists'")
            __props__.__dict__["role_id_lists"] = role_id_lists
            if user_id is None and not opts.urn:
                raise TypeError("Missing required property 'user_id'")
            __props__.__dict__["user_id"] = user_id
            if user_name is None and not opts.urn:
                raise TypeError("Missing required property 'user_name'")
            __props__.__dict__["user_name"] = user_name
        super(UserRole, __self__).__init__(
            'tencentcloud:Bi/userRole:UserRole',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            area_code: Optional[pulumi.Input[str]] = None,
            email: Optional[pulumi.Input[str]] = None,
            phone_number: Optional[pulumi.Input[str]] = None,
            role_id_lists: Optional[pulumi.Input[Sequence[pulumi.Input[int]]]] = None,
            user_id: Optional[pulumi.Input[str]] = None,
            user_name: Optional[pulumi.Input[str]] = None) -> 'UserRole':
        """
        Get an existing UserRole resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] area_code: Mobile area code(Note: This field may return null, indicating that no valid value can be obtained).
        :param pulumi.Input[str] email: E-mail(Note: This field may return null, indicating that no valid value can be obtained).
        :param pulumi.Input[str] phone_number: Phone number(Note: This field may return null, indicating that no valid value can be obtained).
        :param pulumi.Input[Sequence[pulumi.Input[int]]] role_id_lists: Role id list.
        :param pulumi.Input[str] user_id: User id.
        :param pulumi.Input[str] user_name: Username.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _UserRoleState.__new__(_UserRoleState)

        __props__.__dict__["area_code"] = area_code
        __props__.__dict__["email"] = email
        __props__.__dict__["phone_number"] = phone_number
        __props__.__dict__["role_id_lists"] = role_id_lists
        __props__.__dict__["user_id"] = user_id
        __props__.__dict__["user_name"] = user_name
        return UserRole(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="areaCode")
    def area_code(self) -> pulumi.Output[str]:
        """
        Mobile area code(Note: This field may return null, indicating that no valid value can be obtained).
        """
        return pulumi.get(self, "area_code")

    @property
    @pulumi.getter
    def email(self) -> pulumi.Output[str]:
        """
        E-mail(Note: This field may return null, indicating that no valid value can be obtained).
        """
        return pulumi.get(self, "email")

    @property
    @pulumi.getter(name="phoneNumber")
    def phone_number(self) -> pulumi.Output[str]:
        """
        Phone number(Note: This field may return null, indicating that no valid value can be obtained).
        """
        return pulumi.get(self, "phone_number")

    @property
    @pulumi.getter(name="roleIdLists")
    def role_id_lists(self) -> pulumi.Output[Sequence[int]]:
        """
        Role id list.
        """
        return pulumi.get(self, "role_id_lists")

    @property
    @pulumi.getter(name="userId")
    def user_id(self) -> pulumi.Output[str]:
        """
        User id.
        """
        return pulumi.get(self, "user_id")

    @property
    @pulumi.getter(name="userName")
    def user_name(self) -> pulumi.Output[str]:
        """
        Username.
        """
        return pulumi.get(self, "user_name")


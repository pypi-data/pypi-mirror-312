# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['InstancesRejectAttachArgs', 'InstancesRejectAttach']

@pulumi.input_type
class InstancesRejectAttachArgs:
    def __init__(__self__, *,
                 ccn_id: pulumi.Input[str],
                 instances: pulumi.Input[Sequence[pulumi.Input['InstancesRejectAttachInstanceArgs']]]):
        """
        The set of arguments for constructing a InstancesRejectAttach resource.
        :param pulumi.Input[str] ccn_id: CCN Instance ID.
        :param pulumi.Input[Sequence[pulumi.Input['InstancesRejectAttachInstanceArgs']]] instances: Reject List Of Attachment Instances.
        """
        pulumi.set(__self__, "ccn_id", ccn_id)
        pulumi.set(__self__, "instances", instances)

    @property
    @pulumi.getter(name="ccnId")
    def ccn_id(self) -> pulumi.Input[str]:
        """
        CCN Instance ID.
        """
        return pulumi.get(self, "ccn_id")

    @ccn_id.setter
    def ccn_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "ccn_id", value)

    @property
    @pulumi.getter
    def instances(self) -> pulumi.Input[Sequence[pulumi.Input['InstancesRejectAttachInstanceArgs']]]:
        """
        Reject List Of Attachment Instances.
        """
        return pulumi.get(self, "instances")

    @instances.setter
    def instances(self, value: pulumi.Input[Sequence[pulumi.Input['InstancesRejectAttachInstanceArgs']]]):
        pulumi.set(self, "instances", value)


@pulumi.input_type
class _InstancesRejectAttachState:
    def __init__(__self__, *,
                 ccn_id: Optional[pulumi.Input[str]] = None,
                 instances: Optional[pulumi.Input[Sequence[pulumi.Input['InstancesRejectAttachInstanceArgs']]]] = None):
        """
        Input properties used for looking up and filtering InstancesRejectAttach resources.
        :param pulumi.Input[str] ccn_id: CCN Instance ID.
        :param pulumi.Input[Sequence[pulumi.Input['InstancesRejectAttachInstanceArgs']]] instances: Reject List Of Attachment Instances.
        """
        if ccn_id is not None:
            pulumi.set(__self__, "ccn_id", ccn_id)
        if instances is not None:
            pulumi.set(__self__, "instances", instances)

    @property
    @pulumi.getter(name="ccnId")
    def ccn_id(self) -> Optional[pulumi.Input[str]]:
        """
        CCN Instance ID.
        """
        return pulumi.get(self, "ccn_id")

    @ccn_id.setter
    def ccn_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ccn_id", value)

    @property
    @pulumi.getter
    def instances(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['InstancesRejectAttachInstanceArgs']]]]:
        """
        Reject List Of Attachment Instances.
        """
        return pulumi.get(self, "instances")

    @instances.setter
    def instances(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['InstancesRejectAttachInstanceArgs']]]]):
        pulumi.set(self, "instances", value)


class InstancesRejectAttach(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 ccn_id: Optional[pulumi.Input[str]] = None,
                 instances: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['InstancesRejectAttachInstanceArgs']]]]] = None,
                 __props__=None):
        """
        Provides a resource to create a vpc ccn_instances_reject_attach, you can use this resource to approve cross-region attachment.

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        ccn_instances_reject_attach = tencentcloud.ccn.InstancesRejectAttach("ccnInstancesRejectAttach",
            ccn_id="ccn-39lqkygf",
            instances=[tencentcloud.ccn.InstancesRejectAttachInstanceArgs(
                instance_id="vpc-j9yhbzpn",
                instance_region="ap-guangzhou",
                instance_type="VPC",
            )])
        ```
        <!--End PulumiCodeChooser -->

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] ccn_id: CCN Instance ID.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['InstancesRejectAttachInstanceArgs']]]] instances: Reject List Of Attachment Instances.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: InstancesRejectAttachArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Provides a resource to create a vpc ccn_instances_reject_attach, you can use this resource to approve cross-region attachment.

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        ccn_instances_reject_attach = tencentcloud.ccn.InstancesRejectAttach("ccnInstancesRejectAttach",
            ccn_id="ccn-39lqkygf",
            instances=[tencentcloud.ccn.InstancesRejectAttachInstanceArgs(
                instance_id="vpc-j9yhbzpn",
                instance_region="ap-guangzhou",
                instance_type="VPC",
            )])
        ```
        <!--End PulumiCodeChooser -->

        :param str resource_name: The name of the resource.
        :param InstancesRejectAttachArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(InstancesRejectAttachArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 ccn_id: Optional[pulumi.Input[str]] = None,
                 instances: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['InstancesRejectAttachInstanceArgs']]]]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = InstancesRejectAttachArgs.__new__(InstancesRejectAttachArgs)

            if ccn_id is None and not opts.urn:
                raise TypeError("Missing required property 'ccn_id'")
            __props__.__dict__["ccn_id"] = ccn_id
            if instances is None and not opts.urn:
                raise TypeError("Missing required property 'instances'")
            __props__.__dict__["instances"] = instances
        super(InstancesRejectAttach, __self__).__init__(
            'tencentcloud:Ccn/instancesRejectAttach:InstancesRejectAttach',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            ccn_id: Optional[pulumi.Input[str]] = None,
            instances: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['InstancesRejectAttachInstanceArgs']]]]] = None) -> 'InstancesRejectAttach':
        """
        Get an existing InstancesRejectAttach resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] ccn_id: CCN Instance ID.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['InstancesRejectAttachInstanceArgs']]]] instances: Reject List Of Attachment Instances.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _InstancesRejectAttachState.__new__(_InstancesRejectAttachState)

        __props__.__dict__["ccn_id"] = ccn_id
        __props__.__dict__["instances"] = instances
        return InstancesRejectAttach(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="ccnId")
    def ccn_id(self) -> pulumi.Output[str]:
        """
        CCN Instance ID.
        """
        return pulumi.get(self, "ccn_id")

    @property
    @pulumi.getter
    def instances(self) -> pulumi.Output[Sequence['outputs.InstancesRejectAttachInstance']]:
        """
        Reject List Of Attachment Instances.
        """
        return pulumi.get(self, "instances")


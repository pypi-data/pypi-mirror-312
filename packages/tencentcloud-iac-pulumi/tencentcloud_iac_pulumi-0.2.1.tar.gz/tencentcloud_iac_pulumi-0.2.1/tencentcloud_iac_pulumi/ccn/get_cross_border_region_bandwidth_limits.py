# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = [
    'GetCrossBorderRegionBandwidthLimitsResult',
    'AwaitableGetCrossBorderRegionBandwidthLimitsResult',
    'get_cross_border_region_bandwidth_limits',
    'get_cross_border_region_bandwidth_limits_output',
]

@pulumi.output_type
class GetCrossBorderRegionBandwidthLimitsResult:
    """
    A collection of values returned by getCrossBorderRegionBandwidthLimits.
    """
    def __init__(__self__, ccn_bandwidth_sets=None, filters=None, id=None, result_output_file=None):
        if ccn_bandwidth_sets and not isinstance(ccn_bandwidth_sets, list):
            raise TypeError("Expected argument 'ccn_bandwidth_sets' to be a list")
        pulumi.set(__self__, "ccn_bandwidth_sets", ccn_bandwidth_sets)
        if filters and not isinstance(filters, list):
            raise TypeError("Expected argument 'filters' to be a list")
        pulumi.set(__self__, "filters", filters)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)

    @property
    @pulumi.getter(name="ccnBandwidthSets")
    def ccn_bandwidth_sets(self) -> Sequence['outputs.GetCrossBorderRegionBandwidthLimitsCcnBandwidthSetResult']:
        """
        Info of cross region ccn instance.
        """
        return pulumi.get(self, "ccn_bandwidth_sets")

    @property
    @pulumi.getter
    def filters(self) -> Optional[Sequence['outputs.GetCrossBorderRegionBandwidthLimitsFilterResult']]:
        return pulumi.get(self, "filters")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")


class AwaitableGetCrossBorderRegionBandwidthLimitsResult(GetCrossBorderRegionBandwidthLimitsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetCrossBorderRegionBandwidthLimitsResult(
            ccn_bandwidth_sets=self.ccn_bandwidth_sets,
            filters=self.filters,
            id=self.id,
            result_output_file=self.result_output_file)


def get_cross_border_region_bandwidth_limits(filters: Optional[Sequence[pulumi.InputType['GetCrossBorderRegionBandwidthLimitsFilterArgs']]] = None,
                                             result_output_file: Optional[str] = None,
                                             opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetCrossBorderRegionBandwidthLimitsResult:
    """
    Use this data source to query detailed information of ccn_cross_border_region_bandwidth_limits

    > **NOTE:** This resource is dedicated to Unicom.

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    ccn_region_bandwidth_limits = tencentcloud.Ccn.get_cross_border_region_bandwidth_limits(filters=[
        tencentcloud.ccn.GetCrossBorderRegionBandwidthLimitsFilterArgs(
            name="source-region",
            values=["ap-guangzhou"],
        ),
        tencentcloud.ccn.GetCrossBorderRegionBandwidthLimitsFilterArgs(
            name="destination-region",
            values=["ap-shanghai"],
        ),
    ])
    ```
    <!--End PulumiCodeChooser -->


    :param Sequence[pulumi.InputType['GetCrossBorderRegionBandwidthLimitsFilterArgs']] filters: Filter condition. Currently, only one value is supported. The supported fields, 1)source-region, the value is like ap-guangzhou; 2)destination-region, the value is like ap-shanghai; 3)ccn-ids,cloud network ID array, the value is like ccn-12345678; 4)user-account-id,user account ID, the value is like 12345678.
    :param str result_output_file: Used to save results.
    """
    __args__ = dict()
    __args__['filters'] = filters
    __args__['resultOutputFile'] = result_output_file
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('tencentcloud:Ccn/getCrossBorderRegionBandwidthLimits:getCrossBorderRegionBandwidthLimits', __args__, opts=opts, typ=GetCrossBorderRegionBandwidthLimitsResult).value

    return AwaitableGetCrossBorderRegionBandwidthLimitsResult(
        ccn_bandwidth_sets=pulumi.get(__ret__, 'ccn_bandwidth_sets'),
        filters=pulumi.get(__ret__, 'filters'),
        id=pulumi.get(__ret__, 'id'),
        result_output_file=pulumi.get(__ret__, 'result_output_file'))


@_utilities.lift_output_func(get_cross_border_region_bandwidth_limits)
def get_cross_border_region_bandwidth_limits_output(filters: Optional[pulumi.Input[Optional[Sequence[pulumi.InputType['GetCrossBorderRegionBandwidthLimitsFilterArgs']]]]] = None,
                                                    result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                                                    opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetCrossBorderRegionBandwidthLimitsResult]:
    """
    Use this data source to query detailed information of ccn_cross_border_region_bandwidth_limits

    > **NOTE:** This resource is dedicated to Unicom.

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    ccn_region_bandwidth_limits = tencentcloud.Ccn.get_cross_border_region_bandwidth_limits(filters=[
        tencentcloud.ccn.GetCrossBorderRegionBandwidthLimitsFilterArgs(
            name="source-region",
            values=["ap-guangzhou"],
        ),
        tencentcloud.ccn.GetCrossBorderRegionBandwidthLimitsFilterArgs(
            name="destination-region",
            values=["ap-shanghai"],
        ),
    ])
    ```
    <!--End PulumiCodeChooser -->


    :param Sequence[pulumi.InputType['GetCrossBorderRegionBandwidthLimitsFilterArgs']] filters: Filter condition. Currently, only one value is supported. The supported fields, 1)source-region, the value is like ap-guangzhou; 2)destination-region, the value is like ap-shanghai; 3)ccn-ids,cloud network ID array, the value is like ccn-12345678; 4)user-account-id,user account ID, the value is like 12345678.
    :param str result_output_file: Used to save results.
    """
    ...

# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = ['RenewInstanceOperationArgs', 'RenewInstanceOperation']

@pulumi.input_type
class RenewInstanceOperationArgs:
    def __init__(__self__, *,
                 instance_id: pulumi.Input[str],
                 period: pulumi.Input[int],
                 modify_pay_mode: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a RenewInstanceOperation resource.
        :param pulumi.Input[str] instance_id: The ID of instance.
        :param pulumi.Input[int] period: Purchase duration, in months.
        :param pulumi.Input[str] modify_pay_mode: Identifies whether the billing model is modified:The current instance billing mode is pay-as-you-go, which is prepaid and renewed.The billing mode of the current instance is subscription and you can not set this parameter.
        """
        pulumi.set(__self__, "instance_id", instance_id)
        pulumi.set(__self__, "period", period)
        if modify_pay_mode is not None:
            pulumi.set(__self__, "modify_pay_mode", modify_pay_mode)

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> pulumi.Input[str]:
        """
        The ID of instance.
        """
        return pulumi.get(self, "instance_id")

    @instance_id.setter
    def instance_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "instance_id", value)

    @property
    @pulumi.getter
    def period(self) -> pulumi.Input[int]:
        """
        Purchase duration, in months.
        """
        return pulumi.get(self, "period")

    @period.setter
    def period(self, value: pulumi.Input[int]):
        pulumi.set(self, "period", value)

    @property
    @pulumi.getter(name="modifyPayMode")
    def modify_pay_mode(self) -> Optional[pulumi.Input[str]]:
        """
        Identifies whether the billing model is modified:The current instance billing mode is pay-as-you-go, which is prepaid and renewed.The billing mode of the current instance is subscription and you can not set this parameter.
        """
        return pulumi.get(self, "modify_pay_mode")

    @modify_pay_mode.setter
    def modify_pay_mode(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "modify_pay_mode", value)


@pulumi.input_type
class _RenewInstanceOperationState:
    def __init__(__self__, *,
                 instance_id: Optional[pulumi.Input[str]] = None,
                 modify_pay_mode: Optional[pulumi.Input[str]] = None,
                 period: Optional[pulumi.Input[int]] = None):
        """
        Input properties used for looking up and filtering RenewInstanceOperation resources.
        :param pulumi.Input[str] instance_id: The ID of instance.
        :param pulumi.Input[str] modify_pay_mode: Identifies whether the billing model is modified:The current instance billing mode is pay-as-you-go, which is prepaid and renewed.The billing mode of the current instance is subscription and you can not set this parameter.
        :param pulumi.Input[int] period: Purchase duration, in months.
        """
        if instance_id is not None:
            pulumi.set(__self__, "instance_id", instance_id)
        if modify_pay_mode is not None:
            pulumi.set(__self__, "modify_pay_mode", modify_pay_mode)
        if period is not None:
            pulumi.set(__self__, "period", period)

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> Optional[pulumi.Input[str]]:
        """
        The ID of instance.
        """
        return pulumi.get(self, "instance_id")

    @instance_id.setter
    def instance_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "instance_id", value)

    @property
    @pulumi.getter(name="modifyPayMode")
    def modify_pay_mode(self) -> Optional[pulumi.Input[str]]:
        """
        Identifies whether the billing model is modified:The current instance billing mode is pay-as-you-go, which is prepaid and renewed.The billing mode of the current instance is subscription and you can not set this parameter.
        """
        return pulumi.get(self, "modify_pay_mode")

    @modify_pay_mode.setter
    def modify_pay_mode(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "modify_pay_mode", value)

    @property
    @pulumi.getter
    def period(self) -> Optional[pulumi.Input[int]]:
        """
        Purchase duration, in months.
        """
        return pulumi.get(self, "period")

    @period.setter
    def period(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "period", value)


class RenewInstanceOperation(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 instance_id: Optional[pulumi.Input[str]] = None,
                 modify_pay_mode: Optional[pulumi.Input[str]] = None,
                 period: Optional[pulumi.Input[int]] = None,
                 __props__=None):
        """
        Provides a resource to create a redis renew_instance_operation

        ## Example Usage

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] instance_id: The ID of instance.
        :param pulumi.Input[str] modify_pay_mode: Identifies whether the billing model is modified:The current instance billing mode is pay-as-you-go, which is prepaid and renewed.The billing mode of the current instance is subscription and you can not set this parameter.
        :param pulumi.Input[int] period: Purchase duration, in months.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: RenewInstanceOperationArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Provides a resource to create a redis renew_instance_operation

        ## Example Usage

        :param str resource_name: The name of the resource.
        :param RenewInstanceOperationArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(RenewInstanceOperationArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 instance_id: Optional[pulumi.Input[str]] = None,
                 modify_pay_mode: Optional[pulumi.Input[str]] = None,
                 period: Optional[pulumi.Input[int]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = RenewInstanceOperationArgs.__new__(RenewInstanceOperationArgs)

            if instance_id is None and not opts.urn:
                raise TypeError("Missing required property 'instance_id'")
            __props__.__dict__["instance_id"] = instance_id
            __props__.__dict__["modify_pay_mode"] = modify_pay_mode
            if period is None and not opts.urn:
                raise TypeError("Missing required property 'period'")
            __props__.__dict__["period"] = period
        super(RenewInstanceOperation, __self__).__init__(
            'tencentcloud:Redis/renewInstanceOperation:RenewInstanceOperation',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            instance_id: Optional[pulumi.Input[str]] = None,
            modify_pay_mode: Optional[pulumi.Input[str]] = None,
            period: Optional[pulumi.Input[int]] = None) -> 'RenewInstanceOperation':
        """
        Get an existing RenewInstanceOperation resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] instance_id: The ID of instance.
        :param pulumi.Input[str] modify_pay_mode: Identifies whether the billing model is modified:The current instance billing mode is pay-as-you-go, which is prepaid and renewed.The billing mode of the current instance is subscription and you can not set this parameter.
        :param pulumi.Input[int] period: Purchase duration, in months.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _RenewInstanceOperationState.__new__(_RenewInstanceOperationState)

        __props__.__dict__["instance_id"] = instance_id
        __props__.__dict__["modify_pay_mode"] = modify_pay_mode
        __props__.__dict__["period"] = period
        return RenewInstanceOperation(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> pulumi.Output[str]:
        """
        The ID of instance.
        """
        return pulumi.get(self, "instance_id")

    @property
    @pulumi.getter(name="modifyPayMode")
    def modify_pay_mode(self) -> pulumi.Output[Optional[str]]:
        """
        Identifies whether the billing model is modified:The current instance billing mode is pay-as-you-go, which is prepaid and renewed.The billing mode of the current instance is subscription and you can not set this parameter.
        """
        return pulumi.get(self, "modify_pay_mode")

    @property
    @pulumi.getter
    def period(self) -> pulumi.Output[int]:
        """
        Purchase duration, in months.
        """
        return pulumi.get(self, "period")


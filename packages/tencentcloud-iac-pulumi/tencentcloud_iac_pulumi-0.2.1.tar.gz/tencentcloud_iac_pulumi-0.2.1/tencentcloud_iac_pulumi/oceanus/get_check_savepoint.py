# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'GetCheckSavepointResult',
    'AwaitableGetCheckSavepointResult',
    'get_check_savepoint',
    'get_check_savepoint_output',
]

@pulumi.output_type
class GetCheckSavepointResult:
    """
    A collection of values returned by getCheckSavepoint.
    """
    def __init__(__self__, id=None, job_id=None, record_type=None, result_output_file=None, savepoint_path=None, savepoint_status=None, serial_id=None, work_space_id=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if job_id and not isinstance(job_id, str):
            raise TypeError("Expected argument 'job_id' to be a str")
        pulumi.set(__self__, "job_id", job_id)
        if record_type and not isinstance(record_type, int):
            raise TypeError("Expected argument 'record_type' to be a int")
        pulumi.set(__self__, "record_type", record_type)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)
        if savepoint_path and not isinstance(savepoint_path, str):
            raise TypeError("Expected argument 'savepoint_path' to be a str")
        pulumi.set(__self__, "savepoint_path", savepoint_path)
        if savepoint_status and not isinstance(savepoint_status, int):
            raise TypeError("Expected argument 'savepoint_status' to be a int")
        pulumi.set(__self__, "savepoint_status", savepoint_status)
        if serial_id and not isinstance(serial_id, str):
            raise TypeError("Expected argument 'serial_id' to be a str")
        pulumi.set(__self__, "serial_id", serial_id)
        if work_space_id and not isinstance(work_space_id, str):
            raise TypeError("Expected argument 'work_space_id' to be a str")
        pulumi.set(__self__, "work_space_id", work_space_id)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="jobId")
    def job_id(self) -> str:
        return pulumi.get(self, "job_id")

    @property
    @pulumi.getter(name="recordType")
    def record_type(self) -> int:
        return pulumi.get(self, "record_type")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")

    @property
    @pulumi.getter(name="savepointPath")
    def savepoint_path(self) -> str:
        return pulumi.get(self, "savepoint_path")

    @property
    @pulumi.getter(name="savepointStatus")
    def savepoint_status(self) -> int:
        """
        1=available, 2=unavailable.
        """
        return pulumi.get(self, "savepoint_status")

    @property
    @pulumi.getter(name="serialId")
    def serial_id(self) -> str:
        return pulumi.get(self, "serial_id")

    @property
    @pulumi.getter(name="workSpaceId")
    def work_space_id(self) -> str:
        return pulumi.get(self, "work_space_id")


class AwaitableGetCheckSavepointResult(GetCheckSavepointResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetCheckSavepointResult(
            id=self.id,
            job_id=self.job_id,
            record_type=self.record_type,
            result_output_file=self.result_output_file,
            savepoint_path=self.savepoint_path,
            savepoint_status=self.savepoint_status,
            serial_id=self.serial_id,
            work_space_id=self.work_space_id)


def get_check_savepoint(job_id: Optional[str] = None,
                        record_type: Optional[int] = None,
                        result_output_file: Optional[str] = None,
                        savepoint_path: Optional[str] = None,
                        serial_id: Optional[str] = None,
                        work_space_id: Optional[str] = None,
                        opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetCheckSavepointResult:
    """
    Use this data source to query detailed information of oceanus check_savepoint

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    example = tencentcloud.Oceanus.get_check_savepoint(job_id="cql-314rw6w0",
        record_type=1,
        savepoint_path="cosn://52xkpymp-12345/12345/10000/cql-12345/2/flink-savepoints/savepoint-000000-12334",
        serial_id="svp-52xkpymp",
        work_space_id="space-2idq8wbr")
    ```
    <!--End PulumiCodeChooser -->


    :param str job_id: Job id.
    :param int record_type: Snapshot type. 1:savepoint; 2:checkpoint; 3:cancelWithSavepoint.
    :param str result_output_file: Used to save results.
    :param str savepoint_path: Snapshot path, currently only supports COS path.
    :param str serial_id: Snapshot resource ID.
    :param str work_space_id: Workspace ID.
    """
    __args__ = dict()
    __args__['jobId'] = job_id
    __args__['recordType'] = record_type
    __args__['resultOutputFile'] = result_output_file
    __args__['savepointPath'] = savepoint_path
    __args__['serialId'] = serial_id
    __args__['workSpaceId'] = work_space_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('tencentcloud:Oceanus/getCheckSavepoint:getCheckSavepoint', __args__, opts=opts, typ=GetCheckSavepointResult).value

    return AwaitableGetCheckSavepointResult(
        id=pulumi.get(__ret__, 'id'),
        job_id=pulumi.get(__ret__, 'job_id'),
        record_type=pulumi.get(__ret__, 'record_type'),
        result_output_file=pulumi.get(__ret__, 'result_output_file'),
        savepoint_path=pulumi.get(__ret__, 'savepoint_path'),
        savepoint_status=pulumi.get(__ret__, 'savepoint_status'),
        serial_id=pulumi.get(__ret__, 'serial_id'),
        work_space_id=pulumi.get(__ret__, 'work_space_id'))


@_utilities.lift_output_func(get_check_savepoint)
def get_check_savepoint_output(job_id: Optional[pulumi.Input[str]] = None,
                               record_type: Optional[pulumi.Input[int]] = None,
                               result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                               savepoint_path: Optional[pulumi.Input[str]] = None,
                               serial_id: Optional[pulumi.Input[str]] = None,
                               work_space_id: Optional[pulumi.Input[str]] = None,
                               opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetCheckSavepointResult]:
    """
    Use this data source to query detailed information of oceanus check_savepoint

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    example = tencentcloud.Oceanus.get_check_savepoint(job_id="cql-314rw6w0",
        record_type=1,
        savepoint_path="cosn://52xkpymp-12345/12345/10000/cql-12345/2/flink-savepoints/savepoint-000000-12334",
        serial_id="svp-52xkpymp",
        work_space_id="space-2idq8wbr")
    ```
    <!--End PulumiCodeChooser -->


    :param str job_id: Job id.
    :param int record_type: Snapshot type. 1:savepoint; 2:checkpoint; 3:cancelWithSavepoint.
    :param str result_output_file: Used to save results.
    :param str savepoint_path: Snapshot path, currently only supports COS path.
    :param str serial_id: Snapshot resource ID.
    :param str work_space_id: Workspace ID.
    """
    ...

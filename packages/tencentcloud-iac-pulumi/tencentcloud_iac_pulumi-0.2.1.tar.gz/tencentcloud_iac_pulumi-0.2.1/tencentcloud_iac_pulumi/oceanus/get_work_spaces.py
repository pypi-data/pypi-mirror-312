# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = [
    'GetWorkSpacesResult',
    'AwaitableGetWorkSpacesResult',
    'get_work_spaces',
    'get_work_spaces_output',
]

@pulumi.output_type
class GetWorkSpacesResult:
    """
    A collection of values returned by getWorkSpaces.
    """
    def __init__(__self__, filters=None, id=None, order_type=None, result_output_file=None, work_space_set_items=None):
        if filters and not isinstance(filters, list):
            raise TypeError("Expected argument 'filters' to be a list")
        pulumi.set(__self__, "filters", filters)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if order_type and not isinstance(order_type, int):
            raise TypeError("Expected argument 'order_type' to be a int")
        pulumi.set(__self__, "order_type", order_type)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)
        if work_space_set_items and not isinstance(work_space_set_items, list):
            raise TypeError("Expected argument 'work_space_set_items' to be a list")
        pulumi.set(__self__, "work_space_set_items", work_space_set_items)

    @property
    @pulumi.getter
    def filters(self) -> Optional[Sequence['outputs.GetWorkSpacesFilterResult']]:
        return pulumi.get(self, "filters")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="orderType")
    def order_type(self) -> Optional[int]:
        return pulumi.get(self, "order_type")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")

    @property
    @pulumi.getter(name="workSpaceSetItems")
    def work_space_set_items(self) -> Sequence['outputs.GetWorkSpacesWorkSpaceSetItemResult']:
        """
        List of workspace detailsNote: This field may return null, indicating that no valid values can be obtained.
        """
        return pulumi.get(self, "work_space_set_items")


class AwaitableGetWorkSpacesResult(GetWorkSpacesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetWorkSpacesResult(
            filters=self.filters,
            id=self.id,
            order_type=self.order_type,
            result_output_file=self.result_output_file,
            work_space_set_items=self.work_space_set_items)


def get_work_spaces(filters: Optional[Sequence[pulumi.InputType['GetWorkSpacesFilterArgs']]] = None,
                    order_type: Optional[int] = None,
                    result_output_file: Optional[str] = None,
                    opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetWorkSpacesResult:
    """
    Use this data source to query detailed information of oceanus work_spaces

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    example = tencentcloud.Oceanus.get_work_spaces(filters=[tencentcloud.oceanus.GetWorkSpacesFilterArgs(
            name="WorkSpaceName",
            values=["tf_example"],
        )],
        order_type=1)
    ```
    <!--End PulumiCodeChooser -->


    :param Sequence[pulumi.InputType['GetWorkSpacesFilterArgs']] filters: Filter rules.
    :param int order_type: 1:sort by creation time in descending order (default); 2:sort by creation time in ascending order; 3:sort by status in descending order; 4:sort by status in ascending order; default is 0.
    :param str result_output_file: Used to save results.
    """
    __args__ = dict()
    __args__['filters'] = filters
    __args__['orderType'] = order_type
    __args__['resultOutputFile'] = result_output_file
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('tencentcloud:Oceanus/getWorkSpaces:getWorkSpaces', __args__, opts=opts, typ=GetWorkSpacesResult).value

    return AwaitableGetWorkSpacesResult(
        filters=pulumi.get(__ret__, 'filters'),
        id=pulumi.get(__ret__, 'id'),
        order_type=pulumi.get(__ret__, 'order_type'),
        result_output_file=pulumi.get(__ret__, 'result_output_file'),
        work_space_set_items=pulumi.get(__ret__, 'work_space_set_items'))


@_utilities.lift_output_func(get_work_spaces)
def get_work_spaces_output(filters: Optional[pulumi.Input[Optional[Sequence[pulumi.InputType['GetWorkSpacesFilterArgs']]]]] = None,
                           order_type: Optional[pulumi.Input[Optional[int]]] = None,
                           result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                           opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetWorkSpacesResult]:
    """
    Use this data source to query detailed information of oceanus work_spaces

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    example = tencentcloud.Oceanus.get_work_spaces(filters=[tencentcloud.oceanus.GetWorkSpacesFilterArgs(
            name="WorkSpaceName",
            values=["tf_example"],
        )],
        order_type=1)
    ```
    <!--End PulumiCodeChooser -->


    :param Sequence[pulumi.InputType['GetWorkSpacesFilterArgs']] filters: Filter rules.
    :param int order_type: 1:sort by creation time in descending order (default); 2:sort by creation time in ascending order; 3:sort by status in descending order; 4:sort by status in ascending order; default is 0.
    :param str result_output_file: Used to save results.
    """
    ...

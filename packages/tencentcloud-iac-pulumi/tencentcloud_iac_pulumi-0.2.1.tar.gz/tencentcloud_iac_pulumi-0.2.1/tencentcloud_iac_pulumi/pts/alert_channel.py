# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = ['AlertChannelArgs', 'AlertChannel']

@pulumi.input_type
class AlertChannelArgs:
    def __init__(__self__, *,
                 notice_id: pulumi.Input[str],
                 project_id: pulumi.Input[str],
                 amp_consumer_id: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a AlertChannel resource.
        :param pulumi.Input[str] notice_id: Notice ID.
        :param pulumi.Input[str] project_id: Project ID.
        :param pulumi.Input[str] amp_consumer_id: AMP Consumer ID.
        """
        pulumi.set(__self__, "notice_id", notice_id)
        pulumi.set(__self__, "project_id", project_id)
        if amp_consumer_id is not None:
            pulumi.set(__self__, "amp_consumer_id", amp_consumer_id)

    @property
    @pulumi.getter(name="noticeId")
    def notice_id(self) -> pulumi.Input[str]:
        """
        Notice ID.
        """
        return pulumi.get(self, "notice_id")

    @notice_id.setter
    def notice_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "notice_id", value)

    @property
    @pulumi.getter(name="projectId")
    def project_id(self) -> pulumi.Input[str]:
        """
        Project ID.
        """
        return pulumi.get(self, "project_id")

    @project_id.setter
    def project_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "project_id", value)

    @property
    @pulumi.getter(name="ampConsumerId")
    def amp_consumer_id(self) -> Optional[pulumi.Input[str]]:
        """
        AMP Consumer ID.
        """
        return pulumi.get(self, "amp_consumer_id")

    @amp_consumer_id.setter
    def amp_consumer_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "amp_consumer_id", value)


@pulumi.input_type
class _AlertChannelState:
    def __init__(__self__, *,
                 amp_consumer_id: Optional[pulumi.Input[str]] = None,
                 app_id: Optional[pulumi.Input[int]] = None,
                 created_at: Optional[pulumi.Input[str]] = None,
                 notice_id: Optional[pulumi.Input[str]] = None,
                 project_id: Optional[pulumi.Input[str]] = None,
                 status: Optional[pulumi.Input[int]] = None,
                 sub_account_uin: Optional[pulumi.Input[str]] = None,
                 uin: Optional[pulumi.Input[str]] = None,
                 updated_at: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering AlertChannel resources.
        :param pulumi.Input[str] amp_consumer_id: AMP Consumer ID.
        :param pulumi.Input[int] app_id: App ID Note: this field may return null, indicating that a valid value cannot be obtained.
        :param pulumi.Input[str] created_at: Creation time Note: this field may return null, indicating that a valid value cannot be obtained.
        :param pulumi.Input[str] notice_id: Notice ID.
        :param pulumi.Input[str] project_id: Project ID.
        :param pulumi.Input[int] status: Status Note: this field may return null, indicating that a valid value cannot be obtained.
        :param pulumi.Input[str] sub_account_uin: Sub-user ID Note: this field may return null, indicating that a valid value cannot be obtained.
        :param pulumi.Input[str] uin: User ID Note: this field may return null, indicating that a valid value cannot be obtained.
        :param pulumi.Input[str] updated_at: Update time Note: this field may return null, indicating that a valid value cannot be obtained.
        """
        if amp_consumer_id is not None:
            pulumi.set(__self__, "amp_consumer_id", amp_consumer_id)
        if app_id is not None:
            pulumi.set(__self__, "app_id", app_id)
        if created_at is not None:
            pulumi.set(__self__, "created_at", created_at)
        if notice_id is not None:
            pulumi.set(__self__, "notice_id", notice_id)
        if project_id is not None:
            pulumi.set(__self__, "project_id", project_id)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if sub_account_uin is not None:
            pulumi.set(__self__, "sub_account_uin", sub_account_uin)
        if uin is not None:
            pulumi.set(__self__, "uin", uin)
        if updated_at is not None:
            pulumi.set(__self__, "updated_at", updated_at)

    @property
    @pulumi.getter(name="ampConsumerId")
    def amp_consumer_id(self) -> Optional[pulumi.Input[str]]:
        """
        AMP Consumer ID.
        """
        return pulumi.get(self, "amp_consumer_id")

    @amp_consumer_id.setter
    def amp_consumer_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "amp_consumer_id", value)

    @property
    @pulumi.getter(name="appId")
    def app_id(self) -> Optional[pulumi.Input[int]]:
        """
        App ID Note: this field may return null, indicating that a valid value cannot be obtained.
        """
        return pulumi.get(self, "app_id")

    @app_id.setter
    def app_id(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "app_id", value)

    @property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[pulumi.Input[str]]:
        """
        Creation time Note: this field may return null, indicating that a valid value cannot be obtained.
        """
        return pulumi.get(self, "created_at")

    @created_at.setter
    def created_at(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "created_at", value)

    @property
    @pulumi.getter(name="noticeId")
    def notice_id(self) -> Optional[pulumi.Input[str]]:
        """
        Notice ID.
        """
        return pulumi.get(self, "notice_id")

    @notice_id.setter
    def notice_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "notice_id", value)

    @property
    @pulumi.getter(name="projectId")
    def project_id(self) -> Optional[pulumi.Input[str]]:
        """
        Project ID.
        """
        return pulumi.get(self, "project_id")

    @project_id.setter
    def project_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "project_id", value)

    @property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[int]]:
        """
        Status Note: this field may return null, indicating that a valid value cannot be obtained.
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "status", value)

    @property
    @pulumi.getter(name="subAccountUin")
    def sub_account_uin(self) -> Optional[pulumi.Input[str]]:
        """
        Sub-user ID Note: this field may return null, indicating that a valid value cannot be obtained.
        """
        return pulumi.get(self, "sub_account_uin")

    @sub_account_uin.setter
    def sub_account_uin(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "sub_account_uin", value)

    @property
    @pulumi.getter
    def uin(self) -> Optional[pulumi.Input[str]]:
        """
        User ID Note: this field may return null, indicating that a valid value cannot be obtained.
        """
        return pulumi.get(self, "uin")

    @uin.setter
    def uin(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "uin", value)

    @property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> Optional[pulumi.Input[str]]:
        """
        Update time Note: this field may return null, indicating that a valid value cannot be obtained.
        """
        return pulumi.get(self, "updated_at")

    @updated_at.setter
    def updated_at(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "updated_at", value)


class AlertChannel(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 amp_consumer_id: Optional[pulumi.Input[str]] = None,
                 notice_id: Optional[pulumi.Input[str]] = None,
                 project_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Provides a resource to create a pts alert_channel

        > **NOTE:** Modification is not currently supported, please go to the console to modify.

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        example = tencentcloud.monitor.AlarmNotice("example",
            notice_type="ALL",
            notice_language="zh-CN",
            user_notices=[tencentcloud.monitor.AlarmNoticeUserNoticeArgs(
                receiver_type="USER",
                start_time=0,
                end_time=1,
                notice_ways=[
                    "EMAIL",
                    "SMS",
                    "WECHAT",
                ],
                user_ids=[10001],
                group_ids=[],
                phone_orders=[10001],
                phone_circle_times=2,
                phone_circle_interval=50,
                phone_inner_interval=60,
                need_phone_arrive_notice=1,
                phone_call_type="CIRCLE",
                weekdays=[
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                ],
            )],
            url_notices=[tencentcloud.monitor.AlarmNoticeUrlNoticeArgs(
                url="https://www.mytest.com/validate",
                end_time=0,
                start_time=1,
                weekdays=[
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                ],
            )])
        project = tencentcloud.pts.Project("project",
            description="desc",
            tags=[tencentcloud.pts.ProjectTagArgs(
                tag_key="createdBy",
                tag_value="terraform",
            )])
        alert_channel = tencentcloud.pts.AlertChannel("alertChannel",
            notice_id=example.id,
            project_id=project.id,
            amp_consumer_id="Consumer-vvy1xxxxxx")
        ```
        <!--End PulumiCodeChooser -->

        ## Import

        pts alert_channel can be imported using the project_id#notice_id, e.g.

        ```sh
        $ pulumi import tencentcloud:Pts/alertChannel:AlertChannel alert_channel project-kww5v8se#notice-kl66t6y9
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] amp_consumer_id: AMP Consumer ID.
        :param pulumi.Input[str] notice_id: Notice ID.
        :param pulumi.Input[str] project_id: Project ID.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: AlertChannelArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Provides a resource to create a pts alert_channel

        > **NOTE:** Modification is not currently supported, please go to the console to modify.

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        example = tencentcloud.monitor.AlarmNotice("example",
            notice_type="ALL",
            notice_language="zh-CN",
            user_notices=[tencentcloud.monitor.AlarmNoticeUserNoticeArgs(
                receiver_type="USER",
                start_time=0,
                end_time=1,
                notice_ways=[
                    "EMAIL",
                    "SMS",
                    "WECHAT",
                ],
                user_ids=[10001],
                group_ids=[],
                phone_orders=[10001],
                phone_circle_times=2,
                phone_circle_interval=50,
                phone_inner_interval=60,
                need_phone_arrive_notice=1,
                phone_call_type="CIRCLE",
                weekdays=[
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                ],
            )],
            url_notices=[tencentcloud.monitor.AlarmNoticeUrlNoticeArgs(
                url="https://www.mytest.com/validate",
                end_time=0,
                start_time=1,
                weekdays=[
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                ],
            )])
        project = tencentcloud.pts.Project("project",
            description="desc",
            tags=[tencentcloud.pts.ProjectTagArgs(
                tag_key="createdBy",
                tag_value="terraform",
            )])
        alert_channel = tencentcloud.pts.AlertChannel("alertChannel",
            notice_id=example.id,
            project_id=project.id,
            amp_consumer_id="Consumer-vvy1xxxxxx")
        ```
        <!--End PulumiCodeChooser -->

        ## Import

        pts alert_channel can be imported using the project_id#notice_id, e.g.

        ```sh
        $ pulumi import tencentcloud:Pts/alertChannel:AlertChannel alert_channel project-kww5v8se#notice-kl66t6y9
        ```

        :param str resource_name: The name of the resource.
        :param AlertChannelArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(AlertChannelArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 amp_consumer_id: Optional[pulumi.Input[str]] = None,
                 notice_id: Optional[pulumi.Input[str]] = None,
                 project_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = AlertChannelArgs.__new__(AlertChannelArgs)

            __props__.__dict__["amp_consumer_id"] = amp_consumer_id
            if notice_id is None and not opts.urn:
                raise TypeError("Missing required property 'notice_id'")
            __props__.__dict__["notice_id"] = notice_id
            if project_id is None and not opts.urn:
                raise TypeError("Missing required property 'project_id'")
            __props__.__dict__["project_id"] = project_id
            __props__.__dict__["app_id"] = None
            __props__.__dict__["created_at"] = None
            __props__.__dict__["status"] = None
            __props__.__dict__["sub_account_uin"] = None
            __props__.__dict__["uin"] = None
            __props__.__dict__["updated_at"] = None
        super(AlertChannel, __self__).__init__(
            'tencentcloud:Pts/alertChannel:AlertChannel',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            amp_consumer_id: Optional[pulumi.Input[str]] = None,
            app_id: Optional[pulumi.Input[int]] = None,
            created_at: Optional[pulumi.Input[str]] = None,
            notice_id: Optional[pulumi.Input[str]] = None,
            project_id: Optional[pulumi.Input[str]] = None,
            status: Optional[pulumi.Input[int]] = None,
            sub_account_uin: Optional[pulumi.Input[str]] = None,
            uin: Optional[pulumi.Input[str]] = None,
            updated_at: Optional[pulumi.Input[str]] = None) -> 'AlertChannel':
        """
        Get an existing AlertChannel resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] amp_consumer_id: AMP Consumer ID.
        :param pulumi.Input[int] app_id: App ID Note: this field may return null, indicating that a valid value cannot be obtained.
        :param pulumi.Input[str] created_at: Creation time Note: this field may return null, indicating that a valid value cannot be obtained.
        :param pulumi.Input[str] notice_id: Notice ID.
        :param pulumi.Input[str] project_id: Project ID.
        :param pulumi.Input[int] status: Status Note: this field may return null, indicating that a valid value cannot be obtained.
        :param pulumi.Input[str] sub_account_uin: Sub-user ID Note: this field may return null, indicating that a valid value cannot be obtained.
        :param pulumi.Input[str] uin: User ID Note: this field may return null, indicating that a valid value cannot be obtained.
        :param pulumi.Input[str] updated_at: Update time Note: this field may return null, indicating that a valid value cannot be obtained.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _AlertChannelState.__new__(_AlertChannelState)

        __props__.__dict__["amp_consumer_id"] = amp_consumer_id
        __props__.__dict__["app_id"] = app_id
        __props__.__dict__["created_at"] = created_at
        __props__.__dict__["notice_id"] = notice_id
        __props__.__dict__["project_id"] = project_id
        __props__.__dict__["status"] = status
        __props__.__dict__["sub_account_uin"] = sub_account_uin
        __props__.__dict__["uin"] = uin
        __props__.__dict__["updated_at"] = updated_at
        return AlertChannel(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="ampConsumerId")
    def amp_consumer_id(self) -> pulumi.Output[Optional[str]]:
        """
        AMP Consumer ID.
        """
        return pulumi.get(self, "amp_consumer_id")

    @property
    @pulumi.getter(name="appId")
    def app_id(self) -> pulumi.Output[int]:
        """
        App ID Note: this field may return null, indicating that a valid value cannot be obtained.
        """
        return pulumi.get(self, "app_id")

    @property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> pulumi.Output[str]:
        """
        Creation time Note: this field may return null, indicating that a valid value cannot be obtained.
        """
        return pulumi.get(self, "created_at")

    @property
    @pulumi.getter(name="noticeId")
    def notice_id(self) -> pulumi.Output[str]:
        """
        Notice ID.
        """
        return pulumi.get(self, "notice_id")

    @property
    @pulumi.getter(name="projectId")
    def project_id(self) -> pulumi.Output[str]:
        """
        Project ID.
        """
        return pulumi.get(self, "project_id")

    @property
    @pulumi.getter
    def status(self) -> pulumi.Output[int]:
        """
        Status Note: this field may return null, indicating that a valid value cannot be obtained.
        """
        return pulumi.get(self, "status")

    @property
    @pulumi.getter(name="subAccountUin")
    def sub_account_uin(self) -> pulumi.Output[str]:
        """
        Sub-user ID Note: this field may return null, indicating that a valid value cannot be obtained.
        """
        return pulumi.get(self, "sub_account_uin")

    @property
    @pulumi.getter
    def uin(self) -> pulumi.Output[str]:
        """
        User ID Note: this field may return null, indicating that a valid value cannot be obtained.
        """
        return pulumi.get(self, "uin")

    @property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> pulumi.Output[str]:
        """
        Update time Note: this field may return null, indicating that a valid value cannot be obtained.
        """
        return pulumi.get(self, "updated_at")


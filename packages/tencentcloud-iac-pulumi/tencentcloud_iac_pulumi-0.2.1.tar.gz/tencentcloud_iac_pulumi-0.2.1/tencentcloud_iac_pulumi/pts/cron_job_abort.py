# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = ['CronJobAbortArgs', 'CronJobAbort']

@pulumi.input_type
class CronJobAbortArgs:
    def __init__(__self__, *,
                 cron_job_id: pulumi.Input[str],
                 project_id: pulumi.Input[str]):
        """
        The set of arguments for constructing a CronJobAbort resource.
        :param pulumi.Input[str] cron_job_id: Cron job ID.
        :param pulumi.Input[str] project_id: Project ID.
        """
        pulumi.set(__self__, "cron_job_id", cron_job_id)
        pulumi.set(__self__, "project_id", project_id)

    @property
    @pulumi.getter(name="cronJobId")
    def cron_job_id(self) -> pulumi.Input[str]:
        """
        Cron job ID.
        """
        return pulumi.get(self, "cron_job_id")

    @cron_job_id.setter
    def cron_job_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "cron_job_id", value)

    @property
    @pulumi.getter(name="projectId")
    def project_id(self) -> pulumi.Input[str]:
        """
        Project ID.
        """
        return pulumi.get(self, "project_id")

    @project_id.setter
    def project_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "project_id", value)


@pulumi.input_type
class _CronJobAbortState:
    def __init__(__self__, *,
                 cron_job_id: Optional[pulumi.Input[str]] = None,
                 project_id: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering CronJobAbort resources.
        :param pulumi.Input[str] cron_job_id: Cron job ID.
        :param pulumi.Input[str] project_id: Project ID.
        """
        if cron_job_id is not None:
            pulumi.set(__self__, "cron_job_id", cron_job_id)
        if project_id is not None:
            pulumi.set(__self__, "project_id", project_id)

    @property
    @pulumi.getter(name="cronJobId")
    def cron_job_id(self) -> Optional[pulumi.Input[str]]:
        """
        Cron job ID.
        """
        return pulumi.get(self, "cron_job_id")

    @cron_job_id.setter
    def cron_job_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "cron_job_id", value)

    @property
    @pulumi.getter(name="projectId")
    def project_id(self) -> Optional[pulumi.Input[str]]:
        """
        Project ID.
        """
        return pulumi.get(self, "project_id")

    @project_id.setter
    def project_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "project_id", value)


class CronJobAbort(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 cron_job_id: Optional[pulumi.Input[str]] = None,
                 project_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Provides a resource to create a pts cron_job_abort

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        cron_job_abort = tencentcloud.pts.CronJobAbort("cronJobAbort",
            cron_job_id="job-dtm93vx0",
            project_id="project-abc")
        ```
        <!--End PulumiCodeChooser -->

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] cron_job_id: Cron job ID.
        :param pulumi.Input[str] project_id: Project ID.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: CronJobAbortArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Provides a resource to create a pts cron_job_abort

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        cron_job_abort = tencentcloud.pts.CronJobAbort("cronJobAbort",
            cron_job_id="job-dtm93vx0",
            project_id="project-abc")
        ```
        <!--End PulumiCodeChooser -->

        :param str resource_name: The name of the resource.
        :param CronJobAbortArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(CronJobAbortArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 cron_job_id: Optional[pulumi.Input[str]] = None,
                 project_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = CronJobAbortArgs.__new__(CronJobAbortArgs)

            if cron_job_id is None and not opts.urn:
                raise TypeError("Missing required property 'cron_job_id'")
            __props__.__dict__["cron_job_id"] = cron_job_id
            if project_id is None and not opts.urn:
                raise TypeError("Missing required property 'project_id'")
            __props__.__dict__["project_id"] = project_id
        super(CronJobAbort, __self__).__init__(
            'tencentcloud:Pts/cronJobAbort:CronJobAbort',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            cron_job_id: Optional[pulumi.Input[str]] = None,
            project_id: Optional[pulumi.Input[str]] = None) -> 'CronJobAbort':
        """
        Get an existing CronJobAbort resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] cron_job_id: Cron job ID.
        :param pulumi.Input[str] project_id: Project ID.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _CronJobAbortState.__new__(_CronJobAbortState)

        __props__.__dict__["cron_job_id"] = cron_job_id
        __props__.__dict__["project_id"] = project_id
        return CronJobAbort(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="cronJobId")
    def cron_job_id(self) -> pulumi.Output[str]:
        """
        Cron job ID.
        """
        return pulumi.get(self, "cron_job_id")

    @property
    @pulumi.getter(name="projectId")
    def project_id(self) -> pulumi.Output[str]:
        """
        Project ID.
        """
        return pulumi.get(self, "project_id")


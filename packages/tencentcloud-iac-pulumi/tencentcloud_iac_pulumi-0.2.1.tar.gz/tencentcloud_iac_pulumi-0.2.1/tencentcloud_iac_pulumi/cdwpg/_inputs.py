# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'InstanceChargePropertiesArgs',
    'InstanceResourceArgs',
    'InstanceResourceDiskSpecArgs',
]

@pulumi.input_type
class InstanceChargePropertiesArgs:
    def __init__(__self__, *,
                 renew_flag: pulumi.Input[int],
                 time_span: pulumi.Input[int],
                 time_unit: pulumi.Input[str],
                 charge_type: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[int] renew_flag: 0-no automatic renewal,1-automatic renewalNote: This field may return null, indicating that a valid value cannot be obtained.
        :param pulumi.Input[int] time_span: Time RangeNote: This field may return null, indicating that a valid value cannot be obtained.
        :param pulumi.Input[str] time_unit: Time Unit,Generally h and mNote: This field may return null, indicating that a valid value cannot be obtained.
        :param pulumi.Input[str] charge_type: Charge type, vaild values: PREPAID, POSTPAID_BY_HOUR.
        """
        pulumi.set(__self__, "renew_flag", renew_flag)
        pulumi.set(__self__, "time_span", time_span)
        pulumi.set(__self__, "time_unit", time_unit)
        if charge_type is not None:
            pulumi.set(__self__, "charge_type", charge_type)

    @property
    @pulumi.getter(name="renewFlag")
    def renew_flag(self) -> pulumi.Input[int]:
        """
        0-no automatic renewal,1-automatic renewalNote: This field may return null, indicating that a valid value cannot be obtained.
        """
        return pulumi.get(self, "renew_flag")

    @renew_flag.setter
    def renew_flag(self, value: pulumi.Input[int]):
        pulumi.set(self, "renew_flag", value)

    @property
    @pulumi.getter(name="timeSpan")
    def time_span(self) -> pulumi.Input[int]:
        """
        Time RangeNote: This field may return null, indicating that a valid value cannot be obtained.
        """
        return pulumi.get(self, "time_span")

    @time_span.setter
    def time_span(self, value: pulumi.Input[int]):
        pulumi.set(self, "time_span", value)

    @property
    @pulumi.getter(name="timeUnit")
    def time_unit(self) -> pulumi.Input[str]:
        """
        Time Unit,Generally h and mNote: This field may return null, indicating that a valid value cannot be obtained.
        """
        return pulumi.get(self, "time_unit")

    @time_unit.setter
    def time_unit(self, value: pulumi.Input[str]):
        pulumi.set(self, "time_unit", value)

    @property
    @pulumi.getter(name="chargeType")
    def charge_type(self) -> Optional[pulumi.Input[str]]:
        """
        Charge type, vaild values: PREPAID, POSTPAID_BY_HOUR.
        """
        return pulumi.get(self, "charge_type")

    @charge_type.setter
    def charge_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "charge_type", value)


@pulumi.input_type
class InstanceResourceArgs:
    def __init__(__self__, *,
                 count: pulumi.Input[int],
                 disk_spec: pulumi.Input['InstanceResourceDiskSpecArgs'],
                 spec_name: pulumi.Input[str],
                 type: pulumi.Input[str]):
        """
        :param pulumi.Input[int] count: resource count.
        :param pulumi.Input['InstanceResourceDiskSpecArgs'] disk_spec: disk Information.
        :param pulumi.Input[str] spec_name: resource name.
        :param pulumi.Input[str] type: resource type.
        """
        pulumi.set(__self__, "count", count)
        pulumi.set(__self__, "disk_spec", disk_spec)
        pulumi.set(__self__, "spec_name", spec_name)
        pulumi.set(__self__, "type", type)

    @property
    @pulumi.getter
    def count(self) -> pulumi.Input[int]:
        """
        resource count.
        """
        return pulumi.get(self, "count")

    @count.setter
    def count(self, value: pulumi.Input[int]):
        pulumi.set(self, "count", value)

    @property
    @pulumi.getter(name="diskSpec")
    def disk_spec(self) -> pulumi.Input['InstanceResourceDiskSpecArgs']:
        """
        disk Information.
        """
        return pulumi.get(self, "disk_spec")

    @disk_spec.setter
    def disk_spec(self, value: pulumi.Input['InstanceResourceDiskSpecArgs']):
        pulumi.set(self, "disk_spec", value)

    @property
    @pulumi.getter(name="specName")
    def spec_name(self) -> pulumi.Input[str]:
        """
        resource name.
        """
        return pulumi.get(self, "spec_name")

    @spec_name.setter
    def spec_name(self, value: pulumi.Input[str]):
        pulumi.set(self, "spec_name", value)

    @property
    @pulumi.getter
    def type(self) -> pulumi.Input[str]:
        """
        resource type.
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: pulumi.Input[str]):
        pulumi.set(self, "type", value)


@pulumi.input_type
class InstanceResourceDiskSpecArgs:
    def __init__(__self__, *,
                 disk_count: pulumi.Input[int],
                 disk_size: pulumi.Input[int],
                 disk_type: pulumi.Input[str]):
        """
        :param pulumi.Input[int] disk_count: disk count.
        :param pulumi.Input[int] disk_size: disk size.
        :param pulumi.Input[str] disk_type: disk type.
        """
        pulumi.set(__self__, "disk_count", disk_count)
        pulumi.set(__self__, "disk_size", disk_size)
        pulumi.set(__self__, "disk_type", disk_type)

    @property
    @pulumi.getter(name="diskCount")
    def disk_count(self) -> pulumi.Input[int]:
        """
        disk count.
        """
        return pulumi.get(self, "disk_count")

    @disk_count.setter
    def disk_count(self, value: pulumi.Input[int]):
        pulumi.set(self, "disk_count", value)

    @property
    @pulumi.getter(name="diskSize")
    def disk_size(self) -> pulumi.Input[int]:
        """
        disk size.
        """
        return pulumi.get(self, "disk_size")

    @disk_size.setter
    def disk_size(self, value: pulumi.Input[int]):
        pulumi.set(self, "disk_size", value)

    @property
    @pulumi.getter(name="diskType")
    def disk_type(self) -> pulumi.Input[str]:
        """
        disk type.
        """
        return pulumi.get(self, "disk_type")

    @disk_type.setter
    def disk_type(self, value: pulumi.Input[str]):
        pulumi.set(self, "disk_type", value)



# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetGatewayCanaryRulesResult',
    'AwaitableGetGatewayCanaryRulesResult',
    'get_gateway_canary_rules',
    'get_gateway_canary_rules_output',
]

@pulumi.output_type
class GetGatewayCanaryRulesResult:
    """
    A collection of values returned by getGatewayCanaryRules.
    """
    def __init__(__self__, gateway_id=None, id=None, result_output_file=None, results=None, service_id=None):
        if gateway_id and not isinstance(gateway_id, str):
            raise TypeError("Expected argument 'gateway_id' to be a str")
        pulumi.set(__self__, "gateway_id", gateway_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)
        if results and not isinstance(results, list):
            raise TypeError("Expected argument 'results' to be a list")
        pulumi.set(__self__, "results", results)
        if service_id and not isinstance(service_id, str):
            raise TypeError("Expected argument 'service_id' to be a str")
        pulumi.set(__self__, "service_id", service_id)

    @property
    @pulumi.getter(name="gatewayId")
    def gateway_id(self) -> str:
        return pulumi.get(self, "gateway_id")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")

    @property
    @pulumi.getter
    def results(self) -> Sequence['outputs.GetGatewayCanaryRulesResultResult']:
        """
        canary rule configuration.
        """
        return pulumi.get(self, "results")

    @property
    @pulumi.getter(name="serviceId")
    def service_id(self) -> str:
        """
        service ID.
        """
        return pulumi.get(self, "service_id")


class AwaitableGetGatewayCanaryRulesResult(GetGatewayCanaryRulesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetGatewayCanaryRulesResult(
            gateway_id=self.gateway_id,
            id=self.id,
            result_output_file=self.result_output_file,
            results=self.results,
            service_id=self.service_id)


def get_gateway_canary_rules(gateway_id: Optional[str] = None,
                             result_output_file: Optional[str] = None,
                             service_id: Optional[str] = None,
                             opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetGatewayCanaryRulesResult:
    """
    Use this data source to query detailed information of tse gateway_canary_rules

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    gateway_canary_rules = tencentcloud.Tse.get_gateway_canary_rules(gateway_id="gateway-xxxxxx",
        service_id="451a9920-e67a-4519-af41-fccac0e72005")
    ```
    <!--End PulumiCodeChooser -->


    :param str gateway_id: gateway ID.
    :param str result_output_file: Used to save results.
    :param str service_id: service ID.
    """
    __args__ = dict()
    __args__['gatewayId'] = gateway_id
    __args__['resultOutputFile'] = result_output_file
    __args__['serviceId'] = service_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('tencentcloud:Tse/getGatewayCanaryRules:getGatewayCanaryRules', __args__, opts=opts, typ=GetGatewayCanaryRulesResult).value

    return AwaitableGetGatewayCanaryRulesResult(
        gateway_id=pulumi.get(__ret__, 'gateway_id'),
        id=pulumi.get(__ret__, 'id'),
        result_output_file=pulumi.get(__ret__, 'result_output_file'),
        results=pulumi.get(__ret__, 'results'),
        service_id=pulumi.get(__ret__, 'service_id'))


@_utilities.lift_output_func(get_gateway_canary_rules)
def get_gateway_canary_rules_output(gateway_id: Optional[pulumi.Input[str]] = None,
                                    result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                                    service_id: Optional[pulumi.Input[str]] = None,
                                    opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetGatewayCanaryRulesResult]:
    """
    Use this data source to query detailed information of tse gateway_canary_rules

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    gateway_canary_rules = tencentcloud.Tse.get_gateway_canary_rules(gateway_id="gateway-xxxxxx",
        service_id="451a9920-e67a-4519-af41-fccac0e72005")
    ```
    <!--End PulumiCodeChooser -->


    :param str gateway_id: gateway ID.
    :param str result_output_file: Used to save results.
    :param str service_id: service ID.
    """
    ...

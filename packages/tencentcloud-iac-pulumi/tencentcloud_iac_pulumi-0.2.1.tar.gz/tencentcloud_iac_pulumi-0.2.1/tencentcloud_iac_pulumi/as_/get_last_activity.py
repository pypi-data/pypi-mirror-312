# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetLastActivityResult',
    'AwaitableGetLastActivityResult',
    'get_last_activity',
    'get_last_activity_output',
]

@pulumi.output_type
class GetLastActivityResult:
    """
    A collection of values returned by getLastActivity.
    """
    def __init__(__self__, activity_sets=None, auto_scaling_group_ids=None, id=None, result_output_file=None):
        if activity_sets and not isinstance(activity_sets, list):
            raise TypeError("Expected argument 'activity_sets' to be a list")
        pulumi.set(__self__, "activity_sets", activity_sets)
        if auto_scaling_group_ids and not isinstance(auto_scaling_group_ids, list):
            raise TypeError("Expected argument 'auto_scaling_group_ids' to be a list")
        pulumi.set(__self__, "auto_scaling_group_ids", auto_scaling_group_ids)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)

    @property
    @pulumi.getter(name="activitySets")
    def activity_sets(self) -> Sequence['outputs.GetLastActivityActivitySetResult']:
        """
        Information set of eligible scaling activities. Scaling groups without scaling activities are not returned. For example, if there are 50 auto scaling group IDs but only 45 records are returned, it indicates that 5 of the auto scaling groups do not have scaling activities.
        """
        return pulumi.get(self, "activity_sets")

    @property
    @pulumi.getter(name="autoScalingGroupIds")
    def auto_scaling_group_ids(self) -> Sequence[str]:
        return pulumi.get(self, "auto_scaling_group_ids")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")


class AwaitableGetLastActivityResult(GetLastActivityResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetLastActivityResult(
            activity_sets=self.activity_sets,
            auto_scaling_group_ids=self.auto_scaling_group_ids,
            id=self.id,
            result_output_file=self.result_output_file)


def get_last_activity(auto_scaling_group_ids: Optional[Sequence[str]] = None,
                      result_output_file: Optional[str] = None,
                      opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetLastActivityResult:
    """
    Use this data source to query detailed information of as last_activity

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    last_activity = tencentcloud.As.get_last_activity(auto_scaling_group_ids=["asc-lo0b94oy"])
    ```
    <!--End PulumiCodeChooser -->


    :param Sequence[str] auto_scaling_group_ids: ID list of an auto scaling group.
    :param str result_output_file: Used to save results.
    """
    __args__ = dict()
    __args__['autoScalingGroupIds'] = auto_scaling_group_ids
    __args__['resultOutputFile'] = result_output_file
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('tencentcloud:As/getLastActivity:getLastActivity', __args__, opts=opts, typ=GetLastActivityResult).value

    return AwaitableGetLastActivityResult(
        activity_sets=pulumi.get(__ret__, 'activity_sets'),
        auto_scaling_group_ids=pulumi.get(__ret__, 'auto_scaling_group_ids'),
        id=pulumi.get(__ret__, 'id'),
        result_output_file=pulumi.get(__ret__, 'result_output_file'))


@_utilities.lift_output_func(get_last_activity)
def get_last_activity_output(auto_scaling_group_ids: Optional[pulumi.Input[Sequence[str]]] = None,
                             result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                             opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetLastActivityResult]:
    """
    Use this data source to query detailed information of as last_activity

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    last_activity = tencentcloud.As.get_last_activity(auto_scaling_group_ids=["asc-lo0b94oy"])
    ```
    <!--End PulumiCodeChooser -->


    :param Sequence[str] auto_scaling_group_ids: ID list of an auto scaling group.
    :param str result_output_file: Used to save results.
    """
    ...

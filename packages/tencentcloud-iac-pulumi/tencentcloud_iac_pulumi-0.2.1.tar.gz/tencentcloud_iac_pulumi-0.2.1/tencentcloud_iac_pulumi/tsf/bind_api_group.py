# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = ['BindApiGroupArgs', 'BindApiGroup']

@pulumi.input_type
class BindApiGroupArgs:
    def __init__(__self__, *,
                 gateway_deploy_group_id: pulumi.Input[str],
                 group_id: pulumi.Input[str]):
        """
        The set of arguments for constructing a BindApiGroup resource.
        :param pulumi.Input[str] gateway_deploy_group_id: gateway group id.
        :param pulumi.Input[str] group_id: group id.
        """
        pulumi.set(__self__, "gateway_deploy_group_id", gateway_deploy_group_id)
        pulumi.set(__self__, "group_id", group_id)

    @property
    @pulumi.getter(name="gatewayDeployGroupId")
    def gateway_deploy_group_id(self) -> pulumi.Input[str]:
        """
        gateway group id.
        """
        return pulumi.get(self, "gateway_deploy_group_id")

    @gateway_deploy_group_id.setter
    def gateway_deploy_group_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "gateway_deploy_group_id", value)

    @property
    @pulumi.getter(name="groupId")
    def group_id(self) -> pulumi.Input[str]:
        """
        group id.
        """
        return pulumi.get(self, "group_id")

    @group_id.setter
    def group_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "group_id", value)


@pulumi.input_type
class _BindApiGroupState:
    def __init__(__self__, *,
                 gateway_deploy_group_id: Optional[pulumi.Input[str]] = None,
                 group_id: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering BindApiGroup resources.
        :param pulumi.Input[str] gateway_deploy_group_id: gateway group id.
        :param pulumi.Input[str] group_id: group id.
        """
        if gateway_deploy_group_id is not None:
            pulumi.set(__self__, "gateway_deploy_group_id", gateway_deploy_group_id)
        if group_id is not None:
            pulumi.set(__self__, "group_id", group_id)

    @property
    @pulumi.getter(name="gatewayDeployGroupId")
    def gateway_deploy_group_id(self) -> Optional[pulumi.Input[str]]:
        """
        gateway group id.
        """
        return pulumi.get(self, "gateway_deploy_group_id")

    @gateway_deploy_group_id.setter
    def gateway_deploy_group_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "gateway_deploy_group_id", value)

    @property
    @pulumi.getter(name="groupId")
    def group_id(self) -> Optional[pulumi.Input[str]]:
        """
        group id.
        """
        return pulumi.get(self, "group_id")

    @group_id.setter
    def group_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "group_id", value)


class BindApiGroup(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 gateway_deploy_group_id: Optional[pulumi.Input[str]] = None,
                 group_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Provides a resource to create a tsf bind_api_group

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        bind_api_group = tencentcloud.tsf.BindApiGroup("bindApiGroup",
            gateway_deploy_group_id="group-vzd97zpy",
            group_id="grp-qp0rj3zi")
        ```
        <!--End PulumiCodeChooser -->

        ## Import

        tsf bind_api_group can be imported using the id, e.g.

        ```sh
        $ pulumi import tencentcloud:Tsf/bindApiGroup:BindApiGroup bind_api_group bind_api_group_id
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] gateway_deploy_group_id: gateway group id.
        :param pulumi.Input[str] group_id: group id.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: BindApiGroupArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Provides a resource to create a tsf bind_api_group

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        bind_api_group = tencentcloud.tsf.BindApiGroup("bindApiGroup",
            gateway_deploy_group_id="group-vzd97zpy",
            group_id="grp-qp0rj3zi")
        ```
        <!--End PulumiCodeChooser -->

        ## Import

        tsf bind_api_group can be imported using the id, e.g.

        ```sh
        $ pulumi import tencentcloud:Tsf/bindApiGroup:BindApiGroup bind_api_group bind_api_group_id
        ```

        :param str resource_name: The name of the resource.
        :param BindApiGroupArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(BindApiGroupArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 gateway_deploy_group_id: Optional[pulumi.Input[str]] = None,
                 group_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = BindApiGroupArgs.__new__(BindApiGroupArgs)

            if gateway_deploy_group_id is None and not opts.urn:
                raise TypeError("Missing required property 'gateway_deploy_group_id'")
            __props__.__dict__["gateway_deploy_group_id"] = gateway_deploy_group_id
            if group_id is None and not opts.urn:
                raise TypeError("Missing required property 'group_id'")
            __props__.__dict__["group_id"] = group_id
        super(BindApiGroup, __self__).__init__(
            'tencentcloud:Tsf/bindApiGroup:BindApiGroup',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            gateway_deploy_group_id: Optional[pulumi.Input[str]] = None,
            group_id: Optional[pulumi.Input[str]] = None) -> 'BindApiGroup':
        """
        Get an existing BindApiGroup resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] gateway_deploy_group_id: gateway group id.
        :param pulumi.Input[str] group_id: group id.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _BindApiGroupState.__new__(_BindApiGroupState)

        __props__.__dict__["gateway_deploy_group_id"] = gateway_deploy_group_id
        __props__.__dict__["group_id"] = group_id
        return BindApiGroup(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="gatewayDeployGroupId")
    def gateway_deploy_group_id(self) -> pulumi.Output[str]:
        """
        gateway group id.
        """
        return pulumi.get(self, "gateway_deploy_group_id")

    @property
    @pulumi.getter(name="groupId")
    def group_id(self) -> pulumi.Output[str]:
        """
        group id.
        """
        return pulumi.get(self, "group_id")


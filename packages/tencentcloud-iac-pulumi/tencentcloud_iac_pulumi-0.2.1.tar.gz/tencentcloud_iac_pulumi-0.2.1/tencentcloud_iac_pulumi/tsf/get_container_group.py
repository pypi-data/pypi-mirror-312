# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetContainerGroupResult',
    'AwaitableGetContainerGroupResult',
    'get_container_group',
    'get_container_group_output',
]

@pulumi.output_type
class GetContainerGroupResult:
    """
    A collection of values returned by getContainerGroup.
    """
    def __init__(__self__, application_id=None, cluster_id=None, id=None, namespace_id=None, order_by=None, order_type=None, result_output_file=None, results=None, search_word=None):
        if application_id and not isinstance(application_id, str):
            raise TypeError("Expected argument 'application_id' to be a str")
        pulumi.set(__self__, "application_id", application_id)
        if cluster_id and not isinstance(cluster_id, str):
            raise TypeError("Expected argument 'cluster_id' to be a str")
        pulumi.set(__self__, "cluster_id", cluster_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if namespace_id and not isinstance(namespace_id, str):
            raise TypeError("Expected argument 'namespace_id' to be a str")
        pulumi.set(__self__, "namespace_id", namespace_id)
        if order_by and not isinstance(order_by, str):
            raise TypeError("Expected argument 'order_by' to be a str")
        pulumi.set(__self__, "order_by", order_by)
        if order_type and not isinstance(order_type, int):
            raise TypeError("Expected argument 'order_type' to be a int")
        pulumi.set(__self__, "order_type", order_type)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)
        if results and not isinstance(results, list):
            raise TypeError("Expected argument 'results' to be a list")
        pulumi.set(__self__, "results", results)
        if search_word and not isinstance(search_word, str):
            raise TypeError("Expected argument 'search_word' to be a str")
        pulumi.set(__self__, "search_word", search_word)

    @property
    @pulumi.getter(name="applicationId")
    def application_id(self) -> Optional[str]:
        return pulumi.get(self, "application_id")

    @property
    @pulumi.getter(name="clusterId")
    def cluster_id(self) -> Optional[str]:
        """
        Cluster Id.Note: This field may return null, indicating that no valid value was found.
        """
        return pulumi.get(self, "cluster_id")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="namespaceId")
    def namespace_id(self) -> Optional[str]:
        """
        Namespace Id.Note: This field may return null, indicating that no valid value was found.
        """
        return pulumi.get(self, "namespace_id")

    @property
    @pulumi.getter(name="orderBy")
    def order_by(self) -> Optional[str]:
        return pulumi.get(self, "order_by")

    @property
    @pulumi.getter(name="orderType")
    def order_type(self) -> Optional[int]:
        return pulumi.get(self, "order_type")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")

    @property
    @pulumi.getter
    def results(self) -> Sequence['outputs.GetContainerGroupResultResult']:
        """
        result list.
        """
        return pulumi.get(self, "results")

    @property
    @pulumi.getter(name="searchWord")
    def search_word(self) -> Optional[str]:
        return pulumi.get(self, "search_word")


class AwaitableGetContainerGroupResult(GetContainerGroupResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetContainerGroupResult(
            application_id=self.application_id,
            cluster_id=self.cluster_id,
            id=self.id,
            namespace_id=self.namespace_id,
            order_by=self.order_by,
            order_type=self.order_type,
            result_output_file=self.result_output_file,
            results=self.results,
            search_word=self.search_word)


def get_container_group(application_id: Optional[str] = None,
                        cluster_id: Optional[str] = None,
                        namespace_id: Optional[str] = None,
                        order_by: Optional[str] = None,
                        order_type: Optional[int] = None,
                        result_output_file: Optional[str] = None,
                        search_word: Optional[str] = None,
                        opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetContainerGroupResult:
    """
    Use this data source to query detailed information of tsf container_group

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    container_group = tencentcloud.Tsf.get_container_group(application_id="application-a24x29xv",
        cluster_id="cluster-vwgj5e6y",
        namespace_id="namespace-aemrg36v",
        order_by="createTime",
        order_type=0,
        search_word="keep")
    ```
    <!--End PulumiCodeChooser -->


    :param str application_id: ApplicationId, required.
    :param str cluster_id: Cluster Id.
    :param str namespace_id: Namespace Id.
    :param str order_by: The sorting field. By default, it is the createTime field. Supports id, name, createTime.
    :param int order_type: The sorting order. By default, it is 1, indicating descending order. 0 indicates ascending order, and 1 indicates descending order.
    :param str result_output_file: Used to save results.
    :param str search_word: search word, support group name.
    """
    __args__ = dict()
    __args__['applicationId'] = application_id
    __args__['clusterId'] = cluster_id
    __args__['namespaceId'] = namespace_id
    __args__['orderBy'] = order_by
    __args__['orderType'] = order_type
    __args__['resultOutputFile'] = result_output_file
    __args__['searchWord'] = search_word
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('tencentcloud:Tsf/getContainerGroup:getContainerGroup', __args__, opts=opts, typ=GetContainerGroupResult).value

    return AwaitableGetContainerGroupResult(
        application_id=pulumi.get(__ret__, 'application_id'),
        cluster_id=pulumi.get(__ret__, 'cluster_id'),
        id=pulumi.get(__ret__, 'id'),
        namespace_id=pulumi.get(__ret__, 'namespace_id'),
        order_by=pulumi.get(__ret__, 'order_by'),
        order_type=pulumi.get(__ret__, 'order_type'),
        result_output_file=pulumi.get(__ret__, 'result_output_file'),
        results=pulumi.get(__ret__, 'results'),
        search_word=pulumi.get(__ret__, 'search_word'))


@_utilities.lift_output_func(get_container_group)
def get_container_group_output(application_id: Optional[pulumi.Input[Optional[str]]] = None,
                               cluster_id: Optional[pulumi.Input[Optional[str]]] = None,
                               namespace_id: Optional[pulumi.Input[Optional[str]]] = None,
                               order_by: Optional[pulumi.Input[Optional[str]]] = None,
                               order_type: Optional[pulumi.Input[Optional[int]]] = None,
                               result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                               search_word: Optional[pulumi.Input[Optional[str]]] = None,
                               opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetContainerGroupResult]:
    """
    Use this data source to query detailed information of tsf container_group

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    container_group = tencentcloud.Tsf.get_container_group(application_id="application-a24x29xv",
        cluster_id="cluster-vwgj5e6y",
        namespace_id="namespace-aemrg36v",
        order_by="createTime",
        order_type=0,
        search_word="keep")
    ```
    <!--End PulumiCodeChooser -->


    :param str application_id: ApplicationId, required.
    :param str cluster_id: Cluster Id.
    :param str namespace_id: Namespace Id.
    :param str order_by: The sorting field. By default, it is the createTime field. Supports id, name, createTime.
    :param int order_type: The sorting order. By default, it is 1, indicating descending order. 0 indicates ascending order, and 1 indicates descending order.
    :param str result_output_file: Used to save results.
    :param str search_word: search word, support group name.
    """
    ...

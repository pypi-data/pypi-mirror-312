# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = ['UnitNamespaceArgs', 'UnitNamespace']

@pulumi.input_type
class UnitNamespaceArgs:
    def __init__(__self__, *,
                 gateway_instance_id: pulumi.Input[str],
                 namespace_id: pulumi.Input[str],
                 namespace_name: pulumi.Input[str]):
        """
        The set of arguments for constructing a UnitNamespace resource.
        :param pulumi.Input[str] gateway_instance_id: gateway instance Id.
        :param pulumi.Input[str] namespace_id: namespace id.
        :param pulumi.Input[str] namespace_name: namespace name.
        """
        pulumi.set(__self__, "gateway_instance_id", gateway_instance_id)
        pulumi.set(__self__, "namespace_id", namespace_id)
        pulumi.set(__self__, "namespace_name", namespace_name)

    @property
    @pulumi.getter(name="gatewayInstanceId")
    def gateway_instance_id(self) -> pulumi.Input[str]:
        """
        gateway instance Id.
        """
        return pulumi.get(self, "gateway_instance_id")

    @gateway_instance_id.setter
    def gateway_instance_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "gateway_instance_id", value)

    @property
    @pulumi.getter(name="namespaceId")
    def namespace_id(self) -> pulumi.Input[str]:
        """
        namespace id.
        """
        return pulumi.get(self, "namespace_id")

    @namespace_id.setter
    def namespace_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "namespace_id", value)

    @property
    @pulumi.getter(name="namespaceName")
    def namespace_name(self) -> pulumi.Input[str]:
        """
        namespace name.
        """
        return pulumi.get(self, "namespace_name")

    @namespace_name.setter
    def namespace_name(self, value: pulumi.Input[str]):
        pulumi.set(self, "namespace_name", value)


@pulumi.input_type
class _UnitNamespaceState:
    def __init__(__self__, *,
                 created_time: Optional[pulumi.Input[str]] = None,
                 gateway_instance_id: Optional[pulumi.Input[str]] = None,
                 namespace_id: Optional[pulumi.Input[str]] = None,
                 namespace_name: Optional[pulumi.Input[str]] = None,
                 updated_time: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering UnitNamespace resources.
        :param pulumi.Input[str] created_time: Create time. Note: This field may return null, indicating that no valid value was found.
        :param pulumi.Input[str] gateway_instance_id: gateway instance Id.
        :param pulumi.Input[str] namespace_id: namespace id.
        :param pulumi.Input[str] namespace_name: namespace name.
        :param pulumi.Input[str] updated_time: Update time. Note: This field may return null, indicating that no valid value was found.
        """
        if created_time is not None:
            pulumi.set(__self__, "created_time", created_time)
        if gateway_instance_id is not None:
            pulumi.set(__self__, "gateway_instance_id", gateway_instance_id)
        if namespace_id is not None:
            pulumi.set(__self__, "namespace_id", namespace_id)
        if namespace_name is not None:
            pulumi.set(__self__, "namespace_name", namespace_name)
        if updated_time is not None:
            pulumi.set(__self__, "updated_time", updated_time)

    @property
    @pulumi.getter(name="createdTime")
    def created_time(self) -> Optional[pulumi.Input[str]]:
        """
        Create time. Note: This field may return null, indicating that no valid value was found.
        """
        return pulumi.get(self, "created_time")

    @created_time.setter
    def created_time(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "created_time", value)

    @property
    @pulumi.getter(name="gatewayInstanceId")
    def gateway_instance_id(self) -> Optional[pulumi.Input[str]]:
        """
        gateway instance Id.
        """
        return pulumi.get(self, "gateway_instance_id")

    @gateway_instance_id.setter
    def gateway_instance_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "gateway_instance_id", value)

    @property
    @pulumi.getter(name="namespaceId")
    def namespace_id(self) -> Optional[pulumi.Input[str]]:
        """
        namespace id.
        """
        return pulumi.get(self, "namespace_id")

    @namespace_id.setter
    def namespace_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "namespace_id", value)

    @property
    @pulumi.getter(name="namespaceName")
    def namespace_name(self) -> Optional[pulumi.Input[str]]:
        """
        namespace name.
        """
        return pulumi.get(self, "namespace_name")

    @namespace_name.setter
    def namespace_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "namespace_name", value)

    @property
    @pulumi.getter(name="updatedTime")
    def updated_time(self) -> Optional[pulumi.Input[str]]:
        """
        Update time. Note: This field may return null, indicating that no valid value was found.
        """
        return pulumi.get(self, "updated_time")

    @updated_time.setter
    def updated_time(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "updated_time", value)


class UnitNamespace(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 gateway_instance_id: Optional[pulumi.Input[str]] = None,
                 namespace_id: Optional[pulumi.Input[str]] = None,
                 namespace_name: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Provides a resource to create a tsf unit_namespace

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        unit_namespace = tencentcloud.tsf.UnitNamespace("unitNamespace",
            gateway_instance_id="gw-ins-lvdypq5k",
            namespace_id="namespace-vwgo38wy",
            namespace_name="keep-terraform-cls")
        ```
        <!--End PulumiCodeChooser -->

        ## Import

        tsf unit_namespace can be imported using the id, e.g.

        ```sh
        $ pulumi import tencentcloud:Tsf/unitNamespace:UnitNamespace unit_namespace gw-ins-lvdypq5k#namespace-vwgo38wy
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] gateway_instance_id: gateway instance Id.
        :param pulumi.Input[str] namespace_id: namespace id.
        :param pulumi.Input[str] namespace_name: namespace name.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: UnitNamespaceArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Provides a resource to create a tsf unit_namespace

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        unit_namespace = tencentcloud.tsf.UnitNamespace("unitNamespace",
            gateway_instance_id="gw-ins-lvdypq5k",
            namespace_id="namespace-vwgo38wy",
            namespace_name="keep-terraform-cls")
        ```
        <!--End PulumiCodeChooser -->

        ## Import

        tsf unit_namespace can be imported using the id, e.g.

        ```sh
        $ pulumi import tencentcloud:Tsf/unitNamespace:UnitNamespace unit_namespace gw-ins-lvdypq5k#namespace-vwgo38wy
        ```

        :param str resource_name: The name of the resource.
        :param UnitNamespaceArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(UnitNamespaceArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 gateway_instance_id: Optional[pulumi.Input[str]] = None,
                 namespace_id: Optional[pulumi.Input[str]] = None,
                 namespace_name: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = UnitNamespaceArgs.__new__(UnitNamespaceArgs)

            if gateway_instance_id is None and not opts.urn:
                raise TypeError("Missing required property 'gateway_instance_id'")
            __props__.__dict__["gateway_instance_id"] = gateway_instance_id
            if namespace_id is None and not opts.urn:
                raise TypeError("Missing required property 'namespace_id'")
            __props__.__dict__["namespace_id"] = namespace_id
            if namespace_name is None and not opts.urn:
                raise TypeError("Missing required property 'namespace_name'")
            __props__.__dict__["namespace_name"] = namespace_name
            __props__.__dict__["created_time"] = None
            __props__.__dict__["updated_time"] = None
        super(UnitNamespace, __self__).__init__(
            'tencentcloud:Tsf/unitNamespace:UnitNamespace',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            created_time: Optional[pulumi.Input[str]] = None,
            gateway_instance_id: Optional[pulumi.Input[str]] = None,
            namespace_id: Optional[pulumi.Input[str]] = None,
            namespace_name: Optional[pulumi.Input[str]] = None,
            updated_time: Optional[pulumi.Input[str]] = None) -> 'UnitNamespace':
        """
        Get an existing UnitNamespace resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] created_time: Create time. Note: This field may return null, indicating that no valid value was found.
        :param pulumi.Input[str] gateway_instance_id: gateway instance Id.
        :param pulumi.Input[str] namespace_id: namespace id.
        :param pulumi.Input[str] namespace_name: namespace name.
        :param pulumi.Input[str] updated_time: Update time. Note: This field may return null, indicating that no valid value was found.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _UnitNamespaceState.__new__(_UnitNamespaceState)

        __props__.__dict__["created_time"] = created_time
        __props__.__dict__["gateway_instance_id"] = gateway_instance_id
        __props__.__dict__["namespace_id"] = namespace_id
        __props__.__dict__["namespace_name"] = namespace_name
        __props__.__dict__["updated_time"] = updated_time
        return UnitNamespace(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="createdTime")
    def created_time(self) -> pulumi.Output[str]:
        """
        Create time. Note: This field may return null, indicating that no valid value was found.
        """
        return pulumi.get(self, "created_time")

    @property
    @pulumi.getter(name="gatewayInstanceId")
    def gateway_instance_id(self) -> pulumi.Output[str]:
        """
        gateway instance Id.
        """
        return pulumi.get(self, "gateway_instance_id")

    @property
    @pulumi.getter(name="namespaceId")
    def namespace_id(self) -> pulumi.Output[str]:
        """
        namespace id.
        """
        return pulumi.get(self, "namespace_id")

    @property
    @pulumi.getter(name="namespaceName")
    def namespace_name(self) -> pulumi.Output[str]:
        """
        namespace name.
        """
        return pulumi.get(self, "namespace_name")

    @property
    @pulumi.getter(name="updatedTime")
    def updated_time(self) -> pulumi.Output[str]:
        """
        Update time. Note: This field may return null, indicating that no valid value was found.
        """
        return pulumi.get(self, "updated_time")


# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetUnitRulesResult',
    'AwaitableGetUnitRulesResult',
    'get_unit_rules',
    'get_unit_rules_output',
]

@pulumi.output_type
class GetUnitRulesResult:
    """
    A collection of values returned by getUnitRules.
    """
    def __init__(__self__, gateway_instance_id=None, id=None, result_output_file=None, results=None, status=None):
        if gateway_instance_id and not isinstance(gateway_instance_id, str):
            raise TypeError("Expected argument 'gateway_instance_id' to be a str")
        pulumi.set(__self__, "gateway_instance_id", gateway_instance_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)
        if results and not isinstance(results, list):
            raise TypeError("Expected argument 'results' to be a list")
        pulumi.set(__self__, "results", results)
        if status and not isinstance(status, str):
            raise TypeError("Expected argument 'status' to be a str")
        pulumi.set(__self__, "status", status)

    @property
    @pulumi.getter(name="gatewayInstanceId")
    def gateway_instance_id(self) -> str:
        """
        Gateway Entity ID.
        """
        return pulumi.get(self, "gateway_instance_id")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")

    @property
    @pulumi.getter
    def results(self) -> Sequence['outputs.GetUnitRulesResultResult']:
        """
        Pagination list information.
        """
        return pulumi.get(self, "results")

    @property
    @pulumi.getter
    def status(self) -> Optional[str]:
        """
        Use status: enabled/disabled.
        """
        return pulumi.get(self, "status")


class AwaitableGetUnitRulesResult(GetUnitRulesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetUnitRulesResult(
            gateway_instance_id=self.gateway_instance_id,
            id=self.id,
            result_output_file=self.result_output_file,
            results=self.results,
            status=self.status)


def get_unit_rules(gateway_instance_id: Optional[str] = None,
                   result_output_file: Optional[str] = None,
                   status: Optional[str] = None,
                   opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetUnitRulesResult:
    """
    Use this data source to query detailed information of tsf unit_rules

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    unit_rules = tencentcloud.Tsf.get_unit_rules(gateway_instance_id="gw-ins-lvdypq5k",
        status="disabled")
    ```
    <!--End PulumiCodeChooser -->


    :param str gateway_instance_id: gateway instance id.
    :param str result_output_file: Used to save results.
    :param str status: Enabled state, disabled: unpublished, enabled: published.
    """
    __args__ = dict()
    __args__['gatewayInstanceId'] = gateway_instance_id
    __args__['resultOutputFile'] = result_output_file
    __args__['status'] = status
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('tencentcloud:Tsf/getUnitRules:getUnitRules', __args__, opts=opts, typ=GetUnitRulesResult).value

    return AwaitableGetUnitRulesResult(
        gateway_instance_id=pulumi.get(__ret__, 'gateway_instance_id'),
        id=pulumi.get(__ret__, 'id'),
        result_output_file=pulumi.get(__ret__, 'result_output_file'),
        results=pulumi.get(__ret__, 'results'),
        status=pulumi.get(__ret__, 'status'))


@_utilities.lift_output_func(get_unit_rules)
def get_unit_rules_output(gateway_instance_id: Optional[pulumi.Input[str]] = None,
                          result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                          status: Optional[pulumi.Input[Optional[str]]] = None,
                          opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetUnitRulesResult]:
    """
    Use this data source to query detailed information of tsf unit_rules

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    unit_rules = tencentcloud.Tsf.get_unit_rules(gateway_instance_id="gw-ins-lvdypq5k",
        status="disabled")
    ```
    <!--End PulumiCodeChooser -->


    :param str gateway_instance_id: gateway instance id.
    :param str result_output_file: Used to save results.
    :param str status: Enabled state, disabled: unpublished, enabled: published.
    """
    ...

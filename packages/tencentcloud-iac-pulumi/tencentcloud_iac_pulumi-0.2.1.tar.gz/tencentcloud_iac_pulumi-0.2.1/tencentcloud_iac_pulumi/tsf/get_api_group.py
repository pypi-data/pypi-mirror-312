# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetApiGroupResult',
    'AwaitableGetApiGroupResult',
    'get_api_group',
    'get_api_group_output',
]

@pulumi.output_type
class GetApiGroupResult:
    """
    A collection of values returned by getApiGroup.
    """
    def __init__(__self__, auth_type=None, gateway_instance_id=None, group_type=None, id=None, order_by=None, order_type=None, result_output_file=None, results=None, search_word=None, status=None):
        if auth_type and not isinstance(auth_type, str):
            raise TypeError("Expected argument 'auth_type' to be a str")
        pulumi.set(__self__, "auth_type", auth_type)
        if gateway_instance_id and not isinstance(gateway_instance_id, str):
            raise TypeError("Expected argument 'gateway_instance_id' to be a str")
        pulumi.set(__self__, "gateway_instance_id", gateway_instance_id)
        if group_type and not isinstance(group_type, str):
            raise TypeError("Expected argument 'group_type' to be a str")
        pulumi.set(__self__, "group_type", group_type)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if order_by and not isinstance(order_by, str):
            raise TypeError("Expected argument 'order_by' to be a str")
        pulumi.set(__self__, "order_by", order_by)
        if order_type and not isinstance(order_type, int):
            raise TypeError("Expected argument 'order_type' to be a int")
        pulumi.set(__self__, "order_type", order_type)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)
        if results and not isinstance(results, list):
            raise TypeError("Expected argument 'results' to be a list")
        pulumi.set(__self__, "results", results)
        if search_word and not isinstance(search_word, str):
            raise TypeError("Expected argument 'search_word' to be a str")
        pulumi.set(__self__, "search_word", search_word)
        if status and not isinstance(status, str):
            raise TypeError("Expected argument 'status' to be a str")
        pulumi.set(__self__, "status", status)

    @property
    @pulumi.getter(name="authType")
    def auth_type(self) -> Optional[str]:
        """
        Authentication type. secret: key authentication; none: no authentication.Note: This field may return null, indicating that no valid values can be obtained.
        """
        return pulumi.get(self, "auth_type")

    @property
    @pulumi.getter(name="gatewayInstanceId")
    def gateway_instance_id(self) -> Optional[str]:
        """
        Gateway Instance Id.Note: This field may return null, indicating that no valid values can be obtained.
        """
        return pulumi.get(self, "gateway_instance_id")

    @property
    @pulumi.getter(name="groupType")
    def group_type(self) -> Optional[str]:
        """
        Group type.Note: This field may return null, indicating that no valid values can be obtained.
        """
        return pulumi.get(self, "group_type")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="orderBy")
    def order_by(self) -> Optional[str]:
        return pulumi.get(self, "order_by")

    @property
    @pulumi.getter(name="orderType")
    def order_type(self) -> Optional[int]:
        return pulumi.get(self, "order_type")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")

    @property
    @pulumi.getter
    def results(self) -> Sequence['outputs.GetApiGroupResultResult']:
        """
        Pagination structure.Note: This field may return null, indicating that no valid values can be obtained.
        """
        return pulumi.get(self, "results")

    @property
    @pulumi.getter(name="searchWord")
    def search_word(self) -> Optional[str]:
        return pulumi.get(self, "search_word")

    @property
    @pulumi.getter
    def status(self) -> Optional[str]:
        """
        Release status. drafted: not released. released: released.Note: This field may return null, indicating that no valid values can be obtained.
        """
        return pulumi.get(self, "status")


class AwaitableGetApiGroupResult(GetApiGroupResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetApiGroupResult(
            auth_type=self.auth_type,
            gateway_instance_id=self.gateway_instance_id,
            group_type=self.group_type,
            id=self.id,
            order_by=self.order_by,
            order_type=self.order_type,
            result_output_file=self.result_output_file,
            results=self.results,
            search_word=self.search_word,
            status=self.status)


def get_api_group(auth_type: Optional[str] = None,
                  gateway_instance_id: Optional[str] = None,
                  group_type: Optional[str] = None,
                  order_by: Optional[str] = None,
                  order_type: Optional[int] = None,
                  result_output_file: Optional[str] = None,
                  search_word: Optional[str] = None,
                  status: Optional[str] = None,
                  opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetApiGroupResult:
    """
    Use this data source to query detailed information of tsf api_group

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    api_group = tencentcloud.Tsf.get_api_group(auth_type="none",
        gateway_instance_id="gw-ins-lvdypq5k",
        group_type="ms",
        order_by="created_time",
        order_type=0,
        search_word="xxx01",
        status="released")
    ```
    <!--End PulumiCodeChooser -->


    :param str auth_type: Authentication type. secret: Secret key authentication; none: No authentication.
    :param str gateway_instance_id: Gateway Instance Id.
    :param str group_type: Group type. ms: Microservice group; external: External API group.
    :param str order_by: Sorting field: created_time or group_context.
    :param int order_type: Sorting type: 0 (ASC) or 1 (DESC).
    :param str result_output_file: Used to save results.
    :param str search_word: search word.
    :param str status: Publishing status. drafted: Not published. released: Published.
    """
    __args__ = dict()
    __args__['authType'] = auth_type
    __args__['gatewayInstanceId'] = gateway_instance_id
    __args__['groupType'] = group_type
    __args__['orderBy'] = order_by
    __args__['orderType'] = order_type
    __args__['resultOutputFile'] = result_output_file
    __args__['searchWord'] = search_word
    __args__['status'] = status
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('tencentcloud:Tsf/getApiGroup:getApiGroup', __args__, opts=opts, typ=GetApiGroupResult).value

    return AwaitableGetApiGroupResult(
        auth_type=pulumi.get(__ret__, 'auth_type'),
        gateway_instance_id=pulumi.get(__ret__, 'gateway_instance_id'),
        group_type=pulumi.get(__ret__, 'group_type'),
        id=pulumi.get(__ret__, 'id'),
        order_by=pulumi.get(__ret__, 'order_by'),
        order_type=pulumi.get(__ret__, 'order_type'),
        result_output_file=pulumi.get(__ret__, 'result_output_file'),
        results=pulumi.get(__ret__, 'results'),
        search_word=pulumi.get(__ret__, 'search_word'),
        status=pulumi.get(__ret__, 'status'))


@_utilities.lift_output_func(get_api_group)
def get_api_group_output(auth_type: Optional[pulumi.Input[Optional[str]]] = None,
                         gateway_instance_id: Optional[pulumi.Input[Optional[str]]] = None,
                         group_type: Optional[pulumi.Input[Optional[str]]] = None,
                         order_by: Optional[pulumi.Input[Optional[str]]] = None,
                         order_type: Optional[pulumi.Input[Optional[int]]] = None,
                         result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                         search_word: Optional[pulumi.Input[Optional[str]]] = None,
                         status: Optional[pulumi.Input[Optional[str]]] = None,
                         opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetApiGroupResult]:
    """
    Use this data source to query detailed information of tsf api_group

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    api_group = tencentcloud.Tsf.get_api_group(auth_type="none",
        gateway_instance_id="gw-ins-lvdypq5k",
        group_type="ms",
        order_by="created_time",
        order_type=0,
        search_word="xxx01",
        status="released")
    ```
    <!--End PulumiCodeChooser -->


    :param str auth_type: Authentication type. secret: Secret key authentication; none: No authentication.
    :param str gateway_instance_id: Gateway Instance Id.
    :param str group_type: Group type. ms: Microservice group; external: External API group.
    :param str order_by: Sorting field: created_time or group_context.
    :param int order_type: Sorting type: 0 (ASC) or 1 (DESC).
    :param str result_output_file: Used to save results.
    :param str search_word: search word.
    :param str status: Publishing status. drafted: Not published. released: Published.
    """
    ...

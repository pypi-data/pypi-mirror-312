# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetBusinessLogConfigsResult',
    'AwaitableGetBusinessLogConfigsResult',
    'get_business_log_configs',
    'get_business_log_configs_output',
]

@pulumi.output_type
class GetBusinessLogConfigsResult:
    """
    A collection of values returned by getBusinessLogConfigs.
    """
    def __init__(__self__, config_id_lists=None, disable_program_auth_check=None, id=None, result_output_file=None, results=None, search_word=None):
        if config_id_lists and not isinstance(config_id_lists, list):
            raise TypeError("Expected argument 'config_id_lists' to be a list")
        pulumi.set(__self__, "config_id_lists", config_id_lists)
        if disable_program_auth_check and not isinstance(disable_program_auth_check, bool):
            raise TypeError("Expected argument 'disable_program_auth_check' to be a bool")
        pulumi.set(__self__, "disable_program_auth_check", disable_program_auth_check)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)
        if results and not isinstance(results, list):
            raise TypeError("Expected argument 'results' to be a list")
        pulumi.set(__self__, "results", results)
        if search_word and not isinstance(search_word, str):
            raise TypeError("Expected argument 'search_word' to be a str")
        pulumi.set(__self__, "search_word", search_word)

    @property
    @pulumi.getter(name="configIdLists")
    def config_id_lists(self) -> Optional[Sequence[str]]:
        return pulumi.get(self, "config_id_lists")

    @property
    @pulumi.getter(name="disableProgramAuthCheck")
    def disable_program_auth_check(self) -> Optional[bool]:
        return pulumi.get(self, "disable_program_auth_check")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")

    @property
    @pulumi.getter
    def results(self) -> Sequence['outputs.GetBusinessLogConfigsResultResult']:
        """
        List of business log configurations.Note: This field may return null, indicating that no valid values can be obtained.
        """
        return pulumi.get(self, "results")

    @property
    @pulumi.getter(name="searchWord")
    def search_word(self) -> Optional[str]:
        return pulumi.get(self, "search_word")


class AwaitableGetBusinessLogConfigsResult(GetBusinessLogConfigsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetBusinessLogConfigsResult(
            config_id_lists=self.config_id_lists,
            disable_program_auth_check=self.disable_program_auth_check,
            id=self.id,
            result_output_file=self.result_output_file,
            results=self.results,
            search_word=self.search_word)


def get_business_log_configs(config_id_lists: Optional[Sequence[str]] = None,
                             disable_program_auth_check: Optional[bool] = None,
                             result_output_file: Optional[str] = None,
                             search_word: Optional[str] = None,
                             opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetBusinessLogConfigsResult:
    """
    Use this data source to query detailed information of tsf business_log_configs

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    business_log_configs = tencentcloud.Tsf.get_business_log_configs(config_id_lists=["apm-busi-log-cfg-qv3x3rdv"],
        disable_program_auth_check=True,
        search_word="terraform")
    ```
    <!--End PulumiCodeChooser -->


    :param Sequence[str] config_id_lists: Config Id list.
    :param bool disable_program_auth_check: Disable Program auth check or not.
    :param str result_output_file: Used to save results.
    :param str search_word: wild search word.
    """
    __args__ = dict()
    __args__['configIdLists'] = config_id_lists
    __args__['disableProgramAuthCheck'] = disable_program_auth_check
    __args__['resultOutputFile'] = result_output_file
    __args__['searchWord'] = search_word
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('tencentcloud:Tsf/getBusinessLogConfigs:getBusinessLogConfigs', __args__, opts=opts, typ=GetBusinessLogConfigsResult).value

    return AwaitableGetBusinessLogConfigsResult(
        config_id_lists=pulumi.get(__ret__, 'config_id_lists'),
        disable_program_auth_check=pulumi.get(__ret__, 'disable_program_auth_check'),
        id=pulumi.get(__ret__, 'id'),
        result_output_file=pulumi.get(__ret__, 'result_output_file'),
        results=pulumi.get(__ret__, 'results'),
        search_word=pulumi.get(__ret__, 'search_word'))


@_utilities.lift_output_func(get_business_log_configs)
def get_business_log_configs_output(config_id_lists: Optional[pulumi.Input[Optional[Sequence[str]]]] = None,
                                    disable_program_auth_check: Optional[pulumi.Input[Optional[bool]]] = None,
                                    result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                                    search_word: Optional[pulumi.Input[Optional[str]]] = None,
                                    opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetBusinessLogConfigsResult]:
    """
    Use this data source to query detailed information of tsf business_log_configs

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    business_log_configs = tencentcloud.Tsf.get_business_log_configs(config_id_lists=["apm-busi-log-cfg-qv3x3rdv"],
        disable_program_auth_check=True,
        search_word="terraform")
    ```
    <!--End PulumiCodeChooser -->


    :param Sequence[str] config_id_lists: Config Id list.
    :param bool disable_program_auth_check: Disable Program auth check or not.
    :param str result_output_file: Used to save results.
    :param str search_word: wild search word.
    """
    ...

# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetGrafanaPluginOverviewsResult',
    'AwaitableGetGrafanaPluginOverviewsResult',
    'get_grafana_plugin_overviews',
    'get_grafana_plugin_overviews_output',
]

@pulumi.output_type
class GetGrafanaPluginOverviewsResult:
    """
    A collection of values returned by getGrafanaPluginOverviews.
    """
    def __init__(__self__, id=None, plugin_sets=None, result_output_file=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if plugin_sets and not isinstance(plugin_sets, list):
            raise TypeError("Expected argument 'plugin_sets' to be a list")
        pulumi.set(__self__, "plugin_sets", plugin_sets)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="pluginSets")
    def plugin_sets(self) -> Sequence['outputs.GetGrafanaPluginOverviewsPluginSetResult']:
        """
        Plugin set.
        """
        return pulumi.get(self, "plugin_sets")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")


class AwaitableGetGrafanaPluginOverviewsResult(GetGrafanaPluginOverviewsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetGrafanaPluginOverviewsResult(
            id=self.id,
            plugin_sets=self.plugin_sets,
            result_output_file=self.result_output_file)


def get_grafana_plugin_overviews(result_output_file: Optional[str] = None,
                                 opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetGrafanaPluginOverviewsResult:
    """
    Use this data source to query detailed information of monitor grafana_plugin_overviews

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    grafana_plugin_overviews = tencentcloud.Monitor.get_grafana_plugin_overviews()
    ```
    <!--End PulumiCodeChooser -->


    :param str result_output_file: Used to save results.
    """
    __args__ = dict()
    __args__['resultOutputFile'] = result_output_file
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('tencentcloud:Monitor/getGrafanaPluginOverviews:getGrafanaPluginOverviews', __args__, opts=opts, typ=GetGrafanaPluginOverviewsResult).value

    return AwaitableGetGrafanaPluginOverviewsResult(
        id=pulumi.get(__ret__, 'id'),
        plugin_sets=pulumi.get(__ret__, 'plugin_sets'),
        result_output_file=pulumi.get(__ret__, 'result_output_file'))


@_utilities.lift_output_func(get_grafana_plugin_overviews)
def get_grafana_plugin_overviews_output(result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                                        opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetGrafanaPluginOverviewsResult]:
    """
    Use this data source to query detailed information of monitor grafana_plugin_overviews

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    grafana_plugin_overviews = tencentcloud.Monitor.get_grafana_plugin_overviews()
    ```
    <!--End PulumiCodeChooser -->


    :param str result_output_file: Used to save results.
    """
    ...

# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetBindingObjectsResult',
    'AwaitableGetBindingObjectsResult',
    'get_binding_objects',
    'get_binding_objects_output',
]

@pulumi.output_type
class GetBindingObjectsResult:
    """
    A collection of values returned by getBindingObjects.
    """
    def __init__(__self__, group_id=None, id=None, lists=None, result_output_file=None):
        if group_id and not isinstance(group_id, int):
            raise TypeError("Expected argument 'group_id' to be a int")
        pulumi.set(__self__, "group_id", group_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if lists and not isinstance(lists, list):
            raise TypeError("Expected argument 'lists' to be a list")
        pulumi.set(__self__, "lists", lists)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)

    @property
    @pulumi.getter(name="groupId")
    def group_id(self) -> int:
        return pulumi.get(self, "group_id")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def lists(self) -> Sequence['outputs.GetBindingObjectsListResult']:
        """
        A list objects. Each element contains the following attributes:
        """
        return pulumi.get(self, "lists")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")


class AwaitableGetBindingObjectsResult(GetBindingObjectsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetBindingObjectsResult(
            group_id=self.group_id,
            id=self.id,
            lists=self.lists,
            result_output_file=self.result_output_file)


def get_binding_objects(group_id: Optional[int] = None,
                        result_output_file: Optional[str] = None,
                        opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetBindingObjectsResult:
    """
    Use this data source to query policy group binding objects.

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    name = tencentcloud.Monitor.get_policy_groups(name="test")
    objects = tencentcloud.Monitor.get_binding_objects(group_id=name.lists[0].group_id)
    ```
    <!--End PulumiCodeChooser -->


    :param int group_id: Policy group ID for query.
    :param str result_output_file: Used to store results.
    """
    __args__ = dict()
    __args__['groupId'] = group_id
    __args__['resultOutputFile'] = result_output_file
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('tencentcloud:Monitor/getBindingObjects:getBindingObjects', __args__, opts=opts, typ=GetBindingObjectsResult).value

    return AwaitableGetBindingObjectsResult(
        group_id=pulumi.get(__ret__, 'group_id'),
        id=pulumi.get(__ret__, 'id'),
        lists=pulumi.get(__ret__, 'lists'),
        result_output_file=pulumi.get(__ret__, 'result_output_file'))


@_utilities.lift_output_func(get_binding_objects)
def get_binding_objects_output(group_id: Optional[pulumi.Input[int]] = None,
                               result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                               opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetBindingObjectsResult]:
    """
    Use this data source to query policy group binding objects.

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_tencentcloud as tencentcloud

    name = tencentcloud.Monitor.get_policy_groups(name="test")
    objects = tencentcloud.Monitor.get_binding_objects(group_id=name.lists[0].group_id)
    ```
    <!--End PulumiCodeChooser -->


    :param int group_id: Policy group ID for query.
    :param str result_output_file: Used to store results.
    """
    ...

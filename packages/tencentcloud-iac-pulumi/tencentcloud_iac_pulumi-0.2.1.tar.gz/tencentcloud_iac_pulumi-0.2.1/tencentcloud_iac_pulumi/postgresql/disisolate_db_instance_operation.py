# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = ['DisisolateDbInstanceOperationArgs', 'DisisolateDbInstanceOperation']

@pulumi.input_type
class DisisolateDbInstanceOperationArgs:
    def __init__(__self__, *,
                 db_instance_id_sets: pulumi.Input[Sequence[pulumi.Input[str]]],
                 auto_voucher: Optional[pulumi.Input[bool]] = None,
                 period: Optional[pulumi.Input[int]] = None,
                 voucher_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None):
        """
        The set of arguments for constructing a DisisolateDbInstanceOperation resource.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] db_instance_id_sets: List of resource IDs. Note that currently you cannot remove multiple instances from isolation at the same time. Only one instance ID can be passed in here.
        :param pulumi.Input[bool] auto_voucher: Whether to use vouchers. Valid values:true (yes), false (no). Default value:false.
        :param pulumi.Input[int] period: The valid period (in months) of the monthly-subscribed instance when removing it from isolation.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] voucher_ids: Voucher ID list.
        """
        pulumi.set(__self__, "db_instance_id_sets", db_instance_id_sets)
        if auto_voucher is not None:
            pulumi.set(__self__, "auto_voucher", auto_voucher)
        if period is not None:
            pulumi.set(__self__, "period", period)
        if voucher_ids is not None:
            pulumi.set(__self__, "voucher_ids", voucher_ids)

    @property
    @pulumi.getter(name="dbInstanceIdSets")
    def db_instance_id_sets(self) -> pulumi.Input[Sequence[pulumi.Input[str]]]:
        """
        List of resource IDs. Note that currently you cannot remove multiple instances from isolation at the same time. Only one instance ID can be passed in here.
        """
        return pulumi.get(self, "db_instance_id_sets")

    @db_instance_id_sets.setter
    def db_instance_id_sets(self, value: pulumi.Input[Sequence[pulumi.Input[str]]]):
        pulumi.set(self, "db_instance_id_sets", value)

    @property
    @pulumi.getter(name="autoVoucher")
    def auto_voucher(self) -> Optional[pulumi.Input[bool]]:
        """
        Whether to use vouchers. Valid values:true (yes), false (no). Default value:false.
        """
        return pulumi.get(self, "auto_voucher")

    @auto_voucher.setter
    def auto_voucher(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "auto_voucher", value)

    @property
    @pulumi.getter
    def period(self) -> Optional[pulumi.Input[int]]:
        """
        The valid period (in months) of the monthly-subscribed instance when removing it from isolation.
        """
        return pulumi.get(self, "period")

    @period.setter
    def period(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "period", value)

    @property
    @pulumi.getter(name="voucherIds")
    def voucher_ids(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Voucher ID list.
        """
        return pulumi.get(self, "voucher_ids")

    @voucher_ids.setter
    def voucher_ids(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "voucher_ids", value)


@pulumi.input_type
class _DisisolateDbInstanceOperationState:
    def __init__(__self__, *,
                 auto_voucher: Optional[pulumi.Input[bool]] = None,
                 db_instance_id_sets: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 period: Optional[pulumi.Input[int]] = None,
                 voucher_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None):
        """
        Input properties used for looking up and filtering DisisolateDbInstanceOperation resources.
        :param pulumi.Input[bool] auto_voucher: Whether to use vouchers. Valid values:true (yes), false (no). Default value:false.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] db_instance_id_sets: List of resource IDs. Note that currently you cannot remove multiple instances from isolation at the same time. Only one instance ID can be passed in here.
        :param pulumi.Input[int] period: The valid period (in months) of the monthly-subscribed instance when removing it from isolation.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] voucher_ids: Voucher ID list.
        """
        if auto_voucher is not None:
            pulumi.set(__self__, "auto_voucher", auto_voucher)
        if db_instance_id_sets is not None:
            pulumi.set(__self__, "db_instance_id_sets", db_instance_id_sets)
        if period is not None:
            pulumi.set(__self__, "period", period)
        if voucher_ids is not None:
            pulumi.set(__self__, "voucher_ids", voucher_ids)

    @property
    @pulumi.getter(name="autoVoucher")
    def auto_voucher(self) -> Optional[pulumi.Input[bool]]:
        """
        Whether to use vouchers. Valid values:true (yes), false (no). Default value:false.
        """
        return pulumi.get(self, "auto_voucher")

    @auto_voucher.setter
    def auto_voucher(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "auto_voucher", value)

    @property
    @pulumi.getter(name="dbInstanceIdSets")
    def db_instance_id_sets(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        List of resource IDs. Note that currently you cannot remove multiple instances from isolation at the same time. Only one instance ID can be passed in here.
        """
        return pulumi.get(self, "db_instance_id_sets")

    @db_instance_id_sets.setter
    def db_instance_id_sets(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "db_instance_id_sets", value)

    @property
    @pulumi.getter
    def period(self) -> Optional[pulumi.Input[int]]:
        """
        The valid period (in months) of the monthly-subscribed instance when removing it from isolation.
        """
        return pulumi.get(self, "period")

    @period.setter
    def period(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "period", value)

    @property
    @pulumi.getter(name="voucherIds")
    def voucher_ids(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Voucher ID list.
        """
        return pulumi.get(self, "voucher_ids")

    @voucher_ids.setter
    def voucher_ids(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "voucher_ids", value)


class DisisolateDbInstanceOperation(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 auto_voucher: Optional[pulumi.Input[bool]] = None,
                 db_instance_id_sets: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 period: Optional[pulumi.Input[int]] = None,
                 voucher_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 __props__=None):
        """
        Provides a resource to create a postgresql disisolate_db_instance_operation

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        disisolate_db_instance_operation = tencentcloud.postgresql.DisisolateDbInstanceOperation("disisolateDbInstanceOperation",
            db_instance_id_sets=[local["pgsql_id"]],
            period=1,
            auto_voucher=False)
        ```
        <!--End PulumiCodeChooser -->

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[bool] auto_voucher: Whether to use vouchers. Valid values:true (yes), false (no). Default value:false.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] db_instance_id_sets: List of resource IDs. Note that currently you cannot remove multiple instances from isolation at the same time. Only one instance ID can be passed in here.
        :param pulumi.Input[int] period: The valid period (in months) of the monthly-subscribed instance when removing it from isolation.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] voucher_ids: Voucher ID list.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: DisisolateDbInstanceOperationArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Provides a resource to create a postgresql disisolate_db_instance_operation

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        disisolate_db_instance_operation = tencentcloud.postgresql.DisisolateDbInstanceOperation("disisolateDbInstanceOperation",
            db_instance_id_sets=[local["pgsql_id"]],
            period=1,
            auto_voucher=False)
        ```
        <!--End PulumiCodeChooser -->

        :param str resource_name: The name of the resource.
        :param DisisolateDbInstanceOperationArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(DisisolateDbInstanceOperationArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 auto_voucher: Optional[pulumi.Input[bool]] = None,
                 db_instance_id_sets: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 period: Optional[pulumi.Input[int]] = None,
                 voucher_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = DisisolateDbInstanceOperationArgs.__new__(DisisolateDbInstanceOperationArgs)

            __props__.__dict__["auto_voucher"] = auto_voucher
            if db_instance_id_sets is None and not opts.urn:
                raise TypeError("Missing required property 'db_instance_id_sets'")
            __props__.__dict__["db_instance_id_sets"] = db_instance_id_sets
            __props__.__dict__["period"] = period
            __props__.__dict__["voucher_ids"] = voucher_ids
        super(DisisolateDbInstanceOperation, __self__).__init__(
            'tencentcloud:Postgresql/disisolateDbInstanceOperation:DisisolateDbInstanceOperation',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            auto_voucher: Optional[pulumi.Input[bool]] = None,
            db_instance_id_sets: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            period: Optional[pulumi.Input[int]] = None,
            voucher_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None) -> 'DisisolateDbInstanceOperation':
        """
        Get an existing DisisolateDbInstanceOperation resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[bool] auto_voucher: Whether to use vouchers. Valid values:true (yes), false (no). Default value:false.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] db_instance_id_sets: List of resource IDs. Note that currently you cannot remove multiple instances from isolation at the same time. Only one instance ID can be passed in here.
        :param pulumi.Input[int] period: The valid period (in months) of the monthly-subscribed instance when removing it from isolation.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] voucher_ids: Voucher ID list.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _DisisolateDbInstanceOperationState.__new__(_DisisolateDbInstanceOperationState)

        __props__.__dict__["auto_voucher"] = auto_voucher
        __props__.__dict__["db_instance_id_sets"] = db_instance_id_sets
        __props__.__dict__["period"] = period
        __props__.__dict__["voucher_ids"] = voucher_ids
        return DisisolateDbInstanceOperation(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="autoVoucher")
    def auto_voucher(self) -> pulumi.Output[Optional[bool]]:
        """
        Whether to use vouchers. Valid values:true (yes), false (no). Default value:false.
        """
        return pulumi.get(self, "auto_voucher")

    @property
    @pulumi.getter(name="dbInstanceIdSets")
    def db_instance_id_sets(self) -> pulumi.Output[Sequence[str]]:
        """
        List of resource IDs. Note that currently you cannot remove multiple instances from isolation at the same time. Only one instance ID can be passed in here.
        """
        return pulumi.get(self, "db_instance_id_sets")

    @property
    @pulumi.getter
    def period(self) -> pulumi.Output[Optional[int]]:
        """
        The valid period (in months) of the monthly-subscribed instance when removing it from isolation.
        """
        return pulumi.get(self, "period")

    @property
    @pulumi.getter(name="voucherIds")
    def voucher_ids(self) -> pulumi.Output[Optional[Sequence[str]]]:
        """
        Voucher ID list.
        """
        return pulumi.get(self, "voucher_ids")


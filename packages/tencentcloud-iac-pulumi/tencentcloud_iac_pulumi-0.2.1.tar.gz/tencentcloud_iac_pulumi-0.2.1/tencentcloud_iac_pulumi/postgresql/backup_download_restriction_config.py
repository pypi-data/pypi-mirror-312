# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = ['BackupDownloadRestrictionConfigArgs', 'BackupDownloadRestrictionConfig']

@pulumi.input_type
class BackupDownloadRestrictionConfigArgs:
    def __init__(__self__, *,
                 restriction_type: pulumi.Input[str],
                 ip_restriction_effect: Optional[pulumi.Input[str]] = None,
                 ip_sets: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 vpc_id_sets: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 vpc_restriction_effect: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a BackupDownloadRestrictionConfig resource.
        :param pulumi.Input[str] restriction_type: Backup file download restriction type: NONE:Unlimited, both internal and external networks can be downloaded. INTRANET:Only intranet downloads are allowed. CUSTOMIZE:Customize the vpc or ip that limits downloads.
        :param pulumi.Input[str] ip_restriction_effect: ip limit Strategy: ALLOW, DENY.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] ip_sets: The list of ips that are allowed or denied to download backup files.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] vpc_id_sets: The list of vpcIds that allow or deny downloading of backup files.
        :param pulumi.Input[str] vpc_restriction_effect: vpc limit Strategy: ALLOW, DENY.
        """
        pulumi.set(__self__, "restriction_type", restriction_type)
        if ip_restriction_effect is not None:
            pulumi.set(__self__, "ip_restriction_effect", ip_restriction_effect)
        if ip_sets is not None:
            pulumi.set(__self__, "ip_sets", ip_sets)
        if vpc_id_sets is not None:
            pulumi.set(__self__, "vpc_id_sets", vpc_id_sets)
        if vpc_restriction_effect is not None:
            pulumi.set(__self__, "vpc_restriction_effect", vpc_restriction_effect)

    @property
    @pulumi.getter(name="restrictionType")
    def restriction_type(self) -> pulumi.Input[str]:
        """
        Backup file download restriction type: NONE:Unlimited, both internal and external networks can be downloaded. INTRANET:Only intranet downloads are allowed. CUSTOMIZE:Customize the vpc or ip that limits downloads.
        """
        return pulumi.get(self, "restriction_type")

    @restriction_type.setter
    def restriction_type(self, value: pulumi.Input[str]):
        pulumi.set(self, "restriction_type", value)

    @property
    @pulumi.getter(name="ipRestrictionEffect")
    def ip_restriction_effect(self) -> Optional[pulumi.Input[str]]:
        """
        ip limit Strategy: ALLOW, DENY.
        """
        return pulumi.get(self, "ip_restriction_effect")

    @ip_restriction_effect.setter
    def ip_restriction_effect(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ip_restriction_effect", value)

    @property
    @pulumi.getter(name="ipSets")
    def ip_sets(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        The list of ips that are allowed or denied to download backup files.
        """
        return pulumi.get(self, "ip_sets")

    @ip_sets.setter
    def ip_sets(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "ip_sets", value)

    @property
    @pulumi.getter(name="vpcIdSets")
    def vpc_id_sets(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        The list of vpcIds that allow or deny downloading of backup files.
        """
        return pulumi.get(self, "vpc_id_sets")

    @vpc_id_sets.setter
    def vpc_id_sets(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "vpc_id_sets", value)

    @property
    @pulumi.getter(name="vpcRestrictionEffect")
    def vpc_restriction_effect(self) -> Optional[pulumi.Input[str]]:
        """
        vpc limit Strategy: ALLOW, DENY.
        """
        return pulumi.get(self, "vpc_restriction_effect")

    @vpc_restriction_effect.setter
    def vpc_restriction_effect(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vpc_restriction_effect", value)


@pulumi.input_type
class _BackupDownloadRestrictionConfigState:
    def __init__(__self__, *,
                 ip_restriction_effect: Optional[pulumi.Input[str]] = None,
                 ip_sets: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 restriction_type: Optional[pulumi.Input[str]] = None,
                 vpc_id_sets: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 vpc_restriction_effect: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering BackupDownloadRestrictionConfig resources.
        :param pulumi.Input[str] ip_restriction_effect: ip limit Strategy: ALLOW, DENY.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] ip_sets: The list of ips that are allowed or denied to download backup files.
        :param pulumi.Input[str] restriction_type: Backup file download restriction type: NONE:Unlimited, both internal and external networks can be downloaded. INTRANET:Only intranet downloads are allowed. CUSTOMIZE:Customize the vpc or ip that limits downloads.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] vpc_id_sets: The list of vpcIds that allow or deny downloading of backup files.
        :param pulumi.Input[str] vpc_restriction_effect: vpc limit Strategy: ALLOW, DENY.
        """
        if ip_restriction_effect is not None:
            pulumi.set(__self__, "ip_restriction_effect", ip_restriction_effect)
        if ip_sets is not None:
            pulumi.set(__self__, "ip_sets", ip_sets)
        if restriction_type is not None:
            pulumi.set(__self__, "restriction_type", restriction_type)
        if vpc_id_sets is not None:
            pulumi.set(__self__, "vpc_id_sets", vpc_id_sets)
        if vpc_restriction_effect is not None:
            pulumi.set(__self__, "vpc_restriction_effect", vpc_restriction_effect)

    @property
    @pulumi.getter(name="ipRestrictionEffect")
    def ip_restriction_effect(self) -> Optional[pulumi.Input[str]]:
        """
        ip limit Strategy: ALLOW, DENY.
        """
        return pulumi.get(self, "ip_restriction_effect")

    @ip_restriction_effect.setter
    def ip_restriction_effect(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ip_restriction_effect", value)

    @property
    @pulumi.getter(name="ipSets")
    def ip_sets(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        The list of ips that are allowed or denied to download backup files.
        """
        return pulumi.get(self, "ip_sets")

    @ip_sets.setter
    def ip_sets(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "ip_sets", value)

    @property
    @pulumi.getter(name="restrictionType")
    def restriction_type(self) -> Optional[pulumi.Input[str]]:
        """
        Backup file download restriction type: NONE:Unlimited, both internal and external networks can be downloaded. INTRANET:Only intranet downloads are allowed. CUSTOMIZE:Customize the vpc or ip that limits downloads.
        """
        return pulumi.get(self, "restriction_type")

    @restriction_type.setter
    def restriction_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "restriction_type", value)

    @property
    @pulumi.getter(name="vpcIdSets")
    def vpc_id_sets(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        The list of vpcIds that allow or deny downloading of backup files.
        """
        return pulumi.get(self, "vpc_id_sets")

    @vpc_id_sets.setter
    def vpc_id_sets(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "vpc_id_sets", value)

    @property
    @pulumi.getter(name="vpcRestrictionEffect")
    def vpc_restriction_effect(self) -> Optional[pulumi.Input[str]]:
        """
        vpc limit Strategy: ALLOW, DENY.
        """
        return pulumi.get(self, "vpc_restriction_effect")

    @vpc_restriction_effect.setter
    def vpc_restriction_effect(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vpc_restriction_effect", value)


class BackupDownloadRestrictionConfig(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 ip_restriction_effect: Optional[pulumi.Input[str]] = None,
                 ip_sets: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 restriction_type: Optional[pulumi.Input[str]] = None,
                 vpc_id_sets: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 vpc_restriction_effect: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Provides a resource to create a postgresql backup_download_restriction_config

        ## Example Usage

        ### Unlimit the restriction of the backup file download.

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        backup_download_restriction_config = tencentcloud.postgresql.BackupDownloadRestrictionConfig("backupDownloadRestrictionConfig", restriction_type="NONE")
        ```
        <!--End PulumiCodeChooser -->

        ### Set the download only to allow the intranet downloads.

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        backup_download_restriction_config = tencentcloud.postgresql.BackupDownloadRestrictionConfig("backupDownloadRestrictionConfig", restriction_type="INTRANET")
        ```
        <!--End PulumiCodeChooser -->

        ### Restrict the backup file download by customizing.

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        pg_vpc = tencentcloud.vpc.Instance("pgVpc", cidr_block=var["vpc_cidr"])
        backup_download_restriction_config = tencentcloud.postgresql.BackupDownloadRestrictionConfig("backupDownloadRestrictionConfig",
            restriction_type="CUSTOMIZE",
            vpc_restriction_effect="DENY",
            vpc_id_sets=[tencentcloud_vpc["pg_vpc2"]["id"]],
            ip_restriction_effect="DENY",
            ip_sets=["192.168.0.0"])
        ```
        <!--End PulumiCodeChooser -->

        ## Import

        postgresql backup_download_restriction_config can be imported using the id, e.g.

        ```sh
        $ pulumi import tencentcloud:Postgresql/backupDownloadRestrictionConfig:BackupDownloadRestrictionConfig backup_download_restriction_config backup_download_restriction_config_id
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] ip_restriction_effect: ip limit Strategy: ALLOW, DENY.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] ip_sets: The list of ips that are allowed or denied to download backup files.
        :param pulumi.Input[str] restriction_type: Backup file download restriction type: NONE:Unlimited, both internal and external networks can be downloaded. INTRANET:Only intranet downloads are allowed. CUSTOMIZE:Customize the vpc or ip that limits downloads.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] vpc_id_sets: The list of vpcIds that allow or deny downloading of backup files.
        :param pulumi.Input[str] vpc_restriction_effect: vpc limit Strategy: ALLOW, DENY.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: BackupDownloadRestrictionConfigArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Provides a resource to create a postgresql backup_download_restriction_config

        ## Example Usage

        ### Unlimit the restriction of the backup file download.

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        backup_download_restriction_config = tencentcloud.postgresql.BackupDownloadRestrictionConfig("backupDownloadRestrictionConfig", restriction_type="NONE")
        ```
        <!--End PulumiCodeChooser -->

        ### Set the download only to allow the intranet downloads.

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        backup_download_restriction_config = tencentcloud.postgresql.BackupDownloadRestrictionConfig("backupDownloadRestrictionConfig", restriction_type="INTRANET")
        ```
        <!--End PulumiCodeChooser -->

        ### Restrict the backup file download by customizing.

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        pg_vpc = tencentcloud.vpc.Instance("pgVpc", cidr_block=var["vpc_cidr"])
        backup_download_restriction_config = tencentcloud.postgresql.BackupDownloadRestrictionConfig("backupDownloadRestrictionConfig",
            restriction_type="CUSTOMIZE",
            vpc_restriction_effect="DENY",
            vpc_id_sets=[tencentcloud_vpc["pg_vpc2"]["id"]],
            ip_restriction_effect="DENY",
            ip_sets=["192.168.0.0"])
        ```
        <!--End PulumiCodeChooser -->

        ## Import

        postgresql backup_download_restriction_config can be imported using the id, e.g.

        ```sh
        $ pulumi import tencentcloud:Postgresql/backupDownloadRestrictionConfig:BackupDownloadRestrictionConfig backup_download_restriction_config backup_download_restriction_config_id
        ```

        :param str resource_name: The name of the resource.
        :param BackupDownloadRestrictionConfigArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(BackupDownloadRestrictionConfigArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 ip_restriction_effect: Optional[pulumi.Input[str]] = None,
                 ip_sets: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 restriction_type: Optional[pulumi.Input[str]] = None,
                 vpc_id_sets: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 vpc_restriction_effect: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = BackupDownloadRestrictionConfigArgs.__new__(BackupDownloadRestrictionConfigArgs)

            __props__.__dict__["ip_restriction_effect"] = ip_restriction_effect
            __props__.__dict__["ip_sets"] = ip_sets
            if restriction_type is None and not opts.urn:
                raise TypeError("Missing required property 'restriction_type'")
            __props__.__dict__["restriction_type"] = restriction_type
            __props__.__dict__["vpc_id_sets"] = vpc_id_sets
            __props__.__dict__["vpc_restriction_effect"] = vpc_restriction_effect
        super(BackupDownloadRestrictionConfig, __self__).__init__(
            'tencentcloud:Postgresql/backupDownloadRestrictionConfig:BackupDownloadRestrictionConfig',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            ip_restriction_effect: Optional[pulumi.Input[str]] = None,
            ip_sets: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            restriction_type: Optional[pulumi.Input[str]] = None,
            vpc_id_sets: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            vpc_restriction_effect: Optional[pulumi.Input[str]] = None) -> 'BackupDownloadRestrictionConfig':
        """
        Get an existing BackupDownloadRestrictionConfig resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] ip_restriction_effect: ip limit Strategy: ALLOW, DENY.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] ip_sets: The list of ips that are allowed or denied to download backup files.
        :param pulumi.Input[str] restriction_type: Backup file download restriction type: NONE:Unlimited, both internal and external networks can be downloaded. INTRANET:Only intranet downloads are allowed. CUSTOMIZE:Customize the vpc or ip that limits downloads.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] vpc_id_sets: The list of vpcIds that allow or deny downloading of backup files.
        :param pulumi.Input[str] vpc_restriction_effect: vpc limit Strategy: ALLOW, DENY.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _BackupDownloadRestrictionConfigState.__new__(_BackupDownloadRestrictionConfigState)

        __props__.__dict__["ip_restriction_effect"] = ip_restriction_effect
        __props__.__dict__["ip_sets"] = ip_sets
        __props__.__dict__["restriction_type"] = restriction_type
        __props__.__dict__["vpc_id_sets"] = vpc_id_sets
        __props__.__dict__["vpc_restriction_effect"] = vpc_restriction_effect
        return BackupDownloadRestrictionConfig(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="ipRestrictionEffect")
    def ip_restriction_effect(self) -> pulumi.Output[Optional[str]]:
        """
        ip limit Strategy: ALLOW, DENY.
        """
        return pulumi.get(self, "ip_restriction_effect")

    @property
    @pulumi.getter(name="ipSets")
    def ip_sets(self) -> pulumi.Output[Optional[Sequence[str]]]:
        """
        The list of ips that are allowed or denied to download backup files.
        """
        return pulumi.get(self, "ip_sets")

    @property
    @pulumi.getter(name="restrictionType")
    def restriction_type(self) -> pulumi.Output[str]:
        """
        Backup file download restriction type: NONE:Unlimited, both internal and external networks can be downloaded. INTRANET:Only intranet downloads are allowed. CUSTOMIZE:Customize the vpc or ip that limits downloads.
        """
        return pulumi.get(self, "restriction_type")

    @property
    @pulumi.getter(name="vpcIdSets")
    def vpc_id_sets(self) -> pulumi.Output[Optional[Sequence[str]]]:
        """
        The list of vpcIds that allow or deny downloading of backup files.
        """
        return pulumi.get(self, "vpc_id_sets")

    @property
    @pulumi.getter(name="vpcRestrictionEffect")
    def vpc_restriction_effect(self) -> pulumi.Output[Optional[str]]:
        """
        vpc limit Strategy: ALLOW, DENY.
        """
        return pulumi.get(self, "vpc_restriction_effect")


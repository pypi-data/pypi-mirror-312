# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = ['RenewDbInstanceOperationArgs', 'RenewDbInstanceOperation']

@pulumi.input_type
class RenewDbInstanceOperationArgs:
    def __init__(__self__, *,
                 db_instance_id: pulumi.Input[str],
                 period: pulumi.Input[int],
                 auto_voucher: Optional[pulumi.Input[int]] = None,
                 voucher_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None):
        """
        The set of arguments for constructing a RenewDbInstanceOperation resource.
        :param pulumi.Input[str] db_instance_id: Instance ID in the format of postgres-6fego161.
        :param pulumi.Input[int] period: Renewal duration in months.
        :param pulumi.Input[int] auto_voucher: Whether to automatically use vouchers. 1:yes, 0:no. Default value:0.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] voucher_ids: Voucher ID list (only one voucher can be specified currently).
        """
        pulumi.set(__self__, "db_instance_id", db_instance_id)
        pulumi.set(__self__, "period", period)
        if auto_voucher is not None:
            pulumi.set(__self__, "auto_voucher", auto_voucher)
        if voucher_ids is not None:
            pulumi.set(__self__, "voucher_ids", voucher_ids)

    @property
    @pulumi.getter(name="dbInstanceId")
    def db_instance_id(self) -> pulumi.Input[str]:
        """
        Instance ID in the format of postgres-6fego161.
        """
        return pulumi.get(self, "db_instance_id")

    @db_instance_id.setter
    def db_instance_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "db_instance_id", value)

    @property
    @pulumi.getter
    def period(self) -> pulumi.Input[int]:
        """
        Renewal duration in months.
        """
        return pulumi.get(self, "period")

    @period.setter
    def period(self, value: pulumi.Input[int]):
        pulumi.set(self, "period", value)

    @property
    @pulumi.getter(name="autoVoucher")
    def auto_voucher(self) -> Optional[pulumi.Input[int]]:
        """
        Whether to automatically use vouchers. 1:yes, 0:no. Default value:0.
        """
        return pulumi.get(self, "auto_voucher")

    @auto_voucher.setter
    def auto_voucher(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "auto_voucher", value)

    @property
    @pulumi.getter(name="voucherIds")
    def voucher_ids(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Voucher ID list (only one voucher can be specified currently).
        """
        return pulumi.get(self, "voucher_ids")

    @voucher_ids.setter
    def voucher_ids(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "voucher_ids", value)


@pulumi.input_type
class _RenewDbInstanceOperationState:
    def __init__(__self__, *,
                 auto_voucher: Optional[pulumi.Input[int]] = None,
                 db_instance_id: Optional[pulumi.Input[str]] = None,
                 period: Optional[pulumi.Input[int]] = None,
                 voucher_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None):
        """
        Input properties used for looking up and filtering RenewDbInstanceOperation resources.
        :param pulumi.Input[int] auto_voucher: Whether to automatically use vouchers. 1:yes, 0:no. Default value:0.
        :param pulumi.Input[str] db_instance_id: Instance ID in the format of postgres-6fego161.
        :param pulumi.Input[int] period: Renewal duration in months.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] voucher_ids: Voucher ID list (only one voucher can be specified currently).
        """
        if auto_voucher is not None:
            pulumi.set(__self__, "auto_voucher", auto_voucher)
        if db_instance_id is not None:
            pulumi.set(__self__, "db_instance_id", db_instance_id)
        if period is not None:
            pulumi.set(__self__, "period", period)
        if voucher_ids is not None:
            pulumi.set(__self__, "voucher_ids", voucher_ids)

    @property
    @pulumi.getter(name="autoVoucher")
    def auto_voucher(self) -> Optional[pulumi.Input[int]]:
        """
        Whether to automatically use vouchers. 1:yes, 0:no. Default value:0.
        """
        return pulumi.get(self, "auto_voucher")

    @auto_voucher.setter
    def auto_voucher(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "auto_voucher", value)

    @property
    @pulumi.getter(name="dbInstanceId")
    def db_instance_id(self) -> Optional[pulumi.Input[str]]:
        """
        Instance ID in the format of postgres-6fego161.
        """
        return pulumi.get(self, "db_instance_id")

    @db_instance_id.setter
    def db_instance_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "db_instance_id", value)

    @property
    @pulumi.getter
    def period(self) -> Optional[pulumi.Input[int]]:
        """
        Renewal duration in months.
        """
        return pulumi.get(self, "period")

    @period.setter
    def period(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "period", value)

    @property
    @pulumi.getter(name="voucherIds")
    def voucher_ids(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Voucher ID list (only one voucher can be specified currently).
        """
        return pulumi.get(self, "voucher_ids")

    @voucher_ids.setter
    def voucher_ids(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "voucher_ids", value)


class RenewDbInstanceOperation(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 auto_voucher: Optional[pulumi.Input[int]] = None,
                 db_instance_id: Optional[pulumi.Input[str]] = None,
                 period: Optional[pulumi.Input[int]] = None,
                 voucher_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 __props__=None):
        """
        Provides a resource to create a postgresql renew_db_instance_operation

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        renew_db_instance_operation = tencentcloud.postgresql.RenewDbInstanceOperation("renewDbInstanceOperation",
            db_instance_id=tencentcloud_postgresql_instance["oper_test_PREPAID"]["id"],
            period=1,
            auto_voucher=0)
        ```
        <!--End PulumiCodeChooser -->

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[int] auto_voucher: Whether to automatically use vouchers. 1:yes, 0:no. Default value:0.
        :param pulumi.Input[str] db_instance_id: Instance ID in the format of postgres-6fego161.
        :param pulumi.Input[int] period: Renewal duration in months.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] voucher_ids: Voucher ID list (only one voucher can be specified currently).
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: RenewDbInstanceOperationArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Provides a resource to create a postgresql renew_db_instance_operation

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        renew_db_instance_operation = tencentcloud.postgresql.RenewDbInstanceOperation("renewDbInstanceOperation",
            db_instance_id=tencentcloud_postgresql_instance["oper_test_PREPAID"]["id"],
            period=1,
            auto_voucher=0)
        ```
        <!--End PulumiCodeChooser -->

        :param str resource_name: The name of the resource.
        :param RenewDbInstanceOperationArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(RenewDbInstanceOperationArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 auto_voucher: Optional[pulumi.Input[int]] = None,
                 db_instance_id: Optional[pulumi.Input[str]] = None,
                 period: Optional[pulumi.Input[int]] = None,
                 voucher_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = RenewDbInstanceOperationArgs.__new__(RenewDbInstanceOperationArgs)

            __props__.__dict__["auto_voucher"] = auto_voucher
            if db_instance_id is None and not opts.urn:
                raise TypeError("Missing required property 'db_instance_id'")
            __props__.__dict__["db_instance_id"] = db_instance_id
            if period is None and not opts.urn:
                raise TypeError("Missing required property 'period'")
            __props__.__dict__["period"] = period
            __props__.__dict__["voucher_ids"] = voucher_ids
        super(RenewDbInstanceOperation, __self__).__init__(
            'tencentcloud:Postgresql/renewDbInstanceOperation:RenewDbInstanceOperation',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            auto_voucher: Optional[pulumi.Input[int]] = None,
            db_instance_id: Optional[pulumi.Input[str]] = None,
            period: Optional[pulumi.Input[int]] = None,
            voucher_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None) -> 'RenewDbInstanceOperation':
        """
        Get an existing RenewDbInstanceOperation resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[int] auto_voucher: Whether to automatically use vouchers. 1:yes, 0:no. Default value:0.
        :param pulumi.Input[str] db_instance_id: Instance ID in the format of postgres-6fego161.
        :param pulumi.Input[int] period: Renewal duration in months.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] voucher_ids: Voucher ID list (only one voucher can be specified currently).
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _RenewDbInstanceOperationState.__new__(_RenewDbInstanceOperationState)

        __props__.__dict__["auto_voucher"] = auto_voucher
        __props__.__dict__["db_instance_id"] = db_instance_id
        __props__.__dict__["period"] = period
        __props__.__dict__["voucher_ids"] = voucher_ids
        return RenewDbInstanceOperation(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="autoVoucher")
    def auto_voucher(self) -> pulumi.Output[Optional[int]]:
        """
        Whether to automatically use vouchers. 1:yes, 0:no. Default value:0.
        """
        return pulumi.get(self, "auto_voucher")

    @property
    @pulumi.getter(name="dbInstanceId")
    def db_instance_id(self) -> pulumi.Output[str]:
        """
        Instance ID in the format of postgres-6fego161.
        """
        return pulumi.get(self, "db_instance_id")

    @property
    @pulumi.getter
    def period(self) -> pulumi.Output[int]:
        """
        Renewal duration in months.
        """
        return pulumi.get(self, "period")

    @property
    @pulumi.getter(name="voucherIds")
    def voucher_ids(self) -> pulumi.Output[Optional[Sequence[str]]]:
        """
        Voucher ID list (only one voucher can be specified currently).
        """
        return pulumi.get(self, "voucher_ids")


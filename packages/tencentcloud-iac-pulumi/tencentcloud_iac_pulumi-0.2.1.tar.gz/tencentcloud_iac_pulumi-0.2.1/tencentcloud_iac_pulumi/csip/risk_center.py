# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['RiskCenterArgs', 'RiskCenter']

@pulumi.input_type
class RiskCenterArgs:
    def __init__(__self__, *,
                 scan_asset_type: pulumi.Input[int],
                 scan_items: pulumi.Input[Sequence[pulumi.Input[str]]],
                 scan_plan_type: pulumi.Input[int],
                 task_name: pulumi.Input[str],
                 assets: Optional[pulumi.Input[Sequence[pulumi.Input['RiskCenterAssetArgs']]]] = None,
                 scan_plan_content: Optional[pulumi.Input[str]] = None,
                 self_defining_assets: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 task_advance_cfg: Optional[pulumi.Input['RiskCenterTaskAdvanceCfgArgs']] = None,
                 task_mode: Optional[pulumi.Input[int]] = None):
        """
        The set of arguments for constructing a RiskCenter resource.
        :param pulumi.Input[int] scan_asset_type: 0- Full scan, 1- Specify asset scan, 2- Exclude asset scan, 3- Manually fill in the scan. If 1 and 2 are required while task_mode not 1, the Assets field is required. If 3 is required, SelfDefiningAssets is required.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] scan_items: Scan Project. Example: port/poc/weakpass/webcontent/configrisk/exposedserver.
        :param pulumi.Input[int] scan_plan_type: 0- Periodic task, 1- immediate scan, 2- periodic scan, 3- Custom; 0, 2 and 3 are required for scan_plan_content.
        :param pulumi.Input[str] task_name: Task Name.
        :param pulumi.Input[Sequence[pulumi.Input['RiskCenterAssetArgs']]] assets: Scan the asset information list.
        :param pulumi.Input[str] scan_plan_content: Scan plan details.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] self_defining_assets: Ip/domain/url array.
        :param pulumi.Input['RiskCenterTaskAdvanceCfgArgs'] task_advance_cfg: Advanced configuration.
        :param pulumi.Input[int] task_mode: Physical examination mode, 0-standard mode, 1-fast mode, 2-advanced mode, default standard mode.
        """
        pulumi.set(__self__, "scan_asset_type", scan_asset_type)
        pulumi.set(__self__, "scan_items", scan_items)
        pulumi.set(__self__, "scan_plan_type", scan_plan_type)
        pulumi.set(__self__, "task_name", task_name)
        if assets is not None:
            pulumi.set(__self__, "assets", assets)
        if scan_plan_content is not None:
            pulumi.set(__self__, "scan_plan_content", scan_plan_content)
        if self_defining_assets is not None:
            pulumi.set(__self__, "self_defining_assets", self_defining_assets)
        if task_advance_cfg is not None:
            pulumi.set(__self__, "task_advance_cfg", task_advance_cfg)
        if task_mode is not None:
            pulumi.set(__self__, "task_mode", task_mode)

    @property
    @pulumi.getter(name="scanAssetType")
    def scan_asset_type(self) -> pulumi.Input[int]:
        """
        0- Full scan, 1- Specify asset scan, 2- Exclude asset scan, 3- Manually fill in the scan. If 1 and 2 are required while task_mode not 1, the Assets field is required. If 3 is required, SelfDefiningAssets is required.
        """
        return pulumi.get(self, "scan_asset_type")

    @scan_asset_type.setter
    def scan_asset_type(self, value: pulumi.Input[int]):
        pulumi.set(self, "scan_asset_type", value)

    @property
    @pulumi.getter(name="scanItems")
    def scan_items(self) -> pulumi.Input[Sequence[pulumi.Input[str]]]:
        """
        Scan Project. Example: port/poc/weakpass/webcontent/configrisk/exposedserver.
        """
        return pulumi.get(self, "scan_items")

    @scan_items.setter
    def scan_items(self, value: pulumi.Input[Sequence[pulumi.Input[str]]]):
        pulumi.set(self, "scan_items", value)

    @property
    @pulumi.getter(name="scanPlanType")
    def scan_plan_type(self) -> pulumi.Input[int]:
        """
        0- Periodic task, 1- immediate scan, 2- periodic scan, 3- Custom; 0, 2 and 3 are required for scan_plan_content.
        """
        return pulumi.get(self, "scan_plan_type")

    @scan_plan_type.setter
    def scan_plan_type(self, value: pulumi.Input[int]):
        pulumi.set(self, "scan_plan_type", value)

    @property
    @pulumi.getter(name="taskName")
    def task_name(self) -> pulumi.Input[str]:
        """
        Task Name.
        """
        return pulumi.get(self, "task_name")

    @task_name.setter
    def task_name(self, value: pulumi.Input[str]):
        pulumi.set(self, "task_name", value)

    @property
    @pulumi.getter
    def assets(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['RiskCenterAssetArgs']]]]:
        """
        Scan the asset information list.
        """
        return pulumi.get(self, "assets")

    @assets.setter
    def assets(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['RiskCenterAssetArgs']]]]):
        pulumi.set(self, "assets", value)

    @property
    @pulumi.getter(name="scanPlanContent")
    def scan_plan_content(self) -> Optional[pulumi.Input[str]]:
        """
        Scan plan details.
        """
        return pulumi.get(self, "scan_plan_content")

    @scan_plan_content.setter
    def scan_plan_content(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "scan_plan_content", value)

    @property
    @pulumi.getter(name="selfDefiningAssets")
    def self_defining_assets(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Ip/domain/url array.
        """
        return pulumi.get(self, "self_defining_assets")

    @self_defining_assets.setter
    def self_defining_assets(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "self_defining_assets", value)

    @property
    @pulumi.getter(name="taskAdvanceCfg")
    def task_advance_cfg(self) -> Optional[pulumi.Input['RiskCenterTaskAdvanceCfgArgs']]:
        """
        Advanced configuration.
        """
        return pulumi.get(self, "task_advance_cfg")

    @task_advance_cfg.setter
    def task_advance_cfg(self, value: Optional[pulumi.Input['RiskCenterTaskAdvanceCfgArgs']]):
        pulumi.set(self, "task_advance_cfg", value)

    @property
    @pulumi.getter(name="taskMode")
    def task_mode(self) -> Optional[pulumi.Input[int]]:
        """
        Physical examination mode, 0-standard mode, 1-fast mode, 2-advanced mode, default standard mode.
        """
        return pulumi.get(self, "task_mode")

    @task_mode.setter
    def task_mode(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "task_mode", value)


@pulumi.input_type
class _RiskCenterState:
    def __init__(__self__, *,
                 assets: Optional[pulumi.Input[Sequence[pulumi.Input['RiskCenterAssetArgs']]]] = None,
                 scan_asset_type: Optional[pulumi.Input[int]] = None,
                 scan_from: Optional[pulumi.Input[str]] = None,
                 scan_items: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 scan_plan_content: Optional[pulumi.Input[str]] = None,
                 scan_plan_type: Optional[pulumi.Input[int]] = None,
                 self_defining_assets: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 task_advance_cfg: Optional[pulumi.Input['RiskCenterTaskAdvanceCfgArgs']] = None,
                 task_mode: Optional[pulumi.Input[int]] = None,
                 task_name: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering RiskCenter resources.
        :param pulumi.Input[Sequence[pulumi.Input['RiskCenterAssetArgs']]] assets: Scan the asset information list.
        :param pulumi.Input[int] scan_asset_type: 0- Full scan, 1- Specify asset scan, 2- Exclude asset scan, 3- Manually fill in the scan. If 1 and 2 are required while task_mode not 1, the Assets field is required. If 3 is required, SelfDefiningAssets is required.
        :param pulumi.Input[str] scan_from: Request origin.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] scan_items: Scan Project. Example: port/poc/weakpass/webcontent/configrisk/exposedserver.
        :param pulumi.Input[str] scan_plan_content: Scan plan details.
        :param pulumi.Input[int] scan_plan_type: 0- Periodic task, 1- immediate scan, 2- periodic scan, 3- Custom; 0, 2 and 3 are required for scan_plan_content.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] self_defining_assets: Ip/domain/url array.
        :param pulumi.Input['RiskCenterTaskAdvanceCfgArgs'] task_advance_cfg: Advanced configuration.
        :param pulumi.Input[int] task_mode: Physical examination mode, 0-standard mode, 1-fast mode, 2-advanced mode, default standard mode.
        :param pulumi.Input[str] task_name: Task Name.
        """
        if assets is not None:
            pulumi.set(__self__, "assets", assets)
        if scan_asset_type is not None:
            pulumi.set(__self__, "scan_asset_type", scan_asset_type)
        if scan_from is not None:
            pulumi.set(__self__, "scan_from", scan_from)
        if scan_items is not None:
            pulumi.set(__self__, "scan_items", scan_items)
        if scan_plan_content is not None:
            pulumi.set(__self__, "scan_plan_content", scan_plan_content)
        if scan_plan_type is not None:
            pulumi.set(__self__, "scan_plan_type", scan_plan_type)
        if self_defining_assets is not None:
            pulumi.set(__self__, "self_defining_assets", self_defining_assets)
        if task_advance_cfg is not None:
            pulumi.set(__self__, "task_advance_cfg", task_advance_cfg)
        if task_mode is not None:
            pulumi.set(__self__, "task_mode", task_mode)
        if task_name is not None:
            pulumi.set(__self__, "task_name", task_name)

    @property
    @pulumi.getter
    def assets(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['RiskCenterAssetArgs']]]]:
        """
        Scan the asset information list.
        """
        return pulumi.get(self, "assets")

    @assets.setter
    def assets(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['RiskCenterAssetArgs']]]]):
        pulumi.set(self, "assets", value)

    @property
    @pulumi.getter(name="scanAssetType")
    def scan_asset_type(self) -> Optional[pulumi.Input[int]]:
        """
        0- Full scan, 1- Specify asset scan, 2- Exclude asset scan, 3- Manually fill in the scan. If 1 and 2 are required while task_mode not 1, the Assets field is required. If 3 is required, SelfDefiningAssets is required.
        """
        return pulumi.get(self, "scan_asset_type")

    @scan_asset_type.setter
    def scan_asset_type(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "scan_asset_type", value)

    @property
    @pulumi.getter(name="scanFrom")
    def scan_from(self) -> Optional[pulumi.Input[str]]:
        """
        Request origin.
        """
        return pulumi.get(self, "scan_from")

    @scan_from.setter
    def scan_from(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "scan_from", value)

    @property
    @pulumi.getter(name="scanItems")
    def scan_items(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Scan Project. Example: port/poc/weakpass/webcontent/configrisk/exposedserver.
        """
        return pulumi.get(self, "scan_items")

    @scan_items.setter
    def scan_items(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "scan_items", value)

    @property
    @pulumi.getter(name="scanPlanContent")
    def scan_plan_content(self) -> Optional[pulumi.Input[str]]:
        """
        Scan plan details.
        """
        return pulumi.get(self, "scan_plan_content")

    @scan_plan_content.setter
    def scan_plan_content(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "scan_plan_content", value)

    @property
    @pulumi.getter(name="scanPlanType")
    def scan_plan_type(self) -> Optional[pulumi.Input[int]]:
        """
        0- Periodic task, 1- immediate scan, 2- periodic scan, 3- Custom; 0, 2 and 3 are required for scan_plan_content.
        """
        return pulumi.get(self, "scan_plan_type")

    @scan_plan_type.setter
    def scan_plan_type(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "scan_plan_type", value)

    @property
    @pulumi.getter(name="selfDefiningAssets")
    def self_defining_assets(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Ip/domain/url array.
        """
        return pulumi.get(self, "self_defining_assets")

    @self_defining_assets.setter
    def self_defining_assets(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "self_defining_assets", value)

    @property
    @pulumi.getter(name="taskAdvanceCfg")
    def task_advance_cfg(self) -> Optional[pulumi.Input['RiskCenterTaskAdvanceCfgArgs']]:
        """
        Advanced configuration.
        """
        return pulumi.get(self, "task_advance_cfg")

    @task_advance_cfg.setter
    def task_advance_cfg(self, value: Optional[pulumi.Input['RiskCenterTaskAdvanceCfgArgs']]):
        pulumi.set(self, "task_advance_cfg", value)

    @property
    @pulumi.getter(name="taskMode")
    def task_mode(self) -> Optional[pulumi.Input[int]]:
        """
        Physical examination mode, 0-standard mode, 1-fast mode, 2-advanced mode, default standard mode.
        """
        return pulumi.get(self, "task_mode")

    @task_mode.setter
    def task_mode(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "task_mode", value)

    @property
    @pulumi.getter(name="taskName")
    def task_name(self) -> Optional[pulumi.Input[str]]:
        """
        Task Name.
        """
        return pulumi.get(self, "task_name")

    @task_name.setter
    def task_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "task_name", value)


class RiskCenter(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 assets: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['RiskCenterAssetArgs']]]]] = None,
                 scan_asset_type: Optional[pulumi.Input[int]] = None,
                 scan_items: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 scan_plan_content: Optional[pulumi.Input[str]] = None,
                 scan_plan_type: Optional[pulumi.Input[int]] = None,
                 self_defining_assets: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 task_advance_cfg: Optional[pulumi.Input[pulumi.InputType['RiskCenterTaskAdvanceCfgArgs']]] = None,
                 task_mode: Optional[pulumi.Input[int]] = None,
                 task_name: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Provides a resource to create a csip risk_center

        ## Example Usage

        ### If task_mode is 0

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        example = tencentcloud.csip.RiskCenter("example",
            assets=[tencentcloud.csip.RiskCenterAssetArgs(
                asset="49.232.172.248",
                asset_name="iac-test",
                asset_type="PublicIp",
                instance_type="1",
                region="ap-beijing",
            )],
            scan_asset_type=2,
            scan_items=[
                "port",
                "poc",
                "weakpass",
            ],
            scan_plan_content="0 0 0 */1 * * *",
            scan_plan_type=0,
            task_mode=0,
            task_name="tf_example")
        ```
        <!--End PulumiCodeChooser -->

        ### If task_mode is 1

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        example = tencentcloud.csip.RiskCenter("example",
            scan_asset_type=1,
            scan_items=[
                "port",
                "poc",
            ],
            scan_plan_type=1,
            task_mode=1,
            task_name="tf_example")
        ```
        <!--End PulumiCodeChooser -->

        ### If task_mode is 2

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        example = tencentcloud.csip.RiskCenter("example",
            assets=[tencentcloud.csip.RiskCenterAssetArgs(
                asset="ins-9p3dkkwy",
                asset_name="sub machine of tke",
                asset_type="CVM",
                instance_type="Instance",
                region="ap-guangzhou",
            )],
            scan_asset_type=2,
            scan_items=[
                "port",
                "configrisk",
                "poc",
                "weakpass",
            ],
            scan_plan_content="0 0 0 20 3 * 2024",
            scan_plan_type=2,
            task_advance_cfg=tencentcloud.csip.RiskCenterTaskAdvanceCfgArgs(
                cfg_risks=[tencentcloud.csip.RiskCenterTaskAdvanceCfgCfgRiskArgs(
                    enable=1,
                    item_id="02c9337f-a6da-49b4-8858-64663a02b79f",
                    resource_type="cdb;rds",
                )],
                port_risks=[tencentcloud.csip.RiskCenterTaskAdvanceCfgPortRiskArgs(
                    check_type=0,
                    detail="22、8080、80、443、3380、3389常见流量端",
                    enable=1,
                    port_sets="常见端口",
                )],
                vul_risks=[tencentcloud.csip.RiskCenterTaskAdvanceCfgVulRiskArgs(
                    enable=1,
                    risk_id="f79e371ce5f644f0fdc72a143144c4b2",
                )],
                weak_pwd_risks=[tencentcloud.csip.RiskCenterTaskAdvanceCfgWeakPwdRiskArgs(
                    check_item_id=50,
                    enable=1,
                )],
            ),
            task_mode=2,
            task_name="tf_example")
        ```
        <!--End PulumiCodeChooser -->

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['RiskCenterAssetArgs']]]] assets: Scan the asset information list.
        :param pulumi.Input[int] scan_asset_type: 0- Full scan, 1- Specify asset scan, 2- Exclude asset scan, 3- Manually fill in the scan. If 1 and 2 are required while task_mode not 1, the Assets field is required. If 3 is required, SelfDefiningAssets is required.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] scan_items: Scan Project. Example: port/poc/weakpass/webcontent/configrisk/exposedserver.
        :param pulumi.Input[str] scan_plan_content: Scan plan details.
        :param pulumi.Input[int] scan_plan_type: 0- Periodic task, 1- immediate scan, 2- periodic scan, 3- Custom; 0, 2 and 3 are required for scan_plan_content.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] self_defining_assets: Ip/domain/url array.
        :param pulumi.Input[pulumi.InputType['RiskCenterTaskAdvanceCfgArgs']] task_advance_cfg: Advanced configuration.
        :param pulumi.Input[int] task_mode: Physical examination mode, 0-standard mode, 1-fast mode, 2-advanced mode, default standard mode.
        :param pulumi.Input[str] task_name: Task Name.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: RiskCenterArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Provides a resource to create a csip risk_center

        ## Example Usage

        ### If task_mode is 0

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        example = tencentcloud.csip.RiskCenter("example",
            assets=[tencentcloud.csip.RiskCenterAssetArgs(
                asset="49.232.172.248",
                asset_name="iac-test",
                asset_type="PublicIp",
                instance_type="1",
                region="ap-beijing",
            )],
            scan_asset_type=2,
            scan_items=[
                "port",
                "poc",
                "weakpass",
            ],
            scan_plan_content="0 0 0 */1 * * *",
            scan_plan_type=0,
            task_mode=0,
            task_name="tf_example")
        ```
        <!--End PulumiCodeChooser -->

        ### If task_mode is 1

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        example = tencentcloud.csip.RiskCenter("example",
            scan_asset_type=1,
            scan_items=[
                "port",
                "poc",
            ],
            scan_plan_type=1,
            task_mode=1,
            task_name="tf_example")
        ```
        <!--End PulumiCodeChooser -->

        ### If task_mode is 2

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        example = tencentcloud.csip.RiskCenter("example",
            assets=[tencentcloud.csip.RiskCenterAssetArgs(
                asset="ins-9p3dkkwy",
                asset_name="sub machine of tke",
                asset_type="CVM",
                instance_type="Instance",
                region="ap-guangzhou",
            )],
            scan_asset_type=2,
            scan_items=[
                "port",
                "configrisk",
                "poc",
                "weakpass",
            ],
            scan_plan_content="0 0 0 20 3 * 2024",
            scan_plan_type=2,
            task_advance_cfg=tencentcloud.csip.RiskCenterTaskAdvanceCfgArgs(
                cfg_risks=[tencentcloud.csip.RiskCenterTaskAdvanceCfgCfgRiskArgs(
                    enable=1,
                    item_id="02c9337f-a6da-49b4-8858-64663a02b79f",
                    resource_type="cdb;rds",
                )],
                port_risks=[tencentcloud.csip.RiskCenterTaskAdvanceCfgPortRiskArgs(
                    check_type=0,
                    detail="22、8080、80、443、3380、3389常见流量端",
                    enable=1,
                    port_sets="常见端口",
                )],
                vul_risks=[tencentcloud.csip.RiskCenterTaskAdvanceCfgVulRiskArgs(
                    enable=1,
                    risk_id="f79e371ce5f644f0fdc72a143144c4b2",
                )],
                weak_pwd_risks=[tencentcloud.csip.RiskCenterTaskAdvanceCfgWeakPwdRiskArgs(
                    check_item_id=50,
                    enable=1,
                )],
            ),
            task_mode=2,
            task_name="tf_example")
        ```
        <!--End PulumiCodeChooser -->

        :param str resource_name: The name of the resource.
        :param RiskCenterArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(RiskCenterArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 assets: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['RiskCenterAssetArgs']]]]] = None,
                 scan_asset_type: Optional[pulumi.Input[int]] = None,
                 scan_items: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 scan_plan_content: Optional[pulumi.Input[str]] = None,
                 scan_plan_type: Optional[pulumi.Input[int]] = None,
                 self_defining_assets: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 task_advance_cfg: Optional[pulumi.Input[pulumi.InputType['RiskCenterTaskAdvanceCfgArgs']]] = None,
                 task_mode: Optional[pulumi.Input[int]] = None,
                 task_name: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = RiskCenterArgs.__new__(RiskCenterArgs)

            __props__.__dict__["assets"] = assets
            if scan_asset_type is None and not opts.urn:
                raise TypeError("Missing required property 'scan_asset_type'")
            __props__.__dict__["scan_asset_type"] = scan_asset_type
            if scan_items is None and not opts.urn:
                raise TypeError("Missing required property 'scan_items'")
            __props__.__dict__["scan_items"] = scan_items
            __props__.__dict__["scan_plan_content"] = scan_plan_content
            if scan_plan_type is None and not opts.urn:
                raise TypeError("Missing required property 'scan_plan_type'")
            __props__.__dict__["scan_plan_type"] = scan_plan_type
            __props__.__dict__["self_defining_assets"] = self_defining_assets
            __props__.__dict__["task_advance_cfg"] = task_advance_cfg
            __props__.__dict__["task_mode"] = task_mode
            if task_name is None and not opts.urn:
                raise TypeError("Missing required property 'task_name'")
            __props__.__dict__["task_name"] = task_name
            __props__.__dict__["scan_from"] = None
        super(RiskCenter, __self__).__init__(
            'tencentcloud:Csip/riskCenter:RiskCenter',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            assets: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['RiskCenterAssetArgs']]]]] = None,
            scan_asset_type: Optional[pulumi.Input[int]] = None,
            scan_from: Optional[pulumi.Input[str]] = None,
            scan_items: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            scan_plan_content: Optional[pulumi.Input[str]] = None,
            scan_plan_type: Optional[pulumi.Input[int]] = None,
            self_defining_assets: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            task_advance_cfg: Optional[pulumi.Input[pulumi.InputType['RiskCenterTaskAdvanceCfgArgs']]] = None,
            task_mode: Optional[pulumi.Input[int]] = None,
            task_name: Optional[pulumi.Input[str]] = None) -> 'RiskCenter':
        """
        Get an existing RiskCenter resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['RiskCenterAssetArgs']]]] assets: Scan the asset information list.
        :param pulumi.Input[int] scan_asset_type: 0- Full scan, 1- Specify asset scan, 2- Exclude asset scan, 3- Manually fill in the scan. If 1 and 2 are required while task_mode not 1, the Assets field is required. If 3 is required, SelfDefiningAssets is required.
        :param pulumi.Input[str] scan_from: Request origin.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] scan_items: Scan Project. Example: port/poc/weakpass/webcontent/configrisk/exposedserver.
        :param pulumi.Input[str] scan_plan_content: Scan plan details.
        :param pulumi.Input[int] scan_plan_type: 0- Periodic task, 1- immediate scan, 2- periodic scan, 3- Custom; 0, 2 and 3 are required for scan_plan_content.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] self_defining_assets: Ip/domain/url array.
        :param pulumi.Input[pulumi.InputType['RiskCenterTaskAdvanceCfgArgs']] task_advance_cfg: Advanced configuration.
        :param pulumi.Input[int] task_mode: Physical examination mode, 0-standard mode, 1-fast mode, 2-advanced mode, default standard mode.
        :param pulumi.Input[str] task_name: Task Name.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _RiskCenterState.__new__(_RiskCenterState)

        __props__.__dict__["assets"] = assets
        __props__.__dict__["scan_asset_type"] = scan_asset_type
        __props__.__dict__["scan_from"] = scan_from
        __props__.__dict__["scan_items"] = scan_items
        __props__.__dict__["scan_plan_content"] = scan_plan_content
        __props__.__dict__["scan_plan_type"] = scan_plan_type
        __props__.__dict__["self_defining_assets"] = self_defining_assets
        __props__.__dict__["task_advance_cfg"] = task_advance_cfg
        __props__.__dict__["task_mode"] = task_mode
        __props__.__dict__["task_name"] = task_name
        return RiskCenter(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter
    def assets(self) -> pulumi.Output[Sequence['outputs.RiskCenterAsset']]:
        """
        Scan the asset information list.
        """
        return pulumi.get(self, "assets")

    @property
    @pulumi.getter(name="scanAssetType")
    def scan_asset_type(self) -> pulumi.Output[int]:
        """
        0- Full scan, 1- Specify asset scan, 2- Exclude asset scan, 3- Manually fill in the scan. If 1 and 2 are required while task_mode not 1, the Assets field is required. If 3 is required, SelfDefiningAssets is required.
        """
        return pulumi.get(self, "scan_asset_type")

    @property
    @pulumi.getter(name="scanFrom")
    def scan_from(self) -> pulumi.Output[str]:
        """
        Request origin.
        """
        return pulumi.get(self, "scan_from")

    @property
    @pulumi.getter(name="scanItems")
    def scan_items(self) -> pulumi.Output[Sequence[str]]:
        """
        Scan Project. Example: port/poc/weakpass/webcontent/configrisk/exposedserver.
        """
        return pulumi.get(self, "scan_items")

    @property
    @pulumi.getter(name="scanPlanContent")
    def scan_plan_content(self) -> pulumi.Output[Optional[str]]:
        """
        Scan plan details.
        """
        return pulumi.get(self, "scan_plan_content")

    @property
    @pulumi.getter(name="scanPlanType")
    def scan_plan_type(self) -> pulumi.Output[int]:
        """
        0- Periodic task, 1- immediate scan, 2- periodic scan, 3- Custom; 0, 2 and 3 are required for scan_plan_content.
        """
        return pulumi.get(self, "scan_plan_type")

    @property
    @pulumi.getter(name="selfDefiningAssets")
    def self_defining_assets(self) -> pulumi.Output[Optional[Sequence[str]]]:
        """
        Ip/domain/url array.
        """
        return pulumi.get(self, "self_defining_assets")

    @property
    @pulumi.getter(name="taskAdvanceCfg")
    def task_advance_cfg(self) -> pulumi.Output[Optional['outputs.RiskCenterTaskAdvanceCfg']]:
        """
        Advanced configuration.
        """
        return pulumi.get(self, "task_advance_cfg")

    @property
    @pulumi.getter(name="taskMode")
    def task_mode(self) -> pulumi.Output[Optional[int]]:
        """
        Physical examination mode, 0-standard mode, 1-fast mode, 2-advanced mode, default standard mode.
        """
        return pulumi.get(self, "task_mode")

    @property
    @pulumi.getter(name="taskName")
    def task_name(self) -> pulumi.Output[str]:
        """
        Task Name.
        """
        return pulumi.get(self, "task_name")


# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['ZoneArgs', 'Zone']

@pulumi.input_type
class ZoneArgs:
    def __init__(__self__, *,
                 area: pulumi.Input[str],
                 plan_id: pulumi.Input[str],
                 type: pulumi.Input[str],
                 zone_name: pulumi.Input[str],
                 alias_zone_name: Optional[pulumi.Input[str]] = None,
                 paused: Optional[pulumi.Input[bool]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, Any]]] = None):
        """
        The set of arguments for constructing a Zone resource.
        :param pulumi.Input[str] area: When the Type value is partial/full, the acceleration region of the L7 domain name. The following are the values of this parameter, and the default value is overseas if not filled in. When the Type value is noDomainAccess, please leave this value empty:
               - global: Global availability zone.
               - mainland: Chinese mainland availability zone.
               - overseas: Global availability zone (excluding Chinese mainland).
        :param pulumi.Input[str] plan_id: The target Plan ID to be bound. When you have an existing Plan in your account, you can fill in this parameter to directly bind the site to the Plan. If you do not have a Plan that can be bound at the moment, please go to the console to purchase a Plan to complete the site creation.
        :param pulumi.Input[str] type: Site access type. The value of this parameter is as follows, and the default is partial if not filled in:partial: CNAME access; full: NS access; noDomainAccess: No domain access.
        :param pulumi.Input[str] zone_name: Site name. When accessing CNAME/NS, please pass the second-level domain (example.com) as the site name; when accessing without a domain name, please leave this value empty.
        :param pulumi.Input[str] alias_zone_name: Alias site identifier. Limit the input to a combination of numbers, English, - and _, within 20 characters. For details, refer to the alias site identifier. If there is no such usage scenario, leave this field empty.
        :param pulumi.Input[bool] paused: Indicates whether the site is disabled.
        :param pulumi.Input[Mapping[str, Any]] tags: Tag description list.
        """
        pulumi.set(__self__, "area", area)
        pulumi.set(__self__, "plan_id", plan_id)
        pulumi.set(__self__, "type", type)
        pulumi.set(__self__, "zone_name", zone_name)
        if alias_zone_name is not None:
            pulumi.set(__self__, "alias_zone_name", alias_zone_name)
        if paused is not None:
            pulumi.set(__self__, "paused", paused)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)

    @property
    @pulumi.getter
    def area(self) -> pulumi.Input[str]:
        """
        When the Type value is partial/full, the acceleration region of the L7 domain name. The following are the values of this parameter, and the default value is overseas if not filled in. When the Type value is noDomainAccess, please leave this value empty:
        - global: Global availability zone.
        - mainland: Chinese mainland availability zone.
        - overseas: Global availability zone (excluding Chinese mainland).
        """
        return pulumi.get(self, "area")

    @area.setter
    def area(self, value: pulumi.Input[str]):
        pulumi.set(self, "area", value)

    @property
    @pulumi.getter(name="planId")
    def plan_id(self) -> pulumi.Input[str]:
        """
        The target Plan ID to be bound. When you have an existing Plan in your account, you can fill in this parameter to directly bind the site to the Plan. If you do not have a Plan that can be bound at the moment, please go to the console to purchase a Plan to complete the site creation.
        """
        return pulumi.get(self, "plan_id")

    @plan_id.setter
    def plan_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "plan_id", value)

    @property
    @pulumi.getter
    def type(self) -> pulumi.Input[str]:
        """
        Site access type. The value of this parameter is as follows, and the default is partial if not filled in:partial: CNAME access; full: NS access; noDomainAccess: No domain access.
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: pulumi.Input[str]):
        pulumi.set(self, "type", value)

    @property
    @pulumi.getter(name="zoneName")
    def zone_name(self) -> pulumi.Input[str]:
        """
        Site name. When accessing CNAME/NS, please pass the second-level domain (example.com) as the site name; when accessing without a domain name, please leave this value empty.
        """
        return pulumi.get(self, "zone_name")

    @zone_name.setter
    def zone_name(self, value: pulumi.Input[str]):
        pulumi.set(self, "zone_name", value)

    @property
    @pulumi.getter(name="aliasZoneName")
    def alias_zone_name(self) -> Optional[pulumi.Input[str]]:
        """
        Alias site identifier. Limit the input to a combination of numbers, English, - and _, within 20 characters. For details, refer to the alias site identifier. If there is no such usage scenario, leave this field empty.
        """
        return pulumi.get(self, "alias_zone_name")

    @alias_zone_name.setter
    def alias_zone_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "alias_zone_name", value)

    @property
    @pulumi.getter
    def paused(self) -> Optional[pulumi.Input[bool]]:
        """
        Indicates whether the site is disabled.
        """
        return pulumi.get(self, "paused")

    @paused.setter
    def paused(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "paused", value)

    @property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Mapping[str, Any]]]:
        """
        Tag description list.
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Mapping[str, Any]]]):
        pulumi.set(self, "tags", value)


@pulumi.input_type
class _ZoneState:
    def __init__(__self__, *,
                 alias_zone_name: Optional[pulumi.Input[str]] = None,
                 area: Optional[pulumi.Input[str]] = None,
                 name_servers: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 ownership_verifications: Optional[pulumi.Input[Sequence[pulumi.Input['ZoneOwnershipVerificationArgs']]]] = None,
                 paused: Optional[pulumi.Input[bool]] = None,
                 plan_id: Optional[pulumi.Input[str]] = None,
                 status: Optional[pulumi.Input[str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, Any]]] = None,
                 type: Optional[pulumi.Input[str]] = None,
                 zone_name: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering Zone resources.
        :param pulumi.Input[str] alias_zone_name: Alias site identifier. Limit the input to a combination of numbers, English, - and _, within 20 characters. For details, refer to the alias site identifier. If there is no such usage scenario, leave this field empty.
        :param pulumi.Input[str] area: When the Type value is partial/full, the acceleration region of the L7 domain name. The following are the values of this parameter, and the default value is overseas if not filled in. When the Type value is noDomainAccess, please leave this value empty:
               - global: Global availability zone.
               - mainland: Chinese mainland availability zone.
               - overseas: Global availability zone (excluding Chinese mainland).
        :param pulumi.Input[Sequence[pulumi.Input[str]]] name_servers: NS list allocated by Tencent Cloud.
        :param pulumi.Input[Sequence[pulumi.Input['ZoneOwnershipVerificationArgs']]] ownership_verifications: Ownership verification information. Note: This field may return null, indicating that no valid value can be obtained.
        :param pulumi.Input[bool] paused: Indicates whether the site is disabled.
        :param pulumi.Input[str] plan_id: The target Plan ID to be bound. When you have an existing Plan in your account, you can fill in this parameter to directly bind the site to the Plan. If you do not have a Plan that can be bound at the moment, please go to the console to purchase a Plan to complete the site creation.
        :param pulumi.Input[str] status: Site status. Valid values: `active`: NS is switched; `pending`: NS is not switched; `moved`: NS is moved; `deactivated`: this site is blocked.
        :param pulumi.Input[Mapping[str, Any]] tags: Tag description list.
        :param pulumi.Input[str] type: Site access type. The value of this parameter is as follows, and the default is partial if not filled in:partial: CNAME access; full: NS access; noDomainAccess: No domain access.
        :param pulumi.Input[str] zone_name: Site name. When accessing CNAME/NS, please pass the second-level domain (example.com) as the site name; when accessing without a domain name, please leave this value empty.
        """
        if alias_zone_name is not None:
            pulumi.set(__self__, "alias_zone_name", alias_zone_name)
        if area is not None:
            pulumi.set(__self__, "area", area)
        if name_servers is not None:
            pulumi.set(__self__, "name_servers", name_servers)
        if ownership_verifications is not None:
            pulumi.set(__self__, "ownership_verifications", ownership_verifications)
        if paused is not None:
            pulumi.set(__self__, "paused", paused)
        if plan_id is not None:
            pulumi.set(__self__, "plan_id", plan_id)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)
        if type is not None:
            pulumi.set(__self__, "type", type)
        if zone_name is not None:
            pulumi.set(__self__, "zone_name", zone_name)

    @property
    @pulumi.getter(name="aliasZoneName")
    def alias_zone_name(self) -> Optional[pulumi.Input[str]]:
        """
        Alias site identifier. Limit the input to a combination of numbers, English, - and _, within 20 characters. For details, refer to the alias site identifier. If there is no such usage scenario, leave this field empty.
        """
        return pulumi.get(self, "alias_zone_name")

    @alias_zone_name.setter
    def alias_zone_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "alias_zone_name", value)

    @property
    @pulumi.getter
    def area(self) -> Optional[pulumi.Input[str]]:
        """
        When the Type value is partial/full, the acceleration region of the L7 domain name. The following are the values of this parameter, and the default value is overseas if not filled in. When the Type value is noDomainAccess, please leave this value empty:
        - global: Global availability zone.
        - mainland: Chinese mainland availability zone.
        - overseas: Global availability zone (excluding Chinese mainland).
        """
        return pulumi.get(self, "area")

    @area.setter
    def area(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "area", value)

    @property
    @pulumi.getter(name="nameServers")
    def name_servers(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        NS list allocated by Tencent Cloud.
        """
        return pulumi.get(self, "name_servers")

    @name_servers.setter
    def name_servers(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "name_servers", value)

    @property
    @pulumi.getter(name="ownershipVerifications")
    def ownership_verifications(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['ZoneOwnershipVerificationArgs']]]]:
        """
        Ownership verification information. Note: This field may return null, indicating that no valid value can be obtained.
        """
        return pulumi.get(self, "ownership_verifications")

    @ownership_verifications.setter
    def ownership_verifications(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['ZoneOwnershipVerificationArgs']]]]):
        pulumi.set(self, "ownership_verifications", value)

    @property
    @pulumi.getter
    def paused(self) -> Optional[pulumi.Input[bool]]:
        """
        Indicates whether the site is disabled.
        """
        return pulumi.get(self, "paused")

    @paused.setter
    def paused(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "paused", value)

    @property
    @pulumi.getter(name="planId")
    def plan_id(self) -> Optional[pulumi.Input[str]]:
        """
        The target Plan ID to be bound. When you have an existing Plan in your account, you can fill in this parameter to directly bind the site to the Plan. If you do not have a Plan that can be bound at the moment, please go to the console to purchase a Plan to complete the site creation.
        """
        return pulumi.get(self, "plan_id")

    @plan_id.setter
    def plan_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "plan_id", value)

    @property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[str]]:
        """
        Site status. Valid values: `active`: NS is switched; `pending`: NS is not switched; `moved`: NS is moved; `deactivated`: this site is blocked.
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "status", value)

    @property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Mapping[str, Any]]]:
        """
        Tag description list.
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Mapping[str, Any]]]):
        pulumi.set(self, "tags", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        Site access type. The value of this parameter is as follows, and the default is partial if not filled in:partial: CNAME access; full: NS access; noDomainAccess: No domain access.
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)

    @property
    @pulumi.getter(name="zoneName")
    def zone_name(self) -> Optional[pulumi.Input[str]]:
        """
        Site name. When accessing CNAME/NS, please pass the second-level domain (example.com) as the site name; when accessing without a domain name, please leave this value empty.
        """
        return pulumi.get(self, "zone_name")

    @zone_name.setter
    def zone_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "zone_name", value)


class Zone(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 alias_zone_name: Optional[pulumi.Input[str]] = None,
                 area: Optional[pulumi.Input[str]] = None,
                 paused: Optional[pulumi.Input[bool]] = None,
                 plan_id: Optional[pulumi.Input[str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, Any]]] = None,
                 type: Optional[pulumi.Input[str]] = None,
                 zone_name: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Provides a resource to create a teo zone

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        zone = tencentcloud.teo.Zone("zone",
            alias_zone_name="teo-test",
            area="overseas",
            paused=False,
            plan_id="edgeone-2kfv1h391n6w",
            tags={
                "createdBy": "terraform",
            },
            type="partial",
            zone_name="tf-teo.com")
        ```
        <!--End PulumiCodeChooser -->

        ## Import

        teo zone can be imported using the id, e.g.

        ```sh
        $ pulumi import tencentcloud:Teo/zone:Zone zone zone_id
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] alias_zone_name: Alias site identifier. Limit the input to a combination of numbers, English, - and _, within 20 characters. For details, refer to the alias site identifier. If there is no such usage scenario, leave this field empty.
        :param pulumi.Input[str] area: When the Type value is partial/full, the acceleration region of the L7 domain name. The following are the values of this parameter, and the default value is overseas if not filled in. When the Type value is noDomainAccess, please leave this value empty:
               - global: Global availability zone.
               - mainland: Chinese mainland availability zone.
               - overseas: Global availability zone (excluding Chinese mainland).
        :param pulumi.Input[bool] paused: Indicates whether the site is disabled.
        :param pulumi.Input[str] plan_id: The target Plan ID to be bound. When you have an existing Plan in your account, you can fill in this parameter to directly bind the site to the Plan. If you do not have a Plan that can be bound at the moment, please go to the console to purchase a Plan to complete the site creation.
        :param pulumi.Input[Mapping[str, Any]] tags: Tag description list.
        :param pulumi.Input[str] type: Site access type. The value of this parameter is as follows, and the default is partial if not filled in:partial: CNAME access; full: NS access; noDomainAccess: No domain access.
        :param pulumi.Input[str] zone_name: Site name. When accessing CNAME/NS, please pass the second-level domain (example.com) as the site name; when accessing without a domain name, please leave this value empty.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: ZoneArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Provides a resource to create a teo zone

        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        zone = tencentcloud.teo.Zone("zone",
            alias_zone_name="teo-test",
            area="overseas",
            paused=False,
            plan_id="edgeone-2kfv1h391n6w",
            tags={
                "createdBy": "terraform",
            },
            type="partial",
            zone_name="tf-teo.com")
        ```
        <!--End PulumiCodeChooser -->

        ## Import

        teo zone can be imported using the id, e.g.

        ```sh
        $ pulumi import tencentcloud:Teo/zone:Zone zone zone_id
        ```

        :param str resource_name: The name of the resource.
        :param ZoneArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(ZoneArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 alias_zone_name: Optional[pulumi.Input[str]] = None,
                 area: Optional[pulumi.Input[str]] = None,
                 paused: Optional[pulumi.Input[bool]] = None,
                 plan_id: Optional[pulumi.Input[str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, Any]]] = None,
                 type: Optional[pulumi.Input[str]] = None,
                 zone_name: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = ZoneArgs.__new__(ZoneArgs)

            __props__.__dict__["alias_zone_name"] = alias_zone_name
            if area is None and not opts.urn:
                raise TypeError("Missing required property 'area'")
            __props__.__dict__["area"] = area
            __props__.__dict__["paused"] = paused
            if plan_id is None and not opts.urn:
                raise TypeError("Missing required property 'plan_id'")
            __props__.__dict__["plan_id"] = plan_id
            __props__.__dict__["tags"] = tags
            if type is None and not opts.urn:
                raise TypeError("Missing required property 'type'")
            __props__.__dict__["type"] = type
            if zone_name is None and not opts.urn:
                raise TypeError("Missing required property 'zone_name'")
            __props__.__dict__["zone_name"] = zone_name
            __props__.__dict__["name_servers"] = None
            __props__.__dict__["ownership_verifications"] = None
            __props__.__dict__["status"] = None
        super(Zone, __self__).__init__(
            'tencentcloud:Teo/zone:Zone',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            alias_zone_name: Optional[pulumi.Input[str]] = None,
            area: Optional[pulumi.Input[str]] = None,
            name_servers: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            ownership_verifications: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['ZoneOwnershipVerificationArgs']]]]] = None,
            paused: Optional[pulumi.Input[bool]] = None,
            plan_id: Optional[pulumi.Input[str]] = None,
            status: Optional[pulumi.Input[str]] = None,
            tags: Optional[pulumi.Input[Mapping[str, Any]]] = None,
            type: Optional[pulumi.Input[str]] = None,
            zone_name: Optional[pulumi.Input[str]] = None) -> 'Zone':
        """
        Get an existing Zone resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] alias_zone_name: Alias site identifier. Limit the input to a combination of numbers, English, - and _, within 20 characters. For details, refer to the alias site identifier. If there is no such usage scenario, leave this field empty.
        :param pulumi.Input[str] area: When the Type value is partial/full, the acceleration region of the L7 domain name. The following are the values of this parameter, and the default value is overseas if not filled in. When the Type value is noDomainAccess, please leave this value empty:
               - global: Global availability zone.
               - mainland: Chinese mainland availability zone.
               - overseas: Global availability zone (excluding Chinese mainland).
        :param pulumi.Input[Sequence[pulumi.Input[str]]] name_servers: NS list allocated by Tencent Cloud.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['ZoneOwnershipVerificationArgs']]]] ownership_verifications: Ownership verification information. Note: This field may return null, indicating that no valid value can be obtained.
        :param pulumi.Input[bool] paused: Indicates whether the site is disabled.
        :param pulumi.Input[str] plan_id: The target Plan ID to be bound. When you have an existing Plan in your account, you can fill in this parameter to directly bind the site to the Plan. If you do not have a Plan that can be bound at the moment, please go to the console to purchase a Plan to complete the site creation.
        :param pulumi.Input[str] status: Site status. Valid values: `active`: NS is switched; `pending`: NS is not switched; `moved`: NS is moved; `deactivated`: this site is blocked.
        :param pulumi.Input[Mapping[str, Any]] tags: Tag description list.
        :param pulumi.Input[str] type: Site access type. The value of this parameter is as follows, and the default is partial if not filled in:partial: CNAME access; full: NS access; noDomainAccess: No domain access.
        :param pulumi.Input[str] zone_name: Site name. When accessing CNAME/NS, please pass the second-level domain (example.com) as the site name; when accessing without a domain name, please leave this value empty.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _ZoneState.__new__(_ZoneState)

        __props__.__dict__["alias_zone_name"] = alias_zone_name
        __props__.__dict__["area"] = area
        __props__.__dict__["name_servers"] = name_servers
        __props__.__dict__["ownership_verifications"] = ownership_verifications
        __props__.__dict__["paused"] = paused
        __props__.__dict__["plan_id"] = plan_id
        __props__.__dict__["status"] = status
        __props__.__dict__["tags"] = tags
        __props__.__dict__["type"] = type
        __props__.__dict__["zone_name"] = zone_name
        return Zone(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="aliasZoneName")
    def alias_zone_name(self) -> pulumi.Output[Optional[str]]:
        """
        Alias site identifier. Limit the input to a combination of numbers, English, - and _, within 20 characters. For details, refer to the alias site identifier. If there is no such usage scenario, leave this field empty.
        """
        return pulumi.get(self, "alias_zone_name")

    @property
    @pulumi.getter
    def area(self) -> pulumi.Output[str]:
        """
        When the Type value is partial/full, the acceleration region of the L7 domain name. The following are the values of this parameter, and the default value is overseas if not filled in. When the Type value is noDomainAccess, please leave this value empty:
        - global: Global availability zone.
        - mainland: Chinese mainland availability zone.
        - overseas: Global availability zone (excluding Chinese mainland).
        """
        return pulumi.get(self, "area")

    @property
    @pulumi.getter(name="nameServers")
    def name_servers(self) -> pulumi.Output[Sequence[str]]:
        """
        NS list allocated by Tencent Cloud.
        """
        return pulumi.get(self, "name_servers")

    @property
    @pulumi.getter(name="ownershipVerifications")
    def ownership_verifications(self) -> pulumi.Output[Sequence['outputs.ZoneOwnershipVerification']]:
        """
        Ownership verification information. Note: This field may return null, indicating that no valid value can be obtained.
        """
        return pulumi.get(self, "ownership_verifications")

    @property
    @pulumi.getter
    def paused(self) -> pulumi.Output[bool]:
        """
        Indicates whether the site is disabled.
        """
        return pulumi.get(self, "paused")

    @property
    @pulumi.getter(name="planId")
    def plan_id(self) -> pulumi.Output[str]:
        """
        The target Plan ID to be bound. When you have an existing Plan in your account, you can fill in this parameter to directly bind the site to the Plan. If you do not have a Plan that can be bound at the moment, please go to the console to purchase a Plan to complete the site creation.
        """
        return pulumi.get(self, "plan_id")

    @property
    @pulumi.getter
    def status(self) -> pulumi.Output[str]:
        """
        Site status. Valid values: `active`: NS is switched; `pending`: NS is not switched; `moved`: NS is moved; `deactivated`: this site is blocked.
        """
        return pulumi.get(self, "status")

    @property
    @pulumi.getter
    def tags(self) -> pulumi.Output[Optional[Mapping[str, Any]]]:
        """
        Tag description list.
        """
        return pulumi.get(self, "tags")

    @property
    @pulumi.getter
    def type(self) -> pulumi.Output[str]:
        """
        Site access type. The value of this parameter is as follows, and the default is partial if not filled in:partial: CNAME access; full: NS access; noDomainAccess: No domain access.
        """
        return pulumi.get(self, "type")

    @property
    @pulumi.getter(name="zoneName")
    def zone_name(self) -> pulumi.Output[str]:
        """
        Site name. When accessing CNAME/NS, please pass the second-level domain (example.com) as the site name; when accessing without a domain name, please leave this value empty.
        """
        return pulumi.get(self, "zone_name")


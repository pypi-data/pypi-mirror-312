# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['RuleEnginePriorityArgs', 'RuleEnginePriority']

@pulumi.input_type
class RuleEnginePriorityArgs:
    def __init__(__self__, *,
                 zone_id: pulumi.Input[str],
                 rules_priorities: Optional[pulumi.Input[Sequence[pulumi.Input['RuleEnginePriorityRulesPriorityArgs']]]] = None):
        """
        The set of arguments for constructing a RuleEnginePriority resource.
        :param pulumi.Input[str] zone_id: Site ID.
        :param pulumi.Input[Sequence[pulumi.Input['RuleEnginePriorityRulesPriorityArgs']]] rules_priorities: Priority of rules.
        """
        pulumi.set(__self__, "zone_id", zone_id)
        if rules_priorities is not None:
            pulumi.set(__self__, "rules_priorities", rules_priorities)

    @property
    @pulumi.getter(name="zoneId")
    def zone_id(self) -> pulumi.Input[str]:
        """
        Site ID.
        """
        return pulumi.get(self, "zone_id")

    @zone_id.setter
    def zone_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "zone_id", value)

    @property
    @pulumi.getter(name="rulesPriorities")
    def rules_priorities(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['RuleEnginePriorityRulesPriorityArgs']]]]:
        """
        Priority of rules.
        """
        return pulumi.get(self, "rules_priorities")

    @rules_priorities.setter
    def rules_priorities(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['RuleEnginePriorityRulesPriorityArgs']]]]):
        pulumi.set(self, "rules_priorities", value)


@pulumi.input_type
class _RuleEnginePriorityState:
    def __init__(__self__, *,
                 rules_priorities: Optional[pulumi.Input[Sequence[pulumi.Input['RuleEnginePriorityRulesPriorityArgs']]]] = None,
                 zone_id: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering RuleEnginePriority resources.
        :param pulumi.Input[Sequence[pulumi.Input['RuleEnginePriorityRulesPriorityArgs']]] rules_priorities: Priority of rules.
        :param pulumi.Input[str] zone_id: Site ID.
        """
        if rules_priorities is not None:
            pulumi.set(__self__, "rules_priorities", rules_priorities)
        if zone_id is not None:
            pulumi.set(__self__, "zone_id", zone_id)

    @property
    @pulumi.getter(name="rulesPriorities")
    def rules_priorities(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['RuleEnginePriorityRulesPriorityArgs']]]]:
        """
        Priority of rules.
        """
        return pulumi.get(self, "rules_priorities")

    @rules_priorities.setter
    def rules_priorities(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['RuleEnginePriorityRulesPriorityArgs']]]]):
        pulumi.set(self, "rules_priorities", value)

    @property
    @pulumi.getter(name="zoneId")
    def zone_id(self) -> Optional[pulumi.Input[str]]:
        """
        Site ID.
        """
        return pulumi.get(self, "zone_id")

    @zone_id.setter
    def zone_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "zone_id", value)


class RuleEnginePriority(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 rules_priorities: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['RuleEnginePriorityRulesPriorityArgs']]]]] = None,
                 zone_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Provides a resource to create a teo rule_engine_priority

        ## Example Usage

        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        rule_engine_priority = tencentcloud.teo.RuleEnginePriority("ruleEnginePriority",
            rules_priorities=[
                tencentcloud.teo.RuleEnginePriorityRulesPriorityArgs(
                    index=0,
                    value="rule-m9jlttua",
                ),
                tencentcloud.teo.RuleEnginePriorityRulesPriorityArgs(
                    index=1,
                    value="rule-m5l9t4k1",
                ),
            ],
            zone_id="zone-294v965lwmn6")
        ```

        ## Import

        teo rule_engine_priority can be imported using the zone_id, e.g.

        ```sh
         $ pulumi import tencentcloud:Teo/ruleEnginePriority:RuleEnginePriority rule_engine_priority zone-294v965lwmn6
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['RuleEnginePriorityRulesPriorityArgs']]]] rules_priorities: Priority of rules.
        :param pulumi.Input[str] zone_id: Site ID.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: RuleEnginePriorityArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Provides a resource to create a teo rule_engine_priority

        ## Example Usage

        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        rule_engine_priority = tencentcloud.teo.RuleEnginePriority("ruleEnginePriority",
            rules_priorities=[
                tencentcloud.teo.RuleEnginePriorityRulesPriorityArgs(
                    index=0,
                    value="rule-m9jlttua",
                ),
                tencentcloud.teo.RuleEnginePriorityRulesPriorityArgs(
                    index=1,
                    value="rule-m5l9t4k1",
                ),
            ],
            zone_id="zone-294v965lwmn6")
        ```

        ## Import

        teo rule_engine_priority can be imported using the zone_id, e.g.

        ```sh
         $ pulumi import tencentcloud:Teo/ruleEnginePriority:RuleEnginePriority rule_engine_priority zone-294v965lwmn6
        ```

        :param str resource_name: The name of the resource.
        :param RuleEnginePriorityArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(RuleEnginePriorityArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 rules_priorities: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['RuleEnginePriorityRulesPriorityArgs']]]]] = None,
                 zone_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = _utilities.get_version()
        if opts.plugin_download_url is None:
            opts.plugin_download_url = _utilities.get_plugin_download_url()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = RuleEnginePriorityArgs.__new__(RuleEnginePriorityArgs)

            __props__.__dict__["rules_priorities"] = rules_priorities
            if zone_id is None and not opts.urn:
                raise TypeError("Missing required property 'zone_id'")
            __props__.__dict__["zone_id"] = zone_id
        super(RuleEnginePriority, __self__).__init__(
            'tencentcloud:Teo/ruleEnginePriority:RuleEnginePriority',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            rules_priorities: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['RuleEnginePriorityRulesPriorityArgs']]]]] = None,
            zone_id: Optional[pulumi.Input[str]] = None) -> 'RuleEnginePriority':
        """
        Get an existing RuleEnginePriority resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['RuleEnginePriorityRulesPriorityArgs']]]] rules_priorities: Priority of rules.
        :param pulumi.Input[str] zone_id: Site ID.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _RuleEnginePriorityState.__new__(_RuleEnginePriorityState)

        __props__.__dict__["rules_priorities"] = rules_priorities
        __props__.__dict__["zone_id"] = zone_id
        return RuleEnginePriority(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="rulesPriorities")
    def rules_priorities(self) -> pulumi.Output[Sequence['outputs.RuleEnginePriorityRulesPriority']]:
        """
        Priority of rules.
        """
        return pulumi.get(self, "rules_priorities")

    @property
    @pulumi.getter(name="zoneId")
    def zone_id(self) -> pulumi.Output[str]:
        """
        Site ID.
        """
        return pulumi.get(self, "zone_id")


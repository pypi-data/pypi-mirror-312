# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetBotPortraitRulesResult',
    'AwaitableGetBotPortraitRulesResult',
    'get_bot_portrait_rules',
    'get_bot_portrait_rules_output',
]

@pulumi.output_type
class GetBotPortraitRulesResult:
    """
    A collection of values returned by getBotPortraitRules.
    """
    def __init__(__self__, entity=None, id=None, result_output_file=None, rules=None, zone_id=None):
        if entity and not isinstance(entity, str):
            raise TypeError("Expected argument 'entity' to be a str")
        pulumi.set(__self__, "entity", entity)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)
        if rules and not isinstance(rules, list):
            raise TypeError("Expected argument 'rules' to be a list")
        pulumi.set(__self__, "rules", rules)
        if zone_id and not isinstance(zone_id, str):
            raise TypeError("Expected argument 'zone_id' to be a str")
        pulumi.set(__self__, "zone_id", zone_id)

    @property
    @pulumi.getter
    def entity(self) -> str:
        return pulumi.get(self, "entity")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")

    @property
    @pulumi.getter
    def rules(self) -> Sequence['outputs.GetBotPortraitRulesRuleResult']:
        return pulumi.get(self, "rules")

    @property
    @pulumi.getter(name="zoneId")
    def zone_id(self) -> str:
        return pulumi.get(self, "zone_id")


class AwaitableGetBotPortraitRulesResult(GetBotPortraitRulesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetBotPortraitRulesResult(
            entity=self.entity,
            id=self.id,
            result_output_file=self.result_output_file,
            rules=self.rules,
            zone_id=self.zone_id)


def get_bot_portrait_rules(entity: Optional[str] = None,
                           result_output_file: Optional[str] = None,
                           zone_id: Optional[str] = None,
                           opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetBotPortraitRulesResult:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['entity'] = entity
    __args__['resultOutputFile'] = result_output_file
    __args__['zoneId'] = zone_id
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
        if opts.plugin_download_url is None:
            opts.plugin_download_url = _utilities.get_plugin_download_url()
    __ret__ = pulumi.runtime.invoke('tencentcloud:Teo/getBotPortraitRules:getBotPortraitRules', __args__, opts=opts, typ=GetBotPortraitRulesResult).value

    return AwaitableGetBotPortraitRulesResult(
        entity=__ret__.entity,
        id=__ret__.id,
        result_output_file=__ret__.result_output_file,
        rules=__ret__.rules,
        zone_id=__ret__.zone_id)


@_utilities.lift_output_func(get_bot_portrait_rules)
def get_bot_portrait_rules_output(entity: Optional[pulumi.Input[str]] = None,
                                  result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                                  zone_id: Optional[pulumi.Input[str]] = None,
                                  opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetBotPortraitRulesResult]:
    """
    Use this data source to access information about an existing resource.
    """
    ...

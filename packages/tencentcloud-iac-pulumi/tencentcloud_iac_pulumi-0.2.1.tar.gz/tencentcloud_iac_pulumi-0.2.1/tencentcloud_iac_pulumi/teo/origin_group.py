# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['OriginGroupArgs', 'OriginGroup']

@pulumi.input_type
class OriginGroupArgs:
    def __init__(__self__, *,
                 records: pulumi.Input[Sequence[pulumi.Input['OriginGroupRecordArgs']]],
                 type: pulumi.Input[str],
                 zone_id: pulumi.Input[str],
                 host_header: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a OriginGroup resource.
        :param pulumi.Input[Sequence[pulumi.Input['OriginGroupRecordArgs']]] records: Origin site records.
        :param pulumi.Input[str] type: Type of the origin site. Valid values:
        :param pulumi.Input[str] zone_id: Site ID.
        :param pulumi.Input[str] host_header: Back-to-origin Host Header, it only takes effect when type = HTTP is passed in. The rule engine modifies the Host Header configuration priority to be higher than the Host Header of the origin site group.
        :param pulumi.Input[str] name: OriginGroup Name.
        """
        pulumi.set(__self__, "records", records)
        pulumi.set(__self__, "type", type)
        pulumi.set(__self__, "zone_id", zone_id)
        if host_header is not None:
            pulumi.set(__self__, "host_header", host_header)
        if name is not None:
            pulumi.set(__self__, "name", name)

    @property
    @pulumi.getter
    def records(self) -> pulumi.Input[Sequence[pulumi.Input['OriginGroupRecordArgs']]]:
        """
        Origin site records.
        """
        return pulumi.get(self, "records")

    @records.setter
    def records(self, value: pulumi.Input[Sequence[pulumi.Input['OriginGroupRecordArgs']]]):
        pulumi.set(self, "records", value)

    @property
    @pulumi.getter
    def type(self) -> pulumi.Input[str]:
        """
        Type of the origin site. Valid values:
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: pulumi.Input[str]):
        pulumi.set(self, "type", value)

    @property
    @pulumi.getter(name="zoneId")
    def zone_id(self) -> pulumi.Input[str]:
        """
        Site ID.
        """
        return pulumi.get(self, "zone_id")

    @zone_id.setter
    def zone_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "zone_id", value)

    @property
    @pulumi.getter(name="hostHeader")
    def host_header(self) -> Optional[pulumi.Input[str]]:
        """
        Back-to-origin Host Header, it only takes effect when type = HTTP is passed in. The rule engine modifies the Host Header configuration priority to be higher than the Host Header of the origin site group.
        """
        return pulumi.get(self, "host_header")

    @host_header.setter
    def host_header(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "host_header", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        OriginGroup Name.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)


@pulumi.input_type
class _OriginGroupState:
    def __init__(__self__, *,
                 create_time: Optional[pulumi.Input[str]] = None,
                 host_header: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 origin_group_id: Optional[pulumi.Input[str]] = None,
                 records: Optional[pulumi.Input[Sequence[pulumi.Input['OriginGroupRecordArgs']]]] = None,
                 references: Optional[pulumi.Input[Sequence[pulumi.Input['OriginGroupReferenceArgs']]]] = None,
                 type: Optional[pulumi.Input[str]] = None,
                 update_time: Optional[pulumi.Input[str]] = None,
                 zone_id: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering OriginGroup resources.
        :param pulumi.Input[str] create_time: Origin site group creation time.
        :param pulumi.Input[str] host_header: Back-to-origin Host Header, it only takes effect when type = HTTP is passed in. The rule engine modifies the Host Header configuration priority to be higher than the Host Header of the origin site group.
        :param pulumi.Input[str] name: OriginGroup Name.
        :param pulumi.Input[str] origin_group_id: OriginGroup ID.
        :param pulumi.Input[Sequence[pulumi.Input['OriginGroupRecordArgs']]] records: Origin site records.
        :param pulumi.Input[Sequence[pulumi.Input['OriginGroupReferenceArgs']]] references: List of referenced instances of the origin site group.
        :param pulumi.Input[str] type: Type of the origin site. Valid values:
        :param pulumi.Input[str] update_time: Origin site group update time.
        :param pulumi.Input[str] zone_id: Site ID.
        """
        if create_time is not None:
            pulumi.set(__self__, "create_time", create_time)
        if host_header is not None:
            pulumi.set(__self__, "host_header", host_header)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if origin_group_id is not None:
            pulumi.set(__self__, "origin_group_id", origin_group_id)
        if records is not None:
            pulumi.set(__self__, "records", records)
        if references is not None:
            pulumi.set(__self__, "references", references)
        if type is not None:
            pulumi.set(__self__, "type", type)
        if update_time is not None:
            pulumi.set(__self__, "update_time", update_time)
        if zone_id is not None:
            pulumi.set(__self__, "zone_id", zone_id)

    @property
    @pulumi.getter(name="createTime")
    def create_time(self) -> Optional[pulumi.Input[str]]:
        """
        Origin site group creation time.
        """
        return pulumi.get(self, "create_time")

    @create_time.setter
    def create_time(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "create_time", value)

    @property
    @pulumi.getter(name="hostHeader")
    def host_header(self) -> Optional[pulumi.Input[str]]:
        """
        Back-to-origin Host Header, it only takes effect when type = HTTP is passed in. The rule engine modifies the Host Header configuration priority to be higher than the Host Header of the origin site group.
        """
        return pulumi.get(self, "host_header")

    @host_header.setter
    def host_header(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "host_header", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        OriginGroup Name.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="originGroupId")
    def origin_group_id(self) -> Optional[pulumi.Input[str]]:
        """
        OriginGroup ID.
        """
        return pulumi.get(self, "origin_group_id")

    @origin_group_id.setter
    def origin_group_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "origin_group_id", value)

    @property
    @pulumi.getter
    def records(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['OriginGroupRecordArgs']]]]:
        """
        Origin site records.
        """
        return pulumi.get(self, "records")

    @records.setter
    def records(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['OriginGroupRecordArgs']]]]):
        pulumi.set(self, "records", value)

    @property
    @pulumi.getter
    def references(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['OriginGroupReferenceArgs']]]]:
        """
        List of referenced instances of the origin site group.
        """
        return pulumi.get(self, "references")

    @references.setter
    def references(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['OriginGroupReferenceArgs']]]]):
        pulumi.set(self, "references", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        Type of the origin site. Valid values:
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)

    @property
    @pulumi.getter(name="updateTime")
    def update_time(self) -> Optional[pulumi.Input[str]]:
        """
        Origin site group update time.
        """
        return pulumi.get(self, "update_time")

    @update_time.setter
    def update_time(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "update_time", value)

    @property
    @pulumi.getter(name="zoneId")
    def zone_id(self) -> Optional[pulumi.Input[str]]:
        """
        Site ID.
        """
        return pulumi.get(self, "zone_id")

    @zone_id.setter
    def zone_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "zone_id", value)


class OriginGroup(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 host_header: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 records: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['OriginGroupRecordArgs']]]]] = None,
                 type: Optional[pulumi.Input[str]] = None,
                 zone_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Provides a resource to create a teo origin_group

        > **NOTE:** Please note that `Teo.OriginGroup` had to undergo incompatible changes in version v1.81.96.

        ## Example Usage

        ### Self origin group

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        basic = tencentcloud.teo.OriginGroup("basic",
            records=[tencentcloud.teo.OriginGroupRecordArgs(
                private=True,
                private_parameters=[tencentcloud.teo.OriginGroupRecordPrivateParameterArgs(
                    name="SecretAccessKey",
                    value="test",
                )],
                record="tf-teo.xyz",
                type="IP_DOMAIN",
                weight=100,
            )],
            type="GENERAL",
            zone_id="zone-197z8rf93cfw")
        ```
        <!--End PulumiCodeChooser -->

        ## Import

        teo origin_group can be imported using the zone_id#originGroup_id, e.g.

        `

        ```sh
        $ pulumi import tencentcloud:Teo/originGroup:OriginGroup origin_group zone-297z8rf93cfw#origin-4f8a30b2-3720-11ed-b66b-525400dceb86
        ```

        `

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] host_header: Back-to-origin Host Header, it only takes effect when type = HTTP is passed in. The rule engine modifies the Host Header configuration priority to be higher than the Host Header of the origin site group.
        :param pulumi.Input[str] name: OriginGroup Name.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['OriginGroupRecordArgs']]]] records: Origin site records.
        :param pulumi.Input[str] type: Type of the origin site. Valid values:
        :param pulumi.Input[str] zone_id: Site ID.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: OriginGroupArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Provides a resource to create a teo origin_group

        > **NOTE:** Please note that `Teo.OriginGroup` had to undergo incompatible changes in version v1.81.96.

        ## Example Usage

        ### Self origin group

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import tencentcloud_iac_pulumi as tencentcloud

        basic = tencentcloud.teo.OriginGroup("basic",
            records=[tencentcloud.teo.OriginGroupRecordArgs(
                private=True,
                private_parameters=[tencentcloud.teo.OriginGroupRecordPrivateParameterArgs(
                    name="SecretAccessKey",
                    value="test",
                )],
                record="tf-teo.xyz",
                type="IP_DOMAIN",
                weight=100,
            )],
            type="GENERAL",
            zone_id="zone-197z8rf93cfw")
        ```
        <!--End PulumiCodeChooser -->

        ## Import

        teo origin_group can be imported using the zone_id#originGroup_id, e.g.

        `

        ```sh
        $ pulumi import tencentcloud:Teo/originGroup:OriginGroup origin_group zone-297z8rf93cfw#origin-4f8a30b2-3720-11ed-b66b-525400dceb86
        ```

        `

        :param str resource_name: The name of the resource.
        :param OriginGroupArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(OriginGroupArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 host_header: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 records: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['OriginGroupRecordArgs']]]]] = None,
                 type: Optional[pulumi.Input[str]] = None,
                 zone_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = OriginGroupArgs.__new__(OriginGroupArgs)

            __props__.__dict__["host_header"] = host_header
            __props__.__dict__["name"] = name
            if records is None and not opts.urn:
                raise TypeError("Missing required property 'records'")
            __props__.__dict__["records"] = records
            if type is None and not opts.urn:
                raise TypeError("Missing required property 'type'")
            __props__.__dict__["type"] = type
            if zone_id is None and not opts.urn:
                raise TypeError("Missing required property 'zone_id'")
            __props__.__dict__["zone_id"] = zone_id
            __props__.__dict__["create_time"] = None
            __props__.__dict__["origin_group_id"] = None
            __props__.__dict__["references"] = None
            __props__.__dict__["update_time"] = None
        super(OriginGroup, __self__).__init__(
            'tencentcloud:Teo/originGroup:OriginGroup',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            create_time: Optional[pulumi.Input[str]] = None,
            host_header: Optional[pulumi.Input[str]] = None,
            name: Optional[pulumi.Input[str]] = None,
            origin_group_id: Optional[pulumi.Input[str]] = None,
            records: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['OriginGroupRecordArgs']]]]] = None,
            references: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['OriginGroupReferenceArgs']]]]] = None,
            type: Optional[pulumi.Input[str]] = None,
            update_time: Optional[pulumi.Input[str]] = None,
            zone_id: Optional[pulumi.Input[str]] = None) -> 'OriginGroup':
        """
        Get an existing OriginGroup resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] create_time: Origin site group creation time.
        :param pulumi.Input[str] host_header: Back-to-origin Host Header, it only takes effect when type = HTTP is passed in. The rule engine modifies the Host Header configuration priority to be higher than the Host Header of the origin site group.
        :param pulumi.Input[str] name: OriginGroup Name.
        :param pulumi.Input[str] origin_group_id: OriginGroup ID.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['OriginGroupRecordArgs']]]] records: Origin site records.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['OriginGroupReferenceArgs']]]] references: List of referenced instances of the origin site group.
        :param pulumi.Input[str] type: Type of the origin site. Valid values:
        :param pulumi.Input[str] update_time: Origin site group update time.
        :param pulumi.Input[str] zone_id: Site ID.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _OriginGroupState.__new__(_OriginGroupState)

        __props__.__dict__["create_time"] = create_time
        __props__.__dict__["host_header"] = host_header
        __props__.__dict__["name"] = name
        __props__.__dict__["origin_group_id"] = origin_group_id
        __props__.__dict__["records"] = records
        __props__.__dict__["references"] = references
        __props__.__dict__["type"] = type
        __props__.__dict__["update_time"] = update_time
        __props__.__dict__["zone_id"] = zone_id
        return OriginGroup(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="createTime")
    def create_time(self) -> pulumi.Output[str]:
        """
        Origin site group creation time.
        """
        return pulumi.get(self, "create_time")

    @property
    @pulumi.getter(name="hostHeader")
    def host_header(self) -> pulumi.Output[Optional[str]]:
        """
        Back-to-origin Host Header, it only takes effect when type = HTTP is passed in. The rule engine modifies the Host Header configuration priority to be higher than the Host Header of the origin site group.
        """
        return pulumi.get(self, "host_header")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        """
        OriginGroup Name.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="originGroupId")
    def origin_group_id(self) -> pulumi.Output[str]:
        """
        OriginGroup ID.
        """
        return pulumi.get(self, "origin_group_id")

    @property
    @pulumi.getter
    def records(self) -> pulumi.Output[Sequence['outputs.OriginGroupRecord']]:
        """
        Origin site records.
        """
        return pulumi.get(self, "records")

    @property
    @pulumi.getter
    def references(self) -> pulumi.Output[Sequence['outputs.OriginGroupReference']]:
        """
        List of referenced instances of the origin site group.
        """
        return pulumi.get(self, "references")

    @property
    @pulumi.getter
    def type(self) -> pulumi.Output[str]:
        """
        Type of the origin site. Valid values:
        """
        return pulumi.get(self, "type")

    @property
    @pulumi.getter(name="updateTime")
    def update_time(self) -> pulumi.Output[str]:
        """
        Origin site group update time.
        """
        return pulumi.get(self, "update_time")

    @property
    @pulumi.getter(name="zoneId")
    def zone_id(self) -> pulumi.Output[str]:
        """
        Site ID.
        """
        return pulumi.get(self, "zone_id")


from Illuminate.Collections.Collection import Collection
from djing.core.Http.Requests.DjingRequest import DjingRequest as DjingRequest
from djing.core.Makeable import Makeable
from typing import Any, Self

class FieldCollection(Collection, Makeable):
    def where_instance_of(self, instance: Any) -> Self: ...
    def filter_for_index(self, request: DjingRequest, resource) -> Self: ...
    def filter_for_detail(self, request: DjingRequest, resource) -> Self: ...
    def only_create_fields(self, request: DjingRequest, resource) -> Self: ...
    def only_update_fields(self, request: DjingRequest, resource) -> Self: ...
    def authorized(self, request: DjingRequest) -> Self: ...
    def without_listable_fields(self) -> Self: ...
    def without_readonly(self, request: DjingRequest) -> Self: ...
    def without_unfillable(self) -> Self: ...
    def resolve(self, resource): ...
    def resolve_for_display(self, resource) -> Self: ...
    def with_only_filterable_fields(self): ...
    def assign_default_panel(self, label: str) -> Self: ...

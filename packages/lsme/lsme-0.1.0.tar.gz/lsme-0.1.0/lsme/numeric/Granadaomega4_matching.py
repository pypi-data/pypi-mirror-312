## Symbols used:
# ydbar
# yd
# Momega4
# yl
# ylbar
# muH
# g1
# yedomega4bar
# epsilonbar
# invepsilonbar
# yedomega4
# mu
# lam
# yubar
# lambdaHatomega4
# onelooporder
# g3
# yuuomega4bar
# yuuomega4
# yu

import sys
import os
import numpy as np

import lsme.numeric.matchingresult as matchingresult

class Granadaomega4MatchingResult(matchingresult.GenericMatchingResult):
    def __init__(self, name='omega4'):
        super().__init__(name)
        self.Momega4 = 1
        self.yedomega4 = np.ones((3, 3))
        self.yedomega4bar = np.ones((3, 3))
        self.yuuomega4 = np.ones((3, 3))
        self.yuuomega4bar = np.ones((3, 3))
        self.lambdaHatomega4 = 1
        self.lambdaHatomega4bar = 1
        self.nonvanishing = ['alphaO3G', 'alphaOH', 'alphaOHB', 'alphaOHBox', 'alphaOHD', 'alphaOHG', 'alphaOdB', 'alphaOdd', 'alphaOdG', 'alphaOdH', 'alphaOeB', 'alphaOed', 'alphaOee', 'alphaOeH', 'alphaOeu', 'alphaOHd', 'alphaOHe', 'alphaOHl1', 'alphaOHl3', 'alphaOHq1', 'alphaOHq3', 'alphaOHu', 'alphaOld', 'alphaOle', 'alphaOledq', 'alphaOll', 'alphaOlq1', 'alphaOlu', 'alphaOqd1', 'alphaOqd8', 'alphaOqe', 'alphaOqq1', 'alphaOqq3', 'alphaOqu1', 'alphaOqu8', 'alphaOuB', 'alphaOud1', 'alphaOud8', 'alphaOuG', 'alphaOuH', 'alphaOuu']

    def alphaO3G(self, ):
        return 1/5760 * (self.g3)**(3) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2)

    def alphaO3Gt(self, ):
        return 0

    def alphaO3W(self, ):
        return 0

    def alphaO3Wt(self, ):
        return 0

    def alphaOH(self, ):
        return 1/32 * (self.lambdaHatomega4)**(3) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2)

    def alphaOHB(self, ):
        return -1/36 * (self.g1)**(2) * self.lambdaHatomega4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2)

    def alphaOHBox(self, ):
        return (-1/720 * (self.g1)**(4) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) + -1/64 * (self.lambdaHatomega4)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2))

    def alphaOHBt(self, ):
        return 0

    def alphaOHD(self, ):
        return -1/180 * (self.g1)**(4) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2)

    def alphaOHG(self, ):
        return -1/384 * (self.g3)**(2) * self.lambdaHatomega4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2)

    def alphaOHGt(self, ):
        return 0

    def alphaOHW(self, ):
        return 0

    def alphaOHWB(self, ):
        return 0

    def alphaOHWBt(self, ):
        return 0

    def alphaOHWt(self, ):
        return 0

    def alphaWeinberg(self, mif1,mif2):
        return 0

    def alphaOdB(self, mif1,mif2):
        return (5/576 * self.g1 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yedomega4[0,mif2] * self.yedomega4bar[0,0] + 5/576 * self.g1 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yedomega4[0,mif2] * self.yedomega4bar[0,1] + 5/576 * self.g1 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yedomega4[0,mif2] * self.yedomega4bar[0,2] + 5/576 * self.g1 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yedomega4[1,mif2] * self.yedomega4bar[1,0] + 5/576 * self.g1 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yedomega4[1,mif2] * self.yedomega4bar[1,1] + 5/576 * self.g1 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yedomega4[1,mif2] * self.yedomega4bar[1,2] + 5/576 * self.g1 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yedomega4[2,mif2] * self.yedomega4bar[2,0] + 5/576 * self.g1 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yedomega4[2,mif2] * self.yedomega4bar[2,1] + 5/576 * self.g1 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yedomega4[2,mif2] * self.yedomega4bar[2,2])

    def alphaOdd(self, mif1,mif2,mif3,mif4):
        return (-1/3840 * (self.g3)**(4) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.kronecker_delta(mif2,mif3) + -1/1620 * (self.g1)**(4) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 1/11520 * (self.g3)**(4) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 7/1296 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yedomega4[0,mif2] * self.yedomega4bar[0,mif1] + -1/3456 * (self.g3)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yedomega4[0,mif2] * self.yedomega4bar[0,mif1] + 1/288 * (self.g1)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yedomega4[0,mif2] * self.yedomega4bar[0,mif1] + -1/288 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[0,mif2] * self.yedomega4bar[0,mif1] + 1/1152 * (self.g3)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yedomega4[0,mif4] * self.yedomega4bar[0,mif1] + 1/1152 * (self.g3)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yedomega4[0,mif2] * self.yedomega4bar[0,mif3] + 7/1296 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yedomega4[0,mif4] * self.yedomega4bar[0,mif3] + -1/3456 * (self.g3)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yedomega4[0,mif4] * self.yedomega4bar[0,mif3] + 1/288 * (self.g1)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yedomega4[0,mif4] * self.yedomega4bar[0,mif3] + -1/288 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[0,mif4] * self.yedomega4bar[0,mif3] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,mif2] * self.yedomega4[0,mif4] * self.yedomega4bar[0,mif1] * self.yedomega4bar[0,mif3] + 7/1296 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yedomega4[1,mif2] * self.yedomega4bar[1,mif1] + -1/3456 * (self.g3)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yedomega4[1,mif2] * self.yedomega4bar[1,mif1] + 1/288 * (self.g1)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yedomega4[1,mif2] * self.yedomega4bar[1,mif1] + -1/288 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[1,mif2] * self.yedomega4bar[1,mif1] + 1/1152 * (self.g3)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yedomega4[1,mif4] * self.yedomega4bar[1,mif1] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,mif2] * self.yedomega4[1,mif4] * self.yedomega4bar[0,mif3] * self.yedomega4bar[1,mif1] + 1/1152 * (self.g3)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yedomega4[1,mif2] * self.yedomega4bar[1,mif3] + 7/1296 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yedomega4[1,mif4] * self.yedomega4bar[1,mif3] + -1/3456 * (self.g3)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yedomega4[1,mif4] * self.yedomega4bar[1,mif3] + 1/288 * (self.g1)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yedomega4[1,mif4] * self.yedomega4bar[1,mif3] + -1/288 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[1,mif4] * self.yedomega4bar[1,mif3] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,mif4] * self.yedomega4[1,mif2] * self.yedomega4bar[0,mif1] * self.yedomega4bar[1,mif3] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,mif2] * self.yedomega4[1,mif4] * self.yedomega4bar[1,mif1] * self.yedomega4bar[1,mif3] + 7/1296 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yedomega4[2,mif2] * self.yedomega4bar[2,mif1] + -1/3456 * (self.g3)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yedomega4[2,mif2] * self.yedomega4bar[2,mif1] + 1/288 * (self.g1)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yedomega4[2,mif2] * self.yedomega4bar[2,mif1] + -1/288 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[2,mif2] * self.yedomega4bar[2,mif1] + 1/1152 * (self.g3)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yedomega4[2,mif4] * self.yedomega4bar[2,mif1] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,mif2] * self.yedomega4[2,mif4] * self.yedomega4bar[0,mif3] * self.yedomega4bar[2,mif1] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,mif2] * self.yedomega4[2,mif4] * self.yedomega4bar[1,mif3] * self.yedomega4bar[2,mif1] + 1/1152 * (self.g3)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yedomega4[2,mif2] * self.yedomega4bar[2,mif3] + 7/1296 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yedomega4[2,mif4] * self.yedomega4bar[2,mif3] + -1/3456 * (self.g3)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yedomega4[2,mif4] * self.yedomega4bar[2,mif3] + 1/288 * (self.g1)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yedomega4[2,mif4] * self.yedomega4bar[2,mif3] + -1/288 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[2,mif4] * self.yedomega4bar[2,mif3] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,mif4] * self.yedomega4[2,mif2] * self.yedomega4bar[0,mif1] * self.yedomega4bar[2,mif3] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,mif4] * self.yedomega4[2,mif2] * self.yedomega4bar[1,mif1] * self.yedomega4bar[2,mif3] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,mif2] * self.yedomega4[2,mif4] * self.yedomega4bar[2,mif1] * self.yedomega4bar[2,mif3])

    def alphaOdG(self, mif1,mif2):
        return (-1/384 * self.g3 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yedomega4[0,mif2] * self.yedomega4bar[0,0] + -1/384 * self.g3 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yedomega4[0,mif2] * self.yedomega4bar[0,1] + -1/384 * self.g3 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yedomega4[0,mif2] * self.yedomega4bar[0,2] + -1/384 * self.g3 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yedomega4[1,mif2] * self.yedomega4bar[1,0] + -1/384 * self.g3 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yedomega4[1,mif2] * self.yedomega4bar[1,1] + -1/384 * self.g3 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yedomega4[1,mif2] * self.yedomega4bar[1,2] + -1/384 * self.g3 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yedomega4[2,mif2] * self.yedomega4bar[2,0] + -1/384 * self.g3 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yedomega4[2,mif2] * self.yedomega4bar[2,1] + -1/384 * self.g3 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yedomega4[2,mif2] * self.yedomega4bar[2,2])

    def alphaOdH(self, mif1,mif2):
        return (1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[0,0] * self.yedomega4[0,0] * self.yedomega4bar[0,0] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[1,0] * self.yedomega4[0,0] * self.yedomega4bar[0,0] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[2,0] * self.yedomega4[0,0] * self.yedomega4bar[0,0] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[0,1] * self.yedomega4[0,1] * self.yedomega4bar[0,0] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[1,1] * self.yedomega4[0,1] * self.yedomega4bar[0,0] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[2,1] * self.yedomega4[0,1] * self.yedomega4bar[0,0] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[0,2] * self.yedomega4[0,2] * self.yedomega4bar[0,0] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[1,2] * self.yedomega4[0,2] * self.yedomega4bar[0,0] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[2,2] * self.yedomega4[0,2] * self.yedomega4bar[0,0] + 1/64 * self.lambdaHatomega4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yedomega4[0,mif2] * self.yedomega4bar[0,0] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[0,0] * self.yedomega4[0,0] * self.yedomega4bar[0,1] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[1,0] * self.yedomega4[0,0] * self.yedomega4bar[0,1] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[2,0] * self.yedomega4[0,0] * self.yedomega4bar[0,1] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[0,1] * self.yedomega4[0,1] * self.yedomega4bar[0,1] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[1,1] * self.yedomega4[0,1] * self.yedomega4bar[0,1] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[2,1] * self.yedomega4[0,1] * self.yedomega4bar[0,1] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[0,2] * self.yedomega4[0,2] * self.yedomega4bar[0,1] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[1,2] * self.yedomega4[0,2] * self.yedomega4bar[0,1] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[2,2] * self.yedomega4[0,2] * self.yedomega4bar[0,1] + 1/64 * self.lambdaHatomega4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yedomega4[0,mif2] * self.yedomega4bar[0,1] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[0,0] * self.yedomega4[0,0] * self.yedomega4bar[0,2] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[1,0] * self.yedomega4[0,0] * self.yedomega4bar[0,2] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[2,0] * self.yedomega4[0,0] * self.yedomega4bar[0,2] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[0,1] * self.yedomega4[0,1] * self.yedomega4bar[0,2] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[1,1] * self.yedomega4[0,1] * self.yedomega4bar[0,2] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[2,1] * self.yedomega4[0,1] * self.yedomega4bar[0,2] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[0,2] * self.yedomega4[0,2] * self.yedomega4bar[0,2] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[1,2] * self.yedomega4[0,2] * self.yedomega4bar[0,2] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[2,2] * self.yedomega4[0,2] * self.yedomega4bar[0,2] + 1/64 * self.lambdaHatomega4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yedomega4[0,mif2] * self.yedomega4bar[0,2] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[0,0] * self.yedomega4[1,0] * self.yedomega4bar[1,0] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[1,0] * self.yedomega4[1,0] * self.yedomega4bar[1,0] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[2,0] * self.yedomega4[1,0] * self.yedomega4bar[1,0] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[0,1] * self.yedomega4[1,1] * self.yedomega4bar[1,0] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[1,1] * self.yedomega4[1,1] * self.yedomega4bar[1,0] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[2,1] * self.yedomega4[1,1] * self.yedomega4bar[1,0] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[0,2] * self.yedomega4[1,2] * self.yedomega4bar[1,0] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[1,2] * self.yedomega4[1,2] * self.yedomega4bar[1,0] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[2,2] * self.yedomega4[1,2] * self.yedomega4bar[1,0] + 1/64 * self.lambdaHatomega4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yedomega4[1,mif2] * self.yedomega4bar[1,0] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[0,0] * self.yedomega4[1,0] * self.yedomega4bar[1,1] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[1,0] * self.yedomega4[1,0] * self.yedomega4bar[1,1] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[2,0] * self.yedomega4[1,0] * self.yedomega4bar[1,1] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[0,1] * self.yedomega4[1,1] * self.yedomega4bar[1,1] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[1,1] * self.yedomega4[1,1] * self.yedomega4bar[1,1] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[2,1] * self.yedomega4[1,1] * self.yedomega4bar[1,1] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[0,2] * self.yedomega4[1,2] * self.yedomega4bar[1,1] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[1,2] * self.yedomega4[1,2] * self.yedomega4bar[1,1] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[2,2] * self.yedomega4[1,2] * self.yedomega4bar[1,1] + 1/64 * self.lambdaHatomega4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yedomega4[1,mif2] * self.yedomega4bar[1,1] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[0,0] * self.yedomega4[1,0] * self.yedomega4bar[1,2] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[1,0] * self.yedomega4[1,0] * self.yedomega4bar[1,2] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[2,0] * self.yedomega4[1,0] * self.yedomega4bar[1,2] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[0,1] * self.yedomega4[1,1] * self.yedomega4bar[1,2] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[1,1] * self.yedomega4[1,1] * self.yedomega4bar[1,2] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[2,1] * self.yedomega4[1,1] * self.yedomega4bar[1,2] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[0,2] * self.yedomega4[1,2] * self.yedomega4bar[1,2] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[1,2] * self.yedomega4[1,2] * self.yedomega4bar[1,2] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[2,2] * self.yedomega4[1,2] * self.yedomega4bar[1,2] + 1/64 * self.lambdaHatomega4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yedomega4[1,mif2] * self.yedomega4bar[1,2] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[0,0] * self.yedomega4[2,0] * self.yedomega4bar[2,0] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[1,0] * self.yedomega4[2,0] * self.yedomega4bar[2,0] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[2,0] * self.yedomega4[2,0] * self.yedomega4bar[2,0] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[0,1] * self.yedomega4[2,1] * self.yedomega4bar[2,0] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[1,1] * self.yedomega4[2,1] * self.yedomega4bar[2,0] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[2,1] * self.yedomega4[2,1] * self.yedomega4bar[2,0] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[0,2] * self.yedomega4[2,2] * self.yedomega4bar[2,0] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[1,2] * self.yedomega4[2,2] * self.yedomega4bar[2,0] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[2,2] * self.yedomega4[2,2] * self.yedomega4bar[2,0] + 1/64 * self.lambdaHatomega4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yedomega4[2,mif2] * self.yedomega4bar[2,0] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[0,0] * self.yedomega4[2,0] * self.yedomega4bar[2,1] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[1,0] * self.yedomega4[2,0] * self.yedomega4bar[2,1] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[2,0] * self.yedomega4[2,0] * self.yedomega4bar[2,1] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[0,1] * self.yedomega4[2,1] * self.yedomega4bar[2,1] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[1,1] * self.yedomega4[2,1] * self.yedomega4bar[2,1] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[2,1] * self.yedomega4[2,1] * self.yedomega4bar[2,1] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[0,2] * self.yedomega4[2,2] * self.yedomega4bar[2,1] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[1,2] * self.yedomega4[2,2] * self.yedomega4bar[2,1] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[2,2] * self.yedomega4[2,2] * self.yedomega4bar[2,1] + 1/64 * self.lambdaHatomega4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yedomega4[2,mif2] * self.yedomega4bar[2,1] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[0,0] * self.yedomega4[2,0] * self.yedomega4bar[2,2] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[1,0] * self.yedomega4[2,0] * self.yedomega4bar[2,2] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[2,0] * self.yedomega4[2,0] * self.yedomega4bar[2,2] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[0,1] * self.yedomega4[2,1] * self.yedomega4bar[2,2] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[1,1] * self.yedomega4[2,1] * self.yedomega4bar[2,2] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[2,1] * self.yedomega4[2,1] * self.yedomega4bar[2,2] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[0,2] * self.yedomega4[2,2] * self.yedomega4bar[2,2] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[1,2] * self.yedomega4[2,2] * self.yedomega4bar[2,2] + 1/192 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[2,2] * self.yedomega4[2,2] * self.yedomega4bar[2,2] + 1/64 * self.lambdaHatomega4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yedomega4[2,mif2] * self.yedomega4bar[2,2] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yedomega4[0,mif2] * self.yedomega4bar[0,0] * self.yl[0,0] * self.ylbar[0,0] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yedomega4[0,mif2] * self.yedomega4bar[0,1] * self.yl[0,0] * self.ylbar[0,0] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yedomega4[0,mif2] * self.yedomega4bar[0,2] * self.yl[0,0] * self.ylbar[0,0] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yedomega4[0,mif2] * self.yedomega4bar[1,0] * self.yl[0,1] * self.ylbar[0,0] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yedomega4[0,mif2] * self.yedomega4bar[1,1] * self.yl[0,1] * self.ylbar[0,0] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yedomega4[0,mif2] * self.yedomega4bar[1,2] * self.yl[0,1] * self.ylbar[0,0] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yedomega4[0,mif2] * self.yedomega4bar[2,0] * self.yl[0,2] * self.ylbar[0,0] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yedomega4[0,mif2] * self.yedomega4bar[2,1] * self.yl[0,2] * self.ylbar[0,0] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yedomega4[0,mif2] * self.yedomega4bar[2,2] * self.yl[0,2] * self.ylbar[0,0] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yedomega4[1,mif2] * self.yedomega4bar[0,0] * self.yl[0,0] * self.ylbar[0,1] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yedomega4[1,mif2] * self.yedomega4bar[0,1] * self.yl[0,0] * self.ylbar[0,1] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yedomega4[1,mif2] * self.yedomega4bar[0,2] * self.yl[0,0] * self.ylbar[0,1] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yedomega4[1,mif2] * self.yedomega4bar[1,0] * self.yl[0,1] * self.ylbar[0,1] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yedomega4[1,mif2] * self.yedomega4bar[1,1] * self.yl[0,1] * self.ylbar[0,1] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yedomega4[1,mif2] * self.yedomega4bar[1,2] * self.yl[0,1] * self.ylbar[0,1] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yedomega4[1,mif2] * self.yedomega4bar[2,0] * self.yl[0,2] * self.ylbar[0,1] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yedomega4[1,mif2] * self.yedomega4bar[2,1] * self.yl[0,2] * self.ylbar[0,1] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yedomega4[1,mif2] * self.yedomega4bar[2,2] * self.yl[0,2] * self.ylbar[0,1] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yedomega4[2,mif2] * self.yedomega4bar[0,0] * self.yl[0,0] * self.ylbar[0,2] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yedomega4[2,mif2] * self.yedomega4bar[0,1] * self.yl[0,0] * self.ylbar[0,2] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yedomega4[2,mif2] * self.yedomega4bar[0,2] * self.yl[0,0] * self.ylbar[0,2] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yedomega4[2,mif2] * self.yedomega4bar[1,0] * self.yl[0,1] * self.ylbar[0,2] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yedomega4[2,mif2] * self.yedomega4bar[1,1] * self.yl[0,1] * self.ylbar[0,2] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yedomega4[2,mif2] * self.yedomega4bar[1,2] * self.yl[0,1] * self.ylbar[0,2] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yedomega4[2,mif2] * self.yedomega4bar[2,0] * self.yl[0,2] * self.ylbar[0,2] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yedomega4[2,mif2] * self.yedomega4bar[2,1] * self.yl[0,2] * self.ylbar[0,2] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yedomega4[2,mif2] * self.yedomega4bar[2,2] * self.yl[0,2] * self.ylbar[0,2] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yedomega4[0,mif2] * self.yedomega4bar[0,0] * self.yl[1,0] * self.ylbar[1,0] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yedomega4[0,mif2] * self.yedomega4bar[0,1] * self.yl[1,0] * self.ylbar[1,0] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yedomega4[0,mif2] * self.yedomega4bar[0,2] * self.yl[1,0] * self.ylbar[1,0] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yedomega4[0,mif2] * self.yedomega4bar[1,0] * self.yl[1,1] * self.ylbar[1,0] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yedomega4[0,mif2] * self.yedomega4bar[1,1] * self.yl[1,1] * self.ylbar[1,0] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yedomega4[0,mif2] * self.yedomega4bar[1,2] * self.yl[1,1] * self.ylbar[1,0] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yedomega4[0,mif2] * self.yedomega4bar[2,0] * self.yl[1,2] * self.ylbar[1,0] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yedomega4[0,mif2] * self.yedomega4bar[2,1] * self.yl[1,2] * self.ylbar[1,0] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yedomega4[0,mif2] * self.yedomega4bar[2,2] * self.yl[1,2] * self.ylbar[1,0] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yedomega4[1,mif2] * self.yedomega4bar[0,0] * self.yl[1,0] * self.ylbar[1,1] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yedomega4[1,mif2] * self.yedomega4bar[0,1] * self.yl[1,0] * self.ylbar[1,1] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yedomega4[1,mif2] * self.yedomega4bar[0,2] * self.yl[1,0] * self.ylbar[1,1] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yedomega4[1,mif2] * self.yedomega4bar[1,0] * self.yl[1,1] * self.ylbar[1,1] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yedomega4[1,mif2] * self.yedomega4bar[1,1] * self.yl[1,1] * self.ylbar[1,1] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yedomega4[1,mif2] * self.yedomega4bar[1,2] * self.yl[1,1] * self.ylbar[1,1] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yedomega4[1,mif2] * self.yedomega4bar[2,0] * self.yl[1,2] * self.ylbar[1,1] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yedomega4[1,mif2] * self.yedomega4bar[2,1] * self.yl[1,2] * self.ylbar[1,1] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yedomega4[1,mif2] * self.yedomega4bar[2,2] * self.yl[1,2] * self.ylbar[1,1] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yedomega4[2,mif2] * self.yedomega4bar[0,0] * self.yl[1,0] * self.ylbar[1,2] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yedomega4[2,mif2] * self.yedomega4bar[0,1] * self.yl[1,0] * self.ylbar[1,2] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yedomega4[2,mif2] * self.yedomega4bar[0,2] * self.yl[1,0] * self.ylbar[1,2] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yedomega4[2,mif2] * self.yedomega4bar[1,0] * self.yl[1,1] * self.ylbar[1,2] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yedomega4[2,mif2] * self.yedomega4bar[1,1] * self.yl[1,1] * self.ylbar[1,2] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yedomega4[2,mif2] * self.yedomega4bar[1,2] * self.yl[1,1] * self.ylbar[1,2] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yedomega4[2,mif2] * self.yedomega4bar[2,0] * self.yl[1,2] * self.ylbar[1,2] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yedomega4[2,mif2] * self.yedomega4bar[2,1] * self.yl[1,2] * self.ylbar[1,2] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yedomega4[2,mif2] * self.yedomega4bar[2,2] * self.yl[1,2] * self.ylbar[1,2] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yedomega4[0,mif2] * self.yedomega4bar[0,0] * self.yl[2,0] * self.ylbar[2,0] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yedomega4[0,mif2] * self.yedomega4bar[0,1] * self.yl[2,0] * self.ylbar[2,0] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yedomega4[0,mif2] * self.yedomega4bar[0,2] * self.yl[2,0] * self.ylbar[2,0] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yedomega4[0,mif2] * self.yedomega4bar[1,0] * self.yl[2,1] * self.ylbar[2,0] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yedomega4[0,mif2] * self.yedomega4bar[1,1] * self.yl[2,1] * self.ylbar[2,0] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yedomega4[0,mif2] * self.yedomega4bar[1,2] * self.yl[2,1] * self.ylbar[2,0] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yedomega4[0,mif2] * self.yedomega4bar[2,0] * self.yl[2,2] * self.ylbar[2,0] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yedomega4[0,mif2] * self.yedomega4bar[2,1] * self.yl[2,2] * self.ylbar[2,0] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yedomega4[0,mif2] * self.yedomega4bar[2,2] * self.yl[2,2] * self.ylbar[2,0] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yedomega4[1,mif2] * self.yedomega4bar[0,0] * self.yl[2,0] * self.ylbar[2,1] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yedomega4[1,mif2] * self.yedomega4bar[0,1] * self.yl[2,0] * self.ylbar[2,1] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yedomega4[1,mif2] * self.yedomega4bar[0,2] * self.yl[2,0] * self.ylbar[2,1] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yedomega4[1,mif2] * self.yedomega4bar[1,0] * self.yl[2,1] * self.ylbar[2,1] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yedomega4[1,mif2] * self.yedomega4bar[1,1] * self.yl[2,1] * self.ylbar[2,1] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yedomega4[1,mif2] * self.yedomega4bar[1,2] * self.yl[2,1] * self.ylbar[2,1] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yedomega4[1,mif2] * self.yedomega4bar[2,0] * self.yl[2,2] * self.ylbar[2,1] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yedomega4[1,mif2] * self.yedomega4bar[2,1] * self.yl[2,2] * self.ylbar[2,1] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yedomega4[1,mif2] * self.yedomega4bar[2,2] * self.yl[2,2] * self.ylbar[2,1] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yedomega4[2,mif2] * self.yedomega4bar[0,0] * self.yl[2,0] * self.ylbar[2,2] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yedomega4[2,mif2] * self.yedomega4bar[0,1] * self.yl[2,0] * self.ylbar[2,2] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yedomega4[2,mif2] * self.yedomega4bar[0,2] * self.yl[2,0] * self.ylbar[2,2] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yedomega4[2,mif2] * self.yedomega4bar[1,0] * self.yl[2,1] * self.ylbar[2,2] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yedomega4[2,mif2] * self.yedomega4bar[1,1] * self.yl[2,1] * self.ylbar[2,2] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yedomega4[2,mif2] * self.yedomega4bar[1,2] * self.yl[2,1] * self.ylbar[2,2] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.yedomega4[2,mif2] * self.yedomega4bar[2,0] * self.yl[2,2] * self.ylbar[2,2] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.yedomega4[2,mif2] * self.yedomega4bar[2,1] * self.yl[2,2] * self.ylbar[2,2] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.yedomega4[2,mif2] * self.yedomega4bar[2,2] * self.yl[2,2] * self.ylbar[2,2])

    def alphaOdW(self, mif1,mif2):
        return 0

    def alphaOeB(self, mif1,mif2):
        return (1/64 * self.g1 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[mif2,0] * self.yedomega4bar[0,0] * self.yl[mif1,0] + 1/64 * self.g1 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[mif2,1] * self.yedomega4bar[0,1] * self.yl[mif1,0] + 1/64 * self.g1 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[mif2,2] * self.yedomega4bar[0,2] * self.yl[mif1,0] + 1/64 * self.g1 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[mif2,0] * self.yedomega4bar[1,0] * self.yl[mif1,1] + 1/64 * self.g1 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[mif2,1] * self.yedomega4bar[1,1] * self.yl[mif1,1] + 1/64 * self.g1 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[mif2,2] * self.yedomega4bar[1,2] * self.yl[mif1,1] + 1/64 * self.g1 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[mif2,0] * self.yedomega4bar[2,0] * self.yl[mif1,2] + 1/64 * self.g1 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[mif2,1] * self.yedomega4bar[2,1] * self.yl[mif1,2] + 1/64 * self.g1 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[mif2,2] * self.yedomega4bar[2,2] * self.yl[mif1,2])

    def alphaOed(self, mif1,mif2,mif3,mif4):
        return (-1/270 * (self.g1)**(4) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 7/216 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yedomega4[0,mif4] * self.yedomega4bar[0,mif3] + 1/48 * (self.g1)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yedomega4[0,mif4] * self.yedomega4bar[0,mif3] + -1/48 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[0,mif4] * self.yedomega4bar[0,mif3] + 7/216 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yedomega4[1,mif4] * self.yedomega4bar[1,mif3] + 1/48 * (self.g1)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yedomega4[1,mif4] * self.yedomega4bar[1,mif3] + -1/48 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[1,mif4] * self.yedomega4bar[1,mif3] + 7/216 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yedomega4[2,mif4] * self.yedomega4bar[2,mif3] + 1/48 * (self.g1)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yedomega4[2,mif4] * self.yedomega4bar[2,mif3] + -1/48 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[2,mif4] * self.yedomega4bar[2,mif3] + 1/72 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yedomega4[mif2,0] * self.yedomega4bar[mif1,0] + 1/144 * (self.g1)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yedomega4[mif2,0] * self.yedomega4bar[mif1,0] + -1/144 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[mif2,0] * self.yedomega4bar[mif1,0] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,mif4] * self.yedomega4[mif2,0] * self.yedomega4bar[0,mif3] * self.yedomega4bar[mif1,0] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,0] * self.yedomega4[mif2,mif4] * self.yedomega4bar[0,mif3] * self.yedomega4bar[mif1,0] + -1/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,0] * self.yedomega4[mif2,mif4] * self.yedomega4bar[0,mif3] * self.yedomega4bar[mif1,0] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[0,0] * self.yedomega4[mif2,mif4] * self.yedomega4bar[0,mif3] * self.yedomega4bar[mif1,0] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,mif4] * self.yedomega4[mif2,0] * self.yedomega4bar[1,mif3] * self.yedomega4bar[mif1,0] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,0] * self.yedomega4[mif2,mif4] * self.yedomega4bar[1,mif3] * self.yedomega4bar[mif1,0] + -1/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,0] * self.yedomega4[mif2,mif4] * self.yedomega4bar[1,mif3] * self.yedomega4bar[mif1,0] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[1,0] * self.yedomega4[mif2,mif4] * self.yedomega4bar[1,mif3] * self.yedomega4bar[mif1,0] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,mif4] * self.yedomega4[mif2,0] * self.yedomega4bar[2,mif3] * self.yedomega4bar[mif1,0] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,0] * self.yedomega4[mif2,mif4] * self.yedomega4bar[2,mif3] * self.yedomega4bar[mif1,0] + -1/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,0] * self.yedomega4[mif2,mif4] * self.yedomega4bar[2,mif3] * self.yedomega4bar[mif1,0] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[2,0] * self.yedomega4[mif2,mif4] * self.yedomega4bar[2,mif3] * self.yedomega4bar[mif1,0] + 1/72 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yedomega4[mif2,1] * self.yedomega4bar[mif1,1] + 1/144 * (self.g1)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yedomega4[mif2,1] * self.yedomega4bar[mif1,1] + -1/144 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[mif2,1] * self.yedomega4bar[mif1,1] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,mif4] * self.yedomega4[mif2,1] * self.yedomega4bar[0,mif3] * self.yedomega4bar[mif1,1] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,1] * self.yedomega4[mif2,mif4] * self.yedomega4bar[0,mif3] * self.yedomega4bar[mif1,1] + -1/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,1] * self.yedomega4[mif2,mif4] * self.yedomega4bar[0,mif3] * self.yedomega4bar[mif1,1] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[0,1] * self.yedomega4[mif2,mif4] * self.yedomega4bar[0,mif3] * self.yedomega4bar[mif1,1] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,mif4] * self.yedomega4[mif2,1] * self.yedomega4bar[1,mif3] * self.yedomega4bar[mif1,1] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,1] * self.yedomega4[mif2,mif4] * self.yedomega4bar[1,mif3] * self.yedomega4bar[mif1,1] + -1/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,1] * self.yedomega4[mif2,mif4] * self.yedomega4bar[1,mif3] * self.yedomega4bar[mif1,1] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[1,1] * self.yedomega4[mif2,mif4] * self.yedomega4bar[1,mif3] * self.yedomega4bar[mif1,1] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,mif4] * self.yedomega4[mif2,1] * self.yedomega4bar[2,mif3] * self.yedomega4bar[mif1,1] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,1] * self.yedomega4[mif2,mif4] * self.yedomega4bar[2,mif3] * self.yedomega4bar[mif1,1] + -1/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,1] * self.yedomega4[mif2,mif4] * self.yedomega4bar[2,mif3] * self.yedomega4bar[mif1,1] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[2,1] * self.yedomega4[mif2,mif4] * self.yedomega4bar[2,mif3] * self.yedomega4bar[mif1,1] + 1/72 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yedomega4[mif2,2] * self.yedomega4bar[mif1,2] + 1/144 * (self.g1)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yedomega4[mif2,2] * self.yedomega4bar[mif1,2] + -1/144 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[mif2,2] * self.yedomega4bar[mif1,2] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,mif4] * self.yedomega4[mif2,2] * self.yedomega4bar[0,mif3] * self.yedomega4bar[mif1,2] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,2] * self.yedomega4[mif2,mif4] * self.yedomega4bar[0,mif3] * self.yedomega4bar[mif1,2] + -1/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,2] * self.yedomega4[mif2,mif4] * self.yedomega4bar[0,mif3] * self.yedomega4bar[mif1,2] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[0,2] * self.yedomega4[mif2,mif4] * self.yedomega4bar[0,mif3] * self.yedomega4bar[mif1,2] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,mif4] * self.yedomega4[mif2,2] * self.yedomega4bar[1,mif3] * self.yedomega4bar[mif1,2] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,2] * self.yedomega4[mif2,mif4] * self.yedomega4bar[1,mif3] * self.yedomega4bar[mif1,2] + -1/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,2] * self.yedomega4[mif2,mif4] * self.yedomega4bar[1,mif3] * self.yedomega4bar[mif1,2] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[1,2] * self.yedomega4[mif2,mif4] * self.yedomega4bar[1,mif3] * self.yedomega4bar[mif1,2] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,mif4] * self.yedomega4[mif2,2] * self.yedomega4bar[2,mif3] * self.yedomega4bar[mif1,2] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,2] * self.yedomega4[mif2,mif4] * self.yedomega4bar[2,mif3] * self.yedomega4bar[mif1,2] + -1/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,2] * self.yedomega4[mif2,mif4] * self.yedomega4bar[2,mif3] * self.yedomega4bar[mif1,2] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[2,2] * self.yedomega4[mif2,mif4] * self.yedomega4bar[2,mif3] * self.yedomega4bar[mif1,2] + 1/2 * (self.Momega4)**(-2) * self.yedomega4[mif2,mif4] * self.yedomega4bar[mif1,mif3] + 25/144 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[mif2,mif4] * self.yedomega4bar[mif1,mif3] + 1/48 * self.epsilonbar * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[mif2,mif4] * self.yedomega4bar[mif1,mif3] + 7/48 * (self.g3)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[mif2,mif4] * self.yedomega4bar[mif1,mif3] + 1/16 * self.epsilonbar * (self.g3)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[mif2,mif4] * self.yedomega4bar[mif1,mif3] + 1/72 * self.epsilonbar * (self.g1)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[mif2,mif4] * self.yedomega4bar[mif1,mif3] + 1/24 * self.epsilonbar * (self.g3)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[mif2,mif4] * self.yedomega4bar[mif1,mif3] + -1/72 * self.epsilonbar * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[mif2,mif4] * self.yedomega4bar[mif1,mif3] + -1/24 * self.epsilonbar * (self.g3)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[mif2,mif4] * self.yedomega4bar[mif1,mif3] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,mif4] * self.yedomega4[mif2,0] * self.yedomega4bar[0,0] * self.yedomega4bar[mif1,mif3] + -1/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,mif4] * self.yedomega4[mif2,0] * self.yedomega4bar[0,0] * self.yedomega4bar[mif1,mif3] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[0,mif4] * self.yedomega4[mif2,0] * self.yedomega4bar[0,0] * self.yedomega4bar[mif1,mif3] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,mif4] * self.yedomega4[mif2,1] * self.yedomega4bar[0,1] * self.yedomega4bar[mif1,mif3] + -1/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,mif4] * self.yedomega4[mif2,1] * self.yedomega4bar[0,1] * self.yedomega4bar[mif1,mif3] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[0,mif4] * self.yedomega4[mif2,1] * self.yedomega4bar[0,1] * self.yedomega4bar[mif1,mif3] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,mif4] * self.yedomega4[mif2,2] * self.yedomega4bar[0,2] * self.yedomega4bar[mif1,mif3] + -1/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,mif4] * self.yedomega4[mif2,2] * self.yedomega4bar[0,2] * self.yedomega4bar[mif1,mif3] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[0,mif4] * self.yedomega4[mif2,2] * self.yedomega4bar[0,2] * self.yedomega4bar[mif1,mif3] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,mif4] * self.yedomega4[mif2,0] * self.yedomega4bar[1,0] * self.yedomega4bar[mif1,mif3] + -1/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,mif4] * self.yedomega4[mif2,0] * self.yedomega4bar[1,0] * self.yedomega4bar[mif1,mif3] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[1,mif4] * self.yedomega4[mif2,0] * self.yedomega4bar[1,0] * self.yedomega4bar[mif1,mif3] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,mif4] * self.yedomega4[mif2,1] * self.yedomega4bar[1,1] * self.yedomega4bar[mif1,mif3] + -1/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,mif4] * self.yedomega4[mif2,1] * self.yedomega4bar[1,1] * self.yedomega4bar[mif1,mif3] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[1,mif4] * self.yedomega4[mif2,1] * self.yedomega4bar[1,1] * self.yedomega4bar[mif1,mif3] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,mif4] * self.yedomega4[mif2,2] * self.yedomega4bar[1,2] * self.yedomega4bar[mif1,mif3] + -1/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,mif4] * self.yedomega4[mif2,2] * self.yedomega4bar[1,2] * self.yedomega4bar[mif1,mif3] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[1,mif4] * self.yedomega4[mif2,2] * self.yedomega4bar[1,2] * self.yedomega4bar[mif1,mif3] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,mif4] * self.yedomega4[mif2,0] * self.yedomega4bar[2,0] * self.yedomega4bar[mif1,mif3] + -1/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,mif4] * self.yedomega4[mif2,0] * self.yedomega4bar[2,0] * self.yedomega4bar[mif1,mif3] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[2,mif4] * self.yedomega4[mif2,0] * self.yedomega4bar[2,0] * self.yedomega4bar[mif1,mif3] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,mif4] * self.yedomega4[mif2,1] * self.yedomega4bar[2,1] * self.yedomega4bar[mif1,mif3] + -1/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,mif4] * self.yedomega4[mif2,1] * self.yedomega4bar[2,1] * self.yedomega4bar[mif1,mif3] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[2,mif4] * self.yedomega4[mif2,1] * self.yedomega4bar[2,1] * self.yedomega4bar[mif1,mif3] + -1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,mif4] * self.yedomega4[mif2,2] * self.yedomega4bar[2,2] * self.yedomega4bar[mif1,mif3] + -1/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,mif4] * self.yedomega4[mif2,2] * self.yedomega4bar[2,2] * self.yedomega4bar[mif1,mif3] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[2,mif4] * self.yedomega4[mif2,2] * self.yedomega4bar[2,2] * self.yedomega4bar[mif1,mif3])

    def alphaOee(self, mif1,mif2,mif3,mif4):
        return (-1/180 * (self.g1)**(4) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 1/48 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yedomega4[mif2,0] * self.yedomega4bar[mif1,0] + 1/96 * (self.g1)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yedomega4[mif2,0] * self.yedomega4bar[mif1,0] + -1/96 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[mif2,0] * self.yedomega4bar[mif1,0] + 1/48 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yedomega4[mif2,1] * self.yedomega4bar[mif1,1] + 1/96 * (self.g1)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yedomega4[mif2,1] * self.yedomega4bar[mif1,1] + -1/96 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[mif2,1] * self.yedomega4bar[mif1,1] + 1/48 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yedomega4[mif2,2] * self.yedomega4bar[mif1,2] + 1/96 * (self.g1)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yedomega4[mif2,2] * self.yedomega4bar[mif1,2] + -1/96 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[mif2,2] * self.yedomega4bar[mif1,2] + 1/48 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yedomega4[mif4,0] * self.yedomega4bar[mif3,0] + 1/96 * (self.g1)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yedomega4[mif4,0] * self.yedomega4bar[mif3,0] + -1/96 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[mif4,0] * self.yedomega4bar[mif3,0] + -3/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[mif2,0] * self.yedomega4[mif4,0] * self.yedomega4bar[mif1,0] * self.yedomega4bar[mif3,0] + -3/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[mif2,1] * self.yedomega4[mif4,0] * self.yedomega4bar[mif1,1] * self.yedomega4bar[mif3,0] + -3/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[mif2,2] * self.yedomega4[mif4,0] * self.yedomega4bar[mif1,2] * self.yedomega4bar[mif3,0] + 1/48 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yedomega4[mif4,1] * self.yedomega4bar[mif3,1] + 1/96 * (self.g1)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yedomega4[mif4,1] * self.yedomega4bar[mif3,1] + -1/96 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[mif4,1] * self.yedomega4bar[mif3,1] + -3/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[mif2,0] * self.yedomega4[mif4,1] * self.yedomega4bar[mif1,0] * self.yedomega4bar[mif3,1] + -3/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[mif2,1] * self.yedomega4[mif4,1] * self.yedomega4bar[mif1,1] * self.yedomega4bar[mif3,1] + -3/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[mif2,2] * self.yedomega4[mif4,1] * self.yedomega4bar[mif1,2] * self.yedomega4bar[mif3,1] + 1/48 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yedomega4[mif4,2] * self.yedomega4bar[mif3,2] + 1/96 * (self.g1)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yedomega4[mif4,2] * self.yedomega4bar[mif3,2] + -1/96 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[mif4,2] * self.yedomega4bar[mif3,2] + -3/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[mif2,0] * self.yedomega4[mif4,2] * self.yedomega4bar[mif1,0] * self.yedomega4bar[mif3,2] + -3/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[mif2,1] * self.yedomega4[mif4,2] * self.yedomega4bar[mif1,1] * self.yedomega4bar[mif3,2] + -3/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[mif2,2] * self.yedomega4[mif4,2] * self.yedomega4bar[mif1,2] * self.yedomega4bar[mif3,2])

    def alphaOeH(self, mif1,mif2):
        return (3/64 * self.lambdaHatomega4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[mif2,0] * self.yedomega4bar[0,0] * self.yl[mif1,0] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.yedomega4[mif2,0] * self.yedomega4bar[0,0] * self.yl[mif1,0] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.yedomega4[mif2,0] * self.yedomega4bar[0,0] * self.yl[mif1,0] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,0] * self.yedomega4[mif2,0] * self.yedomega4bar[0,0] * self.yl[mif1,0] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,1] * self.yedomega4[mif2,1] * self.yedomega4bar[0,0] * self.yl[mif1,0] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,1] * self.yedomega4[mif2,1] * self.yedomega4bar[0,0] * self.yl[mif1,0] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,1] * self.yedomega4[mif2,1] * self.yedomega4bar[0,0] * self.yl[mif1,0] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,2] * self.yedomega4[mif2,2] * self.yedomega4bar[0,0] * self.yl[mif1,0] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,2] * self.yedomega4[mif2,2] * self.yedomega4bar[0,0] * self.yl[mif1,0] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,2] * self.yedomega4[mif2,2] * self.yedomega4bar[0,0] * self.yl[mif1,0] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,0] * self.yedomega4[mif2,0] * self.yedomega4bar[0,1] * self.yl[mif1,0] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,0] * self.yedomega4[mif2,0] * self.yedomega4bar[0,1] * self.yl[mif1,0] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,0] * self.yedomega4[mif2,0] * self.yedomega4bar[0,1] * self.yl[mif1,0] + 3/64 * self.lambdaHatomega4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[mif2,1] * self.yedomega4bar[0,1] * self.yl[mif1,0] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.yedomega4[mif2,1] * self.yedomega4bar[0,1] * self.yl[mif1,0] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,1] * self.yedomega4[mif2,1] * self.yedomega4bar[0,1] * self.yl[mif1,0] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,1] * self.yedomega4[mif2,1] * self.yedomega4bar[0,1] * self.yl[mif1,0] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,2] * self.yedomega4[mif2,2] * self.yedomega4bar[0,1] * self.yl[mif1,0] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,2] * self.yedomega4[mif2,2] * self.yedomega4bar[0,1] * self.yl[mif1,0] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,2] * self.yedomega4[mif2,2] * self.yedomega4bar[0,1] * self.yl[mif1,0] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,0] * self.yedomega4[mif2,0] * self.yedomega4bar[0,2] * self.yl[mif1,0] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,0] * self.yedomega4[mif2,0] * self.yedomega4bar[0,2] * self.yl[mif1,0] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,0] * self.yedomega4[mif2,0] * self.yedomega4bar[0,2] * self.yl[mif1,0] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,1] * self.yedomega4[mif2,1] * self.yedomega4bar[0,2] * self.yl[mif1,0] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,1] * self.yedomega4[mif2,1] * self.yedomega4bar[0,2] * self.yl[mif1,0] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,1] * self.yedomega4[mif2,1] * self.yedomega4bar[0,2] * self.yl[mif1,0] + 3/64 * self.lambdaHatomega4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[mif2,2] * self.yedomega4bar[0,2] * self.yl[mif1,0] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,2] * self.yedomega4[mif2,2] * self.yedomega4bar[0,2] * self.yl[mif1,0] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,2] * self.yedomega4[mif2,2] * self.yedomega4bar[0,2] * self.yl[mif1,0] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,2] * self.yedomega4[mif2,2] * self.yedomega4bar[0,2] * self.yl[mif1,0] + 3/64 * self.lambdaHatomega4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[mif2,0] * self.yedomega4bar[1,0] * self.yl[mif1,1] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.yedomega4[mif2,0] * self.yedomega4bar[1,0] * self.yl[mif1,1] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.yedomega4[mif2,0] * self.yedomega4bar[1,0] * self.yl[mif1,1] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,0] * self.yedomega4[mif2,0] * self.yedomega4bar[1,0] * self.yl[mif1,1] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,1] * self.yedomega4[mif2,1] * self.yedomega4bar[1,0] * self.yl[mif1,1] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,1] * self.yedomega4[mif2,1] * self.yedomega4bar[1,0] * self.yl[mif1,1] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,1] * self.yedomega4[mif2,1] * self.yedomega4bar[1,0] * self.yl[mif1,1] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,2] * self.yedomega4[mif2,2] * self.yedomega4bar[1,0] * self.yl[mif1,1] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,2] * self.yedomega4[mif2,2] * self.yedomega4bar[1,0] * self.yl[mif1,1] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,2] * self.yedomega4[mif2,2] * self.yedomega4bar[1,0] * self.yl[mif1,1] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,0] * self.yedomega4[mif2,0] * self.yedomega4bar[1,1] * self.yl[mif1,1] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,0] * self.yedomega4[mif2,0] * self.yedomega4bar[1,1] * self.yl[mif1,1] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,0] * self.yedomega4[mif2,0] * self.yedomega4bar[1,1] * self.yl[mif1,1] + 3/64 * self.lambdaHatomega4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[mif2,1] * self.yedomega4bar[1,1] * self.yl[mif1,1] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.yedomega4[mif2,1] * self.yedomega4bar[1,1] * self.yl[mif1,1] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,1] * self.yedomega4[mif2,1] * self.yedomega4bar[1,1] * self.yl[mif1,1] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,1] * self.yedomega4[mif2,1] * self.yedomega4bar[1,1] * self.yl[mif1,1] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,2] * self.yedomega4[mif2,2] * self.yedomega4bar[1,1] * self.yl[mif1,1] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,2] * self.yedomega4[mif2,2] * self.yedomega4bar[1,1] * self.yl[mif1,1] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,2] * self.yedomega4[mif2,2] * self.yedomega4bar[1,1] * self.yl[mif1,1] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,0] * self.yedomega4[mif2,0] * self.yedomega4bar[1,2] * self.yl[mif1,1] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,0] * self.yedomega4[mif2,0] * self.yedomega4bar[1,2] * self.yl[mif1,1] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,0] * self.yedomega4[mif2,0] * self.yedomega4bar[1,2] * self.yl[mif1,1] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,1] * self.yedomega4[mif2,1] * self.yedomega4bar[1,2] * self.yl[mif1,1] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,1] * self.yedomega4[mif2,1] * self.yedomega4bar[1,2] * self.yl[mif1,1] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,1] * self.yedomega4[mif2,1] * self.yedomega4bar[1,2] * self.yl[mif1,1] + 3/64 * self.lambdaHatomega4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[mif2,2] * self.yedomega4bar[1,2] * self.yl[mif1,1] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,2] * self.yedomega4[mif2,2] * self.yedomega4bar[1,2] * self.yl[mif1,1] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,2] * self.yedomega4[mif2,2] * self.yedomega4bar[1,2] * self.yl[mif1,1] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,2] * self.yedomega4[mif2,2] * self.yedomega4bar[1,2] * self.yl[mif1,1] + 3/64 * self.lambdaHatomega4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[mif2,0] * self.yedomega4bar[2,0] * self.yl[mif1,2] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.yedomega4[mif2,0] * self.yedomega4bar[2,0] * self.yl[mif1,2] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.yedomega4[mif2,0] * self.yedomega4bar[2,0] * self.yl[mif1,2] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,0] * self.yedomega4[mif2,0] * self.yedomega4bar[2,0] * self.yl[mif1,2] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,1] * self.yedomega4[mif2,1] * self.yedomega4bar[2,0] * self.yl[mif1,2] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,1] * self.yedomega4[mif2,1] * self.yedomega4bar[2,0] * self.yl[mif1,2] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,1] * self.yedomega4[mif2,1] * self.yedomega4bar[2,0] * self.yl[mif1,2] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,2] * self.yedomega4[mif2,2] * self.yedomega4bar[2,0] * self.yl[mif1,2] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,2] * self.yedomega4[mif2,2] * self.yedomega4bar[2,0] * self.yl[mif1,2] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,2] * self.yedomega4[mif2,2] * self.yedomega4bar[2,0] * self.yl[mif1,2] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,0] * self.yedomega4[mif2,0] * self.yedomega4bar[2,1] * self.yl[mif1,2] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,0] * self.yedomega4[mif2,0] * self.yedomega4bar[2,1] * self.yl[mif1,2] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,0] * self.yedomega4[mif2,0] * self.yedomega4bar[2,1] * self.yl[mif1,2] + 3/64 * self.lambdaHatomega4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[mif2,1] * self.yedomega4bar[2,1] * self.yl[mif1,2] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.yedomega4[mif2,1] * self.yedomega4bar[2,1] * self.yl[mif1,2] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,1] * self.yedomega4[mif2,1] * self.yedomega4bar[2,1] * self.yl[mif1,2] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,1] * self.yedomega4[mif2,1] * self.yedomega4bar[2,1] * self.yl[mif1,2] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,2] * self.yedomega4[mif2,2] * self.yedomega4bar[2,1] * self.yl[mif1,2] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,2] * self.yedomega4[mif2,2] * self.yedomega4bar[2,1] * self.yl[mif1,2] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,2] * self.yedomega4[mif2,2] * self.yedomega4bar[2,1] * self.yl[mif1,2] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,0] * self.yedomega4[mif2,0] * self.yedomega4bar[2,2] * self.yl[mif1,2] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,0] * self.yedomega4[mif2,0] * self.yedomega4bar[2,2] * self.yl[mif1,2] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,0] * self.yedomega4[mif2,0] * self.yedomega4bar[2,2] * self.yl[mif1,2] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,1] * self.yedomega4[mif2,1] * self.yedomega4bar[2,2] * self.yl[mif1,2] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,1] * self.yedomega4[mif2,1] * self.yedomega4bar[2,2] * self.yl[mif1,2] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,1] * self.yedomega4[mif2,1] * self.yedomega4bar[2,2] * self.yl[mif1,2] + 3/64 * self.lambdaHatomega4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[mif2,2] * self.yedomega4bar[2,2] * self.yl[mif1,2] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,2] * self.yedomega4[mif2,2] * self.yedomega4bar[2,2] * self.yl[mif1,2] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,2] * self.yedomega4[mif2,2] * self.yedomega4bar[2,2] * self.yl[mif1,2] + -3/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,2] * self.yedomega4[mif2,2] * self.yedomega4bar[2,2] * self.yl[mif1,2] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,0] * self.yedomega4bar[0,0] * self.yl[0,mif2] * self.yl[mif1,0] * self.ylbar[0,0] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,1] * self.yedomega4bar[0,1] * self.yl[0,mif2] * self.yl[mif1,0] * self.ylbar[0,0] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,2] * self.yedomega4bar[0,2] * self.yl[0,mif2] * self.yl[mif1,0] * self.ylbar[0,0] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,0] * self.yedomega4bar[1,0] * self.yl[0,mif2] * self.yl[mif1,1] * self.ylbar[0,0] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,1] * self.yedomega4bar[1,1] * self.yl[0,mif2] * self.yl[mif1,1] * self.ylbar[0,0] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,2] * self.yedomega4bar[1,2] * self.yl[0,mif2] * self.yl[mif1,1] * self.ylbar[0,0] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,0] * self.yedomega4bar[2,0] * self.yl[0,mif2] * self.yl[mif1,2] * self.ylbar[0,0] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,1] * self.yedomega4bar[2,1] * self.yl[0,mif2] * self.yl[mif1,2] * self.ylbar[0,0] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,2] * self.yedomega4bar[2,2] * self.yl[0,mif2] * self.yl[mif1,2] * self.ylbar[0,0] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,0] * self.yedomega4bar[0,0] * self.yl[0,mif2] * self.yl[mif1,0] * self.ylbar[0,1] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,1] * self.yedomega4bar[0,1] * self.yl[0,mif2] * self.yl[mif1,0] * self.ylbar[0,1] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,2] * self.yedomega4bar[0,2] * self.yl[0,mif2] * self.yl[mif1,0] * self.ylbar[0,1] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,0] * self.yedomega4bar[1,0] * self.yl[0,mif2] * self.yl[mif1,1] * self.ylbar[0,1] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,1] * self.yedomega4bar[1,1] * self.yl[0,mif2] * self.yl[mif1,1] * self.ylbar[0,1] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,2] * self.yedomega4bar[1,2] * self.yl[0,mif2] * self.yl[mif1,1] * self.ylbar[0,1] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,0] * self.yedomega4bar[2,0] * self.yl[0,mif2] * self.yl[mif1,2] * self.ylbar[0,1] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,1] * self.yedomega4bar[2,1] * self.yl[0,mif2] * self.yl[mif1,2] * self.ylbar[0,1] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,2] * self.yedomega4bar[2,2] * self.yl[0,mif2] * self.yl[mif1,2] * self.ylbar[0,1] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,0] * self.yedomega4bar[0,0] * self.yl[0,mif2] * self.yl[mif1,0] * self.ylbar[0,2] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,1] * self.yedomega4bar[0,1] * self.yl[0,mif2] * self.yl[mif1,0] * self.ylbar[0,2] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,2] * self.yedomega4bar[0,2] * self.yl[0,mif2] * self.yl[mif1,0] * self.ylbar[0,2] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,0] * self.yedomega4bar[1,0] * self.yl[0,mif2] * self.yl[mif1,1] * self.ylbar[0,2] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,1] * self.yedomega4bar[1,1] * self.yl[0,mif2] * self.yl[mif1,1] * self.ylbar[0,2] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,2] * self.yedomega4bar[1,2] * self.yl[0,mif2] * self.yl[mif1,1] * self.ylbar[0,2] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,0] * self.yedomega4bar[2,0] * self.yl[0,mif2] * self.yl[mif1,2] * self.ylbar[0,2] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,1] * self.yedomega4bar[2,1] * self.yl[0,mif2] * self.yl[mif1,2] * self.ylbar[0,2] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,2] * self.yedomega4bar[2,2] * self.yl[0,mif2] * self.yl[mif1,2] * self.ylbar[0,2] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,0] * self.yedomega4bar[0,0] * self.yl[1,mif2] * self.yl[mif1,0] * self.ylbar[1,0] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,1] * self.yedomega4bar[0,1] * self.yl[1,mif2] * self.yl[mif1,0] * self.ylbar[1,0] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,2] * self.yedomega4bar[0,2] * self.yl[1,mif2] * self.yl[mif1,0] * self.ylbar[1,0] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,0] * self.yedomega4bar[1,0] * self.yl[1,mif2] * self.yl[mif1,1] * self.ylbar[1,0] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,1] * self.yedomega4bar[1,1] * self.yl[1,mif2] * self.yl[mif1,1] * self.ylbar[1,0] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,2] * self.yedomega4bar[1,2] * self.yl[1,mif2] * self.yl[mif1,1] * self.ylbar[1,0] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,0] * self.yedomega4bar[2,0] * self.yl[1,mif2] * self.yl[mif1,2] * self.ylbar[1,0] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,1] * self.yedomega4bar[2,1] * self.yl[1,mif2] * self.yl[mif1,2] * self.ylbar[1,0] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,2] * self.yedomega4bar[2,2] * self.yl[1,mif2] * self.yl[mif1,2] * self.ylbar[1,0] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,0] * self.yedomega4bar[0,0] * self.yl[1,mif2] * self.yl[mif1,0] * self.ylbar[1,1] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,1] * self.yedomega4bar[0,1] * self.yl[1,mif2] * self.yl[mif1,0] * self.ylbar[1,1] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,2] * self.yedomega4bar[0,2] * self.yl[1,mif2] * self.yl[mif1,0] * self.ylbar[1,1] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,0] * self.yedomega4bar[1,0] * self.yl[1,mif2] * self.yl[mif1,1] * self.ylbar[1,1] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,1] * self.yedomega4bar[1,1] * self.yl[1,mif2] * self.yl[mif1,1] * self.ylbar[1,1] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,2] * self.yedomega4bar[1,2] * self.yl[1,mif2] * self.yl[mif1,1] * self.ylbar[1,1] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,0] * self.yedomega4bar[2,0] * self.yl[1,mif2] * self.yl[mif1,2] * self.ylbar[1,1] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,1] * self.yedomega4bar[2,1] * self.yl[1,mif2] * self.yl[mif1,2] * self.ylbar[1,1] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,2] * self.yedomega4bar[2,2] * self.yl[1,mif2] * self.yl[mif1,2] * self.ylbar[1,1] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,0] * self.yedomega4bar[0,0] * self.yl[1,mif2] * self.yl[mif1,0] * self.ylbar[1,2] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,1] * self.yedomega4bar[0,1] * self.yl[1,mif2] * self.yl[mif1,0] * self.ylbar[1,2] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,2] * self.yedomega4bar[0,2] * self.yl[1,mif2] * self.yl[mif1,0] * self.ylbar[1,2] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,0] * self.yedomega4bar[1,0] * self.yl[1,mif2] * self.yl[mif1,1] * self.ylbar[1,2] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,1] * self.yedomega4bar[1,1] * self.yl[1,mif2] * self.yl[mif1,1] * self.ylbar[1,2] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,2] * self.yedomega4bar[1,2] * self.yl[1,mif2] * self.yl[mif1,1] * self.ylbar[1,2] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,0] * self.yedomega4bar[2,0] * self.yl[1,mif2] * self.yl[mif1,2] * self.ylbar[1,2] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,1] * self.yedomega4bar[2,1] * self.yl[1,mif2] * self.yl[mif1,2] * self.ylbar[1,2] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,2] * self.yedomega4bar[2,2] * self.yl[1,mif2] * self.yl[mif1,2] * self.ylbar[1,2] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,0] * self.yedomega4bar[0,0] * self.yl[2,mif2] * self.yl[mif1,0] * self.ylbar[2,0] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,1] * self.yedomega4bar[0,1] * self.yl[2,mif2] * self.yl[mif1,0] * self.ylbar[2,0] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,2] * self.yedomega4bar[0,2] * self.yl[2,mif2] * self.yl[mif1,0] * self.ylbar[2,0] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,0] * self.yedomega4bar[1,0] * self.yl[2,mif2] * self.yl[mif1,1] * self.ylbar[2,0] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,1] * self.yedomega4bar[1,1] * self.yl[2,mif2] * self.yl[mif1,1] * self.ylbar[2,0] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,2] * self.yedomega4bar[1,2] * self.yl[2,mif2] * self.yl[mif1,1] * self.ylbar[2,0] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,0] * self.yedomega4bar[2,0] * self.yl[2,mif2] * self.yl[mif1,2] * self.ylbar[2,0] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,1] * self.yedomega4bar[2,1] * self.yl[2,mif2] * self.yl[mif1,2] * self.ylbar[2,0] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,2] * self.yedomega4bar[2,2] * self.yl[2,mif2] * self.yl[mif1,2] * self.ylbar[2,0] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,0] * self.yedomega4bar[0,0] * self.yl[2,mif2] * self.yl[mif1,0] * self.ylbar[2,1] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,1] * self.yedomega4bar[0,1] * self.yl[2,mif2] * self.yl[mif1,0] * self.ylbar[2,1] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,2] * self.yedomega4bar[0,2] * self.yl[2,mif2] * self.yl[mif1,0] * self.ylbar[2,1] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,0] * self.yedomega4bar[1,0] * self.yl[2,mif2] * self.yl[mif1,1] * self.ylbar[2,1] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,1] * self.yedomega4bar[1,1] * self.yl[2,mif2] * self.yl[mif1,1] * self.ylbar[2,1] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,2] * self.yedomega4bar[1,2] * self.yl[2,mif2] * self.yl[mif1,1] * self.ylbar[2,1] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,0] * self.yedomega4bar[2,0] * self.yl[2,mif2] * self.yl[mif1,2] * self.ylbar[2,1] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,1] * self.yedomega4bar[2,1] * self.yl[2,mif2] * self.yl[mif1,2] * self.ylbar[2,1] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,2] * self.yedomega4bar[2,2] * self.yl[2,mif2] * self.yl[mif1,2] * self.ylbar[2,1] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,0] * self.yedomega4bar[0,0] * self.yl[2,mif2] * self.yl[mif1,0] * self.ylbar[2,2] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,1] * self.yedomega4bar[0,1] * self.yl[2,mif2] * self.yl[mif1,0] * self.ylbar[2,2] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,2] * self.yedomega4bar[0,2] * self.yl[2,mif2] * self.yl[mif1,0] * self.ylbar[2,2] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,0] * self.yedomega4bar[1,0] * self.yl[2,mif2] * self.yl[mif1,1] * self.ylbar[2,2] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,1] * self.yedomega4bar[1,1] * self.yl[2,mif2] * self.yl[mif1,1] * self.ylbar[2,2] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,2] * self.yedomega4bar[1,2] * self.yl[2,mif2] * self.yl[mif1,1] * self.ylbar[2,2] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,0] * self.yedomega4bar[2,0] * self.yl[2,mif2] * self.yl[mif1,2] * self.ylbar[2,2] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,1] * self.yedomega4bar[2,1] * self.yl[2,mif2] * self.yl[mif1,2] * self.ylbar[2,2] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,2] * self.yedomega4bar[2,2] * self.yl[2,mif2] * self.yl[mif1,2] * self.ylbar[2,2])

    def alphaOeu(self, mif1,mif2,mif3,mif4):
        return (1/135 * (self.g1)**(4) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -1/36 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yedomega4[mif2,0] * self.yedomega4bar[mif1,0] + -1/72 * (self.g1)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yedomega4[mif2,0] * self.yedomega4bar[mif1,0] + 1/72 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[mif2,0] * self.yedomega4bar[mif1,0] + -1/36 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yedomega4[mif2,1] * self.yedomega4bar[mif1,1] + -1/72 * (self.g1)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yedomega4[mif2,1] * self.yedomega4bar[mif1,1] + 1/72 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[mif2,1] * self.yedomega4bar[mif1,1] + -1/36 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yedomega4[mif2,2] * self.yedomega4bar[mif1,2] + -1/72 * (self.g1)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yedomega4[mif2,2] * self.yedomega4bar[mif1,2] + 1/72 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[mif2,2] * self.yedomega4bar[mif1,2] + -5/27 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yuuomega4[0,mif3] * self.yuuomega4bar[0,mif4] + -1/9 * (self.g1)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yuuomega4[0,mif3] * self.yuuomega4bar[0,mif4] + 1/9 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[0,mif3] * self.yuuomega4bar[0,mif4] + 1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[mif2,0] * self.yedomega4bar[mif1,0] * self.yuuomega4[0,mif3] * self.yuuomega4bar[0,mif4] + 1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[mif2,1] * self.yedomega4bar[mif1,1] * self.yuuomega4[0,mif3] * self.yuuomega4bar[0,mif4] + 1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[mif2,2] * self.yedomega4bar[mif1,2] * self.yuuomega4[0,mif3] * self.yuuomega4bar[0,mif4] + -5/27 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yuuomega4[1,mif3] * self.yuuomega4bar[1,mif4] + -1/9 * (self.g1)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yuuomega4[1,mif3] * self.yuuomega4bar[1,mif4] + 1/9 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[1,mif3] * self.yuuomega4bar[1,mif4] + 1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[mif2,0] * self.yedomega4bar[mif1,0] * self.yuuomega4[1,mif3] * self.yuuomega4bar[1,mif4] + 1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[mif2,1] * self.yedomega4bar[mif1,1] * self.yuuomega4[1,mif3] * self.yuuomega4bar[1,mif4] + 1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[mif2,2] * self.yedomega4bar[mif1,2] * self.yuuomega4[1,mif3] * self.yuuomega4bar[1,mif4] + -5/27 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yuuomega4[2,mif3] * self.yuuomega4bar[2,mif4] + -1/9 * (self.g1)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yuuomega4[2,mif3] * self.yuuomega4bar[2,mif4] + 1/9 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[2,mif3] * self.yuuomega4bar[2,mif4] + 1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[mif2,0] * self.yedomega4bar[mif1,0] * self.yuuomega4[2,mif3] * self.yuuomega4bar[2,mif4] + 1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[mif2,1] * self.yedomega4bar[mif1,1] * self.yuuomega4[2,mif3] * self.yuuomega4bar[2,mif4] + 1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[mif2,2] * self.yedomega4bar[mif1,2] * self.yuuomega4[2,mif3] * self.yuuomega4bar[2,mif4] + -1/18 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yuuomega4[mif3,0] * self.yuuomega4bar[mif4,0] + -1/18 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yuuomega4[mif3,1] * self.yuuomega4bar[mif4,1] + -1/18 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yuuomega4[mif3,2] * self.yuuomega4bar[mif4,2])

    def alphaOeW(self, mif1,mif2):
        return 0

    def alphaOHd(self, mif1,mif2):
        return (1/540 * (self.g1)**(4) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -7/432 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,mif2] * self.yedomega4bar[0,mif1] + -1/96 * (self.g1)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,mif2] * self.yedomega4bar[0,mif1] + 1/96 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[0,mif2] * self.yedomega4bar[0,mif1] + -7/432 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,mif2] * self.yedomega4bar[1,mif1] + -1/96 * (self.g1)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,mif2] * self.yedomega4bar[1,mif1] + 1/96 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[1,mif2] * self.yedomega4bar[1,mif1] + -7/432 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,mif2] * self.yedomega4bar[2,mif1] + -1/96 * (self.g1)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,mif2] * self.yedomega4bar[2,mif1] + 1/96 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[2,mif2] * self.yedomega4bar[2,mif1] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,mif2] * self.yedomega4bar[0,mif1] * self.yl[0,0] * self.ylbar[0,0] + 1/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,mif2] * self.yedomega4bar[0,mif1] * self.yl[0,0] * self.ylbar[0,0] + -1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[0,mif2] * self.yedomega4bar[0,mif1] * self.yl[0,0] * self.ylbar[0,0] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,mif2] * self.yedomega4bar[1,mif1] * self.yl[0,1] * self.ylbar[0,0] + 1/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,mif2] * self.yedomega4bar[1,mif1] * self.yl[0,1] * self.ylbar[0,0] + -1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[0,mif2] * self.yedomega4bar[1,mif1] * self.yl[0,1] * self.ylbar[0,0] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,mif2] * self.yedomega4bar[2,mif1] * self.yl[0,2] * self.ylbar[0,0] + 1/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,mif2] * self.yedomega4bar[2,mif1] * self.yl[0,2] * self.ylbar[0,0] + -1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[0,mif2] * self.yedomega4bar[2,mif1] * self.yl[0,2] * self.ylbar[0,0] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,mif2] * self.yedomega4bar[0,mif1] * self.yl[0,0] * self.ylbar[0,1] + 1/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,mif2] * self.yedomega4bar[0,mif1] * self.yl[0,0] * self.ylbar[0,1] + -1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[1,mif2] * self.yedomega4bar[0,mif1] * self.yl[0,0] * self.ylbar[0,1] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,mif2] * self.yedomega4bar[1,mif1] * self.yl[0,1] * self.ylbar[0,1] + 1/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,mif2] * self.yedomega4bar[1,mif1] * self.yl[0,1] * self.ylbar[0,1] + -1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[1,mif2] * self.yedomega4bar[1,mif1] * self.yl[0,1] * self.ylbar[0,1] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,mif2] * self.yedomega4bar[2,mif1] * self.yl[0,2] * self.ylbar[0,1] + 1/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,mif2] * self.yedomega4bar[2,mif1] * self.yl[0,2] * self.ylbar[0,1] + -1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[1,mif2] * self.yedomega4bar[2,mif1] * self.yl[0,2] * self.ylbar[0,1] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,mif2] * self.yedomega4bar[0,mif1] * self.yl[0,0] * self.ylbar[0,2] + 1/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,mif2] * self.yedomega4bar[0,mif1] * self.yl[0,0] * self.ylbar[0,2] + -1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[2,mif2] * self.yedomega4bar[0,mif1] * self.yl[0,0] * self.ylbar[0,2] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,mif2] * self.yedomega4bar[1,mif1] * self.yl[0,1] * self.ylbar[0,2] + 1/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,mif2] * self.yedomega4bar[1,mif1] * self.yl[0,1] * self.ylbar[0,2] + -1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[2,mif2] * self.yedomega4bar[1,mif1] * self.yl[0,1] * self.ylbar[0,2] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,mif2] * self.yedomega4bar[2,mif1] * self.yl[0,2] * self.ylbar[0,2] + 1/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,mif2] * self.yedomega4bar[2,mif1] * self.yl[0,2] * self.ylbar[0,2] + -1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[2,mif2] * self.yedomega4bar[2,mif1] * self.yl[0,2] * self.ylbar[0,2] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,mif2] * self.yedomega4bar[0,mif1] * self.yl[1,0] * self.ylbar[1,0] + 1/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,mif2] * self.yedomega4bar[0,mif1] * self.yl[1,0] * self.ylbar[1,0] + -1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[0,mif2] * self.yedomega4bar[0,mif1] * self.yl[1,0] * self.ylbar[1,0] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,mif2] * self.yedomega4bar[1,mif1] * self.yl[1,1] * self.ylbar[1,0] + 1/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,mif2] * self.yedomega4bar[1,mif1] * self.yl[1,1] * self.ylbar[1,0] + -1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[0,mif2] * self.yedomega4bar[1,mif1] * self.yl[1,1] * self.ylbar[1,0] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,mif2] * self.yedomega4bar[2,mif1] * self.yl[1,2] * self.ylbar[1,0] + 1/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,mif2] * self.yedomega4bar[2,mif1] * self.yl[1,2] * self.ylbar[1,0] + -1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[0,mif2] * self.yedomega4bar[2,mif1] * self.yl[1,2] * self.ylbar[1,0] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,mif2] * self.yedomega4bar[0,mif1] * self.yl[1,0] * self.ylbar[1,1] + 1/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,mif2] * self.yedomega4bar[0,mif1] * self.yl[1,0] * self.ylbar[1,1] + -1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[1,mif2] * self.yedomega4bar[0,mif1] * self.yl[1,0] * self.ylbar[1,1] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,mif2] * self.yedomega4bar[1,mif1] * self.yl[1,1] * self.ylbar[1,1] + 1/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,mif2] * self.yedomega4bar[1,mif1] * self.yl[1,1] * self.ylbar[1,1] + -1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[1,mif2] * self.yedomega4bar[1,mif1] * self.yl[1,1] * self.ylbar[1,1] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,mif2] * self.yedomega4bar[2,mif1] * self.yl[1,2] * self.ylbar[1,1] + 1/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,mif2] * self.yedomega4bar[2,mif1] * self.yl[1,2] * self.ylbar[1,1] + -1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[1,mif2] * self.yedomega4bar[2,mif1] * self.yl[1,2] * self.ylbar[1,1] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,mif2] * self.yedomega4bar[0,mif1] * self.yl[1,0] * self.ylbar[1,2] + 1/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,mif2] * self.yedomega4bar[0,mif1] * self.yl[1,0] * self.ylbar[1,2] + -1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[2,mif2] * self.yedomega4bar[0,mif1] * self.yl[1,0] * self.ylbar[1,2] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,mif2] * self.yedomega4bar[1,mif1] * self.yl[1,1] * self.ylbar[1,2] + 1/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,mif2] * self.yedomega4bar[1,mif1] * self.yl[1,1] * self.ylbar[1,2] + -1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[2,mif2] * self.yedomega4bar[1,mif1] * self.yl[1,1] * self.ylbar[1,2] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,mif2] * self.yedomega4bar[2,mif1] * self.yl[1,2] * self.ylbar[1,2] + 1/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,mif2] * self.yedomega4bar[2,mif1] * self.yl[1,2] * self.ylbar[1,2] + -1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[2,mif2] * self.yedomega4bar[2,mif1] * self.yl[1,2] * self.ylbar[1,2] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,mif2] * self.yedomega4bar[0,mif1] * self.yl[2,0] * self.ylbar[2,0] + 1/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,mif2] * self.yedomega4bar[0,mif1] * self.yl[2,0] * self.ylbar[2,0] + -1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[0,mif2] * self.yedomega4bar[0,mif1] * self.yl[2,0] * self.ylbar[2,0] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,mif2] * self.yedomega4bar[1,mif1] * self.yl[2,1] * self.ylbar[2,0] + 1/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,mif2] * self.yedomega4bar[1,mif1] * self.yl[2,1] * self.ylbar[2,0] + -1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[0,mif2] * self.yedomega4bar[1,mif1] * self.yl[2,1] * self.ylbar[2,0] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,mif2] * self.yedomega4bar[2,mif1] * self.yl[2,2] * self.ylbar[2,0] + 1/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,mif2] * self.yedomega4bar[2,mif1] * self.yl[2,2] * self.ylbar[2,0] + -1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[0,mif2] * self.yedomega4bar[2,mif1] * self.yl[2,2] * self.ylbar[2,0] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,mif2] * self.yedomega4bar[0,mif1] * self.yl[2,0] * self.ylbar[2,1] + 1/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,mif2] * self.yedomega4bar[0,mif1] * self.yl[2,0] * self.ylbar[2,1] + -1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[1,mif2] * self.yedomega4bar[0,mif1] * self.yl[2,0] * self.ylbar[2,1] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,mif2] * self.yedomega4bar[1,mif1] * self.yl[2,1] * self.ylbar[2,1] + 1/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,mif2] * self.yedomega4bar[1,mif1] * self.yl[2,1] * self.ylbar[2,1] + -1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[1,mif2] * self.yedomega4bar[1,mif1] * self.yl[2,1] * self.ylbar[2,1] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,mif2] * self.yedomega4bar[2,mif1] * self.yl[2,2] * self.ylbar[2,1] + 1/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,mif2] * self.yedomega4bar[2,mif1] * self.yl[2,2] * self.ylbar[2,1] + -1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[1,mif2] * self.yedomega4bar[2,mif1] * self.yl[2,2] * self.ylbar[2,1] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,mif2] * self.yedomega4bar[0,mif1] * self.yl[2,0] * self.ylbar[2,2] + 1/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,mif2] * self.yedomega4bar[0,mif1] * self.yl[2,0] * self.ylbar[2,2] + -1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[2,mif2] * self.yedomega4bar[0,mif1] * self.yl[2,0] * self.ylbar[2,2] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,mif2] * self.yedomega4bar[1,mif1] * self.yl[2,1] * self.ylbar[2,2] + 1/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,mif2] * self.yedomega4bar[1,mif1] * self.yl[2,1] * self.ylbar[2,2] + -1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[2,mif2] * self.yedomega4bar[1,mif1] * self.yl[2,1] * self.ylbar[2,2] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,mif2] * self.yedomega4bar[2,mif1] * self.yl[2,2] * self.ylbar[2,2] + 1/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,mif2] * self.yedomega4bar[2,mif1] * self.yl[2,2] * self.ylbar[2,2] + -1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[2,mif2] * self.yedomega4bar[2,mif1] * self.yl[2,2] * self.ylbar[2,2])

    def alphaOHe(self, mif1,mif2):
        return (1/180 * (self.g1)**(4) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -1/48 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[mif2,0] * self.yedomega4bar[mif1,0] + -1/96 * (self.g1)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[mif2,0] * self.yedomega4bar[mif1,0] + 1/96 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[mif2,0] * self.yedomega4bar[mif1,0] + 3/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.yedomega4[mif2,0] * self.yedomega4bar[mif1,0] + 3/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.yedomega4[mif2,0] * self.yedomega4bar[mif1,0] + -3/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[0,0] * self.yedomega4[mif2,0] * self.yedomega4bar[mif1,0] + 3/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.yedomega4[mif2,0] * self.yedomega4bar[mif1,0] + 3/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.yedomega4[mif2,0] * self.yedomega4bar[mif1,0] + -3/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[1,0] * self.yedomega4[mif2,0] * self.yedomega4bar[mif1,0] + 3/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,0] * self.yedomega4[mif2,0] * self.yedomega4bar[mif1,0] + 3/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,0] * self.yedomega4[mif2,0] * self.yedomega4bar[mif1,0] + -3/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[2,0] * self.yedomega4[mif2,0] * self.yedomega4bar[mif1,0] + 3/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,1] * self.yedomega4[mif2,1] * self.yedomega4bar[mif1,0] + 3/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,1] * self.yedomega4[mif2,1] * self.yedomega4bar[mif1,0] + -3/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[0,1] * self.yedomega4[mif2,1] * self.yedomega4bar[mif1,0] + 3/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,1] * self.yedomega4[mif2,1] * self.yedomega4bar[mif1,0] + 3/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,1] * self.yedomega4[mif2,1] * self.yedomega4bar[mif1,0] + -3/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[1,1] * self.yedomega4[mif2,1] * self.yedomega4bar[mif1,0] + 3/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,1] * self.yedomega4[mif2,1] * self.yedomega4bar[mif1,0] + 3/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,1] * self.yedomega4[mif2,1] * self.yedomega4bar[mif1,0] + -3/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[2,1] * self.yedomega4[mif2,1] * self.yedomega4bar[mif1,0] + 3/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,2] * self.yedomega4[mif2,2] * self.yedomega4bar[mif1,0] + 3/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,2] * self.yedomega4[mif2,2] * self.yedomega4bar[mif1,0] + -3/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[0,2] * self.yedomega4[mif2,2] * self.yedomega4bar[mif1,0] + 3/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,2] * self.yedomega4[mif2,2] * self.yedomega4bar[mif1,0] + 3/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,2] * self.yedomega4[mif2,2] * self.yedomega4bar[mif1,0] + -3/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[1,2] * self.yedomega4[mif2,2] * self.yedomega4bar[mif1,0] + 3/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,2] * self.yedomega4[mif2,2] * self.yedomega4bar[mif1,0] + 3/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,2] * self.yedomega4[mif2,2] * self.yedomega4bar[mif1,0] + -3/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[2,2] * self.yedomega4[mif2,2] * self.yedomega4bar[mif1,0] + 3/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,0] * self.yedomega4[mif2,0] * self.yedomega4bar[mif1,1] + 3/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,0] * self.yedomega4[mif2,0] * self.yedomega4bar[mif1,1] + -3/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[0,0] * self.yedomega4[mif2,0] * self.yedomega4bar[mif1,1] + 3/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,0] * self.yedomega4[mif2,0] * self.yedomega4bar[mif1,1] + 3/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,0] * self.yedomega4[mif2,0] * self.yedomega4bar[mif1,1] + -3/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[1,0] * self.yedomega4[mif2,0] * self.yedomega4bar[mif1,1] + 3/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,0] * self.yedomega4[mif2,0] * self.yedomega4bar[mif1,1] + 3/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,0] * self.yedomega4[mif2,0] * self.yedomega4bar[mif1,1] + -3/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[2,0] * self.yedomega4[mif2,0] * self.yedomega4bar[mif1,1] + -1/48 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[mif2,1] * self.yedomega4bar[mif1,1] + -1/96 * (self.g1)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[mif2,1] * self.yedomega4bar[mif1,1] + 1/96 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[mif2,1] * self.yedomega4bar[mif1,1] + 3/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.yedomega4[mif2,1] * self.yedomega4bar[mif1,1] + 3/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.yedomega4[mif2,1] * self.yedomega4bar[mif1,1] + -3/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[0,1] * self.yedomega4[mif2,1] * self.yedomega4bar[mif1,1] + 3/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,1] * self.yedomega4[mif2,1] * self.yedomega4bar[mif1,1] + 3/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,1] * self.yedomega4[mif2,1] * self.yedomega4bar[mif1,1] + -3/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[1,1] * self.yedomega4[mif2,1] * self.yedomega4bar[mif1,1] + 3/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,1] * self.yedomega4[mif2,1] * self.yedomega4bar[mif1,1] + 3/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,1] * self.yedomega4[mif2,1] * self.yedomega4bar[mif1,1] + -3/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[2,1] * self.yedomega4[mif2,1] * self.yedomega4bar[mif1,1] + 3/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,2] * self.yedomega4[mif2,2] * self.yedomega4bar[mif1,1] + 3/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,2] * self.yedomega4[mif2,2] * self.yedomega4bar[mif1,1] + -3/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[0,2] * self.yedomega4[mif2,2] * self.yedomega4bar[mif1,1] + 3/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,2] * self.yedomega4[mif2,2] * self.yedomega4bar[mif1,1] + 3/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,2] * self.yedomega4[mif2,2] * self.yedomega4bar[mif1,1] + -3/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[1,2] * self.yedomega4[mif2,2] * self.yedomega4bar[mif1,1] + 3/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,2] * self.yedomega4[mif2,2] * self.yedomega4bar[mif1,1] + 3/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,2] * self.yedomega4[mif2,2] * self.yedomega4bar[mif1,1] + -3/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[2,2] * self.yedomega4[mif2,2] * self.yedomega4bar[mif1,1] + 3/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,0] * self.yedomega4[mif2,0] * self.yedomega4bar[mif1,2] + 3/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,0] * self.yedomega4[mif2,0] * self.yedomega4bar[mif1,2] + -3/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[0,0] * self.yedomega4[mif2,0] * self.yedomega4bar[mif1,2] + 3/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,0] * self.yedomega4[mif2,0] * self.yedomega4bar[mif1,2] + 3/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,0] * self.yedomega4[mif2,0] * self.yedomega4bar[mif1,2] + -3/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[1,0] * self.yedomega4[mif2,0] * self.yedomega4bar[mif1,2] + 3/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,0] * self.yedomega4[mif2,0] * self.yedomega4bar[mif1,2] + 3/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,0] * self.yedomega4[mif2,0] * self.yedomega4bar[mif1,2] + -3/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[2,0] * self.yedomega4[mif2,0] * self.yedomega4bar[mif1,2] + 3/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,1] * self.yedomega4[mif2,1] * self.yedomega4bar[mif1,2] + 3/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,1] * self.yedomega4[mif2,1] * self.yedomega4bar[mif1,2] + -3/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[0,1] * self.yedomega4[mif2,1] * self.yedomega4bar[mif1,2] + 3/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,1] * self.yedomega4[mif2,1] * self.yedomega4bar[mif1,2] + 3/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,1] * self.yedomega4[mif2,1] * self.yedomega4bar[mif1,2] + -3/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[1,1] * self.yedomega4[mif2,1] * self.yedomega4bar[mif1,2] + 3/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,1] * self.yedomega4[mif2,1] * self.yedomega4bar[mif1,2] + 3/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,1] * self.yedomega4[mif2,1] * self.yedomega4bar[mif1,2] + -3/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[2,1] * self.yedomega4[mif2,1] * self.yedomega4bar[mif1,2] + -1/48 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[mif2,2] * self.yedomega4bar[mif1,2] + -1/96 * (self.g1)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[mif2,2] * self.yedomega4bar[mif1,2] + 1/96 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[mif2,2] * self.yedomega4bar[mif1,2] + 3/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,2] * self.yedomega4[mif2,2] * self.yedomega4bar[mif1,2] + 3/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,2] * self.yedomega4[mif2,2] * self.yedomega4bar[mif1,2] + -3/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[0,2] * self.yedomega4[mif2,2] * self.yedomega4bar[mif1,2] + 3/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,2] * self.yedomega4[mif2,2] * self.yedomega4bar[mif1,2] + 3/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,2] * self.yedomega4[mif2,2] * self.yedomega4bar[mif1,2] + -3/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[1,2] * self.yedomega4[mif2,2] * self.yedomega4bar[mif1,2] + 3/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,2] * self.yedomega4[mif2,2] * self.yedomega4bar[mif1,2] + 3/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,2] * self.yedomega4[mif2,2] * self.yedomega4bar[mif1,2] + -3/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[2,2] * self.yedomega4[mif2,2] * self.yedomega4bar[mif1,2])

    def alphaOHl1(self, mif1,mif2):
        return (1/360 * (self.g1)**(4) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,0] * self.yedomega4bar[0,0] * self.yl[mif1,0] * self.ylbar[mif2,0] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,1] * self.yedomega4bar[0,1] * self.yl[mif1,0] * self.ylbar[mif2,0] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,2] * self.yedomega4bar[0,2] * self.yl[mif1,0] * self.ylbar[mif2,0] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,0] * self.yedomega4bar[1,0] * self.yl[mif1,1] * self.ylbar[mif2,0] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,1] * self.yedomega4bar[1,1] * self.yl[mif1,1] * self.ylbar[mif2,0] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,2] * self.yedomega4bar[1,2] * self.yl[mif1,1] * self.ylbar[mif2,0] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,0] * self.yedomega4bar[2,0] * self.yl[mif1,2] * self.ylbar[mif2,0] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,1] * self.yedomega4bar[2,1] * self.yl[mif1,2] * self.ylbar[mif2,0] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,2] * self.yedomega4bar[2,2] * self.yl[mif1,2] * self.ylbar[mif2,0] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,0] * self.yedomega4bar[0,0] * self.yl[mif1,0] * self.ylbar[mif2,1] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,1] * self.yedomega4bar[0,1] * self.yl[mif1,0] * self.ylbar[mif2,1] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,2] * self.yedomega4bar[0,2] * self.yl[mif1,0] * self.ylbar[mif2,1] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,0] * self.yedomega4bar[1,0] * self.yl[mif1,1] * self.ylbar[mif2,1] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,1] * self.yedomega4bar[1,1] * self.yl[mif1,1] * self.ylbar[mif2,1] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,2] * self.yedomega4bar[1,2] * self.yl[mif1,1] * self.ylbar[mif2,1] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,0] * self.yedomega4bar[2,0] * self.yl[mif1,2] * self.ylbar[mif2,1] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,1] * self.yedomega4bar[2,1] * self.yl[mif1,2] * self.ylbar[mif2,1] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,2] * self.yedomega4bar[2,2] * self.yl[mif1,2] * self.ylbar[mif2,1] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,0] * self.yedomega4bar[0,0] * self.yl[mif1,0] * self.ylbar[mif2,2] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,1] * self.yedomega4bar[0,1] * self.yl[mif1,0] * self.ylbar[mif2,2] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,2] * self.yedomega4bar[0,2] * self.yl[mif1,0] * self.ylbar[mif2,2] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,0] * self.yedomega4bar[1,0] * self.yl[mif1,1] * self.ylbar[mif2,2] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,1] * self.yedomega4bar[1,1] * self.yl[mif1,1] * self.ylbar[mif2,2] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,2] * self.yedomega4bar[1,2] * self.yl[mif1,1] * self.ylbar[mif2,2] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,0] * self.yedomega4bar[2,0] * self.yl[mif1,2] * self.ylbar[mif2,2] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,1] * self.yedomega4bar[2,1] * self.yl[mif1,2] * self.ylbar[mif2,2] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,2] * self.yedomega4bar[2,2] * self.yl[mif1,2] * self.ylbar[mif2,2])

    def alphaOHl3(self, mif1,mif2):
        return (-1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,0] * self.yedomega4bar[0,0] * self.yl[mif1,0] * self.ylbar[mif2,0] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,1] * self.yedomega4bar[0,1] * self.yl[mif1,0] * self.ylbar[mif2,0] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,2] * self.yedomega4bar[0,2] * self.yl[mif1,0] * self.ylbar[mif2,0] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,0] * self.yedomega4bar[1,0] * self.yl[mif1,1] * self.ylbar[mif2,0] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,1] * self.yedomega4bar[1,1] * self.yl[mif1,1] * self.ylbar[mif2,0] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,2] * self.yedomega4bar[1,2] * self.yl[mif1,1] * self.ylbar[mif2,0] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,0] * self.yedomega4bar[2,0] * self.yl[mif1,2] * self.ylbar[mif2,0] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,1] * self.yedomega4bar[2,1] * self.yl[mif1,2] * self.ylbar[mif2,0] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,2] * self.yedomega4bar[2,2] * self.yl[mif1,2] * self.ylbar[mif2,0] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,0] * self.yedomega4bar[0,0] * self.yl[mif1,0] * self.ylbar[mif2,1] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,1] * self.yedomega4bar[0,1] * self.yl[mif1,0] * self.ylbar[mif2,1] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,2] * self.yedomega4bar[0,2] * self.yl[mif1,0] * self.ylbar[mif2,1] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,0] * self.yedomega4bar[1,0] * self.yl[mif1,1] * self.ylbar[mif2,1] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,1] * self.yedomega4bar[1,1] * self.yl[mif1,1] * self.ylbar[mif2,1] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,2] * self.yedomega4bar[1,2] * self.yl[mif1,1] * self.ylbar[mif2,1] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,0] * self.yedomega4bar[2,0] * self.yl[mif1,2] * self.ylbar[mif2,1] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,1] * self.yedomega4bar[2,1] * self.yl[mif1,2] * self.ylbar[mif2,1] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,2] * self.yedomega4bar[2,2] * self.yl[mif1,2] * self.ylbar[mif2,1] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,0] * self.yedomega4bar[0,0] * self.yl[mif1,0] * self.ylbar[mif2,2] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,1] * self.yedomega4bar[0,1] * self.yl[mif1,0] * self.ylbar[mif2,2] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,2] * self.yedomega4bar[0,2] * self.yl[mif1,0] * self.ylbar[mif2,2] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,0] * self.yedomega4bar[1,0] * self.yl[mif1,1] * self.ylbar[mif2,2] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,1] * self.yedomega4bar[1,1] * self.yl[mif1,1] * self.ylbar[mif2,2] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,2] * self.yedomega4bar[1,2] * self.yl[mif1,1] * self.ylbar[mif2,2] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,0] * self.yedomega4bar[2,0] * self.yl[mif1,2] * self.ylbar[mif2,2] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,1] * self.yedomega4bar[2,1] * self.yl[mif1,2] * self.ylbar[mif2,2] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,2] * self.yedomega4bar[2,2] * self.yl[mif1,2] * self.ylbar[mif2,2])

    def alphaOHq1(self, mif1,mif2):
        return (-1/1080 * (self.g1)**(4) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -1/384 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,0] * self.yedomega4[0,0] * self.yedomega4bar[0,0] + -1/384 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,1] * self.yedomega4[0,1] * self.yedomega4bar[0,0] + -1/384 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,2] * self.yedomega4[0,2] * self.yedomega4bar[0,0] + -1/384 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,0] * self.yedomega4[0,0] * self.yedomega4bar[0,1] + -1/384 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,1] * self.yedomega4[0,1] * self.yedomega4bar[0,1] + -1/384 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,2] * self.yedomega4[0,2] * self.yedomega4bar[0,1] + -1/384 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,0] * self.yedomega4[0,0] * self.yedomega4bar[0,2] + -1/384 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,1] * self.yedomega4[0,1] * self.yedomega4bar[0,2] + -1/384 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,2] * self.yedomega4[0,2] * self.yedomega4bar[0,2] + -1/384 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,0] * self.yedomega4[1,0] * self.yedomega4bar[1,0] + -1/384 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,1] * self.yedomega4[1,1] * self.yedomega4bar[1,0] + -1/384 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,2] * self.yedomega4[1,2] * self.yedomega4bar[1,0] + -1/384 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,0] * self.yedomega4[1,0] * self.yedomega4bar[1,1] + -1/384 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,1] * self.yedomega4[1,1] * self.yedomega4bar[1,1] + -1/384 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,2] * self.yedomega4[1,2] * self.yedomega4bar[1,1] + -1/384 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,0] * self.yedomega4[1,0] * self.yedomega4bar[1,2] + -1/384 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,1] * self.yedomega4[1,1] * self.yedomega4bar[1,2] + -1/384 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,2] * self.yedomega4[1,2] * self.yedomega4bar[1,2] + -1/384 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,0] * self.yedomega4[2,0] * self.yedomega4bar[2,0] + -1/384 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,1] * self.yedomega4[2,1] * self.yedomega4bar[2,0] + -1/384 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,2] * self.yedomega4[2,2] * self.yedomega4bar[2,0] + -1/384 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,0] * self.yedomega4[2,0] * self.yedomega4bar[2,1] + -1/384 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,1] * self.yedomega4[2,1] * self.yedomega4bar[2,1] + -1/384 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,2] * self.yedomega4[2,2] * self.yedomega4bar[2,1] + -1/384 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,0] * self.yedomega4[2,0] * self.yedomega4bar[2,2] + -1/384 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,1] * self.yedomega4[2,1] * self.yedomega4bar[2,2] + -1/384 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,2] * self.yedomega4[2,2] * self.yedomega4bar[2,2] + 1/48 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yubar[mif2,0] * self.yuuomega4[0,0] * self.yuuomega4bar[0,0] + 1/48 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yubar[mif2,0] * self.yuuomega4[0,1] * self.yuuomega4bar[0,0] + 1/48 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yubar[mif2,0] * self.yuuomega4[0,2] * self.yuuomega4bar[0,0] + 1/48 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yubar[mif2,1] * self.yuuomega4[0,0] * self.yuuomega4bar[0,1] + 1/48 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yubar[mif2,1] * self.yuuomega4[0,1] * self.yuuomega4bar[0,1] + 1/48 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yubar[mif2,1] * self.yuuomega4[0,2] * self.yuuomega4bar[0,1] + 1/48 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yubar[mif2,2] * self.yuuomega4[0,0] * self.yuuomega4bar[0,2] + 1/48 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yubar[mif2,2] * self.yuuomega4[0,1] * self.yuuomega4bar[0,2] + 1/48 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yubar[mif2,2] * self.yuuomega4[0,2] * self.yuuomega4bar[0,2] + 1/48 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yubar[mif2,0] * self.yuuomega4[1,0] * self.yuuomega4bar[1,0] + 1/48 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yubar[mif2,0] * self.yuuomega4[1,1] * self.yuuomega4bar[1,0] + 1/48 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yubar[mif2,0] * self.yuuomega4[1,2] * self.yuuomega4bar[1,0] + 1/48 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yubar[mif2,1] * self.yuuomega4[1,0] * self.yuuomega4bar[1,1] + 1/48 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yubar[mif2,1] * self.yuuomega4[1,1] * self.yuuomega4bar[1,1] + 1/48 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yubar[mif2,1] * self.yuuomega4[1,2] * self.yuuomega4bar[1,1] + 1/48 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yubar[mif2,2] * self.yuuomega4[1,0] * self.yuuomega4bar[1,2] + 1/48 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yubar[mif2,2] * self.yuuomega4[1,1] * self.yuuomega4bar[1,2] + 1/48 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yubar[mif2,2] * self.yuuomega4[1,2] * self.yuuomega4bar[1,2] + 1/48 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yubar[mif2,0] * self.yuuomega4[2,0] * self.yuuomega4bar[2,0] + 1/48 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yubar[mif2,0] * self.yuuomega4[2,1] * self.yuuomega4bar[2,0] + 1/48 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yubar[mif2,0] * self.yuuomega4[2,2] * self.yuuomega4bar[2,0] + 1/48 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yubar[mif2,1] * self.yuuomega4[2,0] * self.yuuomega4bar[2,1] + 1/48 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yubar[mif2,1] * self.yuuomega4[2,1] * self.yuuomega4bar[2,1] + 1/48 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yubar[mif2,1] * self.yuuomega4[2,2] * self.yuuomega4bar[2,1] + 1/48 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yubar[mif2,2] * self.yuuomega4[2,0] * self.yuuomega4bar[2,2] + 1/48 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yubar[mif2,2] * self.yuuomega4[2,1] * self.yuuomega4bar[2,2] + 1/48 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yubar[mif2,2] * self.yuuomega4[2,2] * self.yuuomega4bar[2,2])

    def alphaOHq3(self, mif1,mif2):
        return (-1/384 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,0] * self.yedomega4[0,0] * self.yedomega4bar[0,0] + -1/384 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,1] * self.yedomega4[0,1] * self.yedomega4bar[0,0] + -1/384 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,2] * self.yedomega4[0,2] * self.yedomega4bar[0,0] + -1/384 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,0] * self.yedomega4[0,0] * self.yedomega4bar[0,1] + -1/384 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,1] * self.yedomega4[0,1] * self.yedomega4bar[0,1] + -1/384 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,2] * self.yedomega4[0,2] * self.yedomega4bar[0,1] + -1/384 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,0] * self.yedomega4[0,0] * self.yedomega4bar[0,2] + -1/384 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,1] * self.yedomega4[0,1] * self.yedomega4bar[0,2] + -1/384 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,2] * self.yedomega4[0,2] * self.yedomega4bar[0,2] + -1/384 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,0] * self.yedomega4[1,0] * self.yedomega4bar[1,0] + -1/384 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,1] * self.yedomega4[1,1] * self.yedomega4bar[1,0] + -1/384 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,2] * self.yedomega4[1,2] * self.yedomega4bar[1,0] + -1/384 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,0] * self.yedomega4[1,0] * self.yedomega4bar[1,1] + -1/384 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,1] * self.yedomega4[1,1] * self.yedomega4bar[1,1] + -1/384 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,2] * self.yedomega4[1,2] * self.yedomega4bar[1,1] + -1/384 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,0] * self.yedomega4[1,0] * self.yedomega4bar[1,2] + -1/384 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,1] * self.yedomega4[1,1] * self.yedomega4bar[1,2] + -1/384 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,2] * self.yedomega4[1,2] * self.yedomega4bar[1,2] + -1/384 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,0] * self.yedomega4[2,0] * self.yedomega4bar[2,0] + -1/384 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,1] * self.yedomega4[2,1] * self.yedomega4bar[2,0] + -1/384 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,2] * self.yedomega4[2,2] * self.yedomega4bar[2,0] + -1/384 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,0] * self.yedomega4[2,0] * self.yedomega4bar[2,1] + -1/384 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,1] * self.yedomega4[2,1] * self.yedomega4bar[2,1] + -1/384 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,2] * self.yedomega4[2,2] * self.yedomega4bar[2,1] + -1/384 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,0] * self.yedomega4[2,0] * self.yedomega4bar[2,2] + -1/384 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,1] * self.yedomega4[2,1] * self.yedomega4bar[2,2] + -1/384 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,2] * self.yedomega4[2,2] * self.yedomega4bar[2,2] + -1/48 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yubar[mif2,0] * self.yuuomega4[0,0] * self.yuuomega4bar[0,0] + -1/48 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yubar[mif2,0] * self.yuuomega4[0,1] * self.yuuomega4bar[0,0] + -1/48 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yubar[mif2,0] * self.yuuomega4[0,2] * self.yuuomega4bar[0,0] + -1/48 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yubar[mif2,1] * self.yuuomega4[0,0] * self.yuuomega4bar[0,1] + -1/48 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yubar[mif2,1] * self.yuuomega4[0,1] * self.yuuomega4bar[0,1] + -1/48 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yubar[mif2,1] * self.yuuomega4[0,2] * self.yuuomega4bar[0,1] + -1/48 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yubar[mif2,2] * self.yuuomega4[0,0] * self.yuuomega4bar[0,2] + -1/48 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yubar[mif2,2] * self.yuuomega4[0,1] * self.yuuomega4bar[0,2] + -1/48 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yubar[mif2,2] * self.yuuomega4[0,2] * self.yuuomega4bar[0,2] + -1/48 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yubar[mif2,0] * self.yuuomega4[1,0] * self.yuuomega4bar[1,0] + -1/48 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yubar[mif2,0] * self.yuuomega4[1,1] * self.yuuomega4bar[1,0] + -1/48 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yubar[mif2,0] * self.yuuomega4[1,2] * self.yuuomega4bar[1,0] + -1/48 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yubar[mif2,1] * self.yuuomega4[1,0] * self.yuuomega4bar[1,1] + -1/48 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yubar[mif2,1] * self.yuuomega4[1,1] * self.yuuomega4bar[1,1] + -1/48 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yubar[mif2,1] * self.yuuomega4[1,2] * self.yuuomega4bar[1,1] + -1/48 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yubar[mif2,2] * self.yuuomega4[1,0] * self.yuuomega4bar[1,2] + -1/48 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yubar[mif2,2] * self.yuuomega4[1,1] * self.yuuomega4bar[1,2] + -1/48 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yubar[mif2,2] * self.yuuomega4[1,2] * self.yuuomega4bar[1,2] + -1/48 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yubar[mif2,0] * self.yuuomega4[2,0] * self.yuuomega4bar[2,0] + -1/48 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yubar[mif2,0] * self.yuuomega4[2,1] * self.yuuomega4bar[2,0] + -1/48 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yubar[mif2,0] * self.yuuomega4[2,2] * self.yuuomega4bar[2,0] + -1/48 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yubar[mif2,1] * self.yuuomega4[2,0] * self.yuuomega4bar[2,1] + -1/48 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yubar[mif2,1] * self.yuuomega4[2,1] * self.yuuomega4bar[2,1] + -1/48 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yubar[mif2,1] * self.yuuomega4[2,2] * self.yuuomega4bar[2,1] + -1/48 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yubar[mif2,2] * self.yuuomega4[2,0] * self.yuuomega4bar[2,2] + -1/48 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yubar[mif2,2] * self.yuuomega4[2,1] * self.yuuomega4bar[2,2] + -1/48 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yubar[mif2,2] * self.yuuomega4[2,2] * self.yuuomega4bar[2,2])

    def alphaOHu(self, mif1,mif2):
        return (-1/270 * (self.g1)**(4) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 5/54 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[0,mif1] * self.yuuomega4bar[0,mif2] + 1/18 * (self.g1)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[0,mif1] * self.yuuomega4bar[0,mif2] + -1/18 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[0,mif1] * self.yuuomega4bar[0,mif2] + -1/4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yubar[0,0] * self.yuuomega4[0,mif1] * self.yuuomega4bar[0,mif2] + -1/4 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yubar[0,0] * self.yuuomega4[0,mif1] * self.yuuomega4bar[0,mif2] + 1/4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yu[0,0] * self.yubar[0,0] * self.yuuomega4[0,mif1] * self.yuuomega4bar[0,mif2] + -1/4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yubar[1,0] * self.yuuomega4[0,mif1] * self.yuuomega4bar[0,mif2] + -1/4 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yubar[1,0] * self.yuuomega4[0,mif1] * self.yuuomega4bar[0,mif2] + 1/4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yu[1,0] * self.yubar[1,0] * self.yuuomega4[0,mif1] * self.yuuomega4bar[0,mif2] + -1/4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yubar[2,0] * self.yuuomega4[0,mif1] * self.yuuomega4bar[0,mif2] + -1/4 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yubar[2,0] * self.yuuomega4[0,mif1] * self.yuuomega4bar[0,mif2] + 1/4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yu[2,0] * self.yubar[2,0] * self.yuuomega4[0,mif1] * self.yuuomega4bar[0,mif2] + -1/4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yubar[0,0] * self.yuuomega4[1,mif1] * self.yuuomega4bar[0,mif2] + -1/4 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yubar[0,0] * self.yuuomega4[1,mif1] * self.yuuomega4bar[0,mif2] + 1/4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yu[0,1] * self.yubar[0,0] * self.yuuomega4[1,mif1] * self.yuuomega4bar[0,mif2] + -1/4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yubar[1,0] * self.yuuomega4[1,mif1] * self.yuuomega4bar[0,mif2] + -1/4 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yubar[1,0] * self.yuuomega4[1,mif1] * self.yuuomega4bar[0,mif2] + 1/4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yu[1,1] * self.yubar[1,0] * self.yuuomega4[1,mif1] * self.yuuomega4bar[0,mif2] + -1/4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yubar[2,0] * self.yuuomega4[1,mif1] * self.yuuomega4bar[0,mif2] + -1/4 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yubar[2,0] * self.yuuomega4[1,mif1] * self.yuuomega4bar[0,mif2] + 1/4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yu[2,1] * self.yubar[2,0] * self.yuuomega4[1,mif1] * self.yuuomega4bar[0,mif2] + -1/4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yubar[0,0] * self.yuuomega4[2,mif1] * self.yuuomega4bar[0,mif2] + -1/4 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yubar[0,0] * self.yuuomega4[2,mif1] * self.yuuomega4bar[0,mif2] + 1/4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yu[0,2] * self.yubar[0,0] * self.yuuomega4[2,mif1] * self.yuuomega4bar[0,mif2] + -1/4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yubar[1,0] * self.yuuomega4[2,mif1] * self.yuuomega4bar[0,mif2] + -1/4 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yubar[1,0] * self.yuuomega4[2,mif1] * self.yuuomega4bar[0,mif2] + 1/4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yu[1,2] * self.yubar[1,0] * self.yuuomega4[2,mif1] * self.yuuomega4bar[0,mif2] + -1/4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yubar[2,0] * self.yuuomega4[2,mif1] * self.yuuomega4bar[0,mif2] + -1/4 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yubar[2,0] * self.yuuomega4[2,mif1] * self.yuuomega4bar[0,mif2] + 1/4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yu[2,2] * self.yubar[2,0] * self.yuuomega4[2,mif1] * self.yuuomega4bar[0,mif2] + -1/4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yubar[0,1] * self.yuuomega4[0,mif1] * self.yuuomega4bar[1,mif2] + -1/4 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yubar[0,1] * self.yuuomega4[0,mif1] * self.yuuomega4bar[1,mif2] + 1/4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yu[0,0] * self.yubar[0,1] * self.yuuomega4[0,mif1] * self.yuuomega4bar[1,mif2] + -1/4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yubar[1,1] * self.yuuomega4[0,mif1] * self.yuuomega4bar[1,mif2] + -1/4 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yubar[1,1] * self.yuuomega4[0,mif1] * self.yuuomega4bar[1,mif2] + 1/4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yu[1,0] * self.yubar[1,1] * self.yuuomega4[0,mif1] * self.yuuomega4bar[1,mif2] + -1/4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yubar[2,1] * self.yuuomega4[0,mif1] * self.yuuomega4bar[1,mif2] + -1/4 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yubar[2,1] * self.yuuomega4[0,mif1] * self.yuuomega4bar[1,mif2] + 1/4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yu[2,0] * self.yubar[2,1] * self.yuuomega4[0,mif1] * self.yuuomega4bar[1,mif2] + 5/54 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[1,mif1] * self.yuuomega4bar[1,mif2] + 1/18 * (self.g1)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[1,mif1] * self.yuuomega4bar[1,mif2] + -1/18 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[1,mif1] * self.yuuomega4bar[1,mif2] + -1/4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yubar[0,1] * self.yuuomega4[1,mif1] * self.yuuomega4bar[1,mif2] + -1/4 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yubar[0,1] * self.yuuomega4[1,mif1] * self.yuuomega4bar[1,mif2] + 1/4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yu[0,1] * self.yubar[0,1] * self.yuuomega4[1,mif1] * self.yuuomega4bar[1,mif2] + -1/4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yubar[1,1] * self.yuuomega4[1,mif1] * self.yuuomega4bar[1,mif2] + -1/4 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yubar[1,1] * self.yuuomega4[1,mif1] * self.yuuomega4bar[1,mif2] + 1/4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yu[1,1] * self.yubar[1,1] * self.yuuomega4[1,mif1] * self.yuuomega4bar[1,mif2] + -1/4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yubar[2,1] * self.yuuomega4[1,mif1] * self.yuuomega4bar[1,mif2] + -1/4 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yubar[2,1] * self.yuuomega4[1,mif1] * self.yuuomega4bar[1,mif2] + 1/4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yu[2,1] * self.yubar[2,1] * self.yuuomega4[1,mif1] * self.yuuomega4bar[1,mif2] + -1/4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yubar[0,1] * self.yuuomega4[2,mif1] * self.yuuomega4bar[1,mif2] + -1/4 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yubar[0,1] * self.yuuomega4[2,mif1] * self.yuuomega4bar[1,mif2] + 1/4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yu[0,2] * self.yubar[0,1] * self.yuuomega4[2,mif1] * self.yuuomega4bar[1,mif2] + -1/4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yubar[1,1] * self.yuuomega4[2,mif1] * self.yuuomega4bar[1,mif2] + -1/4 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yubar[1,1] * self.yuuomega4[2,mif1] * self.yuuomega4bar[1,mif2] + 1/4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yu[1,2] * self.yubar[1,1] * self.yuuomega4[2,mif1] * self.yuuomega4bar[1,mif2] + -1/4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yubar[2,1] * self.yuuomega4[2,mif1] * self.yuuomega4bar[1,mif2] + -1/4 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yubar[2,1] * self.yuuomega4[2,mif1] * self.yuuomega4bar[1,mif2] + 1/4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yu[2,2] * self.yubar[2,1] * self.yuuomega4[2,mif1] * self.yuuomega4bar[1,mif2] + -1/4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yubar[0,2] * self.yuuomega4[0,mif1] * self.yuuomega4bar[2,mif2] + -1/4 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yubar[0,2] * self.yuuomega4[0,mif1] * self.yuuomega4bar[2,mif2] + 1/4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yu[0,0] * self.yubar[0,2] * self.yuuomega4[0,mif1] * self.yuuomega4bar[2,mif2] + -1/4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yubar[1,2] * self.yuuomega4[0,mif1] * self.yuuomega4bar[2,mif2] + -1/4 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yubar[1,2] * self.yuuomega4[0,mif1] * self.yuuomega4bar[2,mif2] + 1/4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yu[1,0] * self.yubar[1,2] * self.yuuomega4[0,mif1] * self.yuuomega4bar[2,mif2] + -1/4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yubar[2,2] * self.yuuomega4[0,mif1] * self.yuuomega4bar[2,mif2] + -1/4 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yubar[2,2] * self.yuuomega4[0,mif1] * self.yuuomega4bar[2,mif2] + 1/4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yu[2,0] * self.yubar[2,2] * self.yuuomega4[0,mif1] * self.yuuomega4bar[2,mif2] + -1/4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yubar[0,2] * self.yuuomega4[1,mif1] * self.yuuomega4bar[2,mif2] + -1/4 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yubar[0,2] * self.yuuomega4[1,mif1] * self.yuuomega4bar[2,mif2] + 1/4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yu[0,1] * self.yubar[0,2] * self.yuuomega4[1,mif1] * self.yuuomega4bar[2,mif2] + -1/4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yubar[1,2] * self.yuuomega4[1,mif1] * self.yuuomega4bar[2,mif2] + -1/4 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yubar[1,2] * self.yuuomega4[1,mif1] * self.yuuomega4bar[2,mif2] + 1/4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yu[1,1] * self.yubar[1,2] * self.yuuomega4[1,mif1] * self.yuuomega4bar[2,mif2] + -1/4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yubar[2,2] * self.yuuomega4[1,mif1] * self.yuuomega4bar[2,mif2] + -1/4 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yubar[2,2] * self.yuuomega4[1,mif1] * self.yuuomega4bar[2,mif2] + 1/4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yu[2,1] * self.yubar[2,2] * self.yuuomega4[1,mif1] * self.yuuomega4bar[2,mif2] + 5/54 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[2,mif1] * self.yuuomega4bar[2,mif2] + 1/18 * (self.g1)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[2,mif1] * self.yuuomega4bar[2,mif2] + -1/18 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[2,mif1] * self.yuuomega4bar[2,mif2] + -1/4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yubar[0,2] * self.yuuomega4[2,mif1] * self.yuuomega4bar[2,mif2] + -1/4 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yubar[0,2] * self.yuuomega4[2,mif1] * self.yuuomega4bar[2,mif2] + 1/4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yu[0,2] * self.yubar[0,2] * self.yuuomega4[2,mif1] * self.yuuomega4bar[2,mif2] + -1/4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yubar[1,2] * self.yuuomega4[2,mif1] * self.yuuomega4bar[2,mif2] + -1/4 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yubar[1,2] * self.yuuomega4[2,mif1] * self.yuuomega4bar[2,mif2] + 1/4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yu[1,2] * self.yubar[1,2] * self.yuuomega4[2,mif1] * self.yuuomega4bar[2,mif2] + -1/4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yubar[2,2] * self.yuuomega4[2,mif1] * self.yuuomega4bar[2,mif2] + -1/4 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yubar[2,2] * self.yuuomega4[2,mif1] * self.yuuomega4bar[2,mif2] + 1/4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yu[2,2] * self.yubar[2,2] * self.yuuomega4[2,mif1] * self.yuuomega4bar[2,mif2] + 1/36 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[mif1,0] * self.yuuomega4bar[mif2,0] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yubar[0,0] * self.yuuomega4[mif1,0] * self.yuuomega4bar[mif2,0] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yubar[1,0] * self.yuuomega4[mif1,0] * self.yuuomega4bar[mif2,0] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yubar[2,0] * self.yuuomega4[mif1,0] * self.yuuomega4bar[mif2,0] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yubar[0,0] * self.yuuomega4[mif1,1] * self.yuuomega4bar[mif2,0] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yubar[1,0] * self.yuuomega4[mif1,1] * self.yuuomega4bar[mif2,0] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yubar[2,0] * self.yuuomega4[mif1,1] * self.yuuomega4bar[mif2,0] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yubar[0,0] * self.yuuomega4[mif1,2] * self.yuuomega4bar[mif2,0] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yubar[1,0] * self.yuuomega4[mif1,2] * self.yuuomega4bar[mif2,0] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yubar[2,0] * self.yuuomega4[mif1,2] * self.yuuomega4bar[mif2,0] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yubar[0,1] * self.yuuomega4[mif1,0] * self.yuuomega4bar[mif2,1] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yubar[1,1] * self.yuuomega4[mif1,0] * self.yuuomega4bar[mif2,1] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yubar[2,1] * self.yuuomega4[mif1,0] * self.yuuomega4bar[mif2,1] + 1/36 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[mif1,1] * self.yuuomega4bar[mif2,1] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yubar[0,1] * self.yuuomega4[mif1,1] * self.yuuomega4bar[mif2,1] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yubar[1,1] * self.yuuomega4[mif1,1] * self.yuuomega4bar[mif2,1] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yubar[2,1] * self.yuuomega4[mif1,1] * self.yuuomega4bar[mif2,1] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yubar[0,1] * self.yuuomega4[mif1,2] * self.yuuomega4bar[mif2,1] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yubar[1,1] * self.yuuomega4[mif1,2] * self.yuuomega4bar[mif2,1] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yubar[2,1] * self.yuuomega4[mif1,2] * self.yuuomega4bar[mif2,1] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yubar[0,2] * self.yuuomega4[mif1,0] * self.yuuomega4bar[mif2,2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yubar[1,2] * self.yuuomega4[mif1,0] * self.yuuomega4bar[mif2,2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yubar[2,2] * self.yuuomega4[mif1,0] * self.yuuomega4bar[mif2,2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yubar[0,2] * self.yuuomega4[mif1,1] * self.yuuomega4bar[mif2,2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yubar[1,2] * self.yuuomega4[mif1,1] * self.yuuomega4bar[mif2,2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yubar[2,2] * self.yuuomega4[mif1,1] * self.yuuomega4bar[mif2,2] + 1/36 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[mif1,2] * self.yuuomega4bar[mif2,2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yubar[0,2] * self.yuuomega4[mif1,2] * self.yuuomega4bar[mif2,2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yubar[1,2] * self.yuuomega4[mif1,2] * self.yuuomega4bar[mif2,2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yubar[2,2] * self.yuuomega4[mif1,2] * self.yuuomega4bar[mif2,2])

    def alphaOHud(self, mif1,mif2):
        return 0

    def alphaOld(self, mif1,mif2,mif3,mif4):
        return (-1/540 * (self.g1)**(4) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 7/432 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yedomega4[0,mif4] * self.yedomega4bar[0,mif3] + 1/96 * (self.g1)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yedomega4[0,mif4] * self.yedomega4bar[0,mif3] + -1/96 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[0,mif4] * self.yedomega4bar[0,mif3] + 7/432 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yedomega4[1,mif4] * self.yedomega4bar[1,mif3] + 1/96 * (self.g1)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yedomega4[1,mif4] * self.yedomega4bar[1,mif3] + -1/96 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[1,mif4] * self.yedomega4bar[1,mif3] + 7/432 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yedomega4[2,mif4] * self.yedomega4bar[2,mif3] + 1/96 * (self.g1)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yedomega4[2,mif4] * self.yedomega4bar[2,mif3] + -1/96 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[2,mif4] * self.yedomega4bar[2,mif3] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,mif4] * self.yedomega4bar[0,mif3] * self.yl[mif1,0] * self.ylbar[mif2,0] + -1/64 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,mif4] * self.yedomega4bar[0,mif3] * self.yl[mif1,0] * self.ylbar[mif2,0] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[0,mif4] * self.yedomega4bar[0,mif3] * self.yl[mif1,0] * self.ylbar[mif2,0] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,mif4] * self.yedomega4bar[1,mif3] * self.yl[mif1,1] * self.ylbar[mif2,0] + -1/64 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,mif4] * self.yedomega4bar[1,mif3] * self.yl[mif1,1] * self.ylbar[mif2,0] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[0,mif4] * self.yedomega4bar[1,mif3] * self.yl[mif1,1] * self.ylbar[mif2,0] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,mif4] * self.yedomega4bar[2,mif3] * self.yl[mif1,2] * self.ylbar[mif2,0] + -1/64 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,mif4] * self.yedomega4bar[2,mif3] * self.yl[mif1,2] * self.ylbar[mif2,0] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[0,mif4] * self.yedomega4bar[2,mif3] * self.yl[mif1,2] * self.ylbar[mif2,0] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,mif4] * self.yedomega4bar[0,mif3] * self.yl[mif1,0] * self.ylbar[mif2,1] + -1/64 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,mif4] * self.yedomega4bar[0,mif3] * self.yl[mif1,0] * self.ylbar[mif2,1] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[1,mif4] * self.yedomega4bar[0,mif3] * self.yl[mif1,0] * self.ylbar[mif2,1] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,mif4] * self.yedomega4bar[1,mif3] * self.yl[mif1,1] * self.ylbar[mif2,1] + -1/64 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,mif4] * self.yedomega4bar[1,mif3] * self.yl[mif1,1] * self.ylbar[mif2,1] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[1,mif4] * self.yedomega4bar[1,mif3] * self.yl[mif1,1] * self.ylbar[mif2,1] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,mif4] * self.yedomega4bar[2,mif3] * self.yl[mif1,2] * self.ylbar[mif2,1] + -1/64 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,mif4] * self.yedomega4bar[2,mif3] * self.yl[mif1,2] * self.ylbar[mif2,1] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[1,mif4] * self.yedomega4bar[2,mif3] * self.yl[mif1,2] * self.ylbar[mif2,1] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,mif4] * self.yedomega4bar[0,mif3] * self.yl[mif1,0] * self.ylbar[mif2,2] + -1/64 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,mif4] * self.yedomega4bar[0,mif3] * self.yl[mif1,0] * self.ylbar[mif2,2] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[2,mif4] * self.yedomega4bar[0,mif3] * self.yl[mif1,0] * self.ylbar[mif2,2] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,mif4] * self.yedomega4bar[1,mif3] * self.yl[mif1,1] * self.ylbar[mif2,2] + -1/64 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,mif4] * self.yedomega4bar[1,mif3] * self.yl[mif1,1] * self.ylbar[mif2,2] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[2,mif4] * self.yedomega4bar[1,mif3] * self.yl[mif1,1] * self.ylbar[mif2,2] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,mif4] * self.yedomega4bar[2,mif3] * self.yl[mif1,2] * self.ylbar[mif2,2] + -1/64 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,mif4] * self.yedomega4bar[2,mif3] * self.yl[mif1,2] * self.ylbar[mif2,2] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[2,mif4] * self.yedomega4bar[2,mif3] * self.yl[mif1,2] * self.ylbar[mif2,2])

    def alphaOle(self, mif1,mif2,mif3,mif4):
        return (-1/180 * (self.g1)**(4) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 1/48 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yedomega4[mif4,0] * self.yedomega4bar[mif3,0] + 1/96 * (self.g1)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yedomega4[mif4,0] * self.yedomega4bar[mif3,0] + -1/96 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[mif4,0] * self.yedomega4bar[mif3,0] + 1/48 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yedomega4[mif4,1] * self.yedomega4bar[mif3,1] + 1/96 * (self.g1)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yedomega4[mif4,1] * self.yedomega4bar[mif3,1] + -1/96 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[mif4,1] * self.yedomega4bar[mif3,1] + 1/48 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yedomega4[mif4,2] * self.yedomega4bar[mif3,2] + 1/96 * (self.g1)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yedomega4[mif4,2] * self.yedomega4bar[mif3,2] + -1/96 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[mif4,2] * self.yedomega4bar[mif3,2])

    def alphaOledq(self, mif1,mif2,mif3,mif4):
        return (-7/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,0] * self.yedomega4[mif2,0] * self.yedomega4bar[0,mif3] * self.yl[mif1,0] + -1/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,0] * self.yedomega4[mif2,0] * self.yedomega4bar[0,mif3] * self.yl[mif1,0] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.ydbar[mif4,0] * self.yedomega4[mif2,0] * self.yedomega4bar[0,mif3] * self.yl[mif1,0] + -7/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,1] * self.yedomega4[mif2,1] * self.yedomega4bar[0,mif3] * self.yl[mif1,0] + -1/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,1] * self.yedomega4[mif2,1] * self.yedomega4bar[0,mif3] * self.yl[mif1,0] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.ydbar[mif4,1] * self.yedomega4[mif2,1] * self.yedomega4bar[0,mif3] * self.yl[mif1,0] + -7/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,2] * self.yedomega4[mif2,2] * self.yedomega4bar[0,mif3] * self.yl[mif1,0] + -1/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,2] * self.yedomega4[mif2,2] * self.yedomega4bar[0,mif3] * self.yl[mif1,0] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.ydbar[mif4,2] * self.yedomega4[mif2,2] * self.yedomega4bar[0,mif3] * self.yl[mif1,0] + -7/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,0] * self.yedomega4[mif2,0] * self.yedomega4bar[1,mif3] * self.yl[mif1,1] + -1/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,0] * self.yedomega4[mif2,0] * self.yedomega4bar[1,mif3] * self.yl[mif1,1] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.ydbar[mif4,0] * self.yedomega4[mif2,0] * self.yedomega4bar[1,mif3] * self.yl[mif1,1] + -7/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,1] * self.yedomega4[mif2,1] * self.yedomega4bar[1,mif3] * self.yl[mif1,1] + -1/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,1] * self.yedomega4[mif2,1] * self.yedomega4bar[1,mif3] * self.yl[mif1,1] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.ydbar[mif4,1] * self.yedomega4[mif2,1] * self.yedomega4bar[1,mif3] * self.yl[mif1,1] + -7/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,2] * self.yedomega4[mif2,2] * self.yedomega4bar[1,mif3] * self.yl[mif1,1] + -1/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,2] * self.yedomega4[mif2,2] * self.yedomega4bar[1,mif3] * self.yl[mif1,1] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.ydbar[mif4,2] * self.yedomega4[mif2,2] * self.yedomega4bar[1,mif3] * self.yl[mif1,1] + -7/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,0] * self.yedomega4[mif2,0] * self.yedomega4bar[2,mif3] * self.yl[mif1,2] + -1/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,0] * self.yedomega4[mif2,0] * self.yedomega4bar[2,mif3] * self.yl[mif1,2] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.ydbar[mif4,0] * self.yedomega4[mif2,0] * self.yedomega4bar[2,mif3] * self.yl[mif1,2] + -7/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,1] * self.yedomega4[mif2,1] * self.yedomega4bar[2,mif3] * self.yl[mif1,2] + -1/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,1] * self.yedomega4[mif2,1] * self.yedomega4bar[2,mif3] * self.yl[mif1,2] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.ydbar[mif4,1] * self.yedomega4[mif2,1] * self.yedomega4bar[2,mif3] * self.yl[mif1,2] + -7/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,2] * self.yedomega4[mif2,2] * self.yedomega4bar[2,mif3] * self.yl[mif1,2] + -1/32 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,2] * self.yedomega4[mif2,2] * self.yedomega4bar[2,mif3] * self.yl[mif1,2] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.ydbar[mif4,2] * self.yedomega4[mif2,2] * self.yedomega4bar[2,mif3] * self.yl[mif1,2])

    def alphaOlequ1(self, mif1,mif2,mif3,mif4):
        return 0

    def alphaOlequ3(self, mif1,mif2,mif3,mif4):
        return 0

    def alphaOll(self, mif1,mif2,mif3,mif4):
        return -1/720 * (self.g1)**(4) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4)

    def alphaOlq1(self, mif1,mif2,mif3,mif4):
        return 1/1080 * (self.g1)**(4) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4)

    def alphaOlq3(self, mif1,mif2,mif3,mif4):
        return 0

    def alphaOlu(self, mif1,mif2,mif3,mif4):
        return (1/270 * (self.g1)**(4) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -5/54 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yuuomega4[0,mif3] * self.yuuomega4bar[0,mif4] + -1/18 * (self.g1)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yuuomega4[0,mif3] * self.yuuomega4bar[0,mif4] + 1/18 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[0,mif3] * self.yuuomega4bar[0,mif4] + -5/54 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yuuomega4[1,mif3] * self.yuuomega4bar[1,mif4] + -1/18 * (self.g1)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yuuomega4[1,mif3] * self.yuuomega4bar[1,mif4] + 1/18 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[1,mif3] * self.yuuomega4bar[1,mif4] + -5/54 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yuuomega4[2,mif3] * self.yuuomega4bar[2,mif4] + -1/18 * (self.g1)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yuuomega4[2,mif3] * self.yuuomega4bar[2,mif4] + 1/18 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[2,mif3] * self.yuuomega4bar[2,mif4] + -1/36 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yuuomega4[mif3,0] * self.yuuomega4bar[mif4,0] + -1/36 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yuuomega4[mif3,1] * self.yuuomega4bar[mif4,1] + -1/36 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yuuomega4[mif3,2] * self.yuuomega4bar[mif4,2])

    def alphaOqd1(self, mif1,mif2,mif3,mif4):
        return (1/1620 * (self.g1)**(4) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -7/1296 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yedomega4[0,mif4] * self.yedomega4bar[0,mif3] + -1/288 * (self.g1)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yedomega4[0,mif4] * self.yedomega4bar[0,mif3] + 1/288 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[0,mif4] * self.yedomega4bar[0,mif3] + -7/1296 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yedomega4[1,mif4] * self.yedomega4bar[1,mif3] + -1/288 * (self.g1)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yedomega4[1,mif4] * self.yedomega4bar[1,mif3] + 1/288 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[1,mif4] * self.yedomega4bar[1,mif3] + -7/1296 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yedomega4[2,mif4] * self.yedomega4bar[2,mif3] + -1/288 * (self.g1)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yedomega4[2,mif4] * self.yedomega4bar[2,mif3] + 1/288 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[2,mif4] * self.yedomega4bar[2,mif3])

    def alphaOqd8(self, mif1,mif2,mif3,mif4):
        return (-1/960 * (self.g3)**(4) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 1/288 * (self.g3)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yedomega4[0,mif4] * self.yedomega4bar[0,mif3] + 1/288 * (self.g3)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yedomega4[1,mif4] * self.yedomega4bar[1,mif3] + 1/288 * (self.g3)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yedomega4[2,mif4] * self.yedomega4bar[2,mif3])

    def alphaOqe(self, mif1,mif2,mif3,mif4):
        return (1/540 * (self.g1)**(4) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -1/144 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yedomega4[mif4,0] * self.yedomega4bar[mif3,0] + -1/288 * (self.g1)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yedomega4[mif4,0] * self.yedomega4bar[mif3,0] + 1/288 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[mif4,0] * self.yedomega4bar[mif3,0] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,0] * self.yedomega4[mif4,0] * self.yedomega4bar[mif3,0] + -1/64 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,0] * self.yedomega4[mif4,0] * self.yedomega4bar[mif3,0] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] * self.ydbar[mif2,0] * self.yedomega4[mif4,0] * self.yedomega4bar[mif3,0] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,1] * self.yedomega4[mif4,1] * self.yedomega4bar[mif3,0] + -1/64 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,1] * self.yedomega4[mif4,1] * self.yedomega4bar[mif3,0] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] * self.ydbar[mif2,1] * self.yedomega4[mif4,1] * self.yedomega4bar[mif3,0] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,2] * self.yedomega4[mif4,2] * self.yedomega4bar[mif3,0] + -1/64 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,2] * self.yedomega4[mif4,2] * self.yedomega4bar[mif3,0] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] * self.ydbar[mif2,2] * self.yedomega4[mif4,2] * self.yedomega4bar[mif3,0] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,0] * self.yedomega4[mif4,0] * self.yedomega4bar[mif3,1] + -1/64 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,0] * self.yedomega4[mif4,0] * self.yedomega4bar[mif3,1] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] * self.ydbar[mif2,0] * self.yedomega4[mif4,0] * self.yedomega4bar[mif3,1] + -1/144 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yedomega4[mif4,1] * self.yedomega4bar[mif3,1] + -1/288 * (self.g1)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yedomega4[mif4,1] * self.yedomega4bar[mif3,1] + 1/288 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[mif4,1] * self.yedomega4bar[mif3,1] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,1] * self.yedomega4[mif4,1] * self.yedomega4bar[mif3,1] + -1/64 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,1] * self.yedomega4[mif4,1] * self.yedomega4bar[mif3,1] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] * self.ydbar[mif2,1] * self.yedomega4[mif4,1] * self.yedomega4bar[mif3,1] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,2] * self.yedomega4[mif4,2] * self.yedomega4bar[mif3,1] + -1/64 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,2] * self.yedomega4[mif4,2] * self.yedomega4bar[mif3,1] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] * self.ydbar[mif2,2] * self.yedomega4[mif4,2] * self.yedomega4bar[mif3,1] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,0] * self.yedomega4[mif4,0] * self.yedomega4bar[mif3,2] + -1/64 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,0] * self.yedomega4[mif4,0] * self.yedomega4bar[mif3,2] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] * self.ydbar[mif2,0] * self.yedomega4[mif4,0] * self.yedomega4bar[mif3,2] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,1] * self.yedomega4[mif4,1] * self.yedomega4bar[mif3,2] + -1/64 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,1] * self.yedomega4[mif4,1] * self.yedomega4bar[mif3,2] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] * self.ydbar[mif2,1] * self.yedomega4[mif4,1] * self.yedomega4bar[mif3,2] + -1/144 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yedomega4[mif4,2] * self.yedomega4bar[mif3,2] + -1/288 * (self.g1)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yedomega4[mif4,2] * self.yedomega4bar[mif3,2] + 1/288 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[mif4,2] * self.yedomega4bar[mif3,2] + -1/128 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,2] * self.yedomega4[mif4,2] * self.yedomega4bar[mif3,2] + -1/64 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,2] * self.yedomega4[mif4,2] * self.yedomega4bar[mif3,2] + 1/64 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] * self.ydbar[mif2,2] * self.yedomega4[mif4,2] * self.yedomega4bar[mif3,2])

    def alphaOqq1(self, mif1,mif2,mif3,mif4):
        return (-1/7680 * (self.g3)**(4) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.kronecker_delta(mif2,mif3) + -1/6480 * (self.g1)**(4) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 1/11520 * (self.g3)**(4) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4))

    def alphaOqq3(self, mif1,mif2,mif3,mif4):
        return -1/7680 * (self.g3)**(4) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.kronecker_delta(mif2,mif3)

    def alphaOqu1(self, mif1,mif2,mif3,mif4):
        return (-1/810 * (self.g1)**(4) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 5/162 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yuuomega4[0,mif3] * self.yuuomega4bar[0,mif4] + 1/54 * (self.g1)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yuuomega4[0,mif3] * self.yuuomega4bar[0,mif4] + -1/54 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[0,mif3] * self.yuuomega4bar[0,mif4] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yubar[mif2,0] * self.yuuomega4[0,mif3] * self.yuuomega4bar[0,mif4] + -1/24 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yubar[mif2,0] * self.yuuomega4[0,mif3] * self.yuuomega4bar[0,mif4] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yu[mif1,0] * self.yubar[mif2,0] * self.yuuomega4[0,mif3] * self.yuuomega4bar[0,mif4] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yubar[mif2,0] * self.yuuomega4[1,mif3] * self.yuuomega4bar[0,mif4] + -1/24 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yubar[mif2,0] * self.yuuomega4[1,mif3] * self.yuuomega4bar[0,mif4] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yu[mif1,1] * self.yubar[mif2,0] * self.yuuomega4[1,mif3] * self.yuuomega4bar[0,mif4] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yubar[mif2,0] * self.yuuomega4[2,mif3] * self.yuuomega4bar[0,mif4] + -1/24 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yubar[mif2,0] * self.yuuomega4[2,mif3] * self.yuuomega4bar[0,mif4] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yu[mif1,2] * self.yubar[mif2,0] * self.yuuomega4[2,mif3] * self.yuuomega4bar[0,mif4] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yubar[mif2,0] * self.yuuomega4[mif3,0] * self.yuuomega4bar[0,mif4] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yubar[mif2,0] * self.yuuomega4[mif3,1] * self.yuuomega4bar[0,mif4] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yubar[mif2,0] * self.yuuomega4[mif3,2] * self.yuuomega4bar[0,mif4] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yubar[mif2,1] * self.yuuomega4[0,mif3] * self.yuuomega4bar[1,mif4] + -1/24 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yubar[mif2,1] * self.yuuomega4[0,mif3] * self.yuuomega4bar[1,mif4] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yu[mif1,0] * self.yubar[mif2,1] * self.yuuomega4[0,mif3] * self.yuuomega4bar[1,mif4] + 5/162 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yuuomega4[1,mif3] * self.yuuomega4bar[1,mif4] + 1/54 * (self.g1)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yuuomega4[1,mif3] * self.yuuomega4bar[1,mif4] + -1/54 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[1,mif3] * self.yuuomega4bar[1,mif4] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yubar[mif2,1] * self.yuuomega4[1,mif3] * self.yuuomega4bar[1,mif4] + -1/24 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yubar[mif2,1] * self.yuuomega4[1,mif3] * self.yuuomega4bar[1,mif4] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yu[mif1,1] * self.yubar[mif2,1] * self.yuuomega4[1,mif3] * self.yuuomega4bar[1,mif4] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yubar[mif2,1] * self.yuuomega4[2,mif3] * self.yuuomega4bar[1,mif4] + -1/24 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yubar[mif2,1] * self.yuuomega4[2,mif3] * self.yuuomega4bar[1,mif4] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yu[mif1,2] * self.yubar[mif2,1] * self.yuuomega4[2,mif3] * self.yuuomega4bar[1,mif4] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yubar[mif2,1] * self.yuuomega4[mif3,0] * self.yuuomega4bar[1,mif4] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yubar[mif2,1] * self.yuuomega4[mif3,1] * self.yuuomega4bar[1,mif4] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yubar[mif2,1] * self.yuuomega4[mif3,2] * self.yuuomega4bar[1,mif4] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yubar[mif2,2] * self.yuuomega4[0,mif3] * self.yuuomega4bar[2,mif4] + -1/24 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yubar[mif2,2] * self.yuuomega4[0,mif3] * self.yuuomega4bar[2,mif4] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yu[mif1,0] * self.yubar[mif2,2] * self.yuuomega4[0,mif3] * self.yuuomega4bar[2,mif4] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yubar[mif2,2] * self.yuuomega4[1,mif3] * self.yuuomega4bar[2,mif4] + -1/24 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yubar[mif2,2] * self.yuuomega4[1,mif3] * self.yuuomega4bar[2,mif4] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yu[mif1,1] * self.yubar[mif2,2] * self.yuuomega4[1,mif3] * self.yuuomega4bar[2,mif4] + 5/162 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yuuomega4[2,mif3] * self.yuuomega4bar[2,mif4] + 1/54 * (self.g1)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yuuomega4[2,mif3] * self.yuuomega4bar[2,mif4] + -1/54 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[2,mif3] * self.yuuomega4bar[2,mif4] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yubar[mif2,2] * self.yuuomega4[2,mif3] * self.yuuomega4bar[2,mif4] + -1/24 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yubar[mif2,2] * self.yuuomega4[2,mif3] * self.yuuomega4bar[2,mif4] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yu[mif1,2] * self.yubar[mif2,2] * self.yuuomega4[2,mif3] * self.yuuomega4bar[2,mif4] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yubar[mif2,2] * self.yuuomega4[mif3,0] * self.yuuomega4bar[2,mif4] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yubar[mif2,2] * self.yuuomega4[mif3,1] * self.yuuomega4bar[2,mif4] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yubar[mif2,2] * self.yuuomega4[mif3,2] * self.yuuomega4bar[2,mif4] + 1/108 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yuuomega4[mif3,0] * self.yuuomega4bar[mif4,0] + -1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yubar[mif2,0] * self.yuuomega4[mif3,0] * self.yuuomega4bar[mif4,0] + -1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yubar[mif2,0] * self.yuuomega4[mif3,1] * self.yuuomega4bar[mif4,0] + -1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yubar[mif2,0] * self.yuuomega4[mif3,2] * self.yuuomega4bar[mif4,0] + -1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yubar[mif2,1] * self.yuuomega4[mif3,0] * self.yuuomega4bar[mif4,1] + 1/108 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yuuomega4[mif3,1] * self.yuuomega4bar[mif4,1] + -1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yubar[mif2,1] * self.yuuomega4[mif3,1] * self.yuuomega4bar[mif4,1] + -1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yubar[mif2,1] * self.yuuomega4[mif3,2] * self.yuuomega4bar[mif4,1] + -1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yubar[mif2,2] * self.yuuomega4[mif3,0] * self.yuuomega4bar[mif4,2] + -1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yubar[mif2,2] * self.yuuomega4[mif3,1] * self.yuuomega4bar[mif4,2] + 1/108 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yuuomega4[mif3,2] * self.yuuomega4bar[mif4,2] + -1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yubar[mif2,2] * self.yuuomega4[mif3,2] * self.yuuomega4bar[mif4,2])

    def alphaOqu8(self, mif1,mif2,mif3,mif4):
        return (-1/960 * (self.g3)**(4) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -7/72 * (self.g3)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yuuomega4[0,mif3] * self.yuuomega4bar[0,mif4] + -1/12 * (self.g3)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yuuomega4[0,mif3] * self.yuuomega4bar[0,mif4] + 1/12 * (self.g3)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[0,mif3] * self.yuuomega4bar[0,mif4] + 3/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yubar[mif2,0] * self.yuuomega4[0,mif3] * self.yuuomega4bar[0,mif4] + 1/8 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yubar[mif2,0] * self.yuuomega4[0,mif3] * self.yuuomega4bar[0,mif4] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yu[mif1,0] * self.yubar[mif2,0] * self.yuuomega4[0,mif3] * self.yuuomega4bar[0,mif4] + 3/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yubar[mif2,0] * self.yuuomega4[1,mif3] * self.yuuomega4bar[0,mif4] + 1/8 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yubar[mif2,0] * self.yuuomega4[1,mif3] * self.yuuomega4bar[0,mif4] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yu[mif1,1] * self.yubar[mif2,0] * self.yuuomega4[1,mif3] * self.yuuomega4bar[0,mif4] + 3/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yubar[mif2,0] * self.yuuomega4[2,mif3] * self.yuuomega4bar[0,mif4] + 1/8 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yubar[mif2,0] * self.yuuomega4[2,mif3] * self.yuuomega4bar[0,mif4] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yu[mif1,2] * self.yubar[mif2,0] * self.yuuomega4[2,mif3] * self.yuuomega4bar[0,mif4] + 3/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yubar[mif2,1] * self.yuuomega4[0,mif3] * self.yuuomega4bar[1,mif4] + 1/8 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yubar[mif2,1] * self.yuuomega4[0,mif3] * self.yuuomega4bar[1,mif4] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yu[mif1,0] * self.yubar[mif2,1] * self.yuuomega4[0,mif3] * self.yuuomega4bar[1,mif4] + -7/72 * (self.g3)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yuuomega4[1,mif3] * self.yuuomega4bar[1,mif4] + -1/12 * (self.g3)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yuuomega4[1,mif3] * self.yuuomega4bar[1,mif4] + 1/12 * (self.g3)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[1,mif3] * self.yuuomega4bar[1,mif4] + 3/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yubar[mif2,1] * self.yuuomega4[1,mif3] * self.yuuomega4bar[1,mif4] + 1/8 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yubar[mif2,1] * self.yuuomega4[1,mif3] * self.yuuomega4bar[1,mif4] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yu[mif1,1] * self.yubar[mif2,1] * self.yuuomega4[1,mif3] * self.yuuomega4bar[1,mif4] + 3/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yubar[mif2,1] * self.yuuomega4[2,mif3] * self.yuuomega4bar[1,mif4] + 1/8 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yubar[mif2,1] * self.yuuomega4[2,mif3] * self.yuuomega4bar[1,mif4] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yu[mif1,2] * self.yubar[mif2,1] * self.yuuomega4[2,mif3] * self.yuuomega4bar[1,mif4] + 3/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yubar[mif2,2] * self.yuuomega4[0,mif3] * self.yuuomega4bar[2,mif4] + 1/8 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yubar[mif2,2] * self.yuuomega4[0,mif3] * self.yuuomega4bar[2,mif4] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yu[mif1,0] * self.yubar[mif2,2] * self.yuuomega4[0,mif3] * self.yuuomega4bar[2,mif4] + 3/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yubar[mif2,2] * self.yuuomega4[1,mif3] * self.yuuomega4bar[2,mif4] + 1/8 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yubar[mif2,2] * self.yuuomega4[1,mif3] * self.yuuomega4bar[2,mif4] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yu[mif1,1] * self.yubar[mif2,2] * self.yuuomega4[1,mif3] * self.yuuomega4bar[2,mif4] + -7/72 * (self.g3)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yuuomega4[2,mif3] * self.yuuomega4bar[2,mif4] + -1/12 * (self.g3)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yuuomega4[2,mif3] * self.yuuomega4bar[2,mif4] + 1/12 * (self.g3)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[2,mif3] * self.yuuomega4bar[2,mif4] + 3/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yubar[mif2,2] * self.yuuomega4[2,mif3] * self.yuuomega4bar[2,mif4] + 1/8 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yubar[mif2,2] * self.yuuomega4[2,mif3] * self.yuuomega4bar[2,mif4] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yu[mif1,2] * self.yubar[mif2,2] * self.yuuomega4[2,mif3] * self.yuuomega4bar[2,mif4] + 1/12 * (self.g3)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yuuomega4[mif3,0] * self.yuuomega4bar[mif4,0] + -1/4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yubar[mif2,0] * self.yuuomega4[mif3,0] * self.yuuomega4bar[mif4,0] + -1/4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yubar[mif2,0] * self.yuuomega4[mif3,1] * self.yuuomega4bar[mif4,0] + -1/4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yubar[mif2,0] * self.yuuomega4[mif3,2] * self.yuuomega4bar[mif4,0] + -1/4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yubar[mif2,1] * self.yuuomega4[mif3,0] * self.yuuomega4bar[mif4,1] + 1/12 * (self.g3)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yuuomega4[mif3,1] * self.yuuomega4bar[mif4,1] + -1/4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yubar[mif2,1] * self.yuuomega4[mif3,1] * self.yuuomega4bar[mif4,1] + -1/4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yubar[mif2,1] * self.yuuomega4[mif3,2] * self.yuuomega4bar[mif4,1] + -1/4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yubar[mif2,2] * self.yuuomega4[mif3,0] * self.yuuomega4bar[mif4,2] + -1/4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yubar[mif2,2] * self.yuuomega4[mif3,1] * self.yuuomega4bar[mif4,2] + 1/12 * (self.g3)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yuuomega4[mif3,2] * self.yuuomega4bar[mif4,2] + -1/4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yubar[mif2,2] * self.yuuomega4[mif3,2] * self.yuuomega4bar[mif4,2])

    def alphaOquqd1(self, mif1,mif2,mif3,mif4):
        return 0

    def alphaOquqd8(self, mif1,mif2,mif3,mif4):
        return 0

    def alphaOuB(self, mif1,mif2):
        return (-1/18 * self.g1 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yuuomega4[0,0] * self.yuuomega4bar[0,mif2] + -1/18 * self.g1 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yuuomega4[0,1] * self.yuuomega4bar[0,mif2] + -1/18 * self.g1 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yuuomega4[0,2] * self.yuuomega4bar[0,mif2] + -1/18 * self.g1 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yuuomega4[1,0] * self.yuuomega4bar[1,mif2] + -1/18 * self.g1 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yuuomega4[1,1] * self.yuuomega4bar[1,mif2] + -1/18 * self.g1 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yuuomega4[1,2] * self.yuuomega4bar[1,mif2] + -1/18 * self.g1 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yuuomega4[2,0] * self.yuuomega4bar[2,mif2] + -1/18 * self.g1 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yuuomega4[2,1] * self.yuuomega4bar[2,mif2] + -1/18 * self.g1 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yuuomega4[2,2] * self.yuuomega4bar[2,mif2])

    def alphaOud1(self, mif1,mif2,mif3,mif4):
        return (1/405 * (self.g1)**(4) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -7/324 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yedomega4[0,mif4] * self.yedomega4bar[0,mif3] + -1/72 * (self.g1)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yedomega4[0,mif4] * self.yedomega4bar[0,mif3] + 1/72 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[0,mif4] * self.yedomega4bar[0,mif3] + -7/324 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yedomega4[1,mif4] * self.yedomega4bar[1,mif3] + -1/72 * (self.g1)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yedomega4[1,mif4] * self.yedomega4bar[1,mif3] + 1/72 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[1,mif4] * self.yedomega4bar[1,mif3] + -7/324 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yedomega4[2,mif4] * self.yedomega4bar[2,mif3] + -1/72 * (self.g1)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yedomega4[2,mif4] * self.yedomega4bar[2,mif3] + 1/72 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yedomega4[2,mif4] * self.yedomega4bar[2,mif3] + -13/162 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yuuomega4[0,mif1] * self.yuuomega4bar[0,mif2] + -1/27 * (self.g1)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yuuomega4[0,mif1] * self.yuuomega4bar[0,mif2] + 1/27 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[0,mif1] * self.yuuomega4bar[0,mif2] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,mif4] * self.yedomega4bar[0,mif3] * self.yuuomega4[0,mif1] * self.yuuomega4bar[0,mif2] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,mif4] * self.yedomega4bar[1,mif3] * self.yuuomega4[0,mif1] * self.yuuomega4bar[0,mif2] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,mif4] * self.yedomega4bar[2,mif3] * self.yuuomega4[0,mif1] * self.yuuomega4bar[0,mif2] + -13/162 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yuuomega4[1,mif1] * self.yuuomega4bar[1,mif2] + -1/27 * (self.g1)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yuuomega4[1,mif1] * self.yuuomega4bar[1,mif2] + 1/27 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[1,mif1] * self.yuuomega4bar[1,mif2] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,mif4] * self.yedomega4bar[0,mif3] * self.yuuomega4[1,mif1] * self.yuuomega4bar[1,mif2] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,mif4] * self.yedomega4bar[1,mif3] * self.yuuomega4[1,mif1] * self.yuuomega4bar[1,mif2] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,mif4] * self.yedomega4bar[2,mif3] * self.yuuomega4[1,mif1] * self.yuuomega4bar[1,mif2] + -13/162 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yuuomega4[2,mif1] * self.yuuomega4bar[2,mif2] + -1/27 * (self.g1)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yuuomega4[2,mif1] * self.yuuomega4bar[2,mif2] + 1/27 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[2,mif1] * self.yuuomega4bar[2,mif2] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,mif4] * self.yedomega4bar[0,mif3] * self.yuuomega4[2,mif1] * self.yuuomega4bar[2,mif2] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,mif4] * self.yedomega4bar[1,mif3] * self.yuuomega4[2,mif1] * self.yuuomega4bar[2,mif2] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,mif4] * self.yedomega4bar[2,mif3] * self.yuuomega4[2,mif1] * self.yuuomega4bar[2,mif2])

    def alphaOud8(self, mif1,mif2,mif3,mif4):
        return (-1/960 * (self.g3)**(4) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 1/288 * (self.g3)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yedomega4[0,mif4] * self.yedomega4bar[0,mif3] + 1/288 * (self.g3)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yedomega4[1,mif4] * self.yedomega4bar[1,mif3] + 1/288 * (self.g3)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yedomega4[2,mif4] * self.yedomega4bar[2,mif3] + -1/72 * (self.g3)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yuuomega4[0,mif1] * self.yuuomega4bar[0,mif2] + -1/12 * (self.g3)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yuuomega4[0,mif1] * self.yuuomega4bar[0,mif2] + 1/12 * (self.g3)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[0,mif1] * self.yuuomega4bar[0,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,mif4] * self.yedomega4bar[0,mif3] * self.yuuomega4[0,mif1] * self.yuuomega4bar[0,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,mif4] * self.yedomega4bar[1,mif3] * self.yuuomega4[0,mif1] * self.yuuomega4bar[0,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,mif4] * self.yedomega4bar[2,mif3] * self.yuuomega4[0,mif1] * self.yuuomega4bar[0,mif2] + -1/72 * (self.g3)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yuuomega4[1,mif1] * self.yuuomega4bar[1,mif2] + -1/12 * (self.g3)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yuuomega4[1,mif1] * self.yuuomega4bar[1,mif2] + 1/12 * (self.g3)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[1,mif1] * self.yuuomega4bar[1,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,mif4] * self.yedomega4bar[0,mif3] * self.yuuomega4[1,mif1] * self.yuuomega4bar[1,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,mif4] * self.yedomega4bar[1,mif3] * self.yuuomega4[1,mif1] * self.yuuomega4bar[1,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,mif4] * self.yedomega4bar[2,mif3] * self.yuuomega4[1,mif1] * self.yuuomega4bar[1,mif2] + -1/72 * (self.g3)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yuuomega4[2,mif1] * self.yuuomega4bar[2,mif2] + -1/12 * (self.g3)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yuuomega4[2,mif1] * self.yuuomega4bar[2,mif2] + 1/12 * (self.g3)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[2,mif1] * self.yuuomega4bar[2,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[0,mif4] * self.yedomega4bar[0,mif3] * self.yuuomega4[2,mif1] * self.yuuomega4bar[2,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[1,mif4] * self.yedomega4bar[1,mif3] * self.yuuomega4[2,mif1] * self.yuuomega4bar[2,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yedomega4[2,mif4] * self.yedomega4bar[2,mif3] * self.yuuomega4[2,mif1] * self.yuuomega4bar[2,mif2])

    def alphaOuG(self, mif1,mif2):
        return (1/96 * self.g3 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yuuomega4[0,0] * self.yuuomega4bar[0,mif2] + 1/96 * self.g3 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yuuomega4[0,1] * self.yuuomega4bar[0,mif2] + 1/96 * self.g3 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yuuomega4[0,2] * self.yuuomega4bar[0,mif2] + 1/96 * self.g3 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yuuomega4[1,0] * self.yuuomega4bar[1,mif2] + 1/96 * self.g3 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yuuomega4[1,1] * self.yuuomega4bar[1,mif2] + 1/96 * self.g3 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yuuomega4[1,2] * self.yuuomega4bar[1,mif2] + 1/96 * self.g3 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yuuomega4[2,0] * self.yuuomega4bar[2,mif2] + 1/96 * self.g3 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yuuomega4[2,1] * self.yuuomega4bar[2,mif2] + 1/96 * self.g3 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yuuomega4[2,2] * self.yuuomega4bar[2,mif2])

    def alphaOuH(self, mif1,mif2):
        return (1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[0,0] * self.yuuomega4[0,0] * self.yuuomega4bar[0,0] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[1,0] * self.yuuomega4[0,0] * self.yuuomega4bar[0,0] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[2,0] * self.yuuomega4[0,0] * self.yuuomega4bar[0,0] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[0,0] * self.yuuomega4[0,1] * self.yuuomega4bar[0,0] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[1,0] * self.yuuomega4[0,1] * self.yuuomega4bar[0,0] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[2,0] * self.yuuomega4[0,1] * self.yuuomega4bar[0,0] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[0,0] * self.yuuomega4[0,2] * self.yuuomega4bar[0,0] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[1,0] * self.yuuomega4[0,2] * self.yuuomega4bar[0,0] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[2,0] * self.yuuomega4[0,2] * self.yuuomega4bar[0,0] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[0,1] * self.yuuomega4[0,0] * self.yuuomega4bar[0,1] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[1,1] * self.yuuomega4[0,0] * self.yuuomega4bar[0,1] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[2,1] * self.yuuomega4[0,0] * self.yuuomega4bar[0,1] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[0,1] * self.yuuomega4[0,1] * self.yuuomega4bar[0,1] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[1,1] * self.yuuomega4[0,1] * self.yuuomega4bar[0,1] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[2,1] * self.yuuomega4[0,1] * self.yuuomega4bar[0,1] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[0,1] * self.yuuomega4[0,2] * self.yuuomega4bar[0,1] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[1,1] * self.yuuomega4[0,2] * self.yuuomega4bar[0,1] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[2,1] * self.yuuomega4[0,2] * self.yuuomega4bar[0,1] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[0,2] * self.yuuomega4[0,0] * self.yuuomega4bar[0,2] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[1,2] * self.yuuomega4[0,0] * self.yuuomega4bar[0,2] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[2,2] * self.yuuomega4[0,0] * self.yuuomega4bar[0,2] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[0,2] * self.yuuomega4[0,1] * self.yuuomega4bar[0,2] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[1,2] * self.yuuomega4[0,1] * self.yuuomega4bar[0,2] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[2,2] * self.yuuomega4[0,1] * self.yuuomega4bar[0,2] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[0,2] * self.yuuomega4[0,2] * self.yuuomega4bar[0,2] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[1,2] * self.yuuomega4[0,2] * self.yuuomega4bar[0,2] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[2,2] * self.yuuomega4[0,2] * self.yuuomega4bar[0,2] + 1/8 * self.lambdaHatomega4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yuuomega4[0,0] * self.yuuomega4bar[0,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yu[mif1,0] * self.yubar[0,0] * self.yuuomega4[0,0] * self.yuuomega4bar[0,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yu[mif1,0] * self.yubar[1,0] * self.yuuomega4[0,0] * self.yuuomega4bar[0,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yu[mif1,0] * self.yubar[2,0] * self.yuuomega4[0,0] * self.yuuomega4bar[0,mif2] + 1/8 * self.lambdaHatomega4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yuuomega4[0,1] * self.yuuomega4bar[0,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yu[mif1,1] * self.yubar[0,0] * self.yuuomega4[0,1] * self.yuuomega4bar[0,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yu[mif1,1] * self.yubar[1,0] * self.yuuomega4[0,1] * self.yuuomega4bar[0,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yu[mif1,1] * self.yubar[2,0] * self.yuuomega4[0,1] * self.yuuomega4bar[0,mif2] + 1/8 * self.lambdaHatomega4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yuuomega4[0,2] * self.yuuomega4bar[0,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yu[mif1,2] * self.yubar[0,0] * self.yuuomega4[0,2] * self.yuuomega4bar[0,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yu[mif1,2] * self.yubar[1,0] * self.yuuomega4[0,2] * self.yuuomega4bar[0,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yu[mif1,2] * self.yubar[2,0] * self.yuuomega4[0,2] * self.yuuomega4bar[0,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yu[mif1,0] * self.yubar[0,0] * self.yuuomega4[1,0] * self.yuuomega4bar[0,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yu[mif1,0] * self.yubar[1,0] * self.yuuomega4[1,0] * self.yuuomega4bar[0,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yu[mif1,0] * self.yubar[2,0] * self.yuuomega4[1,0] * self.yuuomega4bar[0,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yu[mif1,1] * self.yubar[0,0] * self.yuuomega4[1,1] * self.yuuomega4bar[0,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yu[mif1,1] * self.yubar[1,0] * self.yuuomega4[1,1] * self.yuuomega4bar[0,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yu[mif1,1] * self.yubar[2,0] * self.yuuomega4[1,1] * self.yuuomega4bar[0,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yu[mif1,2] * self.yubar[0,0] * self.yuuomega4[1,2] * self.yuuomega4bar[0,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yu[mif1,2] * self.yubar[1,0] * self.yuuomega4[1,2] * self.yuuomega4bar[0,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yu[mif1,2] * self.yubar[2,0] * self.yuuomega4[1,2] * self.yuuomega4bar[0,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yu[mif1,0] * self.yubar[0,0] * self.yuuomega4[2,0] * self.yuuomega4bar[0,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yu[mif1,0] * self.yubar[1,0] * self.yuuomega4[2,0] * self.yuuomega4bar[0,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yu[mif1,0] * self.yubar[2,0] * self.yuuomega4[2,0] * self.yuuomega4bar[0,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yu[mif1,1] * self.yubar[0,0] * self.yuuomega4[2,1] * self.yuuomega4bar[0,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yu[mif1,1] * self.yubar[1,0] * self.yuuomega4[2,1] * self.yuuomega4bar[0,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yu[mif1,1] * self.yubar[2,0] * self.yuuomega4[2,1] * self.yuuomega4bar[0,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yu[mif1,2] * self.yubar[0,0] * self.yuuomega4[2,2] * self.yuuomega4bar[0,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yu[mif1,2] * self.yubar[1,0] * self.yuuomega4[2,2] * self.yuuomega4bar[0,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yu[mif1,2] * self.yubar[2,0] * self.yuuomega4[2,2] * self.yuuomega4bar[0,mif2] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[0,0] * self.yuuomega4[1,0] * self.yuuomega4bar[1,0] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[1,0] * self.yuuomega4[1,0] * self.yuuomega4bar[1,0] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[2,0] * self.yuuomega4[1,0] * self.yuuomega4bar[1,0] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[0,0] * self.yuuomega4[1,1] * self.yuuomega4bar[1,0] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[1,0] * self.yuuomega4[1,1] * self.yuuomega4bar[1,0] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[2,0] * self.yuuomega4[1,1] * self.yuuomega4bar[1,0] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[0,0] * self.yuuomega4[1,2] * self.yuuomega4bar[1,0] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[1,0] * self.yuuomega4[1,2] * self.yuuomega4bar[1,0] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[2,0] * self.yuuomega4[1,2] * self.yuuomega4bar[1,0] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[0,1] * self.yuuomega4[1,0] * self.yuuomega4bar[1,1] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[1,1] * self.yuuomega4[1,0] * self.yuuomega4bar[1,1] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[2,1] * self.yuuomega4[1,0] * self.yuuomega4bar[1,1] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[0,1] * self.yuuomega4[1,1] * self.yuuomega4bar[1,1] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[1,1] * self.yuuomega4[1,1] * self.yuuomega4bar[1,1] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[2,1] * self.yuuomega4[1,1] * self.yuuomega4bar[1,1] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[0,1] * self.yuuomega4[1,2] * self.yuuomega4bar[1,1] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[1,1] * self.yuuomega4[1,2] * self.yuuomega4bar[1,1] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[2,1] * self.yuuomega4[1,2] * self.yuuomega4bar[1,1] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[0,2] * self.yuuomega4[1,0] * self.yuuomega4bar[1,2] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[1,2] * self.yuuomega4[1,0] * self.yuuomega4bar[1,2] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[2,2] * self.yuuomega4[1,0] * self.yuuomega4bar[1,2] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[0,2] * self.yuuomega4[1,1] * self.yuuomega4bar[1,2] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[1,2] * self.yuuomega4[1,1] * self.yuuomega4bar[1,2] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[2,2] * self.yuuomega4[1,1] * self.yuuomega4bar[1,2] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[0,2] * self.yuuomega4[1,2] * self.yuuomega4bar[1,2] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[1,2] * self.yuuomega4[1,2] * self.yuuomega4bar[1,2] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[2,2] * self.yuuomega4[1,2] * self.yuuomega4bar[1,2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yu[mif1,0] * self.yubar[0,1] * self.yuuomega4[0,0] * self.yuuomega4bar[1,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yu[mif1,0] * self.yubar[1,1] * self.yuuomega4[0,0] * self.yuuomega4bar[1,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yu[mif1,0] * self.yubar[2,1] * self.yuuomega4[0,0] * self.yuuomega4bar[1,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yu[mif1,1] * self.yubar[0,1] * self.yuuomega4[0,1] * self.yuuomega4bar[1,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yu[mif1,1] * self.yubar[1,1] * self.yuuomega4[0,1] * self.yuuomega4bar[1,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yu[mif1,1] * self.yubar[2,1] * self.yuuomega4[0,1] * self.yuuomega4bar[1,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yu[mif1,2] * self.yubar[0,1] * self.yuuomega4[0,2] * self.yuuomega4bar[1,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yu[mif1,2] * self.yubar[1,1] * self.yuuomega4[0,2] * self.yuuomega4bar[1,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yu[mif1,2] * self.yubar[2,1] * self.yuuomega4[0,2] * self.yuuomega4bar[1,mif2] + 1/8 * self.lambdaHatomega4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yuuomega4[1,0] * self.yuuomega4bar[1,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yu[mif1,0] * self.yubar[0,1] * self.yuuomega4[1,0] * self.yuuomega4bar[1,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yu[mif1,0] * self.yubar[1,1] * self.yuuomega4[1,0] * self.yuuomega4bar[1,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yu[mif1,0] * self.yubar[2,1] * self.yuuomega4[1,0] * self.yuuomega4bar[1,mif2] + 1/8 * self.lambdaHatomega4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yuuomega4[1,1] * self.yuuomega4bar[1,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yu[mif1,1] * self.yubar[0,1] * self.yuuomega4[1,1] * self.yuuomega4bar[1,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yu[mif1,1] * self.yubar[1,1] * self.yuuomega4[1,1] * self.yuuomega4bar[1,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yu[mif1,1] * self.yubar[2,1] * self.yuuomega4[1,1] * self.yuuomega4bar[1,mif2] + 1/8 * self.lambdaHatomega4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yuuomega4[1,2] * self.yuuomega4bar[1,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yu[mif1,2] * self.yubar[0,1] * self.yuuomega4[1,2] * self.yuuomega4bar[1,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yu[mif1,2] * self.yubar[1,1] * self.yuuomega4[1,2] * self.yuuomega4bar[1,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yu[mif1,2] * self.yubar[2,1] * self.yuuomega4[1,2] * self.yuuomega4bar[1,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yu[mif1,0] * self.yubar[0,1] * self.yuuomega4[2,0] * self.yuuomega4bar[1,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yu[mif1,0] * self.yubar[1,1] * self.yuuomega4[2,0] * self.yuuomega4bar[1,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yu[mif1,0] * self.yubar[2,1] * self.yuuomega4[2,0] * self.yuuomega4bar[1,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yu[mif1,1] * self.yubar[0,1] * self.yuuomega4[2,1] * self.yuuomega4bar[1,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yu[mif1,1] * self.yubar[1,1] * self.yuuomega4[2,1] * self.yuuomega4bar[1,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yu[mif1,1] * self.yubar[2,1] * self.yuuomega4[2,1] * self.yuuomega4bar[1,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yu[mif1,2] * self.yubar[0,1] * self.yuuomega4[2,2] * self.yuuomega4bar[1,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yu[mif1,2] * self.yubar[1,1] * self.yuuomega4[2,2] * self.yuuomega4bar[1,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yu[mif1,2] * self.yubar[2,1] * self.yuuomega4[2,2] * self.yuuomega4bar[1,mif2] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[0,0] * self.yuuomega4[2,0] * self.yuuomega4bar[2,0] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[1,0] * self.yuuomega4[2,0] * self.yuuomega4bar[2,0] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[2,0] * self.yuuomega4[2,0] * self.yuuomega4bar[2,0] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[0,0] * self.yuuomega4[2,1] * self.yuuomega4bar[2,0] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[1,0] * self.yuuomega4[2,1] * self.yuuomega4bar[2,0] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[2,0] * self.yuuomega4[2,1] * self.yuuomega4bar[2,0] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[0,0] * self.yuuomega4[2,2] * self.yuuomega4bar[2,0] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[1,0] * self.yuuomega4[2,2] * self.yuuomega4bar[2,0] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[2,0] * self.yuuomega4[2,2] * self.yuuomega4bar[2,0] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[0,1] * self.yuuomega4[2,0] * self.yuuomega4bar[2,1] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[1,1] * self.yuuomega4[2,0] * self.yuuomega4bar[2,1] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[2,1] * self.yuuomega4[2,0] * self.yuuomega4bar[2,1] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[0,1] * self.yuuomega4[2,1] * self.yuuomega4bar[2,1] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[1,1] * self.yuuomega4[2,1] * self.yuuomega4bar[2,1] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[2,1] * self.yuuomega4[2,1] * self.yuuomega4bar[2,1] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[0,1] * self.yuuomega4[2,2] * self.yuuomega4bar[2,1] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[1,1] * self.yuuomega4[2,2] * self.yuuomega4bar[2,1] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[2,1] * self.yuuomega4[2,2] * self.yuuomega4bar[2,1] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[0,2] * self.yuuomega4[2,0] * self.yuuomega4bar[2,2] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[1,2] * self.yuuomega4[2,0] * self.yuuomega4bar[2,2] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[2,2] * self.yuuomega4[2,0] * self.yuuomega4bar[2,2] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[0,2] * self.yuuomega4[2,1] * self.yuuomega4bar[2,2] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[1,2] * self.yuuomega4[2,1] * self.yuuomega4bar[2,2] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[2,2] * self.yuuomega4[2,1] * self.yuuomega4bar[2,2] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[0,2] * self.yuuomega4[2,2] * self.yuuomega4bar[2,2] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[1,2] * self.yuuomega4[2,2] * self.yuuomega4bar[2,2] + 1/24 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[2,2] * self.yuuomega4[2,2] * self.yuuomega4bar[2,2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yu[mif1,0] * self.yubar[0,2] * self.yuuomega4[0,0] * self.yuuomega4bar[2,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yu[mif1,0] * self.yubar[1,2] * self.yuuomega4[0,0] * self.yuuomega4bar[2,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yu[mif1,0] * self.yubar[2,2] * self.yuuomega4[0,0] * self.yuuomega4bar[2,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yu[mif1,1] * self.yubar[0,2] * self.yuuomega4[0,1] * self.yuuomega4bar[2,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yu[mif1,1] * self.yubar[1,2] * self.yuuomega4[0,1] * self.yuuomega4bar[2,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yu[mif1,1] * self.yubar[2,2] * self.yuuomega4[0,1] * self.yuuomega4bar[2,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yu[mif1,2] * self.yubar[0,2] * self.yuuomega4[0,2] * self.yuuomega4bar[2,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yu[mif1,2] * self.yubar[1,2] * self.yuuomega4[0,2] * self.yuuomega4bar[2,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yu[mif1,2] * self.yubar[2,2] * self.yuuomega4[0,2] * self.yuuomega4bar[2,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yu[mif1,0] * self.yubar[0,2] * self.yuuomega4[1,0] * self.yuuomega4bar[2,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yu[mif1,0] * self.yubar[1,2] * self.yuuomega4[1,0] * self.yuuomega4bar[2,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yu[mif1,0] * self.yubar[2,2] * self.yuuomega4[1,0] * self.yuuomega4bar[2,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yu[mif1,1] * self.yubar[0,2] * self.yuuomega4[1,1] * self.yuuomega4bar[2,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yu[mif1,1] * self.yubar[1,2] * self.yuuomega4[1,1] * self.yuuomega4bar[2,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yu[mif1,1] * self.yubar[2,2] * self.yuuomega4[1,1] * self.yuuomega4bar[2,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yu[mif1,2] * self.yubar[0,2] * self.yuuomega4[1,2] * self.yuuomega4bar[2,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yu[mif1,2] * self.yubar[1,2] * self.yuuomega4[1,2] * self.yuuomega4bar[2,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yu[mif1,2] * self.yubar[2,2] * self.yuuomega4[1,2] * self.yuuomega4bar[2,mif2] + 1/8 * self.lambdaHatomega4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,0] * self.yuuomega4[2,0] * self.yuuomega4bar[2,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yu[mif1,0] * self.yubar[0,2] * self.yuuomega4[2,0] * self.yuuomega4bar[2,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yu[mif1,0] * self.yubar[1,2] * self.yuuomega4[2,0] * self.yuuomega4bar[2,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yu[mif1,0] * self.yubar[2,2] * self.yuuomega4[2,0] * self.yuuomega4bar[2,mif2] + 1/8 * self.lambdaHatomega4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,1] * self.yuuomega4[2,1] * self.yuuomega4bar[2,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yu[mif1,1] * self.yubar[0,2] * self.yuuomega4[2,1] * self.yuuomega4bar[2,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yu[mif1,1] * self.yubar[1,2] * self.yuuomega4[2,1] * self.yuuomega4bar[2,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yu[mif1,1] * self.yubar[2,2] * self.yuuomega4[2,1] * self.yuuomega4bar[2,mif2] + 1/8 * self.lambdaHatomega4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,2] * self.yuuomega4[2,2] * self.yuuomega4bar[2,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yu[mif1,2] * self.yubar[0,2] * self.yuuomega4[2,2] * self.yuuomega4bar[2,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yu[mif1,2] * self.yubar[1,2] * self.yuuomega4[2,2] * self.yuuomega4bar[2,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yu[mif1,2] * self.yubar[2,2] * self.yuuomega4[2,2] * self.yuuomega4bar[2,mif2])

    def alphaOuu(self, mif1,mif2,mif3,mif4):
        return (-1/3840 * (self.g3)**(4) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.kronecker_delta(mif2,mif3) + -1/405 * (self.g1)**(4) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 1/11520 * (self.g3)**(4) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 5/81 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yuuomega4[0,mif1] * self.yuuomega4bar[0,mif2] + 7/864 * (self.g3)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yuuomega4[0,mif1] * self.yuuomega4bar[0,mif2] + 1/27 * (self.g1)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yuuomega4[0,mif1] * self.yuuomega4bar[0,mif2] + 1/144 * (self.g3)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yuuomega4[0,mif1] * self.yuuomega4bar[0,mif2] + -1/27 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[0,mif1] * self.yuuomega4bar[0,mif2] + -1/144 * (self.g3)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[0,mif1] * self.yuuomega4bar[0,mif2] + 5/288 * (self.g3)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yuuomega4[0,mif3] * self.yuuomega4bar[0,mif2] + -1/48 * (self.g3)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yuuomega4[0,mif3] * self.yuuomega4bar[0,mif2] + 1/48 * (self.g3)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[0,mif3] * self.yuuomega4bar[0,mif2] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[0,mif4] * self.yuuomega4[mif1,mif3] * self.yuuomega4bar[0,0] * self.yuuomega4bar[0,mif2] + 1/16 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[0,mif4] * self.yuuomega4[mif1,mif3] * self.yuuomega4bar[0,0] * self.yuuomega4bar[0,mif2] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[0,mif4] * self.yuuomega4[mif1,mif3] * self.yuuomega4bar[0,0] * self.yuuomega4bar[0,mif2] + -7/288 * (self.g3)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yuuomega4[0,mif1] * self.yuuomega4bar[0,mif4] + -1/48 * (self.g3)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yuuomega4[0,mif1] * self.yuuomega4bar[0,mif4] + 1/48 * (self.g3)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[0,mif1] * self.yuuomega4bar[0,mif4] + 8/81 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yuuomega4[0,mif3] * self.yuuomega4bar[0,mif4] + -5/864 * (self.g3)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yuuomega4[0,mif3] * self.yuuomega4bar[0,mif4] + 1/27 * (self.g1)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yuuomega4[0,mif3] * self.yuuomega4bar[0,mif4] + 1/144 * (self.g3)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yuuomega4[0,mif3] * self.yuuomega4bar[0,mif4] + -1/27 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[0,mif3] * self.yuuomega4bar[0,mif4] + -1/144 * (self.g3)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[0,mif3] * self.yuuomega4bar[0,mif4] + -1/4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[0,mif1] * self.yuuomega4[0,mif3] * self.yuuomega4bar[0,mif2] * self.yuuomega4bar[0,mif4] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[0,0] * self.yuuomega4[mif3,mif1] * self.yuuomega4bar[0,mif2] * self.yuuomega4bar[0,mif4] + 1/16 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[0,0] * self.yuuomega4[mif3,mif1] * self.yuuomega4bar[0,mif2] * self.yuuomega4bar[0,mif4] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[0,0] * self.yuuomega4[mif3,mif1] * self.yuuomega4bar[0,mif2] * self.yuuomega4bar[0,mif4] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[1,mif4] * self.yuuomega4[mif1,mif3] * self.yuuomega4bar[0,mif2] * self.yuuomega4bar[1,0] + 1/16 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[1,mif4] * self.yuuomega4[mif1,mif3] * self.yuuomega4bar[0,mif2] * self.yuuomega4bar[1,0] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[1,mif4] * self.yuuomega4[mif1,mif3] * self.yuuomega4bar[0,mif2] * self.yuuomega4bar[1,0] + 5/81 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yuuomega4[1,mif1] * self.yuuomega4bar[1,mif2] + 7/864 * (self.g3)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yuuomega4[1,mif1] * self.yuuomega4bar[1,mif2] + 1/27 * (self.g1)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yuuomega4[1,mif1] * self.yuuomega4bar[1,mif2] + 1/144 * (self.g3)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yuuomega4[1,mif1] * self.yuuomega4bar[1,mif2] + -1/27 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[1,mif1] * self.yuuomega4bar[1,mif2] + -1/144 * (self.g3)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[1,mif1] * self.yuuomega4bar[1,mif2] + 5/288 * (self.g3)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yuuomega4[1,mif3] * self.yuuomega4bar[1,mif2] + -1/48 * (self.g3)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yuuomega4[1,mif3] * self.yuuomega4bar[1,mif2] + 1/48 * (self.g3)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[1,mif3] * self.yuuomega4bar[1,mif2] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[0,mif4] * self.yuuomega4[mif1,mif3] * self.yuuomega4bar[0,1] * self.yuuomega4bar[1,mif2] + 1/16 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[0,mif4] * self.yuuomega4[mif1,mif3] * self.yuuomega4bar[0,1] * self.yuuomega4bar[1,mif2] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[0,mif4] * self.yuuomega4[mif1,mif3] * self.yuuomega4bar[0,1] * self.yuuomega4bar[1,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[0,mif3] * self.yuuomega4[1,mif1] * self.yuuomega4bar[0,mif4] * self.yuuomega4bar[1,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[0,mif1] * self.yuuomega4[1,mif3] * self.yuuomega4bar[0,mif4] * self.yuuomega4bar[1,mif2] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[1,0] * self.yuuomega4[mif3,mif1] * self.yuuomega4bar[0,mif4] * self.yuuomega4bar[1,mif2] + 1/16 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[1,0] * self.yuuomega4[mif3,mif1] * self.yuuomega4bar[0,mif4] * self.yuuomega4bar[1,mif2] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[1,0] * self.yuuomega4[mif3,mif1] * self.yuuomega4bar[0,mif4] * self.yuuomega4bar[1,mif2] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[1,mif4] * self.yuuomega4[mif1,mif3] * self.yuuomega4bar[1,1] * self.yuuomega4bar[1,mif2] + 1/16 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[1,mif4] * self.yuuomega4[mif1,mif3] * self.yuuomega4bar[1,1] * self.yuuomega4bar[1,mif2] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[1,mif4] * self.yuuomega4[mif1,mif3] * self.yuuomega4bar[1,1] * self.yuuomega4bar[1,mif2] + -7/288 * (self.g3)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yuuomega4[1,mif1] * self.yuuomega4bar[1,mif4] + -1/48 * (self.g3)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yuuomega4[1,mif1] * self.yuuomega4bar[1,mif4] + 1/48 * (self.g3)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[1,mif1] * self.yuuomega4bar[1,mif4] + 8/81 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yuuomega4[1,mif3] * self.yuuomega4bar[1,mif4] + -5/864 * (self.g3)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yuuomega4[1,mif3] * self.yuuomega4bar[1,mif4] + 1/27 * (self.g1)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yuuomega4[1,mif3] * self.yuuomega4bar[1,mif4] + 1/144 * (self.g3)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yuuomega4[1,mif3] * self.yuuomega4bar[1,mif4] + -1/27 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[1,mif3] * self.yuuomega4bar[1,mif4] + -1/144 * (self.g3)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[1,mif3] * self.yuuomega4bar[1,mif4] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[0,mif3] * self.yuuomega4[1,mif1] * self.yuuomega4bar[0,mif2] * self.yuuomega4bar[1,mif4] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[0,mif1] * self.yuuomega4[1,mif3] * self.yuuomega4bar[0,mif2] * self.yuuomega4bar[1,mif4] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[0,1] * self.yuuomega4[mif3,mif1] * self.yuuomega4bar[0,mif2] * self.yuuomega4bar[1,mif4] + 1/16 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[0,1] * self.yuuomega4[mif3,mif1] * self.yuuomega4bar[0,mif2] * self.yuuomega4bar[1,mif4] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[0,1] * self.yuuomega4[mif3,mif1] * self.yuuomega4bar[0,mif2] * self.yuuomega4bar[1,mif4] + -1/4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[1,mif1] * self.yuuomega4[1,mif3] * self.yuuomega4bar[1,mif2] * self.yuuomega4bar[1,mif4] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[1,1] * self.yuuomega4[mif3,mif1] * self.yuuomega4bar[1,mif2] * self.yuuomega4bar[1,mif4] + 1/16 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[1,1] * self.yuuomega4[mif3,mif1] * self.yuuomega4bar[1,mif2] * self.yuuomega4bar[1,mif4] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[1,1] * self.yuuomega4[mif3,mif1] * self.yuuomega4bar[1,mif2] * self.yuuomega4bar[1,mif4] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[2,mif4] * self.yuuomega4[mif1,mif3] * self.yuuomega4bar[0,mif2] * self.yuuomega4bar[2,0] + 1/16 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[2,mif4] * self.yuuomega4[mif1,mif3] * self.yuuomega4bar[0,mif2] * self.yuuomega4bar[2,0] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[2,mif4] * self.yuuomega4[mif1,mif3] * self.yuuomega4bar[0,mif2] * self.yuuomega4bar[2,0] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[2,mif4] * self.yuuomega4[mif1,mif3] * self.yuuomega4bar[1,mif2] * self.yuuomega4bar[2,1] + 1/16 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[2,mif4] * self.yuuomega4[mif1,mif3] * self.yuuomega4bar[1,mif2] * self.yuuomega4bar[2,1] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[2,mif4] * self.yuuomega4[mif1,mif3] * self.yuuomega4bar[1,mif2] * self.yuuomega4bar[2,1] + 5/81 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yuuomega4[2,mif1] * self.yuuomega4bar[2,mif2] + 7/864 * (self.g3)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yuuomega4[2,mif1] * self.yuuomega4bar[2,mif2] + 1/27 * (self.g1)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yuuomega4[2,mif1] * self.yuuomega4bar[2,mif2] + 1/144 * (self.g3)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yuuomega4[2,mif1] * self.yuuomega4bar[2,mif2] + -1/27 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[2,mif1] * self.yuuomega4bar[2,mif2] + -1/144 * (self.g3)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[2,mif1] * self.yuuomega4bar[2,mif2] + 5/288 * (self.g3)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yuuomega4[2,mif3] * self.yuuomega4bar[2,mif2] + -1/48 * (self.g3)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yuuomega4[2,mif3] * self.yuuomega4bar[2,mif2] + 1/48 * (self.g3)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[2,mif3] * self.yuuomega4bar[2,mif2] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[0,mif4] * self.yuuomega4[mif1,mif3] * self.yuuomega4bar[0,2] * self.yuuomega4bar[2,mif2] + 1/16 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[0,mif4] * self.yuuomega4[mif1,mif3] * self.yuuomega4bar[0,2] * self.yuuomega4bar[2,mif2] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[0,mif4] * self.yuuomega4[mif1,mif3] * self.yuuomega4bar[0,2] * self.yuuomega4bar[2,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[0,mif3] * self.yuuomega4[2,mif1] * self.yuuomega4bar[0,mif4] * self.yuuomega4bar[2,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[0,mif1] * self.yuuomega4[2,mif3] * self.yuuomega4bar[0,mif4] * self.yuuomega4bar[2,mif2] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[2,0] * self.yuuomega4[mif3,mif1] * self.yuuomega4bar[0,mif4] * self.yuuomega4bar[2,mif2] + 1/16 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[2,0] * self.yuuomega4[mif3,mif1] * self.yuuomega4bar[0,mif4] * self.yuuomega4bar[2,mif2] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[2,0] * self.yuuomega4[mif3,mif1] * self.yuuomega4bar[0,mif4] * self.yuuomega4bar[2,mif2] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[1,mif4] * self.yuuomega4[mif1,mif3] * self.yuuomega4bar[1,2] * self.yuuomega4bar[2,mif2] + 1/16 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[1,mif4] * self.yuuomega4[mif1,mif3] * self.yuuomega4bar[1,2] * self.yuuomega4bar[2,mif2] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[1,mif4] * self.yuuomega4[mif1,mif3] * self.yuuomega4bar[1,2] * self.yuuomega4bar[2,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[1,mif3] * self.yuuomega4[2,mif1] * self.yuuomega4bar[1,mif4] * self.yuuomega4bar[2,mif2] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[1,mif1] * self.yuuomega4[2,mif3] * self.yuuomega4bar[1,mif4] * self.yuuomega4bar[2,mif2] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[2,1] * self.yuuomega4[mif3,mif1] * self.yuuomega4bar[1,mif4] * self.yuuomega4bar[2,mif2] + 1/16 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[2,1] * self.yuuomega4[mif3,mif1] * self.yuuomega4bar[1,mif4] * self.yuuomega4bar[2,mif2] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[2,1] * self.yuuomega4[mif3,mif1] * self.yuuomega4bar[1,mif4] * self.yuuomega4bar[2,mif2] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[2,mif4] * self.yuuomega4[mif1,mif3] * self.yuuomega4bar[2,2] * self.yuuomega4bar[2,mif2] + 1/16 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[2,mif4] * self.yuuomega4[mif1,mif3] * self.yuuomega4bar[2,2] * self.yuuomega4bar[2,mif2] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[2,mif4] * self.yuuomega4[mif1,mif3] * self.yuuomega4bar[2,2] * self.yuuomega4bar[2,mif2] + -7/288 * (self.g3)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yuuomega4[2,mif1] * self.yuuomega4bar[2,mif4] + -1/48 * (self.g3)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yuuomega4[2,mif1] * self.yuuomega4bar[2,mif4] + 1/48 * (self.g3)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[2,mif1] * self.yuuomega4bar[2,mif4] + 8/81 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yuuomega4[2,mif3] * self.yuuomega4bar[2,mif4] + -5/864 * (self.g3)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yuuomega4[2,mif3] * self.yuuomega4bar[2,mif4] + 1/27 * (self.g1)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yuuomega4[2,mif3] * self.yuuomega4bar[2,mif4] + 1/144 * (self.g3)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yuuomega4[2,mif3] * self.yuuomega4bar[2,mif4] + -1/27 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[2,mif3] * self.yuuomega4bar[2,mif4] + -1/144 * (self.g3)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[2,mif3] * self.yuuomega4bar[2,mif4] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[0,mif3] * self.yuuomega4[2,mif1] * self.yuuomega4bar[0,mif2] * self.yuuomega4bar[2,mif4] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[0,mif1] * self.yuuomega4[2,mif3] * self.yuuomega4bar[0,mif2] * self.yuuomega4bar[2,mif4] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[0,2] * self.yuuomega4[mif3,mif1] * self.yuuomega4bar[0,mif2] * self.yuuomega4bar[2,mif4] + 1/16 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[0,2] * self.yuuomega4[mif3,mif1] * self.yuuomega4bar[0,mif2] * self.yuuomega4bar[2,mif4] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[0,2] * self.yuuomega4[mif3,mif1] * self.yuuomega4bar[0,mif2] * self.yuuomega4bar[2,mif4] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[1,mif3] * self.yuuomega4[2,mif1] * self.yuuomega4bar[1,mif2] * self.yuuomega4bar[2,mif4] + -1/8 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[1,mif1] * self.yuuomega4[2,mif3] * self.yuuomega4bar[1,mif2] * self.yuuomega4bar[2,mif4] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[1,2] * self.yuuomega4[mif3,mif1] * self.yuuomega4bar[1,mif2] * self.yuuomega4bar[2,mif4] + 1/16 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[1,2] * self.yuuomega4[mif3,mif1] * self.yuuomega4bar[1,mif2] * self.yuuomega4bar[2,mif4] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[1,2] * self.yuuomega4[mif3,mif1] * self.yuuomega4bar[1,mif2] * self.yuuomega4bar[2,mif4] + -1/4 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[2,mif1] * self.yuuomega4[2,mif3] * self.yuuomega4bar[2,mif2] * self.yuuomega4bar[2,mif4] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[2,2] * self.yuuomega4[mif3,mif1] * self.yuuomega4bar[2,mif2] * self.yuuomega4bar[2,mif4] + 1/16 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[2,2] * self.yuuomega4[mif3,mif1] * self.yuuomega4bar[2,mif2] * self.yuuomega4bar[2,mif4] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[2,2] * self.yuuomega4[mif3,mif1] * self.yuuomega4bar[2,mif2] * self.yuuomega4bar[2,mif4] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[0,mif4] * self.yuuomega4[mif3,mif1] * self.yuuomega4bar[0,0] * self.yuuomega4bar[mif2,0] + 1/16 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[0,mif4] * self.yuuomega4[mif3,mif1] * self.yuuomega4bar[0,0] * self.yuuomega4bar[mif2,0] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[0,mif4] * self.yuuomega4[mif3,mif1] * self.yuuomega4bar[0,0] * self.yuuomega4bar[mif2,0] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[1,mif4] * self.yuuomega4[mif3,mif1] * self.yuuomega4bar[1,0] * self.yuuomega4bar[mif2,0] + 1/16 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[1,mif4] * self.yuuomega4[mif3,mif1] * self.yuuomega4bar[1,0] * self.yuuomega4bar[mif2,0] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[1,mif4] * self.yuuomega4[mif3,mif1] * self.yuuomega4bar[1,0] * self.yuuomega4bar[mif2,0] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[2,mif4] * self.yuuomega4[mif3,mif1] * self.yuuomega4bar[2,0] * self.yuuomega4bar[mif2,0] + 1/16 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[2,mif4] * self.yuuomega4[mif3,mif1] * self.yuuomega4bar[2,0] * self.yuuomega4bar[mif2,0] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[2,mif4] * self.yuuomega4[mif3,mif1] * self.yuuomega4bar[2,0] * self.yuuomega4bar[mif2,0] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[0,mif4] * self.yuuomega4[mif3,mif1] * self.yuuomega4bar[0,1] * self.yuuomega4bar[mif2,1] + 1/16 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[0,mif4] * self.yuuomega4[mif3,mif1] * self.yuuomega4bar[0,1] * self.yuuomega4bar[mif2,1] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[0,mif4] * self.yuuomega4[mif3,mif1] * self.yuuomega4bar[0,1] * self.yuuomega4bar[mif2,1] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[1,mif4] * self.yuuomega4[mif3,mif1] * self.yuuomega4bar[1,1] * self.yuuomega4bar[mif2,1] + 1/16 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[1,mif4] * self.yuuomega4[mif3,mif1] * self.yuuomega4bar[1,1] * self.yuuomega4bar[mif2,1] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[1,mif4] * self.yuuomega4[mif3,mif1] * self.yuuomega4bar[1,1] * self.yuuomega4bar[mif2,1] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[2,mif4] * self.yuuomega4[mif3,mif1] * self.yuuomega4bar[2,1] * self.yuuomega4bar[mif2,1] + 1/16 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[2,mif4] * self.yuuomega4[mif3,mif1] * self.yuuomega4bar[2,1] * self.yuuomega4bar[mif2,1] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[2,mif4] * self.yuuomega4[mif3,mif1] * self.yuuomega4bar[2,1] * self.yuuomega4bar[mif2,1] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[0,mif4] * self.yuuomega4[mif3,mif1] * self.yuuomega4bar[0,2] * self.yuuomega4bar[mif2,2] + 1/16 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[0,mif4] * self.yuuomega4[mif3,mif1] * self.yuuomega4bar[0,2] * self.yuuomega4bar[mif2,2] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[0,mif4] * self.yuuomega4[mif3,mif1] * self.yuuomega4bar[0,2] * self.yuuomega4bar[mif2,2] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[1,mif4] * self.yuuomega4[mif3,mif1] * self.yuuomega4bar[1,2] * self.yuuomega4bar[mif2,2] + 1/16 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[1,mif4] * self.yuuomega4[mif3,mif1] * self.yuuomega4bar[1,2] * self.yuuomega4bar[mif2,2] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[1,mif4] * self.yuuomega4[mif3,mif1] * self.yuuomega4bar[1,2] * self.yuuomega4bar[mif2,2] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[2,mif4] * self.yuuomega4[mif3,mif1] * self.yuuomega4bar[2,2] * self.yuuomega4bar[mif2,2] + 1/16 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[2,mif4] * self.yuuomega4[mif3,mif1] * self.yuuomega4bar[2,2] * self.yuuomega4bar[mif2,2] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[2,mif4] * self.yuuomega4[mif3,mif1] * self.yuuomega4bar[2,2] * self.yuuomega4bar[mif2,2] + -3/16 * (self.g3)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[mif1,mif3] * self.yuuomega4bar[mif2,mif4] + -1/2 * (self.Momega4)**(-2) * self.yuuomega4[mif3,mif1] * self.yuuomega4bar[mif2,mif4] + -1/32 * (self.g3)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[mif3,mif1] * self.yuuomega4bar[mif2,mif4] + -3/32 * self.epsilonbar * (self.g3)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[mif3,mif1] * self.yuuomega4bar[mif2,mif4] + -1/16 * self.epsilonbar * (self.g3)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[mif3,mif1] * self.yuuomega4bar[mif2,mif4] + 1/16 * self.epsilonbar * (self.g3)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[mif3,mif1] * self.yuuomega4bar[mif2,mif4] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[0,mif1] * self.yuuomega4[mif3,0] * self.yuuomega4bar[0,0] * self.yuuomega4bar[mif2,mif4] + 1/16 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[0,mif1] * self.yuuomega4[mif3,0] * self.yuuomega4bar[0,0] * self.yuuomega4bar[mif2,mif4] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[0,mif1] * self.yuuomega4[mif3,0] * self.yuuomega4bar[0,0] * self.yuuomega4bar[mif2,mif4] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[0,mif1] * self.yuuomega4[mif3,1] * self.yuuomega4bar[0,1] * self.yuuomega4bar[mif2,mif4] + 1/16 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[0,mif1] * self.yuuomega4[mif3,1] * self.yuuomega4bar[0,1] * self.yuuomega4bar[mif2,mif4] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[0,mif1] * self.yuuomega4[mif3,1] * self.yuuomega4bar[0,1] * self.yuuomega4bar[mif2,mif4] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[0,mif1] * self.yuuomega4[mif3,2] * self.yuuomega4bar[0,2] * self.yuuomega4bar[mif2,mif4] + 1/16 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[0,mif1] * self.yuuomega4[mif3,2] * self.yuuomega4bar[0,2] * self.yuuomega4bar[mif2,mif4] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[0,mif1] * self.yuuomega4[mif3,2] * self.yuuomega4bar[0,2] * self.yuuomega4bar[mif2,mif4] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[0,0] * self.yuuomega4[0,mif1] * self.yuuomega4bar[0,mif3] * self.yuuomega4bar[mif2,mif4] + 1/16 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[0,0] * self.yuuomega4[0,mif1] * self.yuuomega4bar[0,mif3] * self.yuuomega4bar[mif2,mif4] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[0,0] * self.yuuomega4[0,mif1] * self.yuuomega4bar[0,mif3] * self.yuuomega4bar[mif2,mif4] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[0,1] * self.yuuomega4[1,mif1] * self.yuuomega4bar[0,mif3] * self.yuuomega4bar[mif2,mif4] + 1/16 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[0,1] * self.yuuomega4[1,mif1] * self.yuuomega4bar[0,mif3] * self.yuuomega4bar[mif2,mif4] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[0,1] * self.yuuomega4[1,mif1] * self.yuuomega4bar[0,mif3] * self.yuuomega4bar[mif2,mif4] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[0,2] * self.yuuomega4[2,mif1] * self.yuuomega4bar[0,mif3] * self.yuuomega4bar[mif2,mif4] + 1/16 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[0,2] * self.yuuomega4[2,mif1] * self.yuuomega4bar[0,mif3] * self.yuuomega4bar[mif2,mif4] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[0,2] * self.yuuomega4[2,mif1] * self.yuuomega4bar[0,mif3] * self.yuuomega4bar[mif2,mif4] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[1,mif1] * self.yuuomega4[mif3,0] * self.yuuomega4bar[1,0] * self.yuuomega4bar[mif2,mif4] + 1/16 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[1,mif1] * self.yuuomega4[mif3,0] * self.yuuomega4bar[1,0] * self.yuuomega4bar[mif2,mif4] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[1,mif1] * self.yuuomega4[mif3,0] * self.yuuomega4bar[1,0] * self.yuuomega4bar[mif2,mif4] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[1,mif1] * self.yuuomega4[mif3,1] * self.yuuomega4bar[1,1] * self.yuuomega4bar[mif2,mif4] + 1/16 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[1,mif1] * self.yuuomega4[mif3,1] * self.yuuomega4bar[1,1] * self.yuuomega4bar[mif2,mif4] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[1,mif1] * self.yuuomega4[mif3,1] * self.yuuomega4bar[1,1] * self.yuuomega4bar[mif2,mif4] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[1,mif1] * self.yuuomega4[mif3,2] * self.yuuomega4bar[1,2] * self.yuuomega4bar[mif2,mif4] + 1/16 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[1,mif1] * self.yuuomega4[mif3,2] * self.yuuomega4bar[1,2] * self.yuuomega4bar[mif2,mif4] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[1,mif1] * self.yuuomega4[mif3,2] * self.yuuomega4bar[1,2] * self.yuuomega4bar[mif2,mif4] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[0,mif1] * self.yuuomega4[1,0] * self.yuuomega4bar[1,mif3] * self.yuuomega4bar[mif2,mif4] + 1/16 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[0,mif1] * self.yuuomega4[1,0] * self.yuuomega4bar[1,mif3] * self.yuuomega4bar[mif2,mif4] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[0,mif1] * self.yuuomega4[1,0] * self.yuuomega4bar[1,mif3] * self.yuuomega4bar[mif2,mif4] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[1,1] * self.yuuomega4[1,mif1] * self.yuuomega4bar[1,mif3] * self.yuuomega4bar[mif2,mif4] + 1/16 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[1,1] * self.yuuomega4[1,mif1] * self.yuuomega4bar[1,mif3] * self.yuuomega4bar[mif2,mif4] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[1,1] * self.yuuomega4[1,mif1] * self.yuuomega4bar[1,mif3] * self.yuuomega4bar[mif2,mif4] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[1,2] * self.yuuomega4[2,mif1] * self.yuuomega4bar[1,mif3] * self.yuuomega4bar[mif2,mif4] + 1/16 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[1,2] * self.yuuomega4[2,mif1] * self.yuuomega4bar[1,mif3] * self.yuuomega4bar[mif2,mif4] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[1,2] * self.yuuomega4[2,mif1] * self.yuuomega4bar[1,mif3] * self.yuuomega4bar[mif2,mif4] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[2,mif1] * self.yuuomega4[mif3,0] * self.yuuomega4bar[2,0] * self.yuuomega4bar[mif2,mif4] + 1/16 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[2,mif1] * self.yuuomega4[mif3,0] * self.yuuomega4bar[2,0] * self.yuuomega4bar[mif2,mif4] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[2,mif1] * self.yuuomega4[mif3,0] * self.yuuomega4bar[2,0] * self.yuuomega4bar[mif2,mif4] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[2,mif1] * self.yuuomega4[mif3,1] * self.yuuomega4bar[2,1] * self.yuuomega4bar[mif2,mif4] + 1/16 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[2,mif1] * self.yuuomega4[mif3,1] * self.yuuomega4bar[2,1] * self.yuuomega4bar[mif2,mif4] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[2,mif1] * self.yuuomega4[mif3,1] * self.yuuomega4bar[2,1] * self.yuuomega4bar[mif2,mif4] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[2,mif1] * self.yuuomega4[mif3,2] * self.yuuomega4bar[2,2] * self.yuuomega4bar[mif2,mif4] + 1/16 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[2,mif1] * self.yuuomega4[mif3,2] * self.yuuomega4bar[2,2] * self.yuuomega4bar[mif2,mif4] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[2,mif1] * self.yuuomega4[mif3,2] * self.yuuomega4bar[2,2] * self.yuuomega4bar[mif2,mif4] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[0,mif1] * self.yuuomega4[2,0] * self.yuuomega4bar[2,mif3] * self.yuuomega4bar[mif2,mif4] + 1/16 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[0,mif1] * self.yuuomega4[2,0] * self.yuuomega4bar[2,mif3] * self.yuuomega4bar[mif2,mif4] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[0,mif1] * self.yuuomega4[2,0] * self.yuuomega4bar[2,mif3] * self.yuuomega4bar[mif2,mif4] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[1,mif1] * self.yuuomega4[2,1] * self.yuuomega4bar[2,mif3] * self.yuuomega4bar[mif2,mif4] + 1/16 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[1,mif1] * self.yuuomega4[2,1] * self.yuuomega4bar[2,mif3] * self.yuuomega4bar[mif2,mif4] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[1,mif1] * self.yuuomega4[2,1] * self.yuuomega4bar[2,mif3] * self.yuuomega4bar[mif2,mif4] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[2,2] * self.yuuomega4[2,mif1] * self.yuuomega4bar[2,mif3] * self.yuuomega4bar[mif2,mif4] + 1/16 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[2,2] * self.yuuomega4[2,mif1] * self.yuuomega4bar[2,mif3] * self.yuuomega4bar[mif2,mif4] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[2,2] * self.yuuomega4[2,mif1] * self.yuuomega4bar[2,mif3] * self.yuuomega4bar[mif2,mif4] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[0,0] * self.yuuomega4[mif1,mif3] * self.yuuomega4bar[0,mif2] * self.yuuomega4bar[mif4,0] + 1/16 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[0,0] * self.yuuomega4[mif1,mif3] * self.yuuomega4bar[0,mif2] * self.yuuomega4bar[mif4,0] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[0,0] * self.yuuomega4[mif1,mif3] * self.yuuomega4bar[0,mif2] * self.yuuomega4bar[mif4,0] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[1,0] * self.yuuomega4[mif1,mif3] * self.yuuomega4bar[1,mif2] * self.yuuomega4bar[mif4,0] + 1/16 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[1,0] * self.yuuomega4[mif1,mif3] * self.yuuomega4bar[1,mif2] * self.yuuomega4bar[mif4,0] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[1,0] * self.yuuomega4[mif1,mif3] * self.yuuomega4bar[1,mif2] * self.yuuomega4bar[mif4,0] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[2,0] * self.yuuomega4[mif1,mif3] * self.yuuomega4bar[2,mif2] * self.yuuomega4bar[mif4,0] + 1/16 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[2,0] * self.yuuomega4[mif1,mif3] * self.yuuomega4bar[2,mif2] * self.yuuomega4bar[mif4,0] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[2,0] * self.yuuomega4[mif1,mif3] * self.yuuomega4bar[2,mif2] * self.yuuomega4bar[mif4,0] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[0,1] * self.yuuomega4[mif1,mif3] * self.yuuomega4bar[0,mif2] * self.yuuomega4bar[mif4,1] + 1/16 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[0,1] * self.yuuomega4[mif1,mif3] * self.yuuomega4bar[0,mif2] * self.yuuomega4bar[mif4,1] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[0,1] * self.yuuomega4[mif1,mif3] * self.yuuomega4bar[0,mif2] * self.yuuomega4bar[mif4,1] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[1,1] * self.yuuomega4[mif1,mif3] * self.yuuomega4bar[1,mif2] * self.yuuomega4bar[mif4,1] + 1/16 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[1,1] * self.yuuomega4[mif1,mif3] * self.yuuomega4bar[1,mif2] * self.yuuomega4bar[mif4,1] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[1,1] * self.yuuomega4[mif1,mif3] * self.yuuomega4bar[1,mif2] * self.yuuomega4bar[mif4,1] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[2,1] * self.yuuomega4[mif1,mif3] * self.yuuomega4bar[2,mif2] * self.yuuomega4bar[mif4,1] + 1/16 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[2,1] * self.yuuomega4[mif1,mif3] * self.yuuomega4bar[2,mif2] * self.yuuomega4bar[mif4,1] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[2,1] * self.yuuomega4[mif1,mif3] * self.yuuomega4bar[2,mif2] * self.yuuomega4bar[mif4,1] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[0,2] * self.yuuomega4[mif1,mif3] * self.yuuomega4bar[0,mif2] * self.yuuomega4bar[mif4,2] + 1/16 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[0,2] * self.yuuomega4[mif1,mif3] * self.yuuomega4bar[0,mif2] * self.yuuomega4bar[mif4,2] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[0,2] * self.yuuomega4[mif1,mif3] * self.yuuomega4bar[0,mif2] * self.yuuomega4bar[mif4,2] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[1,2] * self.yuuomega4[mif1,mif3] * self.yuuomega4bar[1,mif2] * self.yuuomega4bar[mif4,2] + 1/16 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[1,2] * self.yuuomega4[mif1,mif3] * self.yuuomega4bar[1,mif2] * self.yuuomega4bar[mif4,2] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[1,2] * self.yuuomega4[mif1,mif3] * self.yuuomega4bar[1,mif2] * self.yuuomega4bar[mif4,2] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[2,2] * self.yuuomega4[mif1,mif3] * self.yuuomega4bar[2,mif2] * self.yuuomega4bar[mif4,2] + 1/16 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[2,2] * self.yuuomega4[mif1,mif3] * self.yuuomega4bar[2,mif2] * self.yuuomega4bar[mif4,2] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[2,2] * self.yuuomega4[mif1,mif3] * self.yuuomega4bar[2,mif2] * self.yuuomega4bar[mif4,2] + -1/2 * (self.Momega4)**(-2) * self.yuuomega4[mif1,mif3] * self.yuuomega4bar[mif4,mif2] + -1/6 * (self.g1)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[mif1,mif3] * self.yuuomega4bar[mif4,mif2] + 1/32 * (self.g3)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[mif1,mif3] * self.yuuomega4bar[mif4,mif2] + -3/32 * self.epsilonbar * (self.g3)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[mif1,mif3] * self.yuuomega4bar[mif4,mif2] + -1/16 * self.epsilonbar * (self.g3)**(2) * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[mif1,mif3] * self.yuuomega4bar[mif4,mif2] + 1/16 * self.epsilonbar * (self.g3)**(2) * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[mif1,mif3] * self.yuuomega4bar[mif4,mif2] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[0,mif1] * self.yuuomega4[0,mif3] * self.yuuomega4bar[0,0] * self.yuuomega4bar[mif4,mif2] + 1/16 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[0,mif1] * self.yuuomega4[0,mif3] * self.yuuomega4bar[0,0] * self.yuuomega4bar[mif4,mif2] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[0,mif1] * self.yuuomega4[0,mif3] * self.yuuomega4bar[0,0] * self.yuuomega4bar[mif4,mif2] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[0,mif1] * self.yuuomega4[1,mif3] * self.yuuomega4bar[0,1] * self.yuuomega4bar[mif4,mif2] + 1/16 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[0,mif1] * self.yuuomega4[1,mif3] * self.yuuomega4bar[0,1] * self.yuuomega4bar[mif4,mif2] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[0,mif1] * self.yuuomega4[1,mif3] * self.yuuomega4bar[0,1] * self.yuuomega4bar[mif4,mif2] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[0,mif1] * self.yuuomega4[2,mif3] * self.yuuomega4bar[0,2] * self.yuuomega4bar[mif4,mif2] + 1/16 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[0,mif1] * self.yuuomega4[2,mif3] * self.yuuomega4bar[0,2] * self.yuuomega4bar[mif4,mif2] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[0,mif1] * self.yuuomega4[2,mif3] * self.yuuomega4bar[0,2] * self.yuuomega4bar[mif4,mif2] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[0,0] * self.yuuomega4[mif1,0] * self.yuuomega4bar[0,mif3] * self.yuuomega4bar[mif4,mif2] + 1/16 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[0,0] * self.yuuomega4[mif1,0] * self.yuuomega4bar[0,mif3] * self.yuuomega4bar[mif4,mif2] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[0,0] * self.yuuomega4[mif1,0] * self.yuuomega4bar[0,mif3] * self.yuuomega4bar[mif4,mif2] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[0,1] * self.yuuomega4[mif1,1] * self.yuuomega4bar[0,mif3] * self.yuuomega4bar[mif4,mif2] + 1/16 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[0,1] * self.yuuomega4[mif1,1] * self.yuuomega4bar[0,mif3] * self.yuuomega4bar[mif4,mif2] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[0,1] * self.yuuomega4[mif1,1] * self.yuuomega4bar[0,mif3] * self.yuuomega4bar[mif4,mif2] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[0,2] * self.yuuomega4[mif1,2] * self.yuuomega4bar[0,mif3] * self.yuuomega4bar[mif4,mif2] + 1/16 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[0,2] * self.yuuomega4[mif1,2] * self.yuuomega4bar[0,mif3] * self.yuuomega4bar[mif4,mif2] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[0,2] * self.yuuomega4[mif1,2] * self.yuuomega4bar[0,mif3] * self.yuuomega4bar[mif4,mif2] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[0,mif3] * self.yuuomega4[1,mif1] * self.yuuomega4bar[1,0] * self.yuuomega4bar[mif4,mif2] + 1/16 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[0,mif3] * self.yuuomega4[1,mif1] * self.yuuomega4bar[1,0] * self.yuuomega4bar[mif4,mif2] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[0,mif3] * self.yuuomega4[1,mif1] * self.yuuomega4bar[1,0] * self.yuuomega4bar[mif4,mif2] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[1,mif1] * self.yuuomega4[1,mif3] * self.yuuomega4bar[1,1] * self.yuuomega4bar[mif4,mif2] + 1/16 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[1,mif1] * self.yuuomega4[1,mif3] * self.yuuomega4bar[1,1] * self.yuuomega4bar[mif4,mif2] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[1,mif1] * self.yuuomega4[1,mif3] * self.yuuomega4bar[1,1] * self.yuuomega4bar[mif4,mif2] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[1,mif1] * self.yuuomega4[2,mif3] * self.yuuomega4bar[1,2] * self.yuuomega4bar[mif4,mif2] + 1/16 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[1,mif1] * self.yuuomega4[2,mif3] * self.yuuomega4bar[1,2] * self.yuuomega4bar[mif4,mif2] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[1,mif1] * self.yuuomega4[2,mif3] * self.yuuomega4bar[1,2] * self.yuuomega4bar[mif4,mif2] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[1,0] * self.yuuomega4[mif1,0] * self.yuuomega4bar[1,mif3] * self.yuuomega4bar[mif4,mif2] + 1/16 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[1,0] * self.yuuomega4[mif1,0] * self.yuuomega4bar[1,mif3] * self.yuuomega4bar[mif4,mif2] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[1,0] * self.yuuomega4[mif1,0] * self.yuuomega4bar[1,mif3] * self.yuuomega4bar[mif4,mif2] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[1,1] * self.yuuomega4[mif1,1] * self.yuuomega4bar[1,mif3] * self.yuuomega4bar[mif4,mif2] + 1/16 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[1,1] * self.yuuomega4[mif1,1] * self.yuuomega4bar[1,mif3] * self.yuuomega4bar[mif4,mif2] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[1,1] * self.yuuomega4[mif1,1] * self.yuuomega4bar[1,mif3] * self.yuuomega4bar[mif4,mif2] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[1,2] * self.yuuomega4[mif1,2] * self.yuuomega4bar[1,mif3] * self.yuuomega4bar[mif4,mif2] + 1/16 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[1,2] * self.yuuomega4[mif1,2] * self.yuuomega4bar[1,mif3] * self.yuuomega4bar[mif4,mif2] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[1,2] * self.yuuomega4[mif1,2] * self.yuuomega4bar[1,mif3] * self.yuuomega4bar[mif4,mif2] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[0,mif3] * self.yuuomega4[2,mif1] * self.yuuomega4bar[2,0] * self.yuuomega4bar[mif4,mif2] + 1/16 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[0,mif3] * self.yuuomega4[2,mif1] * self.yuuomega4bar[2,0] * self.yuuomega4bar[mif4,mif2] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[0,mif3] * self.yuuomega4[2,mif1] * self.yuuomega4bar[2,0] * self.yuuomega4bar[mif4,mif2] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[1,mif3] * self.yuuomega4[2,mif1] * self.yuuomega4bar[2,1] * self.yuuomega4bar[mif4,mif2] + 1/16 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[1,mif3] * self.yuuomega4[2,mif1] * self.yuuomega4bar[2,1] * self.yuuomega4bar[mif4,mif2] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[1,mif3] * self.yuuomega4[2,mif1] * self.yuuomega4bar[2,1] * self.yuuomega4bar[mif4,mif2] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[2,mif1] * self.yuuomega4[2,mif3] * self.yuuomega4bar[2,2] * self.yuuomega4bar[mif4,mif2] + 1/16 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[2,mif1] * self.yuuomega4[2,mif3] * self.yuuomega4bar[2,2] * self.yuuomega4bar[mif4,mif2] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[2,mif1] * self.yuuomega4[2,mif3] * self.yuuomega4bar[2,2] * self.yuuomega4bar[mif4,mif2] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[2,0] * self.yuuomega4[mif1,0] * self.yuuomega4bar[2,mif3] * self.yuuomega4bar[mif4,mif2] + 1/16 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[2,0] * self.yuuomega4[mif1,0] * self.yuuomega4bar[2,mif3] * self.yuuomega4bar[mif4,mif2] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[2,0] * self.yuuomega4[mif1,0] * self.yuuomega4bar[2,mif3] * self.yuuomega4bar[mif4,mif2] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[2,1] * self.yuuomega4[mif1,1] * self.yuuomega4bar[2,mif3] * self.yuuomega4bar[mif4,mif2] + 1/16 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[2,1] * self.yuuomega4[mif1,1] * self.yuuomega4bar[2,mif3] * self.yuuomega4bar[mif4,mif2] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[2,1] * self.yuuomega4[mif1,1] * self.yuuomega4bar[2,mif3] * self.yuuomega4bar[mif4,mif2] + 1/32 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[2,2] * self.yuuomega4[mif1,2] * self.yuuomega4bar[2,mif3] * self.yuuomega4bar[mif4,mif2] + 1/16 * self.invepsilonbar * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yuuomega4[2,2] * self.yuuomega4[mif1,2] * self.yuuomega4bar[2,mif3] * self.yuuomega4bar[mif4,mif2] + -1/16 * (self.Momega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.Momega4)**(2) * (self.mu)**(-2)) * self.yuuomega4[2,2] * self.yuuomega4[mif1,2] * self.yuuomega4bar[2,mif3] * self.yuuomega4bar[mif4,mif2])

    def alphaOuW(self, mif1,mif2):
        return 0

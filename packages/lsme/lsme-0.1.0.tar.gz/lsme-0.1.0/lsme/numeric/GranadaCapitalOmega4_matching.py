## Symbols used:
# ydbar
# yd
# yl
# lambdaHatOmega4
# ylbar
# muH
# g1
# epsilonbar
# invepsilonbar
# yOmega4bar
# mu
# lam
# MOmega4
# yubar
# onelooporder
# g3
# yOmega4
# yu

import sys
import os
import numpy as np

import lsme.numeric.matchingresult as matchingresult

class GranadaOmega4MatchingResult(matchingresult.GenericMatchingResult):
    def __init__(self, name='Omega4'):
        super().__init__(name)
        self.MOmega4 = 1
        self.yOmega4 = np.ones((3, 3))
        self.yOmega4bar = np.ones((3, 3))
        self.lambdaHatOmega4 = 1
        self.lambdaHatOmega4bar = 1
        self.nonvanishing = ['alphaO3G', 'alphaOH', 'alphaOHB', 'alphaOHBox', 'alphaOHD', 'alphaOHG', 'alphaOdd', 'alphaOed', 'alphaOee', 'alphaOeu', 'alphaOHd', 'alphaOHe', 'alphaOHl1', 'alphaOHq1', 'alphaOHq3', 'alphaOHu', 'alphaOld', 'alphaOle', 'alphaOll', 'alphaOlq1', 'alphaOlu', 'alphaOqd1', 'alphaOqd8', 'alphaOqe', 'alphaOqq1', 'alphaOqq3', 'alphaOqu1', 'alphaOqu8', 'alphaOuB', 'alphaOud1', 'alphaOud8', 'alphaOuG', 'alphaOuH', 'alphaOuu']

    def alphaO3G(self, ):
        return 1/1152 * (self.g3)**(3) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2)

    def alphaO3Gt(self, ):
        return 0

    def alphaO3W(self, ):
        return 0

    def alphaO3Wt(self, ):
        return 0

    def alphaOH(self, ):
        return 1/16 * (self.lambdaHatOmega4)**(3) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2)

    def alphaOHB(self, ):
        return -1/18 * (self.g1)**(2) * self.lambdaHatOmega4 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2)

    def alphaOHBox(self, ):
        return (-1/360 * (self.g1)**(4) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) + -1/32 * (self.lambdaHatOmega4)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2))

    def alphaOHBt(self, ):
        return 0

    def alphaOHD(self, ):
        return -1/90 * (self.g1)**(4) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2)

    def alphaOHG(self, ):
        return -5/384 * (self.g3)**(2) * self.lambdaHatOmega4 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2)

    def alphaOHGt(self, ):
        return 0

    def alphaOHW(self, ):
        return 0

    def alphaOHWB(self, ):
        return 0

    def alphaOHWBt(self, ):
        return 0

    def alphaOHWt(self, ):
        return 0

    def alphaWeinberg(self, mif1,mif2):
        return 0

    def alphaOdB(self, mif1,mif2):
        return 0

    def alphaOdd(self, mif1,mif2,mif3,mif4):
        return (-1/768 * (self.g3)**(4) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.kronecker_delta(mif2,mif3) + -1/810 * (self.g1)**(4) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 1/2304 * (self.g3)**(4) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4))

    def alphaOdG(self, mif1,mif2):
        return 0

    def alphaOdH(self, mif1,mif2):
        return 0

    def alphaOdW(self, mif1,mif2):
        return 0

    def alphaOeB(self, mif1,mif2):
        return 0

    def alphaOed(self, mif1,mif2,mif3,mif4):
        return -1/135 * (self.g1)**(4) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4)

    def alphaOee(self, mif1,mif2,mif3,mif4):
        return -1/90 * (self.g1)**(4) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4)

    def alphaOeH(self, mif1,mif2):
        return 0

    def alphaOeu(self, mif1,mif2,mif3,mif4):
        return (2/135 * (self.g1)**(4) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -5/27 * (self.g1)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yOmega4[0,mif4] * self.yOmega4bar[0,mif3] + -1/9 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yOmega4[0,mif4] * self.yOmega4bar[0,mif3] + 1/9 * (self.g1)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[0,mif4] * self.yOmega4bar[0,mif3] + -5/27 * (self.g1)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yOmega4[1,mif4] * self.yOmega4bar[1,mif3] + -1/9 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yOmega4[1,mif4] * self.yOmega4bar[1,mif3] + 1/9 * (self.g1)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[1,mif4] * self.yOmega4bar[1,mif3] + -5/27 * (self.g1)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yOmega4[2,mif4] * self.yOmega4bar[2,mif3] + -1/9 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yOmega4[2,mif4] * self.yOmega4bar[2,mif3] + 1/9 * (self.g1)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[2,mif4] * self.yOmega4bar[2,mif3] + 1/36 * (self.g1)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yOmega4[mif4,0] * self.yOmega4bar[mif3,0] + 1/36 * (self.g1)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yOmega4[mif4,1] * self.yOmega4bar[mif3,1] + 1/36 * (self.g1)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yOmega4[mif4,2] * self.yOmega4bar[mif3,2])

    def alphaOeW(self, mif1,mif2):
        return 0

    def alphaOHd(self, mif1,mif2):
        return 1/270 * (self.g1)**(4) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2)

    def alphaOHe(self, mif1,mif2):
        return 1/90 * (self.g1)**(4) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2)

    def alphaOHl1(self, mif1,mif2):
        return 1/180 * (self.g1)**(4) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2)

    def alphaOHl3(self, mif1,mif2):
        return 0

    def alphaOHq1(self, mif1,mif2):
        return (-1/540 * (self.g1)**(4) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 1/48 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,0] * self.yOmega4bar[0,0] * self.yu[mif1,0] * self.yubar[mif2,0] + 1/48 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,0] * self.yOmega4bar[1,0] * self.yu[mif1,0] * self.yubar[mif2,0] + 1/48 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,0] * self.yOmega4bar[2,0] * self.yu[mif1,0] * self.yubar[mif2,0] + 1/48 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,0] * self.yOmega4bar[0,1] * self.yu[mif1,1] * self.yubar[mif2,0] + 1/48 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,0] * self.yOmega4bar[1,1] * self.yu[mif1,1] * self.yubar[mif2,0] + 1/48 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,0] * self.yOmega4bar[2,1] * self.yu[mif1,1] * self.yubar[mif2,0] + 1/48 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,0] * self.yOmega4bar[0,2] * self.yu[mif1,2] * self.yubar[mif2,0] + 1/48 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,0] * self.yOmega4bar[1,2] * self.yu[mif1,2] * self.yubar[mif2,0] + 1/48 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,0] * self.yOmega4bar[2,2] * self.yu[mif1,2] * self.yubar[mif2,0] + 1/48 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,1] * self.yOmega4bar[0,0] * self.yu[mif1,0] * self.yubar[mif2,1] + 1/48 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,1] * self.yOmega4bar[1,0] * self.yu[mif1,0] * self.yubar[mif2,1] + 1/48 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,1] * self.yOmega4bar[2,0] * self.yu[mif1,0] * self.yubar[mif2,1] + 1/48 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,1] * self.yOmega4bar[0,1] * self.yu[mif1,1] * self.yubar[mif2,1] + 1/48 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,1] * self.yOmega4bar[1,1] * self.yu[mif1,1] * self.yubar[mif2,1] + 1/48 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,1] * self.yOmega4bar[2,1] * self.yu[mif1,1] * self.yubar[mif2,1] + 1/48 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,1] * self.yOmega4bar[0,2] * self.yu[mif1,2] * self.yubar[mif2,1] + 1/48 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,1] * self.yOmega4bar[1,2] * self.yu[mif1,2] * self.yubar[mif2,1] + 1/48 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,1] * self.yOmega4bar[2,2] * self.yu[mif1,2] * self.yubar[mif2,1] + 1/48 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,2] * self.yOmega4bar[0,0] * self.yu[mif1,0] * self.yubar[mif2,2] + 1/48 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,2] * self.yOmega4bar[1,0] * self.yu[mif1,0] * self.yubar[mif2,2] + 1/48 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,2] * self.yOmega4bar[2,0] * self.yu[mif1,0] * self.yubar[mif2,2] + 1/48 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,2] * self.yOmega4bar[0,1] * self.yu[mif1,1] * self.yubar[mif2,2] + 1/48 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,2] * self.yOmega4bar[1,1] * self.yu[mif1,1] * self.yubar[mif2,2] + 1/48 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,2] * self.yOmega4bar[2,1] * self.yu[mif1,1] * self.yubar[mif2,2] + 1/48 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,2] * self.yOmega4bar[0,2] * self.yu[mif1,2] * self.yubar[mif2,2] + 1/48 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,2] * self.yOmega4bar[1,2] * self.yu[mif1,2] * self.yubar[mif2,2] + 1/48 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,2] * self.yOmega4bar[2,2] * self.yu[mif1,2] * self.yubar[mif2,2])

    def alphaOHq3(self, mif1,mif2):
        return (-1/48 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,0] * self.yOmega4bar[0,0] * self.yu[mif1,0] * self.yubar[mif2,0] + -1/48 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,0] * self.yOmega4bar[1,0] * self.yu[mif1,0] * self.yubar[mif2,0] + -1/48 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,0] * self.yOmega4bar[2,0] * self.yu[mif1,0] * self.yubar[mif2,0] + -1/48 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,0] * self.yOmega4bar[0,1] * self.yu[mif1,1] * self.yubar[mif2,0] + -1/48 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,0] * self.yOmega4bar[1,1] * self.yu[mif1,1] * self.yubar[mif2,0] + -1/48 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,0] * self.yOmega4bar[2,1] * self.yu[mif1,1] * self.yubar[mif2,0] + -1/48 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,0] * self.yOmega4bar[0,2] * self.yu[mif1,2] * self.yubar[mif2,0] + -1/48 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,0] * self.yOmega4bar[1,2] * self.yu[mif1,2] * self.yubar[mif2,0] + -1/48 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,0] * self.yOmega4bar[2,2] * self.yu[mif1,2] * self.yubar[mif2,0] + -1/48 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,1] * self.yOmega4bar[0,0] * self.yu[mif1,0] * self.yubar[mif2,1] + -1/48 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,1] * self.yOmega4bar[1,0] * self.yu[mif1,0] * self.yubar[mif2,1] + -1/48 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,1] * self.yOmega4bar[2,0] * self.yu[mif1,0] * self.yubar[mif2,1] + -1/48 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,1] * self.yOmega4bar[0,1] * self.yu[mif1,1] * self.yubar[mif2,1] + -1/48 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,1] * self.yOmega4bar[1,1] * self.yu[mif1,1] * self.yubar[mif2,1] + -1/48 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,1] * self.yOmega4bar[2,1] * self.yu[mif1,1] * self.yubar[mif2,1] + -1/48 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,1] * self.yOmega4bar[0,2] * self.yu[mif1,2] * self.yubar[mif2,1] + -1/48 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,1] * self.yOmega4bar[1,2] * self.yu[mif1,2] * self.yubar[mif2,1] + -1/48 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,1] * self.yOmega4bar[2,2] * self.yu[mif1,2] * self.yubar[mif2,1] + -1/48 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,2] * self.yOmega4bar[0,0] * self.yu[mif1,0] * self.yubar[mif2,2] + -1/48 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,2] * self.yOmega4bar[1,0] * self.yu[mif1,0] * self.yubar[mif2,2] + -1/48 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,2] * self.yOmega4bar[2,0] * self.yu[mif1,0] * self.yubar[mif2,2] + -1/48 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,2] * self.yOmega4bar[0,1] * self.yu[mif1,1] * self.yubar[mif2,2] + -1/48 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,2] * self.yOmega4bar[1,1] * self.yu[mif1,1] * self.yubar[mif2,2] + -1/48 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,2] * self.yOmega4bar[2,1] * self.yu[mif1,1] * self.yubar[mif2,2] + -1/48 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,2] * self.yOmega4bar[0,2] * self.yu[mif1,2] * self.yubar[mif2,2] + -1/48 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,2] * self.yOmega4bar[1,2] * self.yu[mif1,2] * self.yubar[mif2,2] + -1/48 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,2] * self.yOmega4bar[2,2] * self.yu[mif1,2] * self.yubar[mif2,2])

    def alphaOHu(self, mif1,mif2):
        return (-1/135 * (self.g1)**(4) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 5/54 * (self.g1)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4bar[0,mif1] + 1/18 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4bar[0,mif1] + -1/18 * (self.g1)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[0,mif2] * self.yOmega4bar[0,mif1] + 5/54 * (self.g1)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif2] * self.yOmega4bar[1,mif1] + 1/18 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif2] * self.yOmega4bar[1,mif1] + -1/18 * (self.g1)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[1,mif2] * self.yOmega4bar[1,mif1] + 5/54 * (self.g1)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif2] * self.yOmega4bar[2,mif1] + 1/18 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif2] * self.yOmega4bar[2,mif1] + -1/18 * (self.g1)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[2,mif2] * self.yOmega4bar[2,mif1] + -1/72 * (self.g1)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[mif2,0] * self.yOmega4bar[mif1,0] + -1/72 * (self.g1)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[mif2,1] * self.yOmega4bar[mif1,1] + -1/72 * (self.g1)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[mif2,2] * self.yOmega4bar[mif1,2] + -1/4 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4bar[0,mif1] * self.yu[0,0] * self.yubar[0,0] + -1/4 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4bar[0,mif1] * self.yu[0,0] * self.yubar[0,0] + 1/4 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[0,mif2] * self.yOmega4bar[0,mif1] * self.yu[0,0] * self.yubar[0,0] + 1/16 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[mif2,0] * self.yOmega4bar[mif1,0] * self.yu[0,0] * self.yubar[0,0] + -1/4 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4bar[1,mif1] * self.yu[0,1] * self.yubar[0,0] + -1/4 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4bar[1,mif1] * self.yu[0,1] * self.yubar[0,0] + 1/4 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[0,mif2] * self.yOmega4bar[1,mif1] * self.yu[0,1] * self.yubar[0,0] + 1/16 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[mif2,0] * self.yOmega4bar[mif1,1] * self.yu[0,1] * self.yubar[0,0] + -1/4 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4bar[2,mif1] * self.yu[0,2] * self.yubar[0,0] + -1/4 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4bar[2,mif1] * self.yu[0,2] * self.yubar[0,0] + 1/4 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[0,mif2] * self.yOmega4bar[2,mif1] * self.yu[0,2] * self.yubar[0,0] + 1/16 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[mif2,0] * self.yOmega4bar[mif1,2] * self.yu[0,2] * self.yubar[0,0] + -1/4 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif2] * self.yOmega4bar[0,mif1] * self.yu[0,0] * self.yubar[0,1] + -1/4 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif2] * self.yOmega4bar[0,mif1] * self.yu[0,0] * self.yubar[0,1] + 1/4 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[1,mif2] * self.yOmega4bar[0,mif1] * self.yu[0,0] * self.yubar[0,1] + 1/16 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[mif2,1] * self.yOmega4bar[mif1,0] * self.yu[0,0] * self.yubar[0,1] + -1/4 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif2] * self.yOmega4bar[1,mif1] * self.yu[0,1] * self.yubar[0,1] + -1/4 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif2] * self.yOmega4bar[1,mif1] * self.yu[0,1] * self.yubar[0,1] + 1/4 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[1,mif2] * self.yOmega4bar[1,mif1] * self.yu[0,1] * self.yubar[0,1] + 1/16 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[mif2,1] * self.yOmega4bar[mif1,1] * self.yu[0,1] * self.yubar[0,1] + -1/4 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif2] * self.yOmega4bar[2,mif1] * self.yu[0,2] * self.yubar[0,1] + -1/4 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif2] * self.yOmega4bar[2,mif1] * self.yu[0,2] * self.yubar[0,1] + 1/4 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[1,mif2] * self.yOmega4bar[2,mif1] * self.yu[0,2] * self.yubar[0,1] + 1/16 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[mif2,1] * self.yOmega4bar[mif1,2] * self.yu[0,2] * self.yubar[0,1] + -1/4 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif2] * self.yOmega4bar[0,mif1] * self.yu[0,0] * self.yubar[0,2] + -1/4 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif2] * self.yOmega4bar[0,mif1] * self.yu[0,0] * self.yubar[0,2] + 1/4 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[2,mif2] * self.yOmega4bar[0,mif1] * self.yu[0,0] * self.yubar[0,2] + 1/16 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[mif2,2] * self.yOmega4bar[mif1,0] * self.yu[0,0] * self.yubar[0,2] + -1/4 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif2] * self.yOmega4bar[1,mif1] * self.yu[0,1] * self.yubar[0,2] + -1/4 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif2] * self.yOmega4bar[1,mif1] * self.yu[0,1] * self.yubar[0,2] + 1/4 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[2,mif2] * self.yOmega4bar[1,mif1] * self.yu[0,1] * self.yubar[0,2] + 1/16 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[mif2,2] * self.yOmega4bar[mif1,1] * self.yu[0,1] * self.yubar[0,2] + -1/4 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif2] * self.yOmega4bar[2,mif1] * self.yu[0,2] * self.yubar[0,2] + -1/4 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif2] * self.yOmega4bar[2,mif1] * self.yu[0,2] * self.yubar[0,2] + 1/4 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[2,mif2] * self.yOmega4bar[2,mif1] * self.yu[0,2] * self.yubar[0,2] + 1/16 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[mif2,2] * self.yOmega4bar[mif1,2] * self.yu[0,2] * self.yubar[0,2] + -1/4 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4bar[0,mif1] * self.yu[1,0] * self.yubar[1,0] + -1/4 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4bar[0,mif1] * self.yu[1,0] * self.yubar[1,0] + 1/4 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[0,mif2] * self.yOmega4bar[0,mif1] * self.yu[1,0] * self.yubar[1,0] + 1/16 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[mif2,0] * self.yOmega4bar[mif1,0] * self.yu[1,0] * self.yubar[1,0] + -1/4 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4bar[1,mif1] * self.yu[1,1] * self.yubar[1,0] + -1/4 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4bar[1,mif1] * self.yu[1,1] * self.yubar[1,0] + 1/4 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[0,mif2] * self.yOmega4bar[1,mif1] * self.yu[1,1] * self.yubar[1,0] + 1/16 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[mif2,0] * self.yOmega4bar[mif1,1] * self.yu[1,1] * self.yubar[1,0] + -1/4 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4bar[2,mif1] * self.yu[1,2] * self.yubar[1,0] + -1/4 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4bar[2,mif1] * self.yu[1,2] * self.yubar[1,0] + 1/4 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[0,mif2] * self.yOmega4bar[2,mif1] * self.yu[1,2] * self.yubar[1,0] + 1/16 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[mif2,0] * self.yOmega4bar[mif1,2] * self.yu[1,2] * self.yubar[1,0] + -1/4 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif2] * self.yOmega4bar[0,mif1] * self.yu[1,0] * self.yubar[1,1] + -1/4 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif2] * self.yOmega4bar[0,mif1] * self.yu[1,0] * self.yubar[1,1] + 1/4 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[1,mif2] * self.yOmega4bar[0,mif1] * self.yu[1,0] * self.yubar[1,1] + 1/16 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[mif2,1] * self.yOmega4bar[mif1,0] * self.yu[1,0] * self.yubar[1,1] + -1/4 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif2] * self.yOmega4bar[1,mif1] * self.yu[1,1] * self.yubar[1,1] + -1/4 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif2] * self.yOmega4bar[1,mif1] * self.yu[1,1] * self.yubar[1,1] + 1/4 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[1,mif2] * self.yOmega4bar[1,mif1] * self.yu[1,1] * self.yubar[1,1] + 1/16 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[mif2,1] * self.yOmega4bar[mif1,1] * self.yu[1,1] * self.yubar[1,1] + -1/4 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif2] * self.yOmega4bar[2,mif1] * self.yu[1,2] * self.yubar[1,1] + -1/4 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif2] * self.yOmega4bar[2,mif1] * self.yu[1,2] * self.yubar[1,1] + 1/4 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[1,mif2] * self.yOmega4bar[2,mif1] * self.yu[1,2] * self.yubar[1,1] + 1/16 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[mif2,1] * self.yOmega4bar[mif1,2] * self.yu[1,2] * self.yubar[1,1] + -1/4 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif2] * self.yOmega4bar[0,mif1] * self.yu[1,0] * self.yubar[1,2] + -1/4 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif2] * self.yOmega4bar[0,mif1] * self.yu[1,0] * self.yubar[1,2] + 1/4 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[2,mif2] * self.yOmega4bar[0,mif1] * self.yu[1,0] * self.yubar[1,2] + 1/16 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[mif2,2] * self.yOmega4bar[mif1,0] * self.yu[1,0] * self.yubar[1,2] + -1/4 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif2] * self.yOmega4bar[1,mif1] * self.yu[1,1] * self.yubar[1,2] + -1/4 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif2] * self.yOmega4bar[1,mif1] * self.yu[1,1] * self.yubar[1,2] + 1/4 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[2,mif2] * self.yOmega4bar[1,mif1] * self.yu[1,1] * self.yubar[1,2] + 1/16 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[mif2,2] * self.yOmega4bar[mif1,1] * self.yu[1,1] * self.yubar[1,2] + -1/4 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif2] * self.yOmega4bar[2,mif1] * self.yu[1,2] * self.yubar[1,2] + -1/4 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif2] * self.yOmega4bar[2,mif1] * self.yu[1,2] * self.yubar[1,2] + 1/4 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[2,mif2] * self.yOmega4bar[2,mif1] * self.yu[1,2] * self.yubar[1,2] + 1/16 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[mif2,2] * self.yOmega4bar[mif1,2] * self.yu[1,2] * self.yubar[1,2] + -1/4 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4bar[0,mif1] * self.yu[2,0] * self.yubar[2,0] + -1/4 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4bar[0,mif1] * self.yu[2,0] * self.yubar[2,0] + 1/4 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[0,mif2] * self.yOmega4bar[0,mif1] * self.yu[2,0] * self.yubar[2,0] + 1/16 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[mif2,0] * self.yOmega4bar[mif1,0] * self.yu[2,0] * self.yubar[2,0] + -1/4 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4bar[1,mif1] * self.yu[2,1] * self.yubar[2,0] + -1/4 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4bar[1,mif1] * self.yu[2,1] * self.yubar[2,0] + 1/4 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[0,mif2] * self.yOmega4bar[1,mif1] * self.yu[2,1] * self.yubar[2,0] + 1/16 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[mif2,0] * self.yOmega4bar[mif1,1] * self.yu[2,1] * self.yubar[2,0] + -1/4 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4bar[2,mif1] * self.yu[2,2] * self.yubar[2,0] + -1/4 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4bar[2,mif1] * self.yu[2,2] * self.yubar[2,0] + 1/4 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[0,mif2] * self.yOmega4bar[2,mif1] * self.yu[2,2] * self.yubar[2,0] + 1/16 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[mif2,0] * self.yOmega4bar[mif1,2] * self.yu[2,2] * self.yubar[2,0] + -1/4 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif2] * self.yOmega4bar[0,mif1] * self.yu[2,0] * self.yubar[2,1] + -1/4 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif2] * self.yOmega4bar[0,mif1] * self.yu[2,0] * self.yubar[2,1] + 1/4 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[1,mif2] * self.yOmega4bar[0,mif1] * self.yu[2,0] * self.yubar[2,1] + 1/16 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[mif2,1] * self.yOmega4bar[mif1,0] * self.yu[2,0] * self.yubar[2,1] + -1/4 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif2] * self.yOmega4bar[1,mif1] * self.yu[2,1] * self.yubar[2,1] + -1/4 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif2] * self.yOmega4bar[1,mif1] * self.yu[2,1] * self.yubar[2,1] + 1/4 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[1,mif2] * self.yOmega4bar[1,mif1] * self.yu[2,1] * self.yubar[2,1] + 1/16 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[mif2,1] * self.yOmega4bar[mif1,1] * self.yu[2,1] * self.yubar[2,1] + -1/4 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif2] * self.yOmega4bar[2,mif1] * self.yu[2,2] * self.yubar[2,1] + -1/4 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif2] * self.yOmega4bar[2,mif1] * self.yu[2,2] * self.yubar[2,1] + 1/4 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[1,mif2] * self.yOmega4bar[2,mif1] * self.yu[2,2] * self.yubar[2,1] + 1/16 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[mif2,1] * self.yOmega4bar[mif1,2] * self.yu[2,2] * self.yubar[2,1] + -1/4 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif2] * self.yOmega4bar[0,mif1] * self.yu[2,0] * self.yubar[2,2] + -1/4 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif2] * self.yOmega4bar[0,mif1] * self.yu[2,0] * self.yubar[2,2] + 1/4 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[2,mif2] * self.yOmega4bar[0,mif1] * self.yu[2,0] * self.yubar[2,2] + 1/16 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[mif2,2] * self.yOmega4bar[mif1,0] * self.yu[2,0] * self.yubar[2,2] + -1/4 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif2] * self.yOmega4bar[1,mif1] * self.yu[2,1] * self.yubar[2,2] + -1/4 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif2] * self.yOmega4bar[1,mif1] * self.yu[2,1] * self.yubar[2,2] + 1/4 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[2,mif2] * self.yOmega4bar[1,mif1] * self.yu[2,1] * self.yubar[2,2] + 1/16 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[mif2,2] * self.yOmega4bar[mif1,1] * self.yu[2,1] * self.yubar[2,2] + -1/4 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif2] * self.yOmega4bar[2,mif1] * self.yu[2,2] * self.yubar[2,2] + -1/4 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif2] * self.yOmega4bar[2,mif1] * self.yu[2,2] * self.yubar[2,2] + 1/4 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[2,mif2] * self.yOmega4bar[2,mif1] * self.yu[2,2] * self.yubar[2,2] + 1/16 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[mif2,2] * self.yOmega4bar[mif1,2] * self.yu[2,2] * self.yubar[2,2])

    def alphaOHud(self, mif1,mif2):
        return 0

    def alphaOld(self, mif1,mif2,mif3,mif4):
        return -1/270 * (self.g1)**(4) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4)

    def alphaOle(self, mif1,mif2,mif3,mif4):
        return -1/90 * (self.g1)**(4) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4)

    def alphaOledq(self, mif1,mif2,mif3,mif4):
        return 0

    def alphaOlequ1(self, mif1,mif2,mif3,mif4):
        return 0

    def alphaOlequ3(self, mif1,mif2,mif3,mif4):
        return 0

    def alphaOll(self, mif1,mif2,mif3,mif4):
        return -1/360 * (self.g1)**(4) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4)

    def alphaOlq1(self, mif1,mif2,mif3,mif4):
        return 1/540 * (self.g1)**(4) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4)

    def alphaOlq3(self, mif1,mif2,mif3,mif4):
        return 0

    def alphaOlu(self, mif1,mif2,mif3,mif4):
        return (1/135 * (self.g1)**(4) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -5/54 * (self.g1)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yOmega4[0,mif4] * self.yOmega4bar[0,mif3] + -1/18 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yOmega4[0,mif4] * self.yOmega4bar[0,mif3] + 1/18 * (self.g1)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[0,mif4] * self.yOmega4bar[0,mif3] + -5/54 * (self.g1)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yOmega4[1,mif4] * self.yOmega4bar[1,mif3] + -1/18 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yOmega4[1,mif4] * self.yOmega4bar[1,mif3] + 1/18 * (self.g1)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[1,mif4] * self.yOmega4bar[1,mif3] + -5/54 * (self.g1)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yOmega4[2,mif4] * self.yOmega4bar[2,mif3] + -1/18 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yOmega4[2,mif4] * self.yOmega4bar[2,mif3] + 1/18 * (self.g1)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[2,mif4] * self.yOmega4bar[2,mif3] + 1/72 * (self.g1)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yOmega4[mif4,0] * self.yOmega4bar[mif3,0] + 1/72 * (self.g1)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yOmega4[mif4,1] * self.yOmega4bar[mif3,1] + 1/72 * (self.g1)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yOmega4[mif4,2] * self.yOmega4bar[mif3,2])

    def alphaOqd1(self, mif1,mif2,mif3,mif4):
        return 1/810 * (self.g1)**(4) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4)

    def alphaOqd8(self, mif1,mif2,mif3,mif4):
        return -1/192 * (self.g3)**(4) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4)

    def alphaOqe(self, mif1,mif2,mif3,mif4):
        return 1/270 * (self.g1)**(4) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4)

    def alphaOqq1(self, mif1,mif2,mif3,mif4):
        return (-1/1536 * (self.g3)**(4) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.kronecker_delta(mif2,mif3) + -1/3240 * (self.g1)**(4) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 1/2304 * (self.g3)**(4) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4))

    def alphaOqq3(self, mif1,mif2,mif3,mif4):
        return -1/1536 * (self.g3)**(4) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.kronecker_delta(mif2,mif3)

    def alphaOqu1(self, mif1,mif2,mif3,mif4):
        return (-1/405 * (self.g1)**(4) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 5/162 * (self.g1)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yOmega4[0,mif4] * self.yOmega4bar[0,mif3] + 1/54 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yOmega4[0,mif4] * self.yOmega4bar[0,mif3] + -1/54 * (self.g1)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[0,mif4] * self.yOmega4bar[0,mif3] + 5/162 * (self.g1)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yOmega4[1,mif4] * self.yOmega4bar[1,mif3] + 1/54 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yOmega4[1,mif4] * self.yOmega4bar[1,mif3] + -1/54 * (self.g1)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[1,mif4] * self.yOmega4bar[1,mif3] + 5/162 * (self.g1)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yOmega4[2,mif4] * self.yOmega4bar[2,mif3] + 1/54 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yOmega4[2,mif4] * self.yOmega4bar[2,mif3] + -1/54 * (self.g1)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[2,mif4] * self.yOmega4bar[2,mif3] + -1/216 * (self.g1)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yOmega4[mif4,0] * self.yOmega4bar[mif3,0] + -1/216 * (self.g1)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yOmega4[mif4,1] * self.yOmega4bar[mif3,1] + -1/216 * (self.g1)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yOmega4[mif4,2] * self.yOmega4bar[mif3,2] + -1/16 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif4] * self.yOmega4bar[0,mif3] * self.yu[mif1,0] * self.yubar[mif2,0] + -1/24 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif4] * self.yOmega4bar[0,mif3] * self.yu[mif1,0] * self.yubar[mif2,0] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[0,mif4] * self.yOmega4bar[0,mif3] * self.yu[mif1,0] * self.yubar[mif2,0] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif4] * self.yOmega4bar[mif3,0] * self.yu[mif1,0] * self.yubar[mif2,0] + 1/48 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[mif4,0] * self.yOmega4bar[mif3,0] * self.yu[mif1,0] * self.yubar[mif2,0] + -1/16 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif4] * self.yOmega4bar[1,mif3] * self.yu[mif1,1] * self.yubar[mif2,0] + -1/24 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif4] * self.yOmega4bar[1,mif3] * self.yu[mif1,1] * self.yubar[mif2,0] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[0,mif4] * self.yOmega4bar[1,mif3] * self.yu[mif1,1] * self.yubar[mif2,0] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif4] * self.yOmega4bar[mif3,1] * self.yu[mif1,1] * self.yubar[mif2,0] + 1/48 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[mif4,0] * self.yOmega4bar[mif3,1] * self.yu[mif1,1] * self.yubar[mif2,0] + -1/16 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif4] * self.yOmega4bar[2,mif3] * self.yu[mif1,2] * self.yubar[mif2,0] + -1/24 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif4] * self.yOmega4bar[2,mif3] * self.yu[mif1,2] * self.yubar[mif2,0] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[0,mif4] * self.yOmega4bar[2,mif3] * self.yu[mif1,2] * self.yubar[mif2,0] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif4] * self.yOmega4bar[mif3,2] * self.yu[mif1,2] * self.yubar[mif2,0] + 1/48 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[mif4,0] * self.yOmega4bar[mif3,2] * self.yu[mif1,2] * self.yubar[mif2,0] + -1/16 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif4] * self.yOmega4bar[0,mif3] * self.yu[mif1,0] * self.yubar[mif2,1] + -1/24 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif4] * self.yOmega4bar[0,mif3] * self.yu[mif1,0] * self.yubar[mif2,1] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[1,mif4] * self.yOmega4bar[0,mif3] * self.yu[mif1,0] * self.yubar[mif2,1] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif4] * self.yOmega4bar[mif3,0] * self.yu[mif1,0] * self.yubar[mif2,1] + 1/48 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[mif4,1] * self.yOmega4bar[mif3,0] * self.yu[mif1,0] * self.yubar[mif2,1] + -1/16 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif4] * self.yOmega4bar[1,mif3] * self.yu[mif1,1] * self.yubar[mif2,1] + -1/24 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif4] * self.yOmega4bar[1,mif3] * self.yu[mif1,1] * self.yubar[mif2,1] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[1,mif4] * self.yOmega4bar[1,mif3] * self.yu[mif1,1] * self.yubar[mif2,1] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif4] * self.yOmega4bar[mif3,1] * self.yu[mif1,1] * self.yubar[mif2,1] + 1/48 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[mif4,1] * self.yOmega4bar[mif3,1] * self.yu[mif1,1] * self.yubar[mif2,1] + -1/16 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif4] * self.yOmega4bar[2,mif3] * self.yu[mif1,2] * self.yubar[mif2,1] + -1/24 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif4] * self.yOmega4bar[2,mif3] * self.yu[mif1,2] * self.yubar[mif2,1] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[1,mif4] * self.yOmega4bar[2,mif3] * self.yu[mif1,2] * self.yubar[mif2,1] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif4] * self.yOmega4bar[mif3,2] * self.yu[mif1,2] * self.yubar[mif2,1] + 1/48 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[mif4,1] * self.yOmega4bar[mif3,2] * self.yu[mif1,2] * self.yubar[mif2,1] + -1/16 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif4] * self.yOmega4bar[0,mif3] * self.yu[mif1,0] * self.yubar[mif2,2] + -1/24 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif4] * self.yOmega4bar[0,mif3] * self.yu[mif1,0] * self.yubar[mif2,2] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[2,mif4] * self.yOmega4bar[0,mif3] * self.yu[mif1,0] * self.yubar[mif2,2] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif4] * self.yOmega4bar[mif3,0] * self.yu[mif1,0] * self.yubar[mif2,2] + 1/48 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[mif4,2] * self.yOmega4bar[mif3,0] * self.yu[mif1,0] * self.yubar[mif2,2] + -1/16 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif4] * self.yOmega4bar[1,mif3] * self.yu[mif1,1] * self.yubar[mif2,2] + -1/24 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif4] * self.yOmega4bar[1,mif3] * self.yu[mif1,1] * self.yubar[mif2,2] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[2,mif4] * self.yOmega4bar[1,mif3] * self.yu[mif1,1] * self.yubar[mif2,2] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif4] * self.yOmega4bar[mif3,1] * self.yu[mif1,1] * self.yubar[mif2,2] + 1/48 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[mif4,2] * self.yOmega4bar[mif3,1] * self.yu[mif1,1] * self.yubar[mif2,2] + -1/16 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif4] * self.yOmega4bar[2,mif3] * self.yu[mif1,2] * self.yubar[mif2,2] + -1/24 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif4] * self.yOmega4bar[2,mif3] * self.yu[mif1,2] * self.yubar[mif2,2] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[2,mif4] * self.yOmega4bar[2,mif3] * self.yu[mif1,2] * self.yubar[mif2,2] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif4] * self.yOmega4bar[mif3,2] * self.yu[mif1,2] * self.yubar[mif2,2] + 1/48 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[mif4,2] * self.yOmega4bar[mif3,2] * self.yu[mif1,2] * self.yubar[mif2,2])

    def alphaOqu8(self, mif1,mif2,mif3,mif4):
        return (-1/192 * (self.g3)**(4) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 13/144 * (self.g3)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yOmega4[0,mif4] * self.yOmega4bar[0,mif3] + 1/24 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yOmega4[0,mif4] * self.yOmega4bar[0,mif3] + -1/24 * (self.g3)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[0,mif4] * self.yOmega4bar[0,mif3] + 13/144 * (self.g3)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yOmega4[1,mif4] * self.yOmega4bar[1,mif3] + 1/24 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yOmega4[1,mif4] * self.yOmega4bar[1,mif3] + -1/24 * (self.g3)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[1,mif4] * self.yOmega4bar[1,mif3] + 13/144 * (self.g3)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yOmega4[2,mif4] * self.yOmega4bar[2,mif3] + 1/24 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yOmega4[2,mif4] * self.yOmega4bar[2,mif3] + -1/24 * (self.g3)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[2,mif4] * self.yOmega4bar[2,mif3] + -1/24 * (self.g3)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yOmega4[mif4,0] * self.yOmega4bar[mif3,0] + -1/24 * (self.g3)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yOmega4[mif4,1] * self.yOmega4bar[mif3,1] + -1/24 * (self.g3)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yOmega4[mif4,2] * self.yOmega4bar[mif3,2] + -3/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif4] * self.yOmega4bar[0,mif3] * self.yu[mif1,0] * self.yubar[mif2,0] + -1/16 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif4] * self.yOmega4bar[0,mif3] * self.yu[mif1,0] * self.yubar[mif2,0] + 1/16 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[0,mif4] * self.yOmega4bar[0,mif3] * self.yu[mif1,0] * self.yubar[mif2,0] + 1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[mif4,0] * self.yOmega4bar[mif3,0] * self.yu[mif1,0] * self.yubar[mif2,0] + -3/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif4] * self.yOmega4bar[1,mif3] * self.yu[mif1,1] * self.yubar[mif2,0] + -1/16 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif4] * self.yOmega4bar[1,mif3] * self.yu[mif1,1] * self.yubar[mif2,0] + 1/16 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[0,mif4] * self.yOmega4bar[1,mif3] * self.yu[mif1,1] * self.yubar[mif2,0] + 1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[mif4,0] * self.yOmega4bar[mif3,1] * self.yu[mif1,1] * self.yubar[mif2,0] + -3/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif4] * self.yOmega4bar[2,mif3] * self.yu[mif1,2] * self.yubar[mif2,0] + -1/16 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif4] * self.yOmega4bar[2,mif3] * self.yu[mif1,2] * self.yubar[mif2,0] + 1/16 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[0,mif4] * self.yOmega4bar[2,mif3] * self.yu[mif1,2] * self.yubar[mif2,0] + 1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[mif4,0] * self.yOmega4bar[mif3,2] * self.yu[mif1,2] * self.yubar[mif2,0] + -3/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif4] * self.yOmega4bar[0,mif3] * self.yu[mif1,0] * self.yubar[mif2,1] + -1/16 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif4] * self.yOmega4bar[0,mif3] * self.yu[mif1,0] * self.yubar[mif2,1] + 1/16 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[1,mif4] * self.yOmega4bar[0,mif3] * self.yu[mif1,0] * self.yubar[mif2,1] + 1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[mif4,1] * self.yOmega4bar[mif3,0] * self.yu[mif1,0] * self.yubar[mif2,1] + -3/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif4] * self.yOmega4bar[1,mif3] * self.yu[mif1,1] * self.yubar[mif2,1] + -1/16 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif4] * self.yOmega4bar[1,mif3] * self.yu[mif1,1] * self.yubar[mif2,1] + 1/16 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[1,mif4] * self.yOmega4bar[1,mif3] * self.yu[mif1,1] * self.yubar[mif2,1] + 1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[mif4,1] * self.yOmega4bar[mif3,1] * self.yu[mif1,1] * self.yubar[mif2,1] + -3/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif4] * self.yOmega4bar[2,mif3] * self.yu[mif1,2] * self.yubar[mif2,1] + -1/16 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif4] * self.yOmega4bar[2,mif3] * self.yu[mif1,2] * self.yubar[mif2,1] + 1/16 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[1,mif4] * self.yOmega4bar[2,mif3] * self.yu[mif1,2] * self.yubar[mif2,1] + 1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[mif4,1] * self.yOmega4bar[mif3,2] * self.yu[mif1,2] * self.yubar[mif2,1] + -3/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif4] * self.yOmega4bar[0,mif3] * self.yu[mif1,0] * self.yubar[mif2,2] + -1/16 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif4] * self.yOmega4bar[0,mif3] * self.yu[mif1,0] * self.yubar[mif2,2] + 1/16 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[2,mif4] * self.yOmega4bar[0,mif3] * self.yu[mif1,0] * self.yubar[mif2,2] + 1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[mif4,2] * self.yOmega4bar[mif3,0] * self.yu[mif1,0] * self.yubar[mif2,2] + -3/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif4] * self.yOmega4bar[1,mif3] * self.yu[mif1,1] * self.yubar[mif2,2] + -1/16 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif4] * self.yOmega4bar[1,mif3] * self.yu[mif1,1] * self.yubar[mif2,2] + 1/16 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[2,mif4] * self.yOmega4bar[1,mif3] * self.yu[mif1,1] * self.yubar[mif2,2] + 1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[mif4,2] * self.yOmega4bar[mif3,1] * self.yu[mif1,1] * self.yubar[mif2,2] + -3/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif4] * self.yOmega4bar[2,mif3] * self.yu[mif1,2] * self.yubar[mif2,2] + -1/16 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif4] * self.yOmega4bar[2,mif3] * self.yu[mif1,2] * self.yubar[mif2,2] + 1/16 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[2,mif4] * self.yOmega4bar[2,mif3] * self.yu[mif1,2] * self.yubar[mif2,2] + 1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[mif4,2] * self.yOmega4bar[mif3,2] * self.yu[mif1,2] * self.yubar[mif2,2])

    def alphaOquqd1(self, mif1,mif2,mif3,mif4):
        return 0

    def alphaOquqd8(self, mif1,mif2,mif3,mif4):
        return 0

    def alphaOuB(self, mif1,mif2):
        return (-1/18 * self.g1 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4bar[0,0] * self.yu[mif1,0] + -1/18 * self.g1 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif2] * self.yOmega4bar[1,0] * self.yu[mif1,0] + -1/18 * self.g1 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif2] * self.yOmega4bar[2,0] * self.yu[mif1,0] + -1/18 * self.g1 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4bar[0,1] * self.yu[mif1,1] + -1/18 * self.g1 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif2] * self.yOmega4bar[1,1] * self.yu[mif1,1] + -1/18 * self.g1 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif2] * self.yOmega4bar[2,1] * self.yu[mif1,1] + -1/18 * self.g1 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4bar[0,2] * self.yu[mif1,2] + -1/18 * self.g1 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif2] * self.yOmega4bar[1,2] * self.yu[mif1,2] + -1/18 * self.g1 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif2] * self.yOmega4bar[2,2] * self.yu[mif1,2])

    def alphaOud1(self, mif1,mif2,mif3,mif4):
        return (2/405 * (self.g1)**(4) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -17/324 * (self.g1)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yOmega4[0,mif2] * self.yOmega4bar[0,mif1] + -1/27 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yOmega4[0,mif2] * self.yOmega4bar[0,mif1] + 1/27 * (self.g1)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[0,mif2] * self.yOmega4bar[0,mif1] + -17/324 * (self.g1)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yOmega4[1,mif2] * self.yOmega4bar[1,mif1] + -1/27 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yOmega4[1,mif2] * self.yOmega4bar[1,mif1] + 1/27 * (self.g1)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[1,mif2] * self.yOmega4bar[1,mif1] + -17/324 * (self.g1)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yOmega4[2,mif2] * self.yOmega4bar[2,mif1] + -1/27 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yOmega4[2,mif2] * self.yOmega4bar[2,mif1] + 1/27 * (self.g1)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[2,mif2] * self.yOmega4bar[2,mif1])

    def alphaOud8(self, mif1,mif2,mif3,mif4):
        return (-1/192 * (self.g3)**(4) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 7/144 * (self.g3)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yOmega4[0,mif2] * self.yOmega4bar[0,mif1] + 1/24 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yOmega4[0,mif2] * self.yOmega4bar[0,mif1] + -1/24 * (self.g3)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[0,mif2] * self.yOmega4bar[0,mif1] + 7/144 * (self.g3)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yOmega4[1,mif2] * self.yOmega4bar[1,mif1] + 1/24 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yOmega4[1,mif2] * self.yOmega4bar[1,mif1] + -1/24 * (self.g3)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[1,mif2] * self.yOmega4bar[1,mif1] + 7/144 * (self.g3)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yOmega4[2,mif2] * self.yOmega4bar[2,mif1] + 1/24 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yOmega4[2,mif2] * self.yOmega4bar[2,mif1] + -1/24 * (self.g3)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[2,mif2] * self.yOmega4bar[2,mif1])

    def alphaOuG(self, mif1,mif2):
        return (-7/192 * self.g3 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4bar[0,0] * self.yu[mif1,0] + -7/192 * self.g3 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif2] * self.yOmega4bar[1,0] * self.yu[mif1,0] + -7/192 * self.g3 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif2] * self.yOmega4bar[2,0] * self.yu[mif1,0] + -7/192 * self.g3 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4bar[0,1] * self.yu[mif1,1] + -7/192 * self.g3 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif2] * self.yOmega4bar[1,1] * self.yu[mif1,1] + -7/192 * self.g3 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif2] * self.yOmega4bar[2,1] * self.yu[mif1,1] + -7/192 * self.g3 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4bar[0,2] * self.yu[mif1,2] + -7/192 * self.g3 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif2] * self.yOmega4bar[1,2] * self.yu[mif1,2] + -7/192 * self.g3 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif2] * self.yOmega4bar[2,2] * self.yu[mif1,2])

    def alphaOuH(self, mif1,mif2):
        return (1/8 * self.lambdaHatOmega4 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4bar[0,0] * self.yu[mif1,0] + 1/8 * self.lambdaHatOmega4 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif2] * self.yOmega4bar[1,0] * self.yu[mif1,0] + 1/8 * self.lambdaHatOmega4 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif2] * self.yOmega4bar[2,0] * self.yu[mif1,0] + 1/8 * self.lambdaHatOmega4 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4bar[0,1] * self.yu[mif1,1] + 1/8 * self.lambdaHatOmega4 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif2] * self.yOmega4bar[1,1] * self.yu[mif1,1] + 1/8 * self.lambdaHatOmega4 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif2] * self.yOmega4bar[2,1] * self.yu[mif1,1] + 1/8 * self.lambdaHatOmega4 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4bar[0,2] * self.yu[mif1,2] + 1/8 * self.lambdaHatOmega4 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif2] * self.yOmega4bar[1,2] * self.yu[mif1,2] + 1/8 * self.lambdaHatOmega4 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif2] * self.yOmega4bar[2,2] * self.yu[mif1,2] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4bar[0,0] * self.yu[0,0] * self.yu[mif1,0] * self.yubar[0,0] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4bar[1,0] * self.yu[0,1] * self.yu[mif1,0] * self.yubar[0,0] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4bar[2,0] * self.yu[0,2] * self.yu[mif1,0] * self.yubar[0,0] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,0] * self.yOmega4bar[0,0] * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[0,0] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,0] * self.yOmega4bar[1,0] * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[0,0] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,0] * self.yOmega4bar[2,0] * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[0,0] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4bar[0,1] * self.yu[0,0] * self.yu[mif1,1] * self.yubar[0,0] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4bar[1,1] * self.yu[0,1] * self.yu[mif1,1] * self.yubar[0,0] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4bar[2,1] * self.yu[0,2] * self.yu[mif1,1] * self.yubar[0,0] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,0] * self.yOmega4bar[0,1] * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[0,0] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,0] * self.yOmega4bar[1,1] * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[0,0] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,0] * self.yOmega4bar[2,1] * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[0,0] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4bar[0,2] * self.yu[0,0] * self.yu[mif1,2] * self.yubar[0,0] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4bar[1,2] * self.yu[0,1] * self.yu[mif1,2] * self.yubar[0,0] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4bar[2,2] * self.yu[0,2] * self.yu[mif1,2] * self.yubar[0,0] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,0] * self.yOmega4bar[0,2] * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[0,0] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,0] * self.yOmega4bar[1,2] * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[0,0] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,0] * self.yOmega4bar[2,2] * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[0,0] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif2] * self.yOmega4bar[0,0] * self.yu[0,0] * self.yu[mif1,0] * self.yubar[0,1] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif2] * self.yOmega4bar[1,0] * self.yu[0,1] * self.yu[mif1,0] * self.yubar[0,1] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif2] * self.yOmega4bar[2,0] * self.yu[0,2] * self.yu[mif1,0] * self.yubar[0,1] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,1] * self.yOmega4bar[0,0] * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[0,1] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,1] * self.yOmega4bar[1,0] * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[0,1] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,1] * self.yOmega4bar[2,0] * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[0,1] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif2] * self.yOmega4bar[0,1] * self.yu[0,0] * self.yu[mif1,1] * self.yubar[0,1] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif2] * self.yOmega4bar[1,1] * self.yu[0,1] * self.yu[mif1,1] * self.yubar[0,1] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif2] * self.yOmega4bar[2,1] * self.yu[0,2] * self.yu[mif1,1] * self.yubar[0,1] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,1] * self.yOmega4bar[0,1] * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[0,1] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,1] * self.yOmega4bar[1,1] * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[0,1] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,1] * self.yOmega4bar[2,1] * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[0,1] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif2] * self.yOmega4bar[0,2] * self.yu[0,0] * self.yu[mif1,2] * self.yubar[0,1] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif2] * self.yOmega4bar[1,2] * self.yu[0,1] * self.yu[mif1,2] * self.yubar[0,1] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif2] * self.yOmega4bar[2,2] * self.yu[0,2] * self.yu[mif1,2] * self.yubar[0,1] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,1] * self.yOmega4bar[0,2] * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[0,1] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,1] * self.yOmega4bar[1,2] * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[0,1] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,1] * self.yOmega4bar[2,2] * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[0,1] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif2] * self.yOmega4bar[0,0] * self.yu[0,0] * self.yu[mif1,0] * self.yubar[0,2] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif2] * self.yOmega4bar[1,0] * self.yu[0,1] * self.yu[mif1,0] * self.yubar[0,2] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif2] * self.yOmega4bar[2,0] * self.yu[0,2] * self.yu[mif1,0] * self.yubar[0,2] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,2] * self.yOmega4bar[0,0] * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[0,2] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,2] * self.yOmega4bar[1,0] * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[0,2] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,2] * self.yOmega4bar[2,0] * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[0,2] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif2] * self.yOmega4bar[0,1] * self.yu[0,0] * self.yu[mif1,1] * self.yubar[0,2] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif2] * self.yOmega4bar[1,1] * self.yu[0,1] * self.yu[mif1,1] * self.yubar[0,2] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif2] * self.yOmega4bar[2,1] * self.yu[0,2] * self.yu[mif1,1] * self.yubar[0,2] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,2] * self.yOmega4bar[0,1] * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[0,2] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,2] * self.yOmega4bar[1,1] * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[0,2] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,2] * self.yOmega4bar[2,1] * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[0,2] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif2] * self.yOmega4bar[0,2] * self.yu[0,0] * self.yu[mif1,2] * self.yubar[0,2] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif2] * self.yOmega4bar[1,2] * self.yu[0,1] * self.yu[mif1,2] * self.yubar[0,2] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif2] * self.yOmega4bar[2,2] * self.yu[0,2] * self.yu[mif1,2] * self.yubar[0,2] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,2] * self.yOmega4bar[0,2] * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[0,2] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,2] * self.yOmega4bar[1,2] * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[0,2] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,2] * self.yOmega4bar[2,2] * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[0,2] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4bar[0,0] * self.yu[1,0] * self.yu[mif1,0] * self.yubar[1,0] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4bar[1,0] * self.yu[1,1] * self.yu[mif1,0] * self.yubar[1,0] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4bar[2,0] * self.yu[1,2] * self.yu[mif1,0] * self.yubar[1,0] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,0] * self.yOmega4bar[0,0] * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[1,0] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,0] * self.yOmega4bar[1,0] * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[1,0] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,0] * self.yOmega4bar[2,0] * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[1,0] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4bar[0,1] * self.yu[1,0] * self.yu[mif1,1] * self.yubar[1,0] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4bar[1,1] * self.yu[1,1] * self.yu[mif1,1] * self.yubar[1,0] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4bar[2,1] * self.yu[1,2] * self.yu[mif1,1] * self.yubar[1,0] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,0] * self.yOmega4bar[0,1] * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[1,0] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,0] * self.yOmega4bar[1,1] * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[1,0] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,0] * self.yOmega4bar[2,1] * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[1,0] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4bar[0,2] * self.yu[1,0] * self.yu[mif1,2] * self.yubar[1,0] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4bar[1,2] * self.yu[1,1] * self.yu[mif1,2] * self.yubar[1,0] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4bar[2,2] * self.yu[1,2] * self.yu[mif1,2] * self.yubar[1,0] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,0] * self.yOmega4bar[0,2] * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[1,0] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,0] * self.yOmega4bar[1,2] * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[1,0] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,0] * self.yOmega4bar[2,2] * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[1,0] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif2] * self.yOmega4bar[0,0] * self.yu[1,0] * self.yu[mif1,0] * self.yubar[1,1] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif2] * self.yOmega4bar[1,0] * self.yu[1,1] * self.yu[mif1,0] * self.yubar[1,1] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif2] * self.yOmega4bar[2,0] * self.yu[1,2] * self.yu[mif1,0] * self.yubar[1,1] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,1] * self.yOmega4bar[0,0] * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[1,1] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,1] * self.yOmega4bar[1,0] * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[1,1] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,1] * self.yOmega4bar[2,0] * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[1,1] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif2] * self.yOmega4bar[0,1] * self.yu[1,0] * self.yu[mif1,1] * self.yubar[1,1] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif2] * self.yOmega4bar[1,1] * self.yu[1,1] * self.yu[mif1,1] * self.yubar[1,1] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif2] * self.yOmega4bar[2,1] * self.yu[1,2] * self.yu[mif1,1] * self.yubar[1,1] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,1] * self.yOmega4bar[0,1] * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[1,1] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,1] * self.yOmega4bar[1,1] * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[1,1] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,1] * self.yOmega4bar[2,1] * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[1,1] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif2] * self.yOmega4bar[0,2] * self.yu[1,0] * self.yu[mif1,2] * self.yubar[1,1] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif2] * self.yOmega4bar[1,2] * self.yu[1,1] * self.yu[mif1,2] * self.yubar[1,1] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif2] * self.yOmega4bar[2,2] * self.yu[1,2] * self.yu[mif1,2] * self.yubar[1,1] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,1] * self.yOmega4bar[0,2] * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[1,1] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,1] * self.yOmega4bar[1,2] * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[1,1] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,1] * self.yOmega4bar[2,2] * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[1,1] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif2] * self.yOmega4bar[0,0] * self.yu[1,0] * self.yu[mif1,0] * self.yubar[1,2] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif2] * self.yOmega4bar[1,0] * self.yu[1,1] * self.yu[mif1,0] * self.yubar[1,2] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif2] * self.yOmega4bar[2,0] * self.yu[1,2] * self.yu[mif1,0] * self.yubar[1,2] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,2] * self.yOmega4bar[0,0] * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[1,2] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,2] * self.yOmega4bar[1,0] * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[1,2] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,2] * self.yOmega4bar[2,0] * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[1,2] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif2] * self.yOmega4bar[0,1] * self.yu[1,0] * self.yu[mif1,1] * self.yubar[1,2] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif2] * self.yOmega4bar[1,1] * self.yu[1,1] * self.yu[mif1,1] * self.yubar[1,2] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif2] * self.yOmega4bar[2,1] * self.yu[1,2] * self.yu[mif1,1] * self.yubar[1,2] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,2] * self.yOmega4bar[0,1] * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[1,2] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,2] * self.yOmega4bar[1,1] * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[1,2] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,2] * self.yOmega4bar[2,1] * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[1,2] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif2] * self.yOmega4bar[0,2] * self.yu[1,0] * self.yu[mif1,2] * self.yubar[1,2] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif2] * self.yOmega4bar[1,2] * self.yu[1,1] * self.yu[mif1,2] * self.yubar[1,2] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif2] * self.yOmega4bar[2,2] * self.yu[1,2] * self.yu[mif1,2] * self.yubar[1,2] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,2] * self.yOmega4bar[0,2] * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[1,2] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,2] * self.yOmega4bar[1,2] * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[1,2] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,2] * self.yOmega4bar[2,2] * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[1,2] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4bar[0,0] * self.yu[2,0] * self.yu[mif1,0] * self.yubar[2,0] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4bar[1,0] * self.yu[2,1] * self.yu[mif1,0] * self.yubar[2,0] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4bar[2,0] * self.yu[2,2] * self.yu[mif1,0] * self.yubar[2,0] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,0] * self.yOmega4bar[0,0] * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[2,0] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,0] * self.yOmega4bar[1,0] * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[2,0] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,0] * self.yOmega4bar[2,0] * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[2,0] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4bar[0,1] * self.yu[2,0] * self.yu[mif1,1] * self.yubar[2,0] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4bar[1,1] * self.yu[2,1] * self.yu[mif1,1] * self.yubar[2,0] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4bar[2,1] * self.yu[2,2] * self.yu[mif1,1] * self.yubar[2,0] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,0] * self.yOmega4bar[0,1] * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[2,0] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,0] * self.yOmega4bar[1,1] * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[2,0] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,0] * self.yOmega4bar[2,1] * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[2,0] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4bar[0,2] * self.yu[2,0] * self.yu[mif1,2] * self.yubar[2,0] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4bar[1,2] * self.yu[2,1] * self.yu[mif1,2] * self.yubar[2,0] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4bar[2,2] * self.yu[2,2] * self.yu[mif1,2] * self.yubar[2,0] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,0] * self.yOmega4bar[0,2] * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[2,0] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,0] * self.yOmega4bar[1,2] * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[2,0] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,0] * self.yOmega4bar[2,2] * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[2,0] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif2] * self.yOmega4bar[0,0] * self.yu[2,0] * self.yu[mif1,0] * self.yubar[2,1] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif2] * self.yOmega4bar[1,0] * self.yu[2,1] * self.yu[mif1,0] * self.yubar[2,1] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif2] * self.yOmega4bar[2,0] * self.yu[2,2] * self.yu[mif1,0] * self.yubar[2,1] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,1] * self.yOmega4bar[0,0] * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[2,1] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,1] * self.yOmega4bar[1,0] * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[2,1] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,1] * self.yOmega4bar[2,0] * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[2,1] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif2] * self.yOmega4bar[0,1] * self.yu[2,0] * self.yu[mif1,1] * self.yubar[2,1] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif2] * self.yOmega4bar[1,1] * self.yu[2,1] * self.yu[mif1,1] * self.yubar[2,1] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif2] * self.yOmega4bar[2,1] * self.yu[2,2] * self.yu[mif1,1] * self.yubar[2,1] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,1] * self.yOmega4bar[0,1] * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[2,1] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,1] * self.yOmega4bar[1,1] * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[2,1] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,1] * self.yOmega4bar[2,1] * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[2,1] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif2] * self.yOmega4bar[0,2] * self.yu[2,0] * self.yu[mif1,2] * self.yubar[2,1] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif2] * self.yOmega4bar[1,2] * self.yu[2,1] * self.yu[mif1,2] * self.yubar[2,1] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif2] * self.yOmega4bar[2,2] * self.yu[2,2] * self.yu[mif1,2] * self.yubar[2,1] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,1] * self.yOmega4bar[0,2] * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[2,1] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,1] * self.yOmega4bar[1,2] * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[2,1] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,1] * self.yOmega4bar[2,2] * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[2,1] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif2] * self.yOmega4bar[0,0] * self.yu[2,0] * self.yu[mif1,0] * self.yubar[2,2] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif2] * self.yOmega4bar[1,0] * self.yu[2,1] * self.yu[mif1,0] * self.yubar[2,2] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif2] * self.yOmega4bar[2,0] * self.yu[2,2] * self.yu[mif1,0] * self.yubar[2,2] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,2] * self.yOmega4bar[0,0] * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[2,2] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,2] * self.yOmega4bar[1,0] * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[2,2] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,2] * self.yOmega4bar[2,0] * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[2,2] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif2] * self.yOmega4bar[0,1] * self.yu[2,0] * self.yu[mif1,1] * self.yubar[2,2] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif2] * self.yOmega4bar[1,1] * self.yu[2,1] * self.yu[mif1,1] * self.yubar[2,2] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif2] * self.yOmega4bar[2,1] * self.yu[2,2] * self.yu[mif1,1] * self.yubar[2,2] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,2] * self.yOmega4bar[0,1] * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[2,2] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,2] * self.yOmega4bar[1,1] * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[2,2] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,2] * self.yOmega4bar[2,1] * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[2,2] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif2] * self.yOmega4bar[0,2] * self.yu[2,0] * self.yu[mif1,2] * self.yubar[2,2] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif2] * self.yOmega4bar[1,2] * self.yu[2,1] * self.yu[mif1,2] * self.yubar[2,2] + -1/8 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif2] * self.yOmega4bar[2,2] * self.yu[2,2] * self.yu[mif1,2] * self.yubar[2,2] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,2] * self.yOmega4bar[0,2] * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[2,2] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,2] * self.yOmega4bar[1,2] * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[2,2] + 1/24 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,2] * self.yOmega4bar[2,2] * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[2,2])

    def alphaOuu(self, mif1,mif2,mif3,mif4):
        return (-1/768 * (self.g3)**(4) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.kronecker_delta(mif2,mif3) + -2/405 * (self.g1)**(4) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 1/2304 * (self.g3)**(4) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 5/81 * (self.g1)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yOmega4[0,mif2] * self.yOmega4bar[0,mif1] + -13/1728 * (self.g3)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yOmega4[0,mif2] * self.yOmega4bar[0,mif1] + 1/27 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yOmega4[0,mif2] * self.yOmega4bar[0,mif1] + -1/288 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yOmega4[0,mif2] * self.yOmega4bar[0,mif1] + -1/27 * (self.g1)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[0,mif2] * self.yOmega4bar[0,mif1] + 1/288 * (self.g3)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[0,mif2] * self.yOmega4bar[0,mif1] + 13/576 * (self.g3)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yOmega4[0,mif4] * self.yOmega4bar[0,mif1] + 1/96 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yOmega4[0,mif4] * self.yOmega4bar[0,mif1] + -1/96 * (self.g3)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[0,mif4] * self.yOmega4bar[0,mif1] + -1/64 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif3] * self.yOmega4[mif2,mif4] * self.yOmega4bar[0,0] * self.yOmega4bar[0,mif1] + -1/32 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif3] * self.yOmega4[mif2,mif4] * self.yOmega4bar[0,0] * self.yOmega4bar[0,mif1] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[0,mif3] * self.yOmega4[mif2,mif4] * self.yOmega4bar[0,0] * self.yOmega4bar[0,mif1] + 1/576 * (self.g3)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yOmega4[0,mif2] * self.yOmega4bar[0,mif3] + 1/96 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yOmega4[0,mif2] * self.yOmega4bar[0,mif3] + -1/96 * (self.g3)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[0,mif2] * self.yOmega4bar[0,mif3] + 7/162 * (self.g1)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yOmega4[0,mif4] * self.yOmega4bar[0,mif3] + -1/1728 * (self.g3)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yOmega4[0,mif4] * self.yOmega4bar[0,mif3] + 1/27 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yOmega4[0,mif4] * self.yOmega4bar[0,mif3] + -1/288 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yOmega4[0,mif4] * self.yOmega4bar[0,mif3] + -1/27 * (self.g1)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[0,mif4] * self.yOmega4bar[0,mif3] + 1/288 * (self.g3)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[0,mif4] * self.yOmega4bar[0,mif3] + -3/16 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4[0,mif4] * self.yOmega4bar[0,mif1] * self.yOmega4bar[0,mif3] + -1/64 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,0] * self.yOmega4[mif4,mif2] * self.yOmega4bar[0,mif1] * self.yOmega4bar[0,mif3] + -1/32 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,0] * self.yOmega4[mif4,mif2] * self.yOmega4bar[0,mif1] * self.yOmega4bar[0,mif3] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[0,0] * self.yOmega4[mif4,mif2] * self.yOmega4bar[0,mif1] * self.yOmega4bar[0,mif3] + -1/64 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif3] * self.yOmega4[mif2,mif4] * self.yOmega4bar[0,mif1] * self.yOmega4bar[1,0] + -1/32 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif3] * self.yOmega4[mif2,mif4] * self.yOmega4bar[0,mif1] * self.yOmega4bar[1,0] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[1,mif3] * self.yOmega4[mif2,mif4] * self.yOmega4bar[0,mif1] * self.yOmega4bar[1,0] + 5/81 * (self.g1)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yOmega4[1,mif2] * self.yOmega4bar[1,mif1] + -13/1728 * (self.g3)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yOmega4[1,mif2] * self.yOmega4bar[1,mif1] + 1/27 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yOmega4[1,mif2] * self.yOmega4bar[1,mif1] + -1/288 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yOmega4[1,mif2] * self.yOmega4bar[1,mif1] + -1/27 * (self.g1)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[1,mif2] * self.yOmega4bar[1,mif1] + 1/288 * (self.g3)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[1,mif2] * self.yOmega4bar[1,mif1] + 13/576 * (self.g3)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yOmega4[1,mif4] * self.yOmega4bar[1,mif1] + 1/96 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yOmega4[1,mif4] * self.yOmega4bar[1,mif1] + -1/96 * (self.g3)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[1,mif4] * self.yOmega4bar[1,mif1] + -1/64 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif3] * self.yOmega4[mif2,mif4] * self.yOmega4bar[0,1] * self.yOmega4bar[1,mif1] + -1/32 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif3] * self.yOmega4[mif2,mif4] * self.yOmega4bar[0,1] * self.yOmega4bar[1,mif1] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[0,mif3] * self.yOmega4[mif2,mif4] * self.yOmega4bar[0,1] * self.yOmega4bar[1,mif1] + -1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif4] * self.yOmega4[1,mif2] * self.yOmega4bar[0,mif3] * self.yOmega4bar[1,mif1] + -5/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4[1,mif4] * self.yOmega4bar[0,mif3] * self.yOmega4bar[1,mif1] + -1/64 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,0] * self.yOmega4[mif4,mif2] * self.yOmega4bar[0,mif3] * self.yOmega4bar[1,mif1] + -1/32 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,0] * self.yOmega4[mif4,mif2] * self.yOmega4bar[0,mif3] * self.yOmega4bar[1,mif1] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[1,0] * self.yOmega4[mif4,mif2] * self.yOmega4bar[0,mif3] * self.yOmega4bar[1,mif1] + -1/64 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif3] * self.yOmega4[mif2,mif4] * self.yOmega4bar[1,1] * self.yOmega4bar[1,mif1] + -1/32 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif3] * self.yOmega4[mif2,mif4] * self.yOmega4bar[1,1] * self.yOmega4bar[1,mif1] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[1,mif3] * self.yOmega4[mif2,mif4] * self.yOmega4bar[1,1] * self.yOmega4bar[1,mif1] + 1/576 * (self.g3)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yOmega4[1,mif2] * self.yOmega4bar[1,mif3] + 1/96 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yOmega4[1,mif2] * self.yOmega4bar[1,mif3] + -1/96 * (self.g3)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[1,mif2] * self.yOmega4bar[1,mif3] + 7/162 * (self.g1)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yOmega4[1,mif4] * self.yOmega4bar[1,mif3] + -1/1728 * (self.g3)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yOmega4[1,mif4] * self.yOmega4bar[1,mif3] + 1/27 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yOmega4[1,mif4] * self.yOmega4bar[1,mif3] + -1/288 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yOmega4[1,mif4] * self.yOmega4bar[1,mif3] + -1/27 * (self.g1)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[1,mif4] * self.yOmega4bar[1,mif3] + 1/288 * (self.g3)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[1,mif4] * self.yOmega4bar[1,mif3] + -5/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif4] * self.yOmega4[1,mif2] * self.yOmega4bar[0,mif1] * self.yOmega4bar[1,mif3] + -1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4[1,mif4] * self.yOmega4bar[0,mif1] * self.yOmega4bar[1,mif3] + -1/64 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,1] * self.yOmega4[mif4,mif2] * self.yOmega4bar[0,mif1] * self.yOmega4bar[1,mif3] + -1/32 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,1] * self.yOmega4[mif4,mif2] * self.yOmega4bar[0,mif1] * self.yOmega4bar[1,mif3] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[0,1] * self.yOmega4[mif4,mif2] * self.yOmega4bar[0,mif1] * self.yOmega4bar[1,mif3] + -3/16 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif2] * self.yOmega4[1,mif4] * self.yOmega4bar[1,mif1] * self.yOmega4bar[1,mif3] + -1/64 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,1] * self.yOmega4[mif4,mif2] * self.yOmega4bar[1,mif1] * self.yOmega4bar[1,mif3] + -1/32 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,1] * self.yOmega4[mif4,mif2] * self.yOmega4bar[1,mif1] * self.yOmega4bar[1,mif3] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[1,1] * self.yOmega4[mif4,mif2] * self.yOmega4bar[1,mif1] * self.yOmega4bar[1,mif3] + -1/64 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif3] * self.yOmega4[mif2,mif4] * self.yOmega4bar[0,mif1] * self.yOmega4bar[2,0] + -1/32 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif3] * self.yOmega4[mif2,mif4] * self.yOmega4bar[0,mif1] * self.yOmega4bar[2,0] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[2,mif3] * self.yOmega4[mif2,mif4] * self.yOmega4bar[0,mif1] * self.yOmega4bar[2,0] + -1/64 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif3] * self.yOmega4[mif2,mif4] * self.yOmega4bar[1,mif1] * self.yOmega4bar[2,1] + -1/32 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif3] * self.yOmega4[mif2,mif4] * self.yOmega4bar[1,mif1] * self.yOmega4bar[2,1] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[2,mif3] * self.yOmega4[mif2,mif4] * self.yOmega4bar[1,mif1] * self.yOmega4bar[2,1] + 5/81 * (self.g1)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yOmega4[2,mif2] * self.yOmega4bar[2,mif1] + -13/1728 * (self.g3)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yOmega4[2,mif2] * self.yOmega4bar[2,mif1] + 1/27 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yOmega4[2,mif2] * self.yOmega4bar[2,mif1] + -1/288 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yOmega4[2,mif2] * self.yOmega4bar[2,mif1] + -1/27 * (self.g1)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[2,mif2] * self.yOmega4bar[2,mif1] + 1/288 * (self.g3)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[2,mif2] * self.yOmega4bar[2,mif1] + 13/576 * (self.g3)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yOmega4[2,mif4] * self.yOmega4bar[2,mif1] + 1/96 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yOmega4[2,mif4] * self.yOmega4bar[2,mif1] + -1/96 * (self.g3)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[2,mif4] * self.yOmega4bar[2,mif1] + -1/64 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif3] * self.yOmega4[mif2,mif4] * self.yOmega4bar[0,2] * self.yOmega4bar[2,mif1] + -1/32 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif3] * self.yOmega4[mif2,mif4] * self.yOmega4bar[0,2] * self.yOmega4bar[2,mif1] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[0,mif3] * self.yOmega4[mif2,mif4] * self.yOmega4bar[0,2] * self.yOmega4bar[2,mif1] + -1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif4] * self.yOmega4[2,mif2] * self.yOmega4bar[0,mif3] * self.yOmega4bar[2,mif1] + -5/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4[2,mif4] * self.yOmega4bar[0,mif3] * self.yOmega4bar[2,mif1] + -1/64 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,0] * self.yOmega4[mif4,mif2] * self.yOmega4bar[0,mif3] * self.yOmega4bar[2,mif1] + -1/32 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,0] * self.yOmega4[mif4,mif2] * self.yOmega4bar[0,mif3] * self.yOmega4bar[2,mif1] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[2,0] * self.yOmega4[mif4,mif2] * self.yOmega4bar[0,mif3] * self.yOmega4bar[2,mif1] + -1/64 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif3] * self.yOmega4[mif2,mif4] * self.yOmega4bar[1,2] * self.yOmega4bar[2,mif1] + -1/32 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif3] * self.yOmega4[mif2,mif4] * self.yOmega4bar[1,2] * self.yOmega4bar[2,mif1] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[1,mif3] * self.yOmega4[mif2,mif4] * self.yOmega4bar[1,2] * self.yOmega4bar[2,mif1] + -1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif4] * self.yOmega4[2,mif2] * self.yOmega4bar[1,mif3] * self.yOmega4bar[2,mif1] + -5/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif2] * self.yOmega4[2,mif4] * self.yOmega4bar[1,mif3] * self.yOmega4bar[2,mif1] + -1/64 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,1] * self.yOmega4[mif4,mif2] * self.yOmega4bar[1,mif3] * self.yOmega4bar[2,mif1] + -1/32 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,1] * self.yOmega4[mif4,mif2] * self.yOmega4bar[1,mif3] * self.yOmega4bar[2,mif1] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[2,1] * self.yOmega4[mif4,mif2] * self.yOmega4bar[1,mif3] * self.yOmega4bar[2,mif1] + -1/64 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif3] * self.yOmega4[mif2,mif4] * self.yOmega4bar[2,2] * self.yOmega4bar[2,mif1] + -1/32 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif3] * self.yOmega4[mif2,mif4] * self.yOmega4bar[2,2] * self.yOmega4bar[2,mif1] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[2,mif3] * self.yOmega4[mif2,mif4] * self.yOmega4bar[2,2] * self.yOmega4bar[2,mif1] + 1/576 * (self.g3)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yOmega4[2,mif2] * self.yOmega4bar[2,mif3] + 1/96 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yOmega4[2,mif2] * self.yOmega4bar[2,mif3] + -1/96 * (self.g3)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[2,mif2] * self.yOmega4bar[2,mif3] + 7/162 * (self.g1)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yOmega4[2,mif4] * self.yOmega4bar[2,mif3] + -1/1728 * (self.g3)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yOmega4[2,mif4] * self.yOmega4bar[2,mif3] + 1/27 * (self.g1)**(2) * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yOmega4[2,mif4] * self.yOmega4bar[2,mif3] + -1/288 * (self.g3)**(2) * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yOmega4[2,mif4] * self.yOmega4bar[2,mif3] + -1/27 * (self.g1)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[2,mif4] * self.yOmega4bar[2,mif3] + 1/288 * (self.g3)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[2,mif4] * self.yOmega4bar[2,mif3] + -5/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif4] * self.yOmega4[2,mif2] * self.yOmega4bar[0,mif1] * self.yOmega4bar[2,mif3] + -1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4[2,mif4] * self.yOmega4bar[0,mif1] * self.yOmega4bar[2,mif3] + -1/64 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,2] * self.yOmega4[mif4,mif2] * self.yOmega4bar[0,mif1] * self.yOmega4bar[2,mif3] + -1/32 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,2] * self.yOmega4[mif4,mif2] * self.yOmega4bar[0,mif1] * self.yOmega4bar[2,mif3] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[0,2] * self.yOmega4[mif4,mif2] * self.yOmega4bar[0,mif1] * self.yOmega4bar[2,mif3] + -5/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif4] * self.yOmega4[2,mif2] * self.yOmega4bar[1,mif1] * self.yOmega4bar[2,mif3] + -1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif2] * self.yOmega4[2,mif4] * self.yOmega4bar[1,mif1] * self.yOmega4bar[2,mif3] + -1/64 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,2] * self.yOmega4[mif4,mif2] * self.yOmega4bar[1,mif1] * self.yOmega4bar[2,mif3] + -1/32 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,2] * self.yOmega4[mif4,mif2] * self.yOmega4bar[1,mif1] * self.yOmega4bar[2,mif3] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[1,2] * self.yOmega4[mif4,mif2] * self.yOmega4bar[1,mif1] * self.yOmega4bar[2,mif3] + -3/16 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif2] * self.yOmega4[2,mif4] * self.yOmega4bar[2,mif1] * self.yOmega4bar[2,mif3] + -1/64 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,2] * self.yOmega4[mif4,mif2] * self.yOmega4bar[2,mif1] * self.yOmega4bar[2,mif3] + -1/32 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,2] * self.yOmega4[mif4,mif2] * self.yOmega4bar[2,mif1] * self.yOmega4bar[2,mif3] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[2,2] * self.yOmega4[mif4,mif2] * self.yOmega4bar[2,mif1] * self.yOmega4bar[2,mif3] + -1/64 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif3] * self.yOmega4[mif4,mif2] * self.yOmega4bar[0,0] * self.yOmega4bar[mif1,0] + -1/32 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif3] * self.yOmega4[mif4,mif2] * self.yOmega4bar[0,0] * self.yOmega4bar[mif1,0] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[0,mif3] * self.yOmega4[mif4,mif2] * self.yOmega4bar[0,0] * self.yOmega4bar[mif1,0] + -1/64 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif3] * self.yOmega4[mif4,mif2] * self.yOmega4bar[1,0] * self.yOmega4bar[mif1,0] + -1/32 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif3] * self.yOmega4[mif4,mif2] * self.yOmega4bar[1,0] * self.yOmega4bar[mif1,0] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[1,mif3] * self.yOmega4[mif4,mif2] * self.yOmega4bar[1,0] * self.yOmega4bar[mif1,0] + -1/64 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif3] * self.yOmega4[mif4,mif2] * self.yOmega4bar[2,0] * self.yOmega4bar[mif1,0] + -1/32 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif3] * self.yOmega4[mif4,mif2] * self.yOmega4bar[2,0] * self.yOmega4bar[mif1,0] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[2,mif3] * self.yOmega4[mif4,mif2] * self.yOmega4bar[2,0] * self.yOmega4bar[mif1,0] + -1/64 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif3] * self.yOmega4[mif4,mif2] * self.yOmega4bar[0,1] * self.yOmega4bar[mif1,1] + -1/32 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif3] * self.yOmega4[mif4,mif2] * self.yOmega4bar[0,1] * self.yOmega4bar[mif1,1] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[0,mif3] * self.yOmega4[mif4,mif2] * self.yOmega4bar[0,1] * self.yOmega4bar[mif1,1] + -1/64 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif3] * self.yOmega4[mif4,mif2] * self.yOmega4bar[1,1] * self.yOmega4bar[mif1,1] + -1/32 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif3] * self.yOmega4[mif4,mif2] * self.yOmega4bar[1,1] * self.yOmega4bar[mif1,1] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[1,mif3] * self.yOmega4[mif4,mif2] * self.yOmega4bar[1,1] * self.yOmega4bar[mif1,1] + -1/64 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif3] * self.yOmega4[mif4,mif2] * self.yOmega4bar[2,1] * self.yOmega4bar[mif1,1] + -1/32 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif3] * self.yOmega4[mif4,mif2] * self.yOmega4bar[2,1] * self.yOmega4bar[mif1,1] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[2,mif3] * self.yOmega4[mif4,mif2] * self.yOmega4bar[2,1] * self.yOmega4bar[mif1,1] + -1/64 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif3] * self.yOmega4[mif4,mif2] * self.yOmega4bar[0,2] * self.yOmega4bar[mif1,2] + -1/32 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif3] * self.yOmega4[mif4,mif2] * self.yOmega4bar[0,2] * self.yOmega4bar[mif1,2] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[0,mif3] * self.yOmega4[mif4,mif2] * self.yOmega4bar[0,2] * self.yOmega4bar[mif1,2] + -1/64 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif3] * self.yOmega4[mif4,mif2] * self.yOmega4bar[1,2] * self.yOmega4bar[mif1,2] + -1/32 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif3] * self.yOmega4[mif4,mif2] * self.yOmega4bar[1,2] * self.yOmega4bar[mif1,2] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[1,mif3] * self.yOmega4[mif4,mif2] * self.yOmega4bar[1,2] * self.yOmega4bar[mif1,2] + -1/64 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif3] * self.yOmega4[mif4,mif2] * self.yOmega4bar[2,2] * self.yOmega4bar[mif1,2] + -1/32 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif3] * self.yOmega4[mif4,mif2] * self.yOmega4bar[2,2] * self.yOmega4bar[mif1,2] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[2,mif3] * self.yOmega4[mif4,mif2] * self.yOmega4bar[2,2] * self.yOmega4bar[mif1,2] + 3/32 * (self.g3)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[mif2,mif4] * self.yOmega4bar[mif1,mif3] + 1/4 * (self.MOmega4)**(-2) * self.yOmega4[mif4,mif2] * self.yOmega4bar[mif1,mif3] + 1/12 * (self.g1)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[mif4,mif2] * self.yOmega4bar[mif1,mif3] + 3/32 * self.epsilonbar * (self.g3)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[mif4,mif2] * self.yOmega4bar[mif1,mif3] + 1/16 * self.epsilonbar * (self.g3)**(2) * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[mif4,mif2] * self.yOmega4bar[mif1,mif3] + -1/16 * self.epsilonbar * (self.g3)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[mif4,mif2] * self.yOmega4bar[mif1,mif3] + -1/64 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4[mif4,0] * self.yOmega4bar[0,0] * self.yOmega4bar[mif1,mif3] + -1/32 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4[mif4,0] * self.yOmega4bar[0,0] * self.yOmega4bar[mif1,mif3] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[0,mif2] * self.yOmega4[mif4,0] * self.yOmega4bar[0,0] * self.yOmega4bar[mif1,mif3] + -1/64 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4[mif4,1] * self.yOmega4bar[0,1] * self.yOmega4bar[mif1,mif3] + -1/32 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4[mif4,1] * self.yOmega4bar[0,1] * self.yOmega4bar[mif1,mif3] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[0,mif2] * self.yOmega4[mif4,1] * self.yOmega4bar[0,1] * self.yOmega4bar[mif1,mif3] + -1/64 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4[mif4,2] * self.yOmega4bar[0,2] * self.yOmega4bar[mif1,mif3] + -1/32 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4[mif4,2] * self.yOmega4bar[0,2] * self.yOmega4bar[mif1,mif3] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[0,mif2] * self.yOmega4[mif4,2] * self.yOmega4bar[0,2] * self.yOmega4bar[mif1,mif3] + -1/64 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,0] * self.yOmega4[0,mif2] * self.yOmega4bar[0,mif4] * self.yOmega4bar[mif1,mif3] + -1/32 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,0] * self.yOmega4[0,mif2] * self.yOmega4bar[0,mif4] * self.yOmega4bar[mif1,mif3] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[0,0] * self.yOmega4[0,mif2] * self.yOmega4bar[0,mif4] * self.yOmega4bar[mif1,mif3] + -1/64 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,1] * self.yOmega4[1,mif2] * self.yOmega4bar[0,mif4] * self.yOmega4bar[mif1,mif3] + -1/32 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,1] * self.yOmega4[1,mif2] * self.yOmega4bar[0,mif4] * self.yOmega4bar[mif1,mif3] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[0,1] * self.yOmega4[1,mif2] * self.yOmega4bar[0,mif4] * self.yOmega4bar[mif1,mif3] + -1/64 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,2] * self.yOmega4[2,mif2] * self.yOmega4bar[0,mif4] * self.yOmega4bar[mif1,mif3] + -1/32 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,2] * self.yOmega4[2,mif2] * self.yOmega4bar[0,mif4] * self.yOmega4bar[mif1,mif3] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[0,2] * self.yOmega4[2,mif2] * self.yOmega4bar[0,mif4] * self.yOmega4bar[mif1,mif3] + -1/64 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif2] * self.yOmega4[mif4,0] * self.yOmega4bar[1,0] * self.yOmega4bar[mif1,mif3] + -1/32 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif2] * self.yOmega4[mif4,0] * self.yOmega4bar[1,0] * self.yOmega4bar[mif1,mif3] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[1,mif2] * self.yOmega4[mif4,0] * self.yOmega4bar[1,0] * self.yOmega4bar[mif1,mif3] + -1/64 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif2] * self.yOmega4[mif4,1] * self.yOmega4bar[1,1] * self.yOmega4bar[mif1,mif3] + -1/32 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif2] * self.yOmega4[mif4,1] * self.yOmega4bar[1,1] * self.yOmega4bar[mif1,mif3] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[1,mif2] * self.yOmega4[mif4,1] * self.yOmega4bar[1,1] * self.yOmega4bar[mif1,mif3] + -1/64 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif2] * self.yOmega4[mif4,2] * self.yOmega4bar[1,2] * self.yOmega4bar[mif1,mif3] + -1/32 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif2] * self.yOmega4[mif4,2] * self.yOmega4bar[1,2] * self.yOmega4bar[mif1,mif3] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[1,mif2] * self.yOmega4[mif4,2] * self.yOmega4bar[1,2] * self.yOmega4bar[mif1,mif3] + -1/64 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4[1,0] * self.yOmega4bar[1,mif4] * self.yOmega4bar[mif1,mif3] + -1/32 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4[1,0] * self.yOmega4bar[1,mif4] * self.yOmega4bar[mif1,mif3] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[0,mif2] * self.yOmega4[1,0] * self.yOmega4bar[1,mif4] * self.yOmega4bar[mif1,mif3] + -1/64 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,1] * self.yOmega4[1,mif2] * self.yOmega4bar[1,mif4] * self.yOmega4bar[mif1,mif3] + -1/32 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,1] * self.yOmega4[1,mif2] * self.yOmega4bar[1,mif4] * self.yOmega4bar[mif1,mif3] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[1,1] * self.yOmega4[1,mif2] * self.yOmega4bar[1,mif4] * self.yOmega4bar[mif1,mif3] + -1/64 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,2] * self.yOmega4[2,mif2] * self.yOmega4bar[1,mif4] * self.yOmega4bar[mif1,mif3] + -1/32 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,2] * self.yOmega4[2,mif2] * self.yOmega4bar[1,mif4] * self.yOmega4bar[mif1,mif3] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[1,2] * self.yOmega4[2,mif2] * self.yOmega4bar[1,mif4] * self.yOmega4bar[mif1,mif3] + -1/64 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif2] * self.yOmega4[mif4,0] * self.yOmega4bar[2,0] * self.yOmega4bar[mif1,mif3] + -1/32 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif2] * self.yOmega4[mif4,0] * self.yOmega4bar[2,0] * self.yOmega4bar[mif1,mif3] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[2,mif2] * self.yOmega4[mif4,0] * self.yOmega4bar[2,0] * self.yOmega4bar[mif1,mif3] + -1/64 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif2] * self.yOmega4[mif4,1] * self.yOmega4bar[2,1] * self.yOmega4bar[mif1,mif3] + -1/32 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif2] * self.yOmega4[mif4,1] * self.yOmega4bar[2,1] * self.yOmega4bar[mif1,mif3] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[2,mif2] * self.yOmega4[mif4,1] * self.yOmega4bar[2,1] * self.yOmega4bar[mif1,mif3] + -1/64 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif2] * self.yOmega4[mif4,2] * self.yOmega4bar[2,2] * self.yOmega4bar[mif1,mif3] + -1/32 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif2] * self.yOmega4[mif4,2] * self.yOmega4bar[2,2] * self.yOmega4bar[mif1,mif3] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[2,mif2] * self.yOmega4[mif4,2] * self.yOmega4bar[2,2] * self.yOmega4bar[mif1,mif3] + -1/64 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4[2,0] * self.yOmega4bar[2,mif4] * self.yOmega4bar[mif1,mif3] + -1/32 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4[2,0] * self.yOmega4bar[2,mif4] * self.yOmega4bar[mif1,mif3] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[0,mif2] * self.yOmega4[2,0] * self.yOmega4bar[2,mif4] * self.yOmega4bar[mif1,mif3] + -1/64 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif2] * self.yOmega4[2,1] * self.yOmega4bar[2,mif4] * self.yOmega4bar[mif1,mif3] + -1/32 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif2] * self.yOmega4[2,1] * self.yOmega4bar[2,mif4] * self.yOmega4bar[mif1,mif3] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[1,mif2] * self.yOmega4[2,1] * self.yOmega4bar[2,mif4] * self.yOmega4bar[mif1,mif3] + -1/64 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,2] * self.yOmega4[2,mif2] * self.yOmega4bar[2,mif4] * self.yOmega4bar[mif1,mif3] + -1/32 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,2] * self.yOmega4[2,mif2] * self.yOmega4bar[2,mif4] * self.yOmega4bar[mif1,mif3] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[2,2] * self.yOmega4[2,mif2] * self.yOmega4bar[2,mif4] * self.yOmega4bar[mif1,mif3] + -1/64 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,0] * self.yOmega4[mif2,mif4] * self.yOmega4bar[0,mif1] * self.yOmega4bar[mif3,0] + -1/32 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,0] * self.yOmega4[mif2,mif4] * self.yOmega4bar[0,mif1] * self.yOmega4bar[mif3,0] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[0,0] * self.yOmega4[mif2,mif4] * self.yOmega4bar[0,mif1] * self.yOmega4bar[mif3,0] + -1/64 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,0] * self.yOmega4[mif2,mif4] * self.yOmega4bar[1,mif1] * self.yOmega4bar[mif3,0] + -1/32 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,0] * self.yOmega4[mif2,mif4] * self.yOmega4bar[1,mif1] * self.yOmega4bar[mif3,0] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[1,0] * self.yOmega4[mif2,mif4] * self.yOmega4bar[1,mif1] * self.yOmega4bar[mif3,0] + -1/64 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,0] * self.yOmega4[mif2,mif4] * self.yOmega4bar[2,mif1] * self.yOmega4bar[mif3,0] + -1/32 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,0] * self.yOmega4[mif2,mif4] * self.yOmega4bar[2,mif1] * self.yOmega4bar[mif3,0] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[2,0] * self.yOmega4[mif2,mif4] * self.yOmega4bar[2,mif1] * self.yOmega4bar[mif3,0] + -1/64 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,1] * self.yOmega4[mif2,mif4] * self.yOmega4bar[0,mif1] * self.yOmega4bar[mif3,1] + -1/32 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,1] * self.yOmega4[mif2,mif4] * self.yOmega4bar[0,mif1] * self.yOmega4bar[mif3,1] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[0,1] * self.yOmega4[mif2,mif4] * self.yOmega4bar[0,mif1] * self.yOmega4bar[mif3,1] + -1/64 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,1] * self.yOmega4[mif2,mif4] * self.yOmega4bar[1,mif1] * self.yOmega4bar[mif3,1] + -1/32 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,1] * self.yOmega4[mif2,mif4] * self.yOmega4bar[1,mif1] * self.yOmega4bar[mif3,1] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[1,1] * self.yOmega4[mif2,mif4] * self.yOmega4bar[1,mif1] * self.yOmega4bar[mif3,1] + -1/64 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,1] * self.yOmega4[mif2,mif4] * self.yOmega4bar[2,mif1] * self.yOmega4bar[mif3,1] + -1/32 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,1] * self.yOmega4[mif2,mif4] * self.yOmega4bar[2,mif1] * self.yOmega4bar[mif3,1] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[2,1] * self.yOmega4[mif2,mif4] * self.yOmega4bar[2,mif1] * self.yOmega4bar[mif3,1] + -1/64 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,2] * self.yOmega4[mif2,mif4] * self.yOmega4bar[0,mif1] * self.yOmega4bar[mif3,2] + -1/32 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,2] * self.yOmega4[mif2,mif4] * self.yOmega4bar[0,mif1] * self.yOmega4bar[mif3,2] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[0,2] * self.yOmega4[mif2,mif4] * self.yOmega4bar[0,mif1] * self.yOmega4bar[mif3,2] + -1/64 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,2] * self.yOmega4[mif2,mif4] * self.yOmega4bar[1,mif1] * self.yOmega4bar[mif3,2] + -1/32 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,2] * self.yOmega4[mif2,mif4] * self.yOmega4bar[1,mif1] * self.yOmega4bar[mif3,2] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[1,2] * self.yOmega4[mif2,mif4] * self.yOmega4bar[1,mif1] * self.yOmega4bar[mif3,2] + -1/64 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,2] * self.yOmega4[mif2,mif4] * self.yOmega4bar[2,mif1] * self.yOmega4bar[mif3,2] + -1/32 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,2] * self.yOmega4[mif2,mif4] * self.yOmega4bar[2,mif1] * self.yOmega4bar[mif3,2] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[2,2] * self.yOmega4[mif2,mif4] * self.yOmega4bar[2,mif1] * self.yOmega4bar[mif3,2] + 1/4 * (self.MOmega4)**(-2) * self.yOmega4[mif2,mif4] * self.yOmega4bar[mif3,mif1] + 1/32 * (self.g3)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[mif2,mif4] * self.yOmega4bar[mif3,mif1] + 3/32 * self.epsilonbar * (self.g3)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[mif2,mif4] * self.yOmega4bar[mif3,mif1] + 1/16 * self.epsilonbar * (self.g3)**(2) * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[mif2,mif4] * self.yOmega4bar[mif3,mif1] + -1/16 * self.epsilonbar * (self.g3)**(2) * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[mif2,mif4] * self.yOmega4bar[mif3,mif1] + -1/64 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4[0,mif4] * self.yOmega4bar[0,0] * self.yOmega4bar[mif3,mif1] + -1/32 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4[0,mif4] * self.yOmega4bar[0,0] * self.yOmega4bar[mif3,mif1] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[0,mif2] * self.yOmega4[0,mif4] * self.yOmega4bar[0,0] * self.yOmega4bar[mif3,mif1] + -1/64 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4[1,mif4] * self.yOmega4bar[0,1] * self.yOmega4bar[mif3,mif1] + -1/32 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4[1,mif4] * self.yOmega4bar[0,1] * self.yOmega4bar[mif3,mif1] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[0,mif2] * self.yOmega4[1,mif4] * self.yOmega4bar[0,1] * self.yOmega4bar[mif3,mif1] + -1/64 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4[2,mif4] * self.yOmega4bar[0,2] * self.yOmega4bar[mif3,mif1] + -1/32 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif2] * self.yOmega4[2,mif4] * self.yOmega4bar[0,2] * self.yOmega4bar[mif3,mif1] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[0,mif2] * self.yOmega4[2,mif4] * self.yOmega4bar[0,2] * self.yOmega4bar[mif3,mif1] + -1/64 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,0] * self.yOmega4[mif2,0] * self.yOmega4bar[0,mif4] * self.yOmega4bar[mif3,mif1] + -1/32 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,0] * self.yOmega4[mif2,0] * self.yOmega4bar[0,mif4] * self.yOmega4bar[mif3,mif1] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[0,0] * self.yOmega4[mif2,0] * self.yOmega4bar[0,mif4] * self.yOmega4bar[mif3,mif1] + -1/64 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,1] * self.yOmega4[mif2,1] * self.yOmega4bar[0,mif4] * self.yOmega4bar[mif3,mif1] + -1/32 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,1] * self.yOmega4[mif2,1] * self.yOmega4bar[0,mif4] * self.yOmega4bar[mif3,mif1] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[0,1] * self.yOmega4[mif2,1] * self.yOmega4bar[0,mif4] * self.yOmega4bar[mif3,mif1] + -1/64 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,2] * self.yOmega4[mif2,2] * self.yOmega4bar[0,mif4] * self.yOmega4bar[mif3,mif1] + -1/32 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,2] * self.yOmega4[mif2,2] * self.yOmega4bar[0,mif4] * self.yOmega4bar[mif3,mif1] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[0,2] * self.yOmega4[mif2,2] * self.yOmega4bar[0,mif4] * self.yOmega4bar[mif3,mif1] + -1/64 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif4] * self.yOmega4[1,mif2] * self.yOmega4bar[1,0] * self.yOmega4bar[mif3,mif1] + -1/32 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif4] * self.yOmega4[1,mif2] * self.yOmega4bar[1,0] * self.yOmega4bar[mif3,mif1] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[0,mif4] * self.yOmega4[1,mif2] * self.yOmega4bar[1,0] * self.yOmega4bar[mif3,mif1] + -1/64 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif2] * self.yOmega4[1,mif4] * self.yOmega4bar[1,1] * self.yOmega4bar[mif3,mif1] + -1/32 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif2] * self.yOmega4[1,mif4] * self.yOmega4bar[1,1] * self.yOmega4bar[mif3,mif1] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[1,mif2] * self.yOmega4[1,mif4] * self.yOmega4bar[1,1] * self.yOmega4bar[mif3,mif1] + -1/64 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif2] * self.yOmega4[2,mif4] * self.yOmega4bar[1,2] * self.yOmega4bar[mif3,mif1] + -1/32 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif2] * self.yOmega4[2,mif4] * self.yOmega4bar[1,2] * self.yOmega4bar[mif3,mif1] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[1,mif2] * self.yOmega4[2,mif4] * self.yOmega4bar[1,2] * self.yOmega4bar[mif3,mif1] + -1/64 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,0] * self.yOmega4[mif2,0] * self.yOmega4bar[1,mif4] * self.yOmega4bar[mif3,mif1] + -1/32 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,0] * self.yOmega4[mif2,0] * self.yOmega4bar[1,mif4] * self.yOmega4bar[mif3,mif1] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[1,0] * self.yOmega4[mif2,0] * self.yOmega4bar[1,mif4] * self.yOmega4bar[mif3,mif1] + -1/64 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,1] * self.yOmega4[mif2,1] * self.yOmega4bar[1,mif4] * self.yOmega4bar[mif3,mif1] + -1/32 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,1] * self.yOmega4[mif2,1] * self.yOmega4bar[1,mif4] * self.yOmega4bar[mif3,mif1] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[1,1] * self.yOmega4[mif2,1] * self.yOmega4bar[1,mif4] * self.yOmega4bar[mif3,mif1] + -1/64 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,2] * self.yOmega4[mif2,2] * self.yOmega4bar[1,mif4] * self.yOmega4bar[mif3,mif1] + -1/32 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,2] * self.yOmega4[mif2,2] * self.yOmega4bar[1,mif4] * self.yOmega4bar[mif3,mif1] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[1,2] * self.yOmega4[mif2,2] * self.yOmega4bar[1,mif4] * self.yOmega4bar[mif3,mif1] + -1/64 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif4] * self.yOmega4[2,mif2] * self.yOmega4bar[2,0] * self.yOmega4bar[mif3,mif1] + -1/32 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[0,mif4] * self.yOmega4[2,mif2] * self.yOmega4bar[2,0] * self.yOmega4bar[mif3,mif1] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[0,mif4] * self.yOmega4[2,mif2] * self.yOmega4bar[2,0] * self.yOmega4bar[mif3,mif1] + -1/64 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif4] * self.yOmega4[2,mif2] * self.yOmega4bar[2,1] * self.yOmega4bar[mif3,mif1] + -1/32 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[1,mif4] * self.yOmega4[2,mif2] * self.yOmega4bar[2,1] * self.yOmega4bar[mif3,mif1] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[1,mif4] * self.yOmega4[2,mif2] * self.yOmega4bar[2,1] * self.yOmega4bar[mif3,mif1] + -1/64 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif2] * self.yOmega4[2,mif4] * self.yOmega4bar[2,2] * self.yOmega4bar[mif3,mif1] + -1/32 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,mif2] * self.yOmega4[2,mif4] * self.yOmega4bar[2,2] * self.yOmega4bar[mif3,mif1] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[2,mif2] * self.yOmega4[2,mif4] * self.yOmega4bar[2,2] * self.yOmega4bar[mif3,mif1] + -1/64 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,0] * self.yOmega4[mif2,0] * self.yOmega4bar[2,mif4] * self.yOmega4bar[mif3,mif1] + -1/32 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,0] * self.yOmega4[mif2,0] * self.yOmega4bar[2,mif4] * self.yOmega4bar[mif3,mif1] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[2,0] * self.yOmega4[mif2,0] * self.yOmega4bar[2,mif4] * self.yOmega4bar[mif3,mif1] + -1/64 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,1] * self.yOmega4[mif2,1] * self.yOmega4bar[2,mif4] * self.yOmega4bar[mif3,mif1] + -1/32 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,1] * self.yOmega4[mif2,1] * self.yOmega4bar[2,mif4] * self.yOmega4bar[mif3,mif1] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[2,1] * self.yOmega4[mif2,1] * self.yOmega4bar[2,mif4] * self.yOmega4bar[mif3,mif1] + -1/64 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,2] * self.yOmega4[mif2,2] * self.yOmega4bar[2,mif4] * self.yOmega4bar[mif3,mif1] + -1/32 * self.invepsilonbar * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yOmega4[2,2] * self.yOmega4[mif2,2] * self.yOmega4bar[2,mif4] * self.yOmega4bar[mif3,mif1] + 1/32 * (self.MOmega4)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MOmega4)**(2) * (self.mu)**(-2)) * self.yOmega4[2,2] * self.yOmega4[mif2,2] * self.yOmega4bar[2,mif4] * self.yOmega4bar[mif3,mif1])

    def alphaOuW(self, mif1,mif2):
        return 0

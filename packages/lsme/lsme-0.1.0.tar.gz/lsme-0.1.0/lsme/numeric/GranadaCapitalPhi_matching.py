## Symbols used:
# yquPhibar
# ydbar
# yd
# ydqPhibar
# lambdaHatPrimePrimePhi
# MPhi
# yquPhi
# yl
# ylbar
# lambdaHatPrimePrimePhibar
# muH
# g1
# g2
# epsilonbar
# invepsilonbar
# lambdaHatPrimePhi
# ydqPhi
# mu
# lam
# yubar
# lambdaHatPhi
# onelooporder
# g3
# yu

import sys
import os
import numpy as np

import lsme.numeric.matchingresult as matchingresult

class GranadaPhiMatchingResult(matchingresult.GenericMatchingResult):
    def __init__(self, name='Phi'):
        super().__init__(name)
        self.MPhi = 1
        self.yquPhi = np.ones((3, 3))
        self.yquPhibar = np.ones((3, 3))
        self.ydqPhi = np.ones((3, 3))
        self.ydqPhibar = np.ones((3, 3))
        self.lambdaHatPhi = 1
        self.lambdaHatPhibar = 1
        self.lambdaHatPrimePhi = 1
        self.lambdaHatPrimePhibar = 1
        self.lambdaHatPrimePrimePhi = 1
        self.lambdaHatPrimePrimePhibar = 1
        self.nonvanishing = ['alphaO3G', 'alphaO3W', 'alphaOH', 'alphaOHB', 'alphaOHBox', 'alphaOHD', 'alphaOHG', 'alphaOHW', 'alphaOHWB', 'alphaOdB', 'alphaOdd', 'alphaOdG', 'alphaOdH', 'alphaOdW', 'alphaOed', 'alphaOee', 'alphaOeH', 'alphaOeu', 'alphaOHd', 'alphaOHe', 'alphaOHl1', 'alphaOHl3', 'alphaOHq1', 'alphaOHq3', 'alphaOHu', 'alphaOHud', 'alphaOld', 'alphaOle', 'alphaOledq', 'alphaOlequ1', 'alphaOll', 'alphaOlq1', 'alphaOlq3', 'alphaOlu', 'alphaOqd1', 'alphaOqd8', 'alphaOqe', 'alphaOqq1', 'alphaOqq3', 'alphaOqu1', 'alphaOqu8', 'alphaOquqd1', 'alphaOquqd8', 'alphaOuB', 'alphaOud1', 'alphaOud8', 'alphaOuG', 'alphaOuH', 'alphaOuu', 'alphaOuW']

    def alphaO3G(self, ):
        return 1/480 * (self.g3)**(3) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2)

    def alphaO3Gt(self, ):
        return 0

    def alphaO3W(self, ):
        return 1/720 * (self.g2)**(3) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2)

    def alphaO3Wt(self, ):
        return 0

    def alphaOH(self, ):
        return (-1/120 * (self.g2)**(4) * self.lam * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) + 1/6 * (self.lambdaHatPhi)**(3) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) + 1/2 * (self.lambdaHatPhi)**(2) * self.lambdaHatPrimePhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) + 2/3 * self.lam * (self.lambdaHatPrimePhi)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) + self.lambdaHatPhi * (self.lambdaHatPrimePhi)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) + 2/3 * (self.lambdaHatPrimePhi)**(3) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) + 8/3 * self.lam * self.lambdaHatPrimePrimePhi * self.lambdaHatPrimePrimePhibar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) + 4 * self.lambdaHatPhi * self.lambdaHatPrimePrimePhi * self.lambdaHatPrimePrimePhibar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) + 8 * self.lambdaHatPrimePhi * self.lambdaHatPrimePrimePhi * self.lambdaHatPrimePrimePhibar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2))

    def alphaOHB(self, ):
        return (-1/48 * (self.g1)**(2) * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) + -1/48 * (self.g1)**(2) * self.lambdaHatPrimePhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2))

    def alphaOHBox(self, ):
        return (-1/960 * (self.g1)**(4) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) + -1/320 * (self.g2)**(4) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) + -1/12 * (self.lambdaHatPhi)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) + -1/6 * self.lambdaHatPhi * self.lambdaHatPrimePhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) + 2/3 * self.lambdaHatPrimePrimePhi * self.lambdaHatPrimePrimePhibar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2))

    def alphaOHBt(self, ):
        return 0

    def alphaOHD(self, ):
        return (-1/240 * (self.g1)**(4) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) + -1/3 * (self.lambdaHatPrimePhi)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) + 4/3 * self.lambdaHatPrimePrimePhi * self.lambdaHatPrimePrimePhibar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2))

    def alphaOHG(self, ):
        return (-1/32 * (self.g3)**(2) * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) + -1/32 * (self.g3)**(2) * self.lambdaHatPrimePhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2))

    def alphaOHGt(self, ):
        return 0

    def alphaOHW(self, ):
        return (-1/48 * (self.g2)**(2) * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) + -1/48 * (self.g2)**(2) * self.lambdaHatPrimePhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2))

    def alphaOHWB(self, ):
        return -1/24 * self.g1 * self.g2 * self.lambdaHatPrimePhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2)

    def alphaOHWBt(self, ):
        return 0

    def alphaOHWt(self, ):
        return 0

    def alphaWeinberg(self, mif1,mif2):
        return 0

    def alphaOdB(self, mif1,mif2):
        return (-7/1728 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydqPhi[0,0] * self.ydqPhibar[0,mif1] + -7/1728 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydqPhi[0,1] * self.ydqPhibar[0,mif1] + -7/1728 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydqPhi[0,2] * self.ydqPhibar[0,mif1] + -7/1728 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydqPhi[1,0] * self.ydqPhibar[1,mif1] + -7/1728 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydqPhi[1,1] * self.ydqPhibar[1,mif1] + -7/1728 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydqPhi[1,2] * self.ydqPhibar[1,mif1] + -7/1728 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydqPhi[2,0] * self.ydqPhibar[2,mif1] + -7/1728 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydqPhi[2,1] * self.ydqPhibar[2,mif1] + -7/1728 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydqPhi[2,2] * self.ydqPhibar[2,mif1] + 5/864 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,0] * self.ydqPhibar[mif2,0] + 5/864 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,0] * self.ydqPhibar[mif2,0] + 5/864 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,0] * self.ydqPhibar[mif2,0] + 5/864 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,1] * self.ydqPhibar[mif2,1] + 5/864 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,1] * self.ydqPhibar[mif2,1] + 5/864 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,1] * self.ydqPhibar[mif2,1] + 5/864 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,2] * self.ydqPhibar[mif2,2] + 5/864 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,2] * self.ydqPhibar[mif2,2] + 5/864 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,2] * self.ydqPhibar[mif2,2] + 11/1728 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yquPhi[mif1,0] * self.yquPhibar[0,0] + 11/1728 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yquPhi[mif1,1] * self.yquPhibar[0,1] + 11/1728 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yquPhi[mif1,2] * self.yquPhibar[0,2] + 11/1728 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yquPhi[mif1,0] * self.yquPhibar[1,0] + 11/1728 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yquPhi[mif1,1] * self.yquPhibar[1,1] + 11/1728 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yquPhi[mif1,2] * self.yquPhibar[1,2] + 11/1728 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yquPhi[mif1,0] * self.yquPhibar[2,0] + 11/1728 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yquPhi[mif1,1] * self.yquPhibar[2,1] + 11/1728 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yquPhi[mif1,2] * self.yquPhibar[2,2] + -1/64 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,0] * self.yubar[0,0] + -5/288 * self.g1 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,0] * self.yubar[0,0] + 5/288 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,0] * self.yubar[0,0] + -1/64 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,1] * self.yubar[0,1] + -5/288 * self.g1 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,1] * self.yubar[0,1] + 5/288 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,1] * self.yubar[0,1] + -1/64 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,2] * self.yubar[0,2] + -5/288 * self.g1 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,2] * self.yubar[0,2] + 5/288 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,2] * self.yubar[0,2] + -1/64 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,0] * self.yubar[1,0] + -5/288 * self.g1 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,0] * self.yubar[1,0] + 5/288 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,0] * self.yubar[1,0] + -1/64 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,1] * self.yubar[1,1] + -5/288 * self.g1 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,1] * self.yubar[1,1] + 5/288 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,1] * self.yubar[1,1] + -1/64 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,2] * self.yubar[1,2] + -5/288 * self.g1 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,2] * self.yubar[1,2] + 5/288 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,2] * self.yubar[1,2] + -1/64 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,0] * self.yubar[2,0] + -5/288 * self.g1 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,0] * self.yubar[2,0] + 5/288 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,0] * self.yubar[2,0] + -1/64 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,1] * self.yubar[2,1] + -5/288 * self.g1 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,1] * self.yubar[2,1] + 5/288 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,1] * self.yubar[2,1] + -1/64 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,2] * self.yubar[2,2] + -5/288 * self.g1 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,2] * self.yubar[2,2] + 5/288 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,2] * self.yubar[2,2])

    def alphaOdd(self, mif1,mif2,mif3,mif4):
        return (-1/320 * (self.g3)**(4) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.kronecker_delta(mif2,mif3) + -1/2160 * (self.g1)**(4) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 1/960 * (self.g3)**(4) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 11/3888 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.ydqPhi[mif1,0] * self.ydqPhibar[mif2,0] + -17/10368 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.ydqPhi[mif1,0] * self.ydqPhibar[mif2,0] + 1/648 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.ydqPhi[mif1,0] * self.ydqPhibar[mif2,0] + -1/1728 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.ydqPhi[mif1,0] * self.ydqPhibar[mif2,0] + -1/648 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif1,0] * self.ydqPhibar[mif2,0] + 1/1728 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif1,0] * self.ydqPhibar[mif2,0] + 3/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[0,mif3] * self.ydqPhi[mif1,0] * self.ydqPhibar[mif2,0] + 1/128 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[0,mif3] * self.ydqPhi[mif1,0] * self.ydqPhibar[mif2,0] + -1/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,mif4] * self.ydbar[0,mif3] * self.ydqPhi[mif1,0] * self.ydqPhibar[mif2,0] + 3/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[0,mif3] * self.ydqPhi[mif1,1] * self.ydqPhibar[mif2,0] + 1/128 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[0,mif3] * self.ydqPhi[mif1,1] * self.ydqPhibar[mif2,0] + -1/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,mif4] * self.ydbar[0,mif3] * self.ydqPhi[mif1,1] * self.ydqPhibar[mif2,0] + 3/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[0,mif3] * self.ydqPhi[mif1,2] * self.ydqPhibar[mif2,0] + 1/128 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[0,mif3] * self.ydqPhi[mif1,2] * self.ydqPhibar[mif2,0] + -1/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,mif4] * self.ydbar[0,mif3] * self.ydqPhi[mif1,2] * self.ydqPhibar[mif2,0] + 17/3456 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif2,0] + 1/576 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif2,0] + -1/576 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif2,0] + 1/768 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[0,mif1] * self.ydqPhi[mif3,0] * self.ydqPhibar[mif2,0] + -1/384 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[0,mif1] * self.ydqPhi[mif3,0] * self.ydqPhibar[mif2,0] + 1/384 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,mif4] * self.ydbar[0,mif1] * self.ydqPhi[mif3,0] * self.ydqPhibar[mif2,0] + 1/768 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[0,mif1] * self.ydqPhi[mif3,1] * self.ydqPhibar[mif2,0] + -1/384 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[0,mif1] * self.ydqPhi[mif3,1] * self.ydqPhibar[mif2,0] + 1/384 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,mif4] * self.ydbar[0,mif1] * self.ydqPhi[mif3,1] * self.ydqPhibar[mif2,0] + 1/768 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[0,mif1] * self.ydqPhi[mif3,2] * self.ydqPhibar[mif2,0] + -1/384 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[0,mif1] * self.ydqPhi[mif3,2] * self.ydqPhibar[mif2,0] + 1/384 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,mif4] * self.ydbar[0,mif1] * self.ydqPhi[mif3,2] * self.ydqPhibar[mif2,0] + 3/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[1,mif3] * self.ydqPhi[mif1,0] * self.ydqPhibar[mif2,1] + 1/128 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[1,mif3] * self.ydqPhi[mif1,0] * self.ydqPhibar[mif2,1] + -1/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,mif4] * self.ydbar[1,mif3] * self.ydqPhi[mif1,0] * self.ydqPhibar[mif2,1] + 11/3888 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.ydqPhi[mif1,1] * self.ydqPhibar[mif2,1] + -17/10368 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.ydqPhi[mif1,1] * self.ydqPhibar[mif2,1] + 1/648 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.ydqPhi[mif1,1] * self.ydqPhibar[mif2,1] + -1/1728 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.ydqPhi[mif1,1] * self.ydqPhibar[mif2,1] + -1/648 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif1,1] * self.ydqPhibar[mif2,1] + 1/1728 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif1,1] * self.ydqPhibar[mif2,1] + 3/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[1,mif3] * self.ydqPhi[mif1,1] * self.ydqPhibar[mif2,1] + 1/128 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[1,mif3] * self.ydqPhi[mif1,1] * self.ydqPhibar[mif2,1] + -1/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,mif4] * self.ydbar[1,mif3] * self.ydqPhi[mif1,1] * self.ydqPhibar[mif2,1] + 3/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[1,mif3] * self.ydqPhi[mif1,2] * self.ydqPhibar[mif2,1] + 1/128 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[1,mif3] * self.ydqPhi[mif1,2] * self.ydqPhibar[mif2,1] + -1/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,mif4] * self.ydbar[1,mif3] * self.ydqPhi[mif1,2] * self.ydqPhibar[mif2,1] + 1/768 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[1,mif1] * self.ydqPhi[mif3,0] * self.ydqPhibar[mif2,1] + -1/384 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[1,mif1] * self.ydqPhi[mif3,0] * self.ydqPhibar[mif2,1] + 1/384 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,mif4] * self.ydbar[1,mif1] * self.ydqPhi[mif3,0] * self.ydqPhibar[mif2,1] + 17/3456 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif2,1] + 1/576 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif2,1] + -1/576 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif2,1] + 1/768 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[1,mif1] * self.ydqPhi[mif3,1] * self.ydqPhibar[mif2,1] + -1/384 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[1,mif1] * self.ydqPhi[mif3,1] * self.ydqPhibar[mif2,1] + 1/384 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,mif4] * self.ydbar[1,mif1] * self.ydqPhi[mif3,1] * self.ydqPhibar[mif2,1] + 1/768 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[1,mif1] * self.ydqPhi[mif3,2] * self.ydqPhibar[mif2,1] + -1/384 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[1,mif1] * self.ydqPhi[mif3,2] * self.ydqPhibar[mif2,1] + 1/384 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,mif4] * self.ydbar[1,mif1] * self.ydqPhi[mif3,2] * self.ydqPhibar[mif2,1] + 3/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[2,mif3] * self.ydqPhi[mif1,0] * self.ydqPhibar[mif2,2] + 1/128 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[2,mif3] * self.ydqPhi[mif1,0] * self.ydqPhibar[mif2,2] + -1/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,mif4] * self.ydbar[2,mif3] * self.ydqPhi[mif1,0] * self.ydqPhibar[mif2,2] + 3/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[2,mif3] * self.ydqPhi[mif1,1] * self.ydqPhibar[mif2,2] + 1/128 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[2,mif3] * self.ydqPhi[mif1,1] * self.ydqPhibar[mif2,2] + -1/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,mif4] * self.ydbar[2,mif3] * self.ydqPhi[mif1,1] * self.ydqPhibar[mif2,2] + 11/3888 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.ydqPhi[mif1,2] * self.ydqPhibar[mif2,2] + -17/10368 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.ydqPhi[mif1,2] * self.ydqPhibar[mif2,2] + 1/648 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.ydqPhi[mif1,2] * self.ydqPhibar[mif2,2] + -1/1728 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.ydqPhi[mif1,2] * self.ydqPhibar[mif2,2] + -1/648 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif1,2] * self.ydqPhibar[mif2,2] + 1/1728 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif1,2] * self.ydqPhibar[mif2,2] + 3/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[2,mif3] * self.ydqPhi[mif1,2] * self.ydqPhibar[mif2,2] + 1/128 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[2,mif3] * self.ydqPhi[mif1,2] * self.ydqPhibar[mif2,2] + -1/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,mif4] * self.ydbar[2,mif3] * self.ydqPhi[mif1,2] * self.ydqPhibar[mif2,2] + 1/768 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[2,mif1] * self.ydqPhi[mif3,0] * self.ydqPhibar[mif2,2] + -1/384 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[2,mif1] * self.ydqPhi[mif3,0] * self.ydqPhibar[mif2,2] + 1/384 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,mif4] * self.ydbar[2,mif1] * self.ydqPhi[mif3,0] * self.ydqPhibar[mif2,2] + 1/768 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[2,mif1] * self.ydqPhi[mif3,1] * self.ydqPhibar[mif2,2] + -1/384 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[2,mif1] * self.ydqPhi[mif3,1] * self.ydqPhibar[mif2,2] + 1/384 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,mif4] * self.ydbar[2,mif1] * self.ydqPhi[mif3,1] * self.ydqPhibar[mif2,2] + 17/3456 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif2,2] + 1/576 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif2,2] + -1/576 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif2,2] + 1/768 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[2,mif1] * self.ydqPhi[mif3,2] * self.ydqPhibar[mif2,2] + -1/384 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[2,mif1] * self.ydqPhi[mif3,2] * self.ydqPhibar[mif2,2] + 1/384 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,mif4] * self.ydbar[2,mif1] * self.ydqPhi[mif3,2] * self.ydqPhibar[mif2,2] + 17/3456 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.ydqPhi[mif1,0] * self.ydqPhibar[mif4,0] + 1/576 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.ydqPhi[mif1,0] * self.ydqPhibar[mif4,0] + -1/576 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif1,0] * self.ydqPhibar[mif4,0] + -1/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,mif3] * self.ydqPhi[mif1,0] * self.ydqPhibar[mif4,0] + -1/384 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,mif3] * self.ydqPhi[mif1,0] * self.ydqPhibar[mif4,0] + 1/384 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,mif2] * self.ydbar[0,mif3] * self.ydqPhi[mif1,0] * self.ydqPhibar[mif4,0] + -1/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[0,mif3] * self.ydqPhi[mif1,1] * self.ydqPhibar[mif4,0] + -1/384 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[0,mif3] * self.ydqPhi[mif1,1] * self.ydqPhibar[mif4,0] + 1/384 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,mif2] * self.ydbar[0,mif3] * self.ydqPhi[mif1,1] * self.ydqPhibar[mif4,0] + -1/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[0,mif3] * self.ydqPhi[mif1,2] * self.ydqPhibar[mif4,0] + -1/384 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[0,mif3] * self.ydqPhi[mif1,2] * self.ydqPhibar[mif4,0] + 1/384 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,mif2] * self.ydbar[0,mif3] * self.ydqPhi[mif1,2] * self.ydqPhibar[mif4,0] + 11/3888 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,0] + -17/10368 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,0] + 1/648 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,0] + -1/1728 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,0] + -1/648 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,0] + 1/1728 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,0] + -1/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,mif1] * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,0] + 1/128 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,mif1] * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,0] + -1/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,mif2] * self.ydbar[0,mif1] * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,0] + -1/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[0,mif1] * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,0] + 1/128 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[0,mif1] * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,0] + -1/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,mif2] * self.ydbar[0,mif1] * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,0] + -1/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[0,mif1] * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,0] + 1/128 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[0,mif1] * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,0] + -1/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,mif2] * self.ydbar[0,mif1] * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,0] + -11/1152 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,0] * self.ydqPhi[mif3,0] * self.ydqPhibar[mif2,0] * self.ydqPhibar[mif4,0] + -1/2304 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,1] * self.ydqPhi[mif3,0] * self.ydqPhibar[mif2,1] * self.ydqPhibar[mif4,0] + -7/768 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,0] * self.ydqPhi[mif3,1] * self.ydqPhibar[mif2,1] * self.ydqPhibar[mif4,0] + -1/2304 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,2] * self.ydqPhi[mif3,0] * self.ydqPhibar[mif2,2] * self.ydqPhibar[mif4,0] + -7/768 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,0] * self.ydqPhi[mif3,2] * self.ydqPhibar[mif2,2] * self.ydqPhibar[mif4,0] + -1/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[1,mif3] * self.ydqPhi[mif1,0] * self.ydqPhibar[mif4,1] + -1/384 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[1,mif3] * self.ydqPhi[mif1,0] * self.ydqPhibar[mif4,1] + 1/384 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,mif2] * self.ydbar[1,mif3] * self.ydqPhi[mif1,0] * self.ydqPhibar[mif4,1] + 17/3456 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.ydqPhi[mif1,1] * self.ydqPhibar[mif4,1] + 1/576 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.ydqPhi[mif1,1] * self.ydqPhibar[mif4,1] + -1/576 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif1,1] * self.ydqPhibar[mif4,1] + -1/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,mif3] * self.ydqPhi[mif1,1] * self.ydqPhibar[mif4,1] + -1/384 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,mif3] * self.ydqPhi[mif1,1] * self.ydqPhibar[mif4,1] + 1/384 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,mif2] * self.ydbar[1,mif3] * self.ydqPhi[mif1,1] * self.ydqPhibar[mif4,1] + -1/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[1,mif3] * self.ydqPhi[mif1,2] * self.ydqPhibar[mif4,1] + -1/384 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[1,mif3] * self.ydqPhi[mif1,2] * self.ydqPhibar[mif4,1] + 1/384 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,mif2] * self.ydbar[1,mif3] * self.ydqPhi[mif1,2] * self.ydqPhibar[mif4,1] + -1/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[1,mif1] * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,1] + 1/128 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[1,mif1] * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,1] + -1/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,mif2] * self.ydbar[1,mif1] * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,1] + 11/3888 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,1] + -17/10368 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,1] + 1/648 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,1] + -1/1728 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,1] + -1/648 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,1] + 1/1728 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,1] + -1/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,mif1] * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,1] + 1/128 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,mif1] * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,1] + -1/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,mif2] * self.ydbar[1,mif1] * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,1] + -1/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[1,mif1] * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,1] + 1/128 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[1,mif1] * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,1] + -1/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,mif2] * self.ydbar[1,mif1] * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,1] + -7/768 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,1] * self.ydqPhi[mif3,0] * self.ydqPhibar[mif2,0] * self.ydqPhibar[mif4,1] + -1/2304 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,0] * self.ydqPhi[mif3,1] * self.ydqPhibar[mif2,0] * self.ydqPhibar[mif4,1] + -11/1152 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,1] * self.ydqPhi[mif3,1] * self.ydqPhibar[mif2,1] * self.ydqPhibar[mif4,1] + -1/2304 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,2] * self.ydqPhi[mif3,1] * self.ydqPhibar[mif2,2] * self.ydqPhibar[mif4,1] + -7/768 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,1] * self.ydqPhi[mif3,2] * self.ydqPhibar[mif2,2] * self.ydqPhibar[mif4,1] + -1/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[2,mif3] * self.ydqPhi[mif1,0] * self.ydqPhibar[mif4,2] + -1/384 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[2,mif3] * self.ydqPhi[mif1,0] * self.ydqPhibar[mif4,2] + 1/384 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,mif2] * self.ydbar[2,mif3] * self.ydqPhi[mif1,0] * self.ydqPhibar[mif4,2] + -1/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[2,mif3] * self.ydqPhi[mif1,1] * self.ydqPhibar[mif4,2] + -1/384 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[2,mif3] * self.ydqPhi[mif1,1] * self.ydqPhibar[mif4,2] + 1/384 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,mif2] * self.ydbar[2,mif3] * self.ydqPhi[mif1,1] * self.ydqPhibar[mif4,2] + 17/3456 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.ydqPhi[mif1,2] * self.ydqPhibar[mif4,2] + 1/576 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.ydqPhi[mif1,2] * self.ydqPhibar[mif4,2] + -1/576 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif1,2] * self.ydqPhibar[mif4,2] + -1/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,mif3] * self.ydqPhi[mif1,2] * self.ydqPhibar[mif4,2] + -1/384 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,mif3] * self.ydqPhi[mif1,2] * self.ydqPhibar[mif4,2] + 1/384 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,mif2] * self.ydbar[2,mif3] * self.ydqPhi[mif1,2] * self.ydqPhibar[mif4,2] + -1/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[2,mif1] * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,2] + 1/128 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[2,mif1] * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,2] + -1/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,mif2] * self.ydbar[2,mif1] * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,2] + -1/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[2,mif1] * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,2] + 1/128 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[2,mif1] * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,2] + -1/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,mif2] * self.ydbar[2,mif1] * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,2] + 11/3888 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,2] + -17/10368 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,2] + 1/648 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,2] + -1/1728 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,2] + -1/648 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,2] + 1/1728 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,2] + -1/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,mif1] * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,2] + 1/128 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,mif1] * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,2] + -1/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,mif2] * self.ydbar[2,mif1] * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,2] + -7/768 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,2] * self.ydqPhi[mif3,0] * self.ydqPhibar[mif2,0] * self.ydqPhibar[mif4,2] + -1/2304 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,0] * self.ydqPhi[mif3,2] * self.ydqPhibar[mif2,0] * self.ydqPhibar[mif4,2] + -7/768 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,2] * self.ydqPhi[mif3,1] * self.ydqPhibar[mif2,1] * self.ydqPhibar[mif4,2] + -1/2304 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,1] * self.ydqPhi[mif3,2] * self.ydqPhibar[mif2,1] * self.ydqPhibar[mif4,2] + -11/1152 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,2] * self.ydqPhi[mif3,2] * self.ydqPhibar[mif2,2] * self.ydqPhibar[mif4,2])

    def alphaOdG(self, mif1,mif2):
        return (-11/2304 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydqPhi[0,0] * self.ydqPhibar[0,mif1] + -11/2304 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydqPhi[0,1] * self.ydqPhibar[0,mif1] + -11/2304 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydqPhi[0,2] * self.ydqPhibar[0,mif1] + -11/2304 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydqPhi[1,0] * self.ydqPhibar[1,mif1] + -11/2304 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydqPhi[1,1] * self.ydqPhibar[1,mif1] + -11/2304 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydqPhi[1,2] * self.ydqPhibar[1,mif1] + -11/2304 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydqPhi[2,0] * self.ydqPhibar[2,mif1] + -11/2304 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydqPhi[2,1] * self.ydqPhibar[2,mif1] + -11/2304 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydqPhi[2,2] * self.ydqPhibar[2,mif1] + -11/1152 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,0] * self.ydqPhibar[mif2,0] + -11/1152 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,0] * self.ydqPhibar[mif2,0] + -11/1152 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,0] * self.ydqPhibar[mif2,0] + -11/1152 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,1] * self.ydqPhibar[mif2,1] + -11/1152 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,1] * self.ydqPhibar[mif2,1] + -11/1152 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,1] * self.ydqPhibar[mif2,1] + -11/1152 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,2] * self.ydqPhibar[mif2,2] + -11/1152 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,2] * self.ydqPhibar[mif2,2] + -11/1152 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,2] * self.ydqPhibar[mif2,2] + -1/64 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydqPhi[0,0] * self.ydqPhibar[mif2,mif1] + -1/64 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydqPhi[0,1] * self.ydqPhibar[mif2,mif1] + -1/64 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydqPhi[0,2] * self.ydqPhibar[mif2,mif1] + -1/64 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydqPhi[1,0] * self.ydqPhibar[mif2,mif1] + -1/64 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydqPhi[1,1] * self.ydqPhibar[mif2,mif1] + -1/64 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydqPhi[1,2] * self.ydqPhibar[mif2,mif1] + -1/64 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydqPhi[2,0] * self.ydqPhibar[mif2,mif1] + -1/64 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydqPhi[2,1] * self.ydqPhibar[mif2,mif1] + -1/64 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydqPhi[2,2] * self.ydqPhibar[mif2,mif1] + -11/2304 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yquPhi[mif1,0] * self.yquPhibar[0,0] + -11/2304 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yquPhi[mif1,1] * self.yquPhibar[0,1] + -11/2304 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yquPhi[mif1,2] * self.yquPhibar[0,2] + -11/2304 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yquPhi[mif1,0] * self.yquPhibar[1,0] + -11/2304 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yquPhi[mif1,1] * self.yquPhibar[1,1] + -11/2304 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yquPhi[mif1,2] * self.yquPhibar[1,2] + -11/2304 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yquPhi[mif1,0] * self.yquPhibar[2,0] + -11/2304 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yquPhi[mif1,1] * self.yquPhibar[2,1] + -11/2304 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yquPhi[mif1,2] * self.yquPhibar[2,2] + -1/64 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,0] * self.yubar[0,0] + 1/192 * self.g3 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,0] * self.yubar[0,0] + -1/192 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,0] * self.yubar[0,0] + -1/64 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,1] * self.yubar[0,1] + 1/192 * self.g3 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,1] * self.yubar[0,1] + -1/192 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,1] * self.yubar[0,1] + -1/64 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,2] * self.yubar[0,2] + 1/192 * self.g3 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,2] * self.yubar[0,2] + -1/192 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,2] * self.yubar[0,2] + -1/64 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,0] * self.yubar[1,0] + 1/192 * self.g3 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,0] * self.yubar[1,0] + -1/192 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,0] * self.yubar[1,0] + -1/64 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,1] * self.yubar[1,1] + 1/192 * self.g3 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,1] * self.yubar[1,1] + -1/192 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,1] * self.yubar[1,1] + -1/64 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,2] * self.yubar[1,2] + 1/192 * self.g3 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,2] * self.yubar[1,2] + -1/192 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,2] * self.yubar[1,2] + -1/64 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,0] * self.yubar[2,0] + 1/192 * self.g3 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,0] * self.yubar[2,0] + -1/192 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,0] * self.yubar[2,0] + -1/64 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,1] * self.yubar[2,1] + 1/192 * self.g3 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,1] * self.yubar[2,1] + -1/192 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,1] * self.yubar[2,1] + -1/64 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,2] * self.yubar[2,2] + 1/192 * self.g3 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,2] * self.yubar[2,2] + -1/192 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,2] * self.yubar[2,2])

    def alphaOdH(self, mif1,mif2):
        return (-1/480 * (self.g2)**(4) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif2] + 1/6 * (self.lambdaHatPrimePhi)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif2] + 2/3 * self.lambdaHatPrimePrimePhi * self.lambdaHatPrimePrimePhibar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[0,0] * self.ydqPhi[0,0] * self.ydqPhibar[0,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[0,1] * self.ydqPhi[0,0] * self.ydqPhibar[0,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[0,2] * self.ydqPhi[0,0] * self.ydqPhibar[0,0] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[1,0] * self.ydqPhi[0,0] * self.ydqPhibar[0,0] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[2,0] * self.ydqPhi[0,0] * self.ydqPhibar[0,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[0,0] * self.ydqPhi[0,1] * self.ydqPhibar[0,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[0,1] * self.ydqPhi[0,1] * self.ydqPhibar[0,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[0,2] * self.ydqPhi[0,1] * self.ydqPhibar[0,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[0,0] * self.ydqPhi[0,2] * self.ydqPhibar[0,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[0,1] * self.ydqPhi[0,2] * self.ydqPhibar[0,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[0,2] * self.ydqPhi[0,2] * self.ydqPhibar[0,0] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[0,0] * self.ydqPhi[1,0] * self.ydqPhibar[0,0] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[1,0] * self.ydqPhi[1,0] * self.ydqPhibar[0,0] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[2,0] * self.ydqPhi[1,0] * self.ydqPhibar[0,0] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[0,0] * self.ydqPhi[2,0] * self.ydqPhibar[0,0] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[1,0] * self.ydqPhi[2,0] * self.ydqPhibar[0,0] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[2,0] * self.ydqPhi[2,0] * self.ydqPhibar[0,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[1,0] * self.ydqPhi[0,0] * self.ydqPhibar[0,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[1,1] * self.ydqPhi[0,0] * self.ydqPhibar[0,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[1,2] * self.ydqPhi[0,0] * self.ydqPhibar[0,1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[0,0] * self.ydqPhi[0,1] * self.ydqPhibar[0,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[1,0] * self.ydqPhi[0,1] * self.ydqPhibar[0,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[1,1] * self.ydqPhi[0,1] * self.ydqPhibar[0,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[1,2] * self.ydqPhi[0,1] * self.ydqPhibar[0,1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[2,0] * self.ydqPhi[0,1] * self.ydqPhibar[0,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[1,0] * self.ydqPhi[0,2] * self.ydqPhibar[0,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[1,1] * self.ydqPhi[0,2] * self.ydqPhibar[0,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[1,2] * self.ydqPhi[0,2] * self.ydqPhibar[0,1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[0,0] * self.ydqPhi[1,1] * self.ydqPhibar[0,1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[1,0] * self.ydqPhi[1,1] * self.ydqPhibar[0,1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[2,0] * self.ydqPhi[1,1] * self.ydqPhibar[0,1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[0,0] * self.ydqPhi[2,1] * self.ydqPhibar[0,1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[1,0] * self.ydqPhi[2,1] * self.ydqPhibar[0,1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[2,0] * self.ydqPhi[2,1] * self.ydqPhibar[0,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[2,0] * self.ydqPhi[0,0] * self.ydqPhibar[0,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[2,1] * self.ydqPhi[0,0] * self.ydqPhibar[0,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[2,2] * self.ydqPhi[0,0] * self.ydqPhibar[0,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[2,0] * self.ydqPhi[0,1] * self.ydqPhibar[0,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[2,1] * self.ydqPhi[0,1] * self.ydqPhibar[0,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[2,2] * self.ydqPhi[0,1] * self.ydqPhibar[0,2] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[0,0] * self.ydqPhi[0,2] * self.ydqPhibar[0,2] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[1,0] * self.ydqPhi[0,2] * self.ydqPhibar[0,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[2,0] * self.ydqPhi[0,2] * self.ydqPhibar[0,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[2,1] * self.ydqPhi[0,2] * self.ydqPhibar[0,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[2,2] * self.ydqPhi[0,2] * self.ydqPhibar[0,2] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[0,0] * self.ydqPhi[1,2] * self.ydqPhibar[0,2] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[1,0] * self.ydqPhi[1,2] * self.ydqPhibar[0,2] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[2,0] * self.ydqPhi[1,2] * self.ydqPhibar[0,2] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[0,0] * self.ydqPhi[2,2] * self.ydqPhibar[0,2] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[1,0] * self.ydqPhi[2,2] * self.ydqPhibar[0,2] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[2,0] * self.ydqPhi[2,2] * self.ydqPhibar[0,2] + 1/48 * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydqPhi[0,0] * self.ydqPhibar[0,mif1] + 1/24 * self.lambdaHatPrimePhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydqPhi[0,0] * self.ydqPhibar[0,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.yd[0,mif2] * self.ydbar[0,0] * self.ydqPhi[0,0] * self.ydqPhibar[0,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[1,0] * self.ydbar[1,0] * self.ydqPhi[0,0] * self.ydqPhibar[0,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[2,0] * self.ydbar[2,0] * self.ydqPhi[0,0] * self.ydqPhibar[0,mif1] + 1/48 * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydqPhi[0,1] * self.ydqPhibar[0,mif1] + 1/24 * self.lambdaHatPrimePhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydqPhi[0,1] * self.ydqPhibar[0,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.yd[1,mif2] * self.ydbar[0,0] * self.ydqPhi[0,1] * self.ydqPhibar[0,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.yd[1,mif2] * self.ydbar[1,0] * self.ydqPhi[0,1] * self.ydqPhibar[0,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[2,0] * self.ydbar[2,0] * self.ydqPhi[0,1] * self.ydqPhibar[0,mif1] + 1/48 * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydqPhi[0,2] * self.ydqPhibar[0,mif1] + 1/24 * self.lambdaHatPrimePhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydqPhi[0,2] * self.ydqPhibar[0,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.yd[2,mif2] * self.ydbar[0,0] * self.ydqPhi[0,2] * self.ydqPhibar[0,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.yd[2,mif2] * self.ydbar[1,0] * self.ydqPhi[0,2] * self.ydqPhibar[0,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.yd[2,mif2] * self.ydbar[2,0] * self.ydqPhi[0,2] * self.ydqPhibar[0,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.yd[0,mif2] * self.ydbar[0,0] * self.ydqPhi[1,0] * self.ydqPhibar[0,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[1,1] * self.ydbar[1,0] * self.ydqPhi[1,0] * self.ydqPhibar[0,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[2,1] * self.ydbar[2,0] * self.ydqPhi[1,0] * self.ydqPhibar[0,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.yd[1,mif2] * self.ydbar[0,0] * self.ydqPhi[1,1] * self.ydqPhibar[0,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.yd[1,mif2] * self.ydbar[1,0] * self.ydqPhi[1,1] * self.ydqPhibar[0,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[2,1] * self.ydbar[2,0] * self.ydqPhi[1,1] * self.ydqPhibar[0,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.yd[2,mif2] * self.ydbar[0,0] * self.ydqPhi[1,2] * self.ydqPhibar[0,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.yd[2,mif2] * self.ydbar[1,0] * self.ydqPhi[1,2] * self.ydqPhibar[0,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.yd[2,mif2] * self.ydbar[2,0] * self.ydqPhi[1,2] * self.ydqPhibar[0,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.yd[0,mif2] * self.ydbar[0,0] * self.ydqPhi[2,0] * self.ydqPhibar[0,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[1,2] * self.ydbar[1,0] * self.ydqPhi[2,0] * self.ydqPhibar[0,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[2,2] * self.ydbar[2,0] * self.ydqPhi[2,0] * self.ydqPhibar[0,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.yd[1,mif2] * self.ydbar[0,0] * self.ydqPhi[2,1] * self.ydqPhibar[0,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.yd[1,mif2] * self.ydbar[1,0] * self.ydqPhi[2,1] * self.ydqPhibar[0,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[2,2] * self.ydbar[2,0] * self.ydqPhi[2,1] * self.ydqPhibar[0,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.yd[2,mif2] * self.ydbar[0,0] * self.ydqPhi[2,2] * self.ydqPhibar[0,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.yd[2,mif2] * self.ydbar[1,0] * self.ydqPhi[2,2] * self.ydqPhibar[0,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.yd[2,mif2] * self.ydbar[2,0] * self.ydqPhi[2,2] * self.ydqPhibar[0,mif1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[0,1] * self.ydqPhi[0,0] * self.ydqPhibar[1,0] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[1,1] * self.ydqPhi[0,0] * self.ydqPhibar[1,0] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[2,1] * self.ydqPhi[0,0] * self.ydqPhibar[1,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[0,0] * self.ydqPhi[1,0] * self.ydqPhibar[1,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[0,1] * self.ydqPhi[1,0] * self.ydqPhibar[1,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[0,2] * self.ydqPhi[1,0] * self.ydqPhibar[1,0] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[1,1] * self.ydqPhi[1,0] * self.ydqPhibar[1,0] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[2,1] * self.ydqPhi[1,0] * self.ydqPhibar[1,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[0,0] * self.ydqPhi[1,1] * self.ydqPhibar[1,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[0,1] * self.ydqPhi[1,1] * self.ydqPhibar[1,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[0,2] * self.ydqPhi[1,1] * self.ydqPhibar[1,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[0,0] * self.ydqPhi[1,2] * self.ydqPhibar[1,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[0,1] * self.ydqPhi[1,2] * self.ydqPhibar[1,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[0,2] * self.ydqPhi[1,2] * self.ydqPhibar[1,0] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[0,1] * self.ydqPhi[2,0] * self.ydqPhibar[1,0] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[1,1] * self.ydqPhi[2,0] * self.ydqPhibar[1,0] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[2,1] * self.ydqPhi[2,0] * self.ydqPhibar[1,0] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[0,1] * self.ydqPhi[0,1] * self.ydqPhibar[1,1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[1,1] * self.ydqPhi[0,1] * self.ydqPhibar[1,1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[2,1] * self.ydqPhi[0,1] * self.ydqPhibar[1,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[1,0] * self.ydqPhi[1,0] * self.ydqPhibar[1,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[1,1] * self.ydqPhi[1,0] * self.ydqPhibar[1,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[1,2] * self.ydqPhi[1,0] * self.ydqPhibar[1,1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[0,1] * self.ydqPhi[1,1] * self.ydqPhibar[1,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[1,0] * self.ydqPhi[1,1] * self.ydqPhibar[1,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[1,1] * self.ydqPhi[1,1] * self.ydqPhibar[1,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[1,2] * self.ydqPhi[1,1] * self.ydqPhibar[1,1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[2,1] * self.ydqPhi[1,1] * self.ydqPhibar[1,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[1,0] * self.ydqPhi[1,2] * self.ydqPhibar[1,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[1,1] * self.ydqPhi[1,2] * self.ydqPhibar[1,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[1,2] * self.ydqPhi[1,2] * self.ydqPhibar[1,1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[0,1] * self.ydqPhi[2,1] * self.ydqPhibar[1,1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[1,1] * self.ydqPhi[2,1] * self.ydqPhibar[1,1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[2,1] * self.ydqPhi[2,1] * self.ydqPhibar[1,1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[0,1] * self.ydqPhi[0,2] * self.ydqPhibar[1,2] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[1,1] * self.ydqPhi[0,2] * self.ydqPhibar[1,2] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[2,1] * self.ydqPhi[0,2] * self.ydqPhibar[1,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[2,0] * self.ydqPhi[1,0] * self.ydqPhibar[1,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[2,1] * self.ydqPhi[1,0] * self.ydqPhibar[1,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[2,2] * self.ydqPhi[1,0] * self.ydqPhibar[1,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[2,0] * self.ydqPhi[1,1] * self.ydqPhibar[1,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[2,1] * self.ydqPhi[1,1] * self.ydqPhibar[1,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[2,2] * self.ydqPhi[1,1] * self.ydqPhibar[1,2] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[0,1] * self.ydqPhi[1,2] * self.ydqPhibar[1,2] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[1,1] * self.ydqPhi[1,2] * self.ydqPhibar[1,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[2,0] * self.ydqPhi[1,2] * self.ydqPhibar[1,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[2,1] * self.ydqPhi[1,2] * self.ydqPhibar[1,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[2,2] * self.ydqPhi[1,2] * self.ydqPhibar[1,2] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[0,1] * self.ydqPhi[2,2] * self.ydqPhibar[1,2] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[1,1] * self.ydqPhi[2,2] * self.ydqPhibar[1,2] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[2,1] * self.ydqPhi[2,2] * self.ydqPhibar[1,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.yd[0,mif2] * self.ydbar[0,1] * self.ydqPhi[0,0] * self.ydqPhibar[1,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[1,0] * self.ydbar[1,1] * self.ydqPhi[0,0] * self.ydqPhibar[1,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[2,0] * self.ydbar[2,1] * self.ydqPhi[0,0] * self.ydqPhibar[1,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.yd[1,mif2] * self.ydbar[0,1] * self.ydqPhi[0,1] * self.ydqPhibar[1,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.yd[1,mif2] * self.ydbar[1,1] * self.ydqPhi[0,1] * self.ydqPhibar[1,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[2,0] * self.ydbar[2,1] * self.ydqPhi[0,1] * self.ydqPhibar[1,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.yd[2,mif2] * self.ydbar[0,1] * self.ydqPhi[0,2] * self.ydqPhibar[1,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.yd[2,mif2] * self.ydbar[1,1] * self.ydqPhi[0,2] * self.ydqPhibar[1,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.yd[2,mif2] * self.ydbar[2,1] * self.ydqPhi[0,2] * self.ydqPhibar[1,mif1] + 1/48 * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydqPhi[1,0] * self.ydqPhibar[1,mif1] + 1/24 * self.lambdaHatPrimePhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydqPhi[1,0] * self.ydqPhibar[1,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.yd[0,mif2] * self.ydbar[0,1] * self.ydqPhi[1,0] * self.ydqPhibar[1,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[1,1] * self.ydbar[1,1] * self.ydqPhi[1,0] * self.ydqPhibar[1,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[2,1] * self.ydbar[2,1] * self.ydqPhi[1,0] * self.ydqPhibar[1,mif1] + 1/48 * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydqPhi[1,1] * self.ydqPhibar[1,mif1] + 1/24 * self.lambdaHatPrimePhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydqPhi[1,1] * self.ydqPhibar[1,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.yd[1,mif2] * self.ydbar[0,1] * self.ydqPhi[1,1] * self.ydqPhibar[1,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.yd[1,mif2] * self.ydbar[1,1] * self.ydqPhi[1,1] * self.ydqPhibar[1,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[2,1] * self.ydbar[2,1] * self.ydqPhi[1,1] * self.ydqPhibar[1,mif1] + 1/48 * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydqPhi[1,2] * self.ydqPhibar[1,mif1] + 1/24 * self.lambdaHatPrimePhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydqPhi[1,2] * self.ydqPhibar[1,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.yd[2,mif2] * self.ydbar[0,1] * self.ydqPhi[1,2] * self.ydqPhibar[1,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.yd[2,mif2] * self.ydbar[1,1] * self.ydqPhi[1,2] * self.ydqPhibar[1,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.yd[2,mif2] * self.ydbar[2,1] * self.ydqPhi[1,2] * self.ydqPhibar[1,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.yd[0,mif2] * self.ydbar[0,1] * self.ydqPhi[2,0] * self.ydqPhibar[1,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[1,2] * self.ydbar[1,1] * self.ydqPhi[2,0] * self.ydqPhibar[1,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[2,2] * self.ydbar[2,1] * self.ydqPhi[2,0] * self.ydqPhibar[1,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.yd[1,mif2] * self.ydbar[0,1] * self.ydqPhi[2,1] * self.ydqPhibar[1,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.yd[1,mif2] * self.ydbar[1,1] * self.ydqPhi[2,1] * self.ydqPhibar[1,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[2,2] * self.ydbar[2,1] * self.ydqPhi[2,1] * self.ydqPhibar[1,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.yd[2,mif2] * self.ydbar[0,1] * self.ydqPhi[2,2] * self.ydqPhibar[1,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.yd[2,mif2] * self.ydbar[1,1] * self.ydqPhi[2,2] * self.ydqPhibar[1,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.yd[2,mif2] * self.ydbar[2,1] * self.ydqPhi[2,2] * self.ydqPhibar[1,mif1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[0,2] * self.ydqPhi[0,0] * self.ydqPhibar[2,0] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[1,2] * self.ydqPhi[0,0] * self.ydqPhibar[2,0] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[2,2] * self.ydqPhi[0,0] * self.ydqPhibar[2,0] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[0,2] * self.ydqPhi[1,0] * self.ydqPhibar[2,0] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[1,2] * self.ydqPhi[1,0] * self.ydqPhibar[2,0] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[2,2] * self.ydqPhi[1,0] * self.ydqPhibar[2,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[0,0] * self.ydqPhi[2,0] * self.ydqPhibar[2,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[0,1] * self.ydqPhi[2,0] * self.ydqPhibar[2,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[0,2] * self.ydqPhi[2,0] * self.ydqPhibar[2,0] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[1,2] * self.ydqPhi[2,0] * self.ydqPhibar[2,0] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[2,2] * self.ydqPhi[2,0] * self.ydqPhibar[2,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[0,0] * self.ydqPhi[2,1] * self.ydqPhibar[2,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[0,1] * self.ydqPhi[2,1] * self.ydqPhibar[2,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[0,2] * self.ydqPhi[2,1] * self.ydqPhibar[2,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[0,0] * self.ydqPhi[2,2] * self.ydqPhibar[2,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[0,1] * self.ydqPhi[2,2] * self.ydqPhibar[2,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[0,2] * self.ydqPhi[2,2] * self.ydqPhibar[2,0] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[0,2] * self.ydqPhi[0,1] * self.ydqPhibar[2,1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[1,2] * self.ydqPhi[0,1] * self.ydqPhibar[2,1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[2,2] * self.ydqPhi[0,1] * self.ydqPhibar[2,1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[0,2] * self.ydqPhi[1,1] * self.ydqPhibar[2,1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[1,2] * self.ydqPhi[1,1] * self.ydqPhibar[2,1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[2,2] * self.ydqPhi[1,1] * self.ydqPhibar[2,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[1,0] * self.ydqPhi[2,0] * self.ydqPhibar[2,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[1,1] * self.ydqPhi[2,0] * self.ydqPhibar[2,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[1,2] * self.ydqPhi[2,0] * self.ydqPhibar[2,1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[0,2] * self.ydqPhi[2,1] * self.ydqPhibar[2,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[1,0] * self.ydqPhi[2,1] * self.ydqPhibar[2,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[1,1] * self.ydqPhi[2,1] * self.ydqPhibar[2,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[1,2] * self.ydqPhi[2,1] * self.ydqPhibar[2,1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[2,2] * self.ydqPhi[2,1] * self.ydqPhibar[2,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[1,0] * self.ydqPhi[2,2] * self.ydqPhibar[2,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[1,1] * self.ydqPhi[2,2] * self.ydqPhibar[2,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[1,2] * self.ydqPhi[2,2] * self.ydqPhibar[2,1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[0,2] * self.ydqPhi[0,2] * self.ydqPhibar[2,2] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[1,2] * self.ydqPhi[0,2] * self.ydqPhibar[2,2] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[2,2] * self.ydqPhi[0,2] * self.ydqPhibar[2,2] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[0,2] * self.ydqPhi[1,2] * self.ydqPhibar[2,2] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[1,2] * self.ydqPhi[1,2] * self.ydqPhibar[2,2] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[2,2] * self.ydqPhi[1,2] * self.ydqPhibar[2,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[2,0] * self.ydqPhi[2,0] * self.ydqPhibar[2,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[2,1] * self.ydqPhi[2,0] * self.ydqPhibar[2,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[2,2] * self.ydqPhi[2,0] * self.ydqPhibar[2,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[2,0] * self.ydqPhi[2,1] * self.ydqPhibar[2,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[2,1] * self.ydqPhi[2,1] * self.ydqPhibar[2,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[2,2] * self.ydqPhi[2,1] * self.ydqPhibar[2,2] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[0,2] * self.ydqPhi[2,2] * self.ydqPhibar[2,2] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[1,2] * self.ydqPhi[2,2] * self.ydqPhibar[2,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[2,0] * self.ydqPhi[2,2] * self.ydqPhibar[2,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[2,1] * self.ydqPhi[2,2] * self.ydqPhibar[2,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[2,2] * self.ydqPhi[2,2] * self.ydqPhibar[2,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.yd[0,mif2] * self.ydbar[0,2] * self.ydqPhi[0,0] * self.ydqPhibar[2,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[1,0] * self.ydbar[1,2] * self.ydqPhi[0,0] * self.ydqPhibar[2,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[2,0] * self.ydbar[2,2] * self.ydqPhi[0,0] * self.ydqPhibar[2,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.yd[1,mif2] * self.ydbar[0,2] * self.ydqPhi[0,1] * self.ydqPhibar[2,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.yd[1,mif2] * self.ydbar[1,2] * self.ydqPhi[0,1] * self.ydqPhibar[2,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[2,0] * self.ydbar[2,2] * self.ydqPhi[0,1] * self.ydqPhibar[2,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.yd[2,mif2] * self.ydbar[0,2] * self.ydqPhi[0,2] * self.ydqPhibar[2,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.yd[2,mif2] * self.ydbar[1,2] * self.ydqPhi[0,2] * self.ydqPhibar[2,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.yd[2,mif2] * self.ydbar[2,2] * self.ydqPhi[0,2] * self.ydqPhibar[2,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.yd[0,mif2] * self.ydbar[0,2] * self.ydqPhi[1,0] * self.ydqPhibar[2,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[1,1] * self.ydbar[1,2] * self.ydqPhi[1,0] * self.ydqPhibar[2,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[2,1] * self.ydbar[2,2] * self.ydqPhi[1,0] * self.ydqPhibar[2,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.yd[1,mif2] * self.ydbar[0,2] * self.ydqPhi[1,1] * self.ydqPhibar[2,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.yd[1,mif2] * self.ydbar[1,2] * self.ydqPhi[1,1] * self.ydqPhibar[2,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[2,1] * self.ydbar[2,2] * self.ydqPhi[1,1] * self.ydqPhibar[2,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.yd[2,mif2] * self.ydbar[0,2] * self.ydqPhi[1,2] * self.ydqPhibar[2,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.yd[2,mif2] * self.ydbar[1,2] * self.ydqPhi[1,2] * self.ydqPhibar[2,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.yd[2,mif2] * self.ydbar[2,2] * self.ydqPhi[1,2] * self.ydqPhibar[2,mif1] + 1/48 * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydqPhi[2,0] * self.ydqPhibar[2,mif1] + 1/24 * self.lambdaHatPrimePhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydqPhi[2,0] * self.ydqPhibar[2,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.yd[0,mif2] * self.ydbar[0,2] * self.ydqPhi[2,0] * self.ydqPhibar[2,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[1,2] * self.ydbar[1,2] * self.ydqPhi[2,0] * self.ydqPhibar[2,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[2,2] * self.ydbar[2,2] * self.ydqPhi[2,0] * self.ydqPhibar[2,mif1] + 1/48 * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydqPhi[2,1] * self.ydqPhibar[2,mif1] + 1/24 * self.lambdaHatPrimePhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydqPhi[2,1] * self.ydqPhibar[2,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.yd[1,mif2] * self.ydbar[0,2] * self.ydqPhi[2,1] * self.ydqPhibar[2,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.yd[1,mif2] * self.ydbar[1,2] * self.ydqPhi[2,1] * self.ydqPhibar[2,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[2,2] * self.ydbar[2,2] * self.ydqPhi[2,1] * self.ydqPhibar[2,mif1] + 1/48 * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydqPhi[2,2] * self.ydqPhibar[2,mif1] + 1/24 * self.lambdaHatPrimePhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydqPhi[2,2] * self.ydqPhibar[2,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.yd[2,mif2] * self.ydbar[0,2] * self.ydqPhi[2,2] * self.ydqPhibar[2,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.yd[2,mif2] * self.ydbar[1,2] * self.ydqPhi[2,2] * self.ydqPhibar[2,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.yd[2,mif2] * self.ydbar[2,2] * self.ydqPhi[2,2] * self.ydqPhibar[2,mif1] + 1/24 * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,0] * self.ydqPhibar[mif2,0] + 1/24 * self.lambdaHatPrimePhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,0] * self.ydqPhibar[mif2,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.yd[mif1,0] * self.ydbar[0,0] * self.ydqPhi[0,0] * self.ydqPhibar[mif2,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.yd[mif1,0] * self.ydbar[0,1] * self.ydqPhi[0,0] * self.ydqPhibar[mif2,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.yd[mif1,0] * self.ydbar[0,2] * self.ydqPhi[0,0] * self.ydqPhibar[mif2,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.yd[mif1,0] * self.ydbar[0,0] * self.ydqPhi[0,1] * self.ydqPhibar[mif2,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.yd[mif1,0] * self.ydbar[0,1] * self.ydqPhi[0,1] * self.ydqPhibar[mif2,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.yd[mif1,0] * self.ydbar[0,2] * self.ydqPhi[0,1] * self.ydqPhibar[mif2,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.yd[mif1,0] * self.ydbar[0,0] * self.ydqPhi[0,2] * self.ydqPhibar[mif2,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.yd[mif1,0] * self.ydbar[0,1] * self.ydqPhi[0,2] * self.ydqPhibar[mif2,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.yd[mif1,0] * self.ydbar[0,2] * self.ydqPhi[0,2] * self.ydqPhibar[mif2,0] + 1/24 * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,0] * self.ydqPhibar[mif2,0] + 1/24 * self.lambdaHatPrimePhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,0] * self.ydqPhibar[mif2,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.yd[mif1,1] * self.ydbar[0,0] * self.ydqPhi[1,0] * self.ydqPhibar[mif2,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.yd[mif1,1] * self.ydbar[0,1] * self.ydqPhi[1,0] * self.ydqPhibar[mif2,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.yd[mif1,1] * self.ydbar[0,2] * self.ydqPhi[1,0] * self.ydqPhibar[mif2,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.yd[mif1,1] * self.ydbar[0,0] * self.ydqPhi[1,1] * self.ydqPhibar[mif2,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.yd[mif1,1] * self.ydbar[0,1] * self.ydqPhi[1,1] * self.ydqPhibar[mif2,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.yd[mif1,1] * self.ydbar[0,2] * self.ydqPhi[1,1] * self.ydqPhibar[mif2,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.yd[mif1,1] * self.ydbar[0,0] * self.ydqPhi[1,2] * self.ydqPhibar[mif2,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.yd[mif1,1] * self.ydbar[0,1] * self.ydqPhi[1,2] * self.ydqPhibar[mif2,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.yd[mif1,1] * self.ydbar[0,2] * self.ydqPhi[1,2] * self.ydqPhibar[mif2,0] + 1/24 * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,0] * self.ydqPhibar[mif2,0] + 1/24 * self.lambdaHatPrimePhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,0] * self.ydqPhibar[mif2,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.yd[mif1,2] * self.ydbar[0,0] * self.ydqPhi[2,0] * self.ydqPhibar[mif2,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.yd[mif1,2] * self.ydbar[0,1] * self.ydqPhi[2,0] * self.ydqPhibar[mif2,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.yd[mif1,2] * self.ydbar[0,2] * self.ydqPhi[2,0] * self.ydqPhibar[mif2,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.yd[mif1,2] * self.ydbar[0,0] * self.ydqPhi[2,1] * self.ydqPhibar[mif2,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.yd[mif1,2] * self.ydbar[0,1] * self.ydqPhi[2,1] * self.ydqPhibar[mif2,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.yd[mif1,2] * self.ydbar[0,2] * self.ydqPhi[2,1] * self.ydqPhibar[mif2,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.yd[mif1,2] * self.ydbar[0,0] * self.ydqPhi[2,2] * self.ydqPhibar[mif2,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.yd[mif1,2] * self.ydbar[0,1] * self.ydqPhi[2,2] * self.ydqPhibar[mif2,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.yd[mif1,2] * self.ydbar[0,2] * self.ydqPhi[2,2] * self.ydqPhibar[mif2,0] + 1/3 * self.lambdaHatPrimePrimePhibar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.ydqPhibar[0,mif1] * self.ydqPhibar[mif2,0] + 1/3 * self.lambdaHatPrimePrimePhibar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.ydqPhibar[1,mif1] * self.ydqPhibar[mif2,0] + 1/3 * self.lambdaHatPrimePrimePhibar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.ydqPhibar[2,mif1] * self.ydqPhibar[mif2,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.yd[mif1,0] * self.ydbar[1,0] * self.ydqPhi[0,0] * self.ydqPhibar[mif2,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.yd[mif1,0] * self.ydbar[1,1] * self.ydqPhi[0,0] * self.ydqPhibar[mif2,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.yd[mif1,0] * self.ydbar[1,2] * self.ydqPhi[0,0] * self.ydqPhibar[mif2,1] + 1/24 * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,1] * self.ydqPhibar[mif2,1] + 1/24 * self.lambdaHatPrimePhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,1] * self.ydqPhibar[mif2,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.yd[mif1,0] * self.ydbar[1,0] * self.ydqPhi[0,1] * self.ydqPhibar[mif2,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.yd[mif1,0] * self.ydbar[1,1] * self.ydqPhi[0,1] * self.ydqPhibar[mif2,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.yd[mif1,0] * self.ydbar[1,2] * self.ydqPhi[0,1] * self.ydqPhibar[mif2,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.yd[mif1,0] * self.ydbar[1,0] * self.ydqPhi[0,2] * self.ydqPhibar[mif2,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.yd[mif1,0] * self.ydbar[1,1] * self.ydqPhi[0,2] * self.ydqPhibar[mif2,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.yd[mif1,0] * self.ydbar[1,2] * self.ydqPhi[0,2] * self.ydqPhibar[mif2,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.yd[mif1,1] * self.ydbar[1,0] * self.ydqPhi[1,0] * self.ydqPhibar[mif2,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.yd[mif1,1] * self.ydbar[1,1] * self.ydqPhi[1,0] * self.ydqPhibar[mif2,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.yd[mif1,1] * self.ydbar[1,2] * self.ydqPhi[1,0] * self.ydqPhibar[mif2,1] + 1/24 * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,1] * self.ydqPhibar[mif2,1] + 1/24 * self.lambdaHatPrimePhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,1] * self.ydqPhibar[mif2,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.yd[mif1,1] * self.ydbar[1,0] * self.ydqPhi[1,1] * self.ydqPhibar[mif2,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.yd[mif1,1] * self.ydbar[1,1] * self.ydqPhi[1,1] * self.ydqPhibar[mif2,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.yd[mif1,1] * self.ydbar[1,2] * self.ydqPhi[1,1] * self.ydqPhibar[mif2,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.yd[mif1,1] * self.ydbar[1,0] * self.ydqPhi[1,2] * self.ydqPhibar[mif2,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.yd[mif1,1] * self.ydbar[1,1] * self.ydqPhi[1,2] * self.ydqPhibar[mif2,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.yd[mif1,1] * self.ydbar[1,2] * self.ydqPhi[1,2] * self.ydqPhibar[mif2,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.yd[mif1,2] * self.ydbar[1,0] * self.ydqPhi[2,0] * self.ydqPhibar[mif2,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.yd[mif1,2] * self.ydbar[1,1] * self.ydqPhi[2,0] * self.ydqPhibar[mif2,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.yd[mif1,2] * self.ydbar[1,2] * self.ydqPhi[2,0] * self.ydqPhibar[mif2,1] + 1/24 * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,1] * self.ydqPhibar[mif2,1] + 1/24 * self.lambdaHatPrimePhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,1] * self.ydqPhibar[mif2,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.yd[mif1,2] * self.ydbar[1,0] * self.ydqPhi[2,1] * self.ydqPhibar[mif2,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.yd[mif1,2] * self.ydbar[1,1] * self.ydqPhi[2,1] * self.ydqPhibar[mif2,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.yd[mif1,2] * self.ydbar[1,2] * self.ydqPhi[2,1] * self.ydqPhibar[mif2,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.yd[mif1,2] * self.ydbar[1,0] * self.ydqPhi[2,2] * self.ydqPhibar[mif2,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.yd[mif1,2] * self.ydbar[1,1] * self.ydqPhi[2,2] * self.ydqPhibar[mif2,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.yd[mif1,2] * self.ydbar[1,2] * self.ydqPhi[2,2] * self.ydqPhibar[mif2,1] + 1/3 * self.lambdaHatPrimePrimePhibar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.ydqPhibar[0,mif1] * self.ydqPhibar[mif2,1] + 1/3 * self.lambdaHatPrimePrimePhibar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.ydqPhibar[1,mif1] * self.ydqPhibar[mif2,1] + 1/3 * self.lambdaHatPrimePrimePhibar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.ydqPhibar[2,mif1] * self.ydqPhibar[mif2,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.yd[mif1,0] * self.ydbar[2,0] * self.ydqPhi[0,0] * self.ydqPhibar[mif2,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.yd[mif1,0] * self.ydbar[2,1] * self.ydqPhi[0,0] * self.ydqPhibar[mif2,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.yd[mif1,0] * self.ydbar[2,2] * self.ydqPhi[0,0] * self.ydqPhibar[mif2,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.yd[mif1,0] * self.ydbar[2,0] * self.ydqPhi[0,1] * self.ydqPhibar[mif2,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.yd[mif1,0] * self.ydbar[2,1] * self.ydqPhi[0,1] * self.ydqPhibar[mif2,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.yd[mif1,0] * self.ydbar[2,2] * self.ydqPhi[0,1] * self.ydqPhibar[mif2,2] + 1/24 * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,2] * self.ydqPhibar[mif2,2] + 1/24 * self.lambdaHatPrimePhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,2] * self.ydqPhibar[mif2,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.yd[mif1,0] * self.ydbar[2,0] * self.ydqPhi[0,2] * self.ydqPhibar[mif2,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.yd[mif1,0] * self.ydbar[2,1] * self.ydqPhi[0,2] * self.ydqPhibar[mif2,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.yd[mif1,0] * self.ydbar[2,2] * self.ydqPhi[0,2] * self.ydqPhibar[mif2,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.yd[mif1,1] * self.ydbar[2,0] * self.ydqPhi[1,0] * self.ydqPhibar[mif2,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.yd[mif1,1] * self.ydbar[2,1] * self.ydqPhi[1,0] * self.ydqPhibar[mif2,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.yd[mif1,1] * self.ydbar[2,2] * self.ydqPhi[1,0] * self.ydqPhibar[mif2,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.yd[mif1,1] * self.ydbar[2,0] * self.ydqPhi[1,1] * self.ydqPhibar[mif2,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.yd[mif1,1] * self.ydbar[2,1] * self.ydqPhi[1,1] * self.ydqPhibar[mif2,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.yd[mif1,1] * self.ydbar[2,2] * self.ydqPhi[1,1] * self.ydqPhibar[mif2,2] + 1/24 * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,2] * self.ydqPhibar[mif2,2] + 1/24 * self.lambdaHatPrimePhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,2] * self.ydqPhibar[mif2,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.yd[mif1,1] * self.ydbar[2,0] * self.ydqPhi[1,2] * self.ydqPhibar[mif2,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.yd[mif1,1] * self.ydbar[2,1] * self.ydqPhi[1,2] * self.ydqPhibar[mif2,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.yd[mif1,1] * self.ydbar[2,2] * self.ydqPhi[1,2] * self.ydqPhibar[mif2,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.yd[mif1,2] * self.ydbar[2,0] * self.ydqPhi[2,0] * self.ydqPhibar[mif2,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.yd[mif1,2] * self.ydbar[2,1] * self.ydqPhi[2,0] * self.ydqPhibar[mif2,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.yd[mif1,2] * self.ydbar[2,2] * self.ydqPhi[2,0] * self.ydqPhibar[mif2,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.yd[mif1,2] * self.ydbar[2,0] * self.ydqPhi[2,1] * self.ydqPhibar[mif2,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.yd[mif1,2] * self.ydbar[2,1] * self.ydqPhi[2,1] * self.ydqPhibar[mif2,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.yd[mif1,2] * self.ydbar[2,2] * self.ydqPhi[2,1] * self.ydqPhibar[mif2,2] + 1/24 * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,2] * self.ydqPhibar[mif2,2] + 1/24 * self.lambdaHatPrimePhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,2] * self.ydqPhibar[mif2,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.yd[mif1,2] * self.ydbar[2,0] * self.ydqPhi[2,2] * self.ydqPhibar[mif2,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.yd[mif1,2] * self.ydbar[2,1] * self.ydqPhi[2,2] * self.ydqPhibar[mif2,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.yd[mif1,2] * self.ydbar[2,2] * self.ydqPhi[2,2] * self.ydqPhibar[mif2,2] + 1/3 * self.lambdaHatPrimePrimePhibar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.ydqPhibar[0,mif1] * self.ydqPhibar[mif2,2] + 1/3 * self.lambdaHatPrimePrimePhibar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.ydqPhibar[1,mif1] * self.ydqPhibar[mif2,2] + 1/3 * self.lambdaHatPrimePrimePhibar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.ydqPhibar[2,mif1] * self.ydqPhibar[mif2,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[0,0] * self.yquPhi[0,0] * self.yquPhibar[0,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[0,1] * self.yquPhi[0,0] * self.yquPhibar[0,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[0,2] * self.yquPhi[0,0] * self.yquPhibar[0,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[1,0] * self.yquPhi[1,0] * self.yquPhibar[0,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[1,1] * self.yquPhi[1,0] * self.yquPhibar[0,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[1,2] * self.yquPhi[1,0] * self.yquPhibar[0,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[2,0] * self.yquPhi[2,0] * self.yquPhibar[0,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[2,1] * self.yquPhi[2,0] * self.yquPhibar[0,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[2,2] * self.yquPhi[2,0] * self.yquPhibar[0,0] + 1/48 * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yquPhi[mif1,0] * self.yquPhibar[0,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[0,0] * self.yquPhi[0,1] * self.yquPhibar[0,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[0,1] * self.yquPhi[0,1] * self.yquPhibar[0,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[0,2] * self.yquPhi[0,1] * self.yquPhibar[0,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[1,0] * self.yquPhi[1,1] * self.yquPhibar[0,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[1,1] * self.yquPhi[1,1] * self.yquPhibar[0,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[1,2] * self.yquPhi[1,1] * self.yquPhibar[0,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[2,0] * self.yquPhi[2,1] * self.yquPhibar[0,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[2,1] * self.yquPhi[2,1] * self.yquPhibar[0,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[2,2] * self.yquPhi[2,1] * self.yquPhibar[0,1] + 1/48 * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yquPhi[mif1,1] * self.yquPhibar[0,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[0,0] * self.yquPhi[0,2] * self.yquPhibar[0,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[0,1] * self.yquPhi[0,2] * self.yquPhibar[0,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[0,2] * self.yquPhi[0,2] * self.yquPhibar[0,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[1,0] * self.yquPhi[1,2] * self.yquPhibar[0,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[1,1] * self.yquPhi[1,2] * self.yquPhibar[0,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[1,2] * self.yquPhi[1,2] * self.yquPhibar[0,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[2,0] * self.yquPhi[2,2] * self.yquPhibar[0,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[2,1] * self.yquPhi[2,2] * self.yquPhibar[0,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[2,2] * self.yquPhi[2,2] * self.yquPhibar[0,2] + 1/48 * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yquPhi[mif1,2] * self.yquPhibar[0,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[0,0] * self.yquPhi[0,0] * self.yquPhibar[1,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[0,1] * self.yquPhi[0,0] * self.yquPhibar[1,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[0,2] * self.yquPhi[0,0] * self.yquPhibar[1,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[1,0] * self.yquPhi[1,0] * self.yquPhibar[1,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[1,1] * self.yquPhi[1,0] * self.yquPhibar[1,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[1,2] * self.yquPhi[1,0] * self.yquPhibar[1,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[2,0] * self.yquPhi[2,0] * self.yquPhibar[1,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[2,1] * self.yquPhi[2,0] * self.yquPhibar[1,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[2,2] * self.yquPhi[2,0] * self.yquPhibar[1,0] + 1/48 * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yquPhi[mif1,0] * self.yquPhibar[1,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[0,0] * self.yquPhi[0,1] * self.yquPhibar[1,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[0,1] * self.yquPhi[0,1] * self.yquPhibar[1,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[0,2] * self.yquPhi[0,1] * self.yquPhibar[1,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[1,0] * self.yquPhi[1,1] * self.yquPhibar[1,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[1,1] * self.yquPhi[1,1] * self.yquPhibar[1,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[1,2] * self.yquPhi[1,1] * self.yquPhibar[1,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[2,0] * self.yquPhi[2,1] * self.yquPhibar[1,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[2,1] * self.yquPhi[2,1] * self.yquPhibar[1,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[2,2] * self.yquPhi[2,1] * self.yquPhibar[1,1] + 1/48 * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yquPhi[mif1,1] * self.yquPhibar[1,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[0,0] * self.yquPhi[0,2] * self.yquPhibar[1,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[0,1] * self.yquPhi[0,2] * self.yquPhibar[1,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[0,2] * self.yquPhi[0,2] * self.yquPhibar[1,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[1,0] * self.yquPhi[1,2] * self.yquPhibar[1,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[1,1] * self.yquPhi[1,2] * self.yquPhibar[1,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[1,2] * self.yquPhi[1,2] * self.yquPhibar[1,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[2,0] * self.yquPhi[2,2] * self.yquPhibar[1,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[2,1] * self.yquPhi[2,2] * self.yquPhibar[1,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[2,2] * self.yquPhi[2,2] * self.yquPhibar[1,2] + 1/48 * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yquPhi[mif1,2] * self.yquPhibar[1,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[0,0] * self.yquPhi[0,0] * self.yquPhibar[2,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[0,1] * self.yquPhi[0,0] * self.yquPhibar[2,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[0,2] * self.yquPhi[0,0] * self.yquPhibar[2,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[1,0] * self.yquPhi[1,0] * self.yquPhibar[2,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[1,1] * self.yquPhi[1,0] * self.yquPhibar[2,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[1,2] * self.yquPhi[1,0] * self.yquPhibar[2,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[2,0] * self.yquPhi[2,0] * self.yquPhibar[2,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[2,1] * self.yquPhi[2,0] * self.yquPhibar[2,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[2,2] * self.yquPhi[2,0] * self.yquPhibar[2,0] + 1/48 * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yquPhi[mif1,0] * self.yquPhibar[2,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[0,0] * self.yquPhi[0,1] * self.yquPhibar[2,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[0,1] * self.yquPhi[0,1] * self.yquPhibar[2,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[0,2] * self.yquPhi[0,1] * self.yquPhibar[2,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[1,0] * self.yquPhi[1,1] * self.yquPhibar[2,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[1,1] * self.yquPhi[1,1] * self.yquPhibar[2,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[1,2] * self.yquPhi[1,1] * self.yquPhibar[2,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[2,0] * self.yquPhi[2,1] * self.yquPhibar[2,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[2,1] * self.yquPhi[2,1] * self.yquPhibar[2,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[2,2] * self.yquPhi[2,1] * self.yquPhibar[2,1] + 1/48 * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yquPhi[mif1,1] * self.yquPhibar[2,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[0,0] * self.yquPhi[0,2] * self.yquPhibar[2,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[0,1] * self.yquPhi[0,2] * self.yquPhibar[2,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[0,2] * self.yquPhi[0,2] * self.yquPhibar[2,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[1,0] * self.yquPhi[1,2] * self.yquPhibar[2,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[1,1] * self.yquPhi[1,2] * self.yquPhibar[2,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[1,2] * self.yquPhi[1,2] * self.yquPhibar[2,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[2,0] * self.yquPhi[2,2] * self.yquPhibar[2,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[2,1] * self.yquPhi[2,2] * self.yquPhibar[2,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[2,2] * self.yquPhi[2,2] * self.yquPhibar[2,2] + 1/48 * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yquPhi[mif1,2] * self.yquPhibar[2,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[0,0] * self.ydqPhibar[mif2,0] * self.yquPhi[0,0] * self.yubar[0,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[0,1] * self.ydqPhibar[mif2,0] * self.yquPhi[0,0] * self.yubar[0,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[0,2] * self.ydqPhibar[mif2,0] * self.yquPhi[0,0] * self.yubar[0,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[1,0] * self.ydqPhibar[mif2,0] * self.yquPhi[1,0] * self.yubar[0,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[1,1] * self.ydqPhibar[mif2,0] * self.yquPhi[1,0] * self.yubar[0,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[1,2] * self.ydqPhibar[mif2,0] * self.yquPhi[1,0] * self.yubar[0,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[2,0] * self.ydqPhibar[mif2,0] * self.yquPhi[2,0] * self.yubar[0,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[2,1] * self.ydqPhibar[mif2,0] * self.yquPhi[2,0] * self.yubar[0,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[2,2] * self.ydqPhibar[mif2,0] * self.yquPhi[2,0] * self.yubar[0,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,0] * self.ydqPhibar[0,0] * self.yquPhi[mif1,0] * self.yubar[0,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,0] * self.ydqPhibar[0,0] * self.yquPhi[mif1,0] * self.yubar[0,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,0] * self.ydqPhibar[0,0] * self.yquPhi[mif1,0] * self.yubar[0,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,1] * self.ydqPhibar[1,0] * self.yquPhi[mif1,0] * self.yubar[0,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,1] * self.ydqPhibar[1,0] * self.yquPhi[mif1,0] * self.yubar[0,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,1] * self.ydqPhibar[1,0] * self.yquPhi[mif1,0] * self.yubar[0,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,2] * self.ydqPhibar[2,0] * self.yquPhi[mif1,0] * self.yubar[0,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,2] * self.ydqPhibar[2,0] * self.yquPhi[mif1,0] * self.yubar[0,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,2] * self.ydqPhibar[2,0] * self.yquPhi[mif1,0] * self.yubar[0,0] + -1/8 * self.lam * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,0] * self.yubar[0,0] + -1/12 * self.invepsilonbar * self.lam * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,0] * self.yubar[0,0] + 1/12 * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,0] * self.yubar[0,0] + 1/12 * self.lam * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,0] * self.yubar[0,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,0] * self.ydqPhibar[mif2,0] * self.yu[0,0] * self.yubar[0,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,0] * self.ydqPhibar[mif2,0] * self.yu[0,0] * self.yubar[0,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,0] * self.ydqPhibar[mif2,0] * self.yu[0,0] * self.yubar[0,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yquPhi[mif1,0] * self.yquPhibar[0,0] * self.yu[0,0] * self.yubar[0,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yquPhi[mif1,0] * self.yquPhibar[1,0] * self.yu[0,0] * self.yubar[0,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yquPhi[mif1,0] * self.yquPhibar[2,0] * self.yu[0,0] * self.yubar[0,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yquPhi[mif1,0] * self.yquPhibar[0,1] * self.yu[0,1] * self.yubar[0,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yquPhi[mif1,0] * self.yquPhibar[1,1] * self.yu[0,1] * self.yubar[0,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yquPhi[mif1,0] * self.yquPhibar[2,1] * self.yu[0,1] * self.yubar[0,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yquPhi[mif1,0] * self.yquPhibar[0,2] * self.yu[0,2] * self.yubar[0,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yquPhi[mif1,0] * self.yquPhibar[1,2] * self.yu[0,2] * self.yubar[0,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yquPhi[mif1,0] * self.yquPhibar[2,2] * self.yu[0,2] * self.yubar[0,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,1] * self.ydqPhibar[mif2,0] * self.yu[1,0] * self.yubar[0,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,1] * self.ydqPhibar[mif2,0] * self.yu[1,0] * self.yubar[0,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,1] * self.ydqPhibar[mif2,0] * self.yu[1,0] * self.yubar[0,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,2] * self.ydqPhibar[mif2,0] * self.yu[2,0] * self.yubar[0,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,2] * self.ydqPhibar[mif2,0] * self.yu[2,0] * self.yubar[0,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,2] * self.ydqPhibar[mif2,0] * self.yu[2,0] * self.yubar[0,0] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,0] * self.yu[0,0] * (self.yubar[0,0])**(2) + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,0] * self.yu[0,0] * (self.yubar[0,0])**(2) + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,0] * self.yu[0,0] * (self.yubar[0,0])**(2) + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[0,0] * self.ydqPhibar[mif2,0] * self.yquPhi[0,1] * self.yubar[0,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[0,1] * self.ydqPhibar[mif2,0] * self.yquPhi[0,1] * self.yubar[0,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[0,2] * self.ydqPhibar[mif2,0] * self.yquPhi[0,1] * self.yubar[0,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[1,0] * self.ydqPhibar[mif2,0] * self.yquPhi[1,1] * self.yubar[0,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[1,1] * self.ydqPhibar[mif2,0] * self.yquPhi[1,1] * self.yubar[0,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[1,2] * self.ydqPhibar[mif2,0] * self.yquPhi[1,1] * self.yubar[0,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[2,0] * self.ydqPhibar[mif2,0] * self.yquPhi[2,1] * self.yubar[0,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[2,1] * self.ydqPhibar[mif2,0] * self.yquPhi[2,1] * self.yubar[0,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[2,2] * self.ydqPhibar[mif2,0] * self.yquPhi[2,1] * self.yubar[0,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,0] * self.ydqPhibar[0,0] * self.yquPhi[mif1,1] * self.yubar[0,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,0] * self.ydqPhibar[0,0] * self.yquPhi[mif1,1] * self.yubar[0,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,0] * self.ydqPhibar[0,0] * self.yquPhi[mif1,1] * self.yubar[0,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,1] * self.ydqPhibar[1,0] * self.yquPhi[mif1,1] * self.yubar[0,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,1] * self.ydqPhibar[1,0] * self.yquPhi[mif1,1] * self.yubar[0,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,1] * self.ydqPhibar[1,0] * self.yquPhi[mif1,1] * self.yubar[0,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,2] * self.ydqPhibar[2,0] * self.yquPhi[mif1,1] * self.yubar[0,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,2] * self.ydqPhibar[2,0] * self.yquPhi[mif1,1] * self.yubar[0,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,2] * self.ydqPhibar[2,0] * self.yquPhi[mif1,1] * self.yubar[0,1] + -1/8 * self.lam * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,1] * self.yubar[0,1] + -1/12 * self.invepsilonbar * self.lam * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,1] * self.yubar[0,1] + 1/12 * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,1] * self.yubar[0,1] + 1/12 * self.lam * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,1] * self.yubar[0,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yquPhi[mif1,1] * self.yquPhibar[0,0] * self.yu[0,0] * self.yubar[0,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yquPhi[mif1,1] * self.yquPhibar[1,0] * self.yu[0,0] * self.yubar[0,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yquPhi[mif1,1] * self.yquPhibar[2,0] * self.yu[0,0] * self.yubar[0,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,0] * self.ydqPhibar[mif2,0] * self.yu[0,1] * self.yubar[0,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,0] * self.ydqPhibar[mif2,0] * self.yu[0,1] * self.yubar[0,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,0] * self.ydqPhibar[mif2,0] * self.yu[0,1] * self.yubar[0,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yquPhi[mif1,1] * self.yquPhibar[0,1] * self.yu[0,1] * self.yubar[0,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yquPhi[mif1,1] * self.yquPhibar[1,1] * self.yu[0,1] * self.yubar[0,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yquPhi[mif1,1] * self.yquPhibar[2,1] * self.yu[0,1] * self.yubar[0,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yquPhi[mif1,1] * self.yquPhibar[0,2] * self.yu[0,2] * self.yubar[0,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yquPhi[mif1,1] * self.yquPhibar[1,2] * self.yu[0,2] * self.yubar[0,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yquPhi[mif1,1] * self.yquPhibar[2,2] * self.yu[0,2] * self.yubar[0,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,1] * self.ydqPhibar[mif2,0] * self.yu[1,1] * self.yubar[0,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,1] * self.ydqPhibar[mif2,0] * self.yu[1,1] * self.yubar[0,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,1] * self.ydqPhibar[mif2,0] * self.yu[1,1] * self.yubar[0,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,2] * self.ydqPhibar[mif2,0] * self.yu[2,1] * self.yubar[0,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,2] * self.ydqPhibar[mif2,0] * self.yu[2,1] * self.yubar[0,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,2] * self.ydqPhibar[mif2,0] * self.yu[2,1] * self.yubar[0,1] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,1] * self.yu[0,0] * self.yubar[0,0] * self.yubar[0,1] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,1] * self.yu[0,0] * self.yubar[0,0] * self.yubar[0,1] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,1] * self.yu[0,0] * self.yubar[0,0] * self.yubar[0,1] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,0] * self.yu[0,1] * self.yubar[0,0] * self.yubar[0,1] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,0] * self.yu[0,1] * self.yubar[0,0] * self.yubar[0,1] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,0] * self.yu[0,1] * self.yubar[0,0] * self.yubar[0,1] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,1] * self.yu[0,1] * (self.yubar[0,1])**(2) + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,1] * self.yu[0,1] * (self.yubar[0,1])**(2) + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,1] * self.yu[0,1] * (self.yubar[0,1])**(2) + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[0,0] * self.ydqPhibar[mif2,0] * self.yquPhi[0,2] * self.yubar[0,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[0,1] * self.ydqPhibar[mif2,0] * self.yquPhi[0,2] * self.yubar[0,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[0,2] * self.ydqPhibar[mif2,0] * self.yquPhi[0,2] * self.yubar[0,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[1,0] * self.ydqPhibar[mif2,0] * self.yquPhi[1,2] * self.yubar[0,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[1,1] * self.ydqPhibar[mif2,0] * self.yquPhi[1,2] * self.yubar[0,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[1,2] * self.ydqPhibar[mif2,0] * self.yquPhi[1,2] * self.yubar[0,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[2,0] * self.ydqPhibar[mif2,0] * self.yquPhi[2,2] * self.yubar[0,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[2,1] * self.ydqPhibar[mif2,0] * self.yquPhi[2,2] * self.yubar[0,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[2,2] * self.ydqPhibar[mif2,0] * self.yquPhi[2,2] * self.yubar[0,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,0] * self.ydqPhibar[0,0] * self.yquPhi[mif1,2] * self.yubar[0,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,0] * self.ydqPhibar[0,0] * self.yquPhi[mif1,2] * self.yubar[0,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,0] * self.ydqPhibar[0,0] * self.yquPhi[mif1,2] * self.yubar[0,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,1] * self.ydqPhibar[1,0] * self.yquPhi[mif1,2] * self.yubar[0,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,1] * self.ydqPhibar[1,0] * self.yquPhi[mif1,2] * self.yubar[0,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,1] * self.ydqPhibar[1,0] * self.yquPhi[mif1,2] * self.yubar[0,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,2] * self.ydqPhibar[2,0] * self.yquPhi[mif1,2] * self.yubar[0,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,2] * self.ydqPhibar[2,0] * self.yquPhi[mif1,2] * self.yubar[0,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,2] * self.ydqPhibar[2,0] * self.yquPhi[mif1,2] * self.yubar[0,2] + -1/8 * self.lam * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,2] * self.yubar[0,2] + -1/12 * self.invepsilonbar * self.lam * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,2] * self.yubar[0,2] + 1/12 * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,2] * self.yubar[0,2] + 1/12 * self.lam * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,2] * self.yubar[0,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yquPhi[mif1,2] * self.yquPhibar[0,0] * self.yu[0,0] * self.yubar[0,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yquPhi[mif1,2] * self.yquPhibar[1,0] * self.yu[0,0] * self.yubar[0,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yquPhi[mif1,2] * self.yquPhibar[2,0] * self.yu[0,0] * self.yubar[0,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yquPhi[mif1,2] * self.yquPhibar[0,1] * self.yu[0,1] * self.yubar[0,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yquPhi[mif1,2] * self.yquPhibar[1,1] * self.yu[0,1] * self.yubar[0,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yquPhi[mif1,2] * self.yquPhibar[2,1] * self.yu[0,1] * self.yubar[0,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,0] * self.ydqPhibar[mif2,0] * self.yu[0,2] * self.yubar[0,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,0] * self.ydqPhibar[mif2,0] * self.yu[0,2] * self.yubar[0,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,0] * self.ydqPhibar[mif2,0] * self.yu[0,2] * self.yubar[0,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yquPhi[mif1,2] * self.yquPhibar[0,2] * self.yu[0,2] * self.yubar[0,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yquPhi[mif1,2] * self.yquPhibar[1,2] * self.yu[0,2] * self.yubar[0,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yquPhi[mif1,2] * self.yquPhibar[2,2] * self.yu[0,2] * self.yubar[0,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,1] * self.ydqPhibar[mif2,0] * self.yu[1,2] * self.yubar[0,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,1] * self.ydqPhibar[mif2,0] * self.yu[1,2] * self.yubar[0,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,1] * self.ydqPhibar[mif2,0] * self.yu[1,2] * self.yubar[0,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,2] * self.ydqPhibar[mif2,0] * self.yu[2,2] * self.yubar[0,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,2] * self.ydqPhibar[mif2,0] * self.yu[2,2] * self.yubar[0,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,2] * self.ydqPhibar[mif2,0] * self.yu[2,2] * self.yubar[0,2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,2] * self.yu[0,0] * self.yubar[0,0] * self.yubar[0,2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,2] * self.yu[0,0] * self.yubar[0,0] * self.yubar[0,2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,2] * self.yu[0,0] * self.yubar[0,0] * self.yubar[0,2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,0] * self.yu[0,2] * self.yubar[0,0] * self.yubar[0,2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,0] * self.yu[0,2] * self.yubar[0,0] * self.yubar[0,2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,0] * self.yu[0,2] * self.yubar[0,0] * self.yubar[0,2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,2] * self.yu[0,1] * self.yubar[0,1] * self.yubar[0,2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,2] * self.yu[0,1] * self.yubar[0,1] * self.yubar[0,2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,2] * self.yu[0,1] * self.yubar[0,1] * self.yubar[0,2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,1] * self.yu[0,2] * self.yubar[0,1] * self.yubar[0,2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,1] * self.yu[0,2] * self.yubar[0,1] * self.yubar[0,2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,1] * self.yu[0,2] * self.yubar[0,1] * self.yubar[0,2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,2] * self.yu[0,2] * (self.yubar[0,2])**(2) + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,2] * self.yu[0,2] * (self.yubar[0,2])**(2) + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,2] * self.yu[0,2] * (self.yubar[0,2])**(2) + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[0,0] * self.ydqPhibar[mif2,1] * self.yquPhi[0,0] * self.yubar[1,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[0,1] * self.ydqPhibar[mif2,1] * self.yquPhi[0,0] * self.yubar[1,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[0,2] * self.ydqPhibar[mif2,1] * self.yquPhi[0,0] * self.yubar[1,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[1,0] * self.ydqPhibar[mif2,1] * self.yquPhi[1,0] * self.yubar[1,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[1,1] * self.ydqPhibar[mif2,1] * self.yquPhi[1,0] * self.yubar[1,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[1,2] * self.ydqPhibar[mif2,1] * self.yquPhi[1,0] * self.yubar[1,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[2,0] * self.ydqPhibar[mif2,1] * self.yquPhi[2,0] * self.yubar[1,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[2,1] * self.ydqPhibar[mif2,1] * self.yquPhi[2,0] * self.yubar[1,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[2,2] * self.ydqPhibar[mif2,1] * self.yquPhi[2,0] * self.yubar[1,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,0] * self.ydqPhibar[0,1] * self.yquPhi[mif1,0] * self.yubar[1,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,0] * self.ydqPhibar[0,1] * self.yquPhi[mif1,0] * self.yubar[1,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,0] * self.ydqPhibar[0,1] * self.yquPhi[mif1,0] * self.yubar[1,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,1] * self.ydqPhibar[1,1] * self.yquPhi[mif1,0] * self.yubar[1,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,1] * self.ydqPhibar[1,1] * self.yquPhi[mif1,0] * self.yubar[1,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,1] * self.ydqPhibar[1,1] * self.yquPhi[mif1,0] * self.yubar[1,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,2] * self.ydqPhibar[2,1] * self.yquPhi[mif1,0] * self.yubar[1,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,2] * self.ydqPhibar[2,1] * self.yquPhi[mif1,0] * self.yubar[1,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,2] * self.ydqPhibar[2,1] * self.yquPhi[mif1,0] * self.yubar[1,0] + -1/8 * self.lam * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,0] * self.yubar[1,0] + -1/12 * self.invepsilonbar * self.lam * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,0] * self.yubar[1,0] + 1/12 * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,0] * self.yubar[1,0] + 1/12 * self.lam * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,0] * self.yubar[1,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,0] * self.ydqPhibar[mif2,1] * self.yu[0,0] * self.yubar[1,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,0] * self.ydqPhibar[mif2,1] * self.yu[0,0] * self.yubar[1,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,0] * self.ydqPhibar[mif2,1] * self.yu[0,0] * self.yubar[1,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,1] * self.ydqPhibar[mif2,1] * self.yu[1,0] * self.yubar[1,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,1] * self.ydqPhibar[mif2,1] * self.yu[1,0] * self.yubar[1,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,1] * self.ydqPhibar[mif2,1] * self.yu[1,0] * self.yubar[1,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yquPhi[mif1,0] * self.yquPhibar[0,0] * self.yu[1,0] * self.yubar[1,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yquPhi[mif1,0] * self.yquPhibar[1,0] * self.yu[1,0] * self.yubar[1,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yquPhi[mif1,0] * self.yquPhibar[2,0] * self.yu[1,0] * self.yubar[1,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yquPhi[mif1,0] * self.yquPhibar[0,1] * self.yu[1,1] * self.yubar[1,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yquPhi[mif1,0] * self.yquPhibar[1,1] * self.yu[1,1] * self.yubar[1,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yquPhi[mif1,0] * self.yquPhibar[2,1] * self.yu[1,1] * self.yubar[1,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yquPhi[mif1,0] * self.yquPhibar[0,2] * self.yu[1,2] * self.yubar[1,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yquPhi[mif1,0] * self.yquPhibar[1,2] * self.yu[1,2] * self.yubar[1,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yquPhi[mif1,0] * self.yquPhibar[2,2] * self.yu[1,2] * self.yubar[1,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,2] * self.ydqPhibar[mif2,1] * self.yu[2,0] * self.yubar[1,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,2] * self.ydqPhibar[mif2,1] * self.yu[2,0] * self.yubar[1,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,2] * self.ydqPhibar[mif2,1] * self.yu[2,0] * self.yubar[1,0] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,0] * self.yu[0,0] * self.yubar[0,0] * self.yubar[1,0] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,0] * self.yu[0,0] * self.yubar[0,0] * self.yubar[1,0] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,0] * self.yu[0,0] * self.yubar[0,0] * self.yubar[1,0] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,0] * self.yu[1,0] * self.yubar[0,0] * self.yubar[1,0] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,0] * self.yu[1,0] * self.yubar[0,0] * self.yubar[1,0] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,0] * self.yu[1,0] * self.yubar[0,0] * self.yubar[1,0] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,1] * self.yu[0,0] * self.yubar[0,1] * self.yubar[1,0] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,1] * self.yu[0,0] * self.yubar[0,1] * self.yubar[1,0] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,1] * self.yu[0,0] * self.yubar[0,1] * self.yubar[1,0] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,0] * self.yu[1,1] * self.yubar[0,1] * self.yubar[1,0] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,0] * self.yu[1,1] * self.yubar[0,1] * self.yubar[1,0] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,0] * self.yu[1,1] * self.yubar[0,1] * self.yubar[1,0] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,2] * self.yu[0,0] * self.yubar[0,2] * self.yubar[1,0] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,2] * self.yu[0,0] * self.yubar[0,2] * self.yubar[1,0] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,2] * self.yu[0,0] * self.yubar[0,2] * self.yubar[1,0] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,0] * self.yu[1,2] * self.yubar[0,2] * self.yubar[1,0] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,0] * self.yu[1,2] * self.yubar[0,2] * self.yubar[1,0] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,0] * self.yu[1,2] * self.yubar[0,2] * self.yubar[1,0] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,0] * self.yu[1,0] * (self.yubar[1,0])**(2) + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,0] * self.yu[1,0] * (self.yubar[1,0])**(2) + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,0] * self.yu[1,0] * (self.yubar[1,0])**(2) + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[0,0] * self.ydqPhibar[mif2,1] * self.yquPhi[0,1] * self.yubar[1,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[0,1] * self.ydqPhibar[mif2,1] * self.yquPhi[0,1] * self.yubar[1,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[0,2] * self.ydqPhibar[mif2,1] * self.yquPhi[0,1] * self.yubar[1,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[1,0] * self.ydqPhibar[mif2,1] * self.yquPhi[1,1] * self.yubar[1,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[1,1] * self.ydqPhibar[mif2,1] * self.yquPhi[1,1] * self.yubar[1,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[1,2] * self.ydqPhibar[mif2,1] * self.yquPhi[1,1] * self.yubar[1,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[2,0] * self.ydqPhibar[mif2,1] * self.yquPhi[2,1] * self.yubar[1,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[2,1] * self.ydqPhibar[mif2,1] * self.yquPhi[2,1] * self.yubar[1,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[2,2] * self.ydqPhibar[mif2,1] * self.yquPhi[2,1] * self.yubar[1,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,0] * self.ydqPhibar[0,1] * self.yquPhi[mif1,1] * self.yubar[1,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,0] * self.ydqPhibar[0,1] * self.yquPhi[mif1,1] * self.yubar[1,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,0] * self.ydqPhibar[0,1] * self.yquPhi[mif1,1] * self.yubar[1,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,1] * self.ydqPhibar[1,1] * self.yquPhi[mif1,1] * self.yubar[1,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,1] * self.ydqPhibar[1,1] * self.yquPhi[mif1,1] * self.yubar[1,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,1] * self.ydqPhibar[1,1] * self.yquPhi[mif1,1] * self.yubar[1,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,2] * self.ydqPhibar[2,1] * self.yquPhi[mif1,1] * self.yubar[1,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,2] * self.ydqPhibar[2,1] * self.yquPhi[mif1,1] * self.yubar[1,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,2] * self.ydqPhibar[2,1] * self.yquPhi[mif1,1] * self.yubar[1,1] + -1/8 * self.lam * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,1] * self.yubar[1,1] + -1/12 * self.invepsilonbar * self.lam * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,1] * self.yubar[1,1] + 1/12 * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,1] * self.yubar[1,1] + 1/12 * self.lam * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,1] * self.yubar[1,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,0] * self.ydqPhibar[mif2,1] * self.yu[0,1] * self.yubar[1,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,0] * self.ydqPhibar[mif2,1] * self.yu[0,1] * self.yubar[1,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,0] * self.ydqPhibar[mif2,1] * self.yu[0,1] * self.yubar[1,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yquPhi[mif1,1] * self.yquPhibar[0,0] * self.yu[1,0] * self.yubar[1,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yquPhi[mif1,1] * self.yquPhibar[1,0] * self.yu[1,0] * self.yubar[1,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yquPhi[mif1,1] * self.yquPhibar[2,0] * self.yu[1,0] * self.yubar[1,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,1] * self.ydqPhibar[mif2,1] * self.yu[1,1] * self.yubar[1,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,1] * self.ydqPhibar[mif2,1] * self.yu[1,1] * self.yubar[1,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,1] * self.ydqPhibar[mif2,1] * self.yu[1,1] * self.yubar[1,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yquPhi[mif1,1] * self.yquPhibar[0,1] * self.yu[1,1] * self.yubar[1,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yquPhi[mif1,1] * self.yquPhibar[1,1] * self.yu[1,1] * self.yubar[1,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yquPhi[mif1,1] * self.yquPhibar[2,1] * self.yu[1,1] * self.yubar[1,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yquPhi[mif1,1] * self.yquPhibar[0,2] * self.yu[1,2] * self.yubar[1,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yquPhi[mif1,1] * self.yquPhibar[1,2] * self.yu[1,2] * self.yubar[1,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yquPhi[mif1,1] * self.yquPhibar[2,2] * self.yu[1,2] * self.yubar[1,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,2] * self.ydqPhibar[mif2,1] * self.yu[2,1] * self.yubar[1,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,2] * self.ydqPhibar[mif2,1] * self.yu[2,1] * self.yubar[1,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,2] * self.ydqPhibar[mif2,1] * self.yu[2,1] * self.yubar[1,1] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,0] * self.yu[0,1] * self.yubar[0,0] * self.yubar[1,1] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,0] * self.yu[0,1] * self.yubar[0,0] * self.yubar[1,1] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,0] * self.yu[0,1] * self.yubar[0,0] * self.yubar[1,1] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,1] * self.yu[1,0] * self.yubar[0,0] * self.yubar[1,1] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,1] * self.yu[1,0] * self.yubar[0,0] * self.yubar[1,1] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,1] * self.yu[1,0] * self.yubar[0,0] * self.yubar[1,1] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,1] * self.yu[0,1] * self.yubar[0,1] * self.yubar[1,1] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,1] * self.yu[0,1] * self.yubar[0,1] * self.yubar[1,1] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,1] * self.yu[0,1] * self.yubar[0,1] * self.yubar[1,1] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,1] * self.yu[1,1] * self.yubar[0,1] * self.yubar[1,1] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,1] * self.yu[1,1] * self.yubar[0,1] * self.yubar[1,1] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,1] * self.yu[1,1] * self.yubar[0,1] * self.yubar[1,1] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,2] * self.yu[0,1] * self.yubar[0,2] * self.yubar[1,1] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,2] * self.yu[0,1] * self.yubar[0,2] * self.yubar[1,1] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,2] * self.yu[0,1] * self.yubar[0,2] * self.yubar[1,1] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,1] * self.yu[1,2] * self.yubar[0,2] * self.yubar[1,1] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,1] * self.yu[1,2] * self.yubar[0,2] * self.yubar[1,1] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,1] * self.yu[1,2] * self.yubar[0,2] * self.yubar[1,1] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,1] * self.yu[1,0] * self.yubar[1,0] * self.yubar[1,1] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,1] * self.yu[1,0] * self.yubar[1,0] * self.yubar[1,1] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,1] * self.yu[1,0] * self.yubar[1,0] * self.yubar[1,1] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,0] * self.yu[1,1] * self.yubar[1,0] * self.yubar[1,1] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,0] * self.yu[1,1] * self.yubar[1,0] * self.yubar[1,1] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,0] * self.yu[1,1] * self.yubar[1,0] * self.yubar[1,1] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,1] * self.yu[1,1] * (self.yubar[1,1])**(2) + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,1] * self.yu[1,1] * (self.yubar[1,1])**(2) + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,1] * self.yu[1,1] * (self.yubar[1,1])**(2) + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[0,0] * self.ydqPhibar[mif2,1] * self.yquPhi[0,2] * self.yubar[1,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[0,1] * self.ydqPhibar[mif2,1] * self.yquPhi[0,2] * self.yubar[1,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[0,2] * self.ydqPhibar[mif2,1] * self.yquPhi[0,2] * self.yubar[1,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[1,0] * self.ydqPhibar[mif2,1] * self.yquPhi[1,2] * self.yubar[1,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[1,1] * self.ydqPhibar[mif2,1] * self.yquPhi[1,2] * self.yubar[1,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[1,2] * self.ydqPhibar[mif2,1] * self.yquPhi[1,2] * self.yubar[1,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[2,0] * self.ydqPhibar[mif2,1] * self.yquPhi[2,2] * self.yubar[1,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[2,1] * self.ydqPhibar[mif2,1] * self.yquPhi[2,2] * self.yubar[1,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[2,2] * self.ydqPhibar[mif2,1] * self.yquPhi[2,2] * self.yubar[1,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,0] * self.ydqPhibar[0,1] * self.yquPhi[mif1,2] * self.yubar[1,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,0] * self.ydqPhibar[0,1] * self.yquPhi[mif1,2] * self.yubar[1,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,0] * self.ydqPhibar[0,1] * self.yquPhi[mif1,2] * self.yubar[1,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,1] * self.ydqPhibar[1,1] * self.yquPhi[mif1,2] * self.yubar[1,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,1] * self.ydqPhibar[1,1] * self.yquPhi[mif1,2] * self.yubar[1,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,1] * self.ydqPhibar[1,1] * self.yquPhi[mif1,2] * self.yubar[1,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,2] * self.ydqPhibar[2,1] * self.yquPhi[mif1,2] * self.yubar[1,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,2] * self.ydqPhibar[2,1] * self.yquPhi[mif1,2] * self.yubar[1,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,2] * self.ydqPhibar[2,1] * self.yquPhi[mif1,2] * self.yubar[1,2] + -1/8 * self.lam * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,2] * self.yubar[1,2] + -1/12 * self.invepsilonbar * self.lam * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,2] * self.yubar[1,2] + 1/12 * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,2] * self.yubar[1,2] + 1/12 * self.lam * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,2] * self.yubar[1,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,0] * self.ydqPhibar[mif2,1] * self.yu[0,2] * self.yubar[1,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,0] * self.ydqPhibar[mif2,1] * self.yu[0,2] * self.yubar[1,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,0] * self.ydqPhibar[mif2,1] * self.yu[0,2] * self.yubar[1,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yquPhi[mif1,2] * self.yquPhibar[0,0] * self.yu[1,0] * self.yubar[1,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yquPhi[mif1,2] * self.yquPhibar[1,0] * self.yu[1,0] * self.yubar[1,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yquPhi[mif1,2] * self.yquPhibar[2,0] * self.yu[1,0] * self.yubar[1,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yquPhi[mif1,2] * self.yquPhibar[0,1] * self.yu[1,1] * self.yubar[1,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yquPhi[mif1,2] * self.yquPhibar[1,1] * self.yu[1,1] * self.yubar[1,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yquPhi[mif1,2] * self.yquPhibar[2,1] * self.yu[1,1] * self.yubar[1,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,1] * self.ydqPhibar[mif2,1] * self.yu[1,2] * self.yubar[1,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,1] * self.ydqPhibar[mif2,1] * self.yu[1,2] * self.yubar[1,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,1] * self.ydqPhibar[mif2,1] * self.yu[1,2] * self.yubar[1,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yquPhi[mif1,2] * self.yquPhibar[0,2] * self.yu[1,2] * self.yubar[1,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yquPhi[mif1,2] * self.yquPhibar[1,2] * self.yu[1,2] * self.yubar[1,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yquPhi[mif1,2] * self.yquPhibar[2,2] * self.yu[1,2] * self.yubar[1,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,2] * self.ydqPhibar[mif2,1] * self.yu[2,2] * self.yubar[1,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,2] * self.ydqPhibar[mif2,1] * self.yu[2,2] * self.yubar[1,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,2] * self.ydqPhibar[mif2,1] * self.yu[2,2] * self.yubar[1,2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,0] * self.yu[0,2] * self.yubar[0,0] * self.yubar[1,2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,0] * self.yu[0,2] * self.yubar[0,0] * self.yubar[1,2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,0] * self.yu[0,2] * self.yubar[0,0] * self.yubar[1,2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,2] * self.yu[1,0] * self.yubar[0,0] * self.yubar[1,2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,2] * self.yu[1,0] * self.yubar[0,0] * self.yubar[1,2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,2] * self.yu[1,0] * self.yubar[0,0] * self.yubar[1,2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,1] * self.yu[0,2] * self.yubar[0,1] * self.yubar[1,2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,1] * self.yu[0,2] * self.yubar[0,1] * self.yubar[1,2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,1] * self.yu[0,2] * self.yubar[0,1] * self.yubar[1,2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,2] * self.yu[1,1] * self.yubar[0,1] * self.yubar[1,2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,2] * self.yu[1,1] * self.yubar[0,1] * self.yubar[1,2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,2] * self.yu[1,1] * self.yubar[0,1] * self.yubar[1,2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,2] * self.yu[0,2] * self.yubar[0,2] * self.yubar[1,2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,2] * self.yu[0,2] * self.yubar[0,2] * self.yubar[1,2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,2] * self.yu[0,2] * self.yubar[0,2] * self.yubar[1,2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,2] * self.yu[1,2] * self.yubar[0,2] * self.yubar[1,2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,2] * self.yu[1,2] * self.yubar[0,2] * self.yubar[1,2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,2] * self.yu[1,2] * self.yubar[0,2] * self.yubar[1,2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,2] * self.yu[1,0] * self.yubar[1,0] * self.yubar[1,2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,2] * self.yu[1,0] * self.yubar[1,0] * self.yubar[1,2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,2] * self.yu[1,0] * self.yubar[1,0] * self.yubar[1,2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,0] * self.yu[1,2] * self.yubar[1,0] * self.yubar[1,2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,0] * self.yu[1,2] * self.yubar[1,0] * self.yubar[1,2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,0] * self.yu[1,2] * self.yubar[1,0] * self.yubar[1,2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,2] * self.yu[1,1] * self.yubar[1,1] * self.yubar[1,2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,2] * self.yu[1,1] * self.yubar[1,1] * self.yubar[1,2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,2] * self.yu[1,1] * self.yubar[1,1] * self.yubar[1,2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,1] * self.yu[1,2] * self.yubar[1,1] * self.yubar[1,2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,1] * self.yu[1,2] * self.yubar[1,1] * self.yubar[1,2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,1] * self.yu[1,2] * self.yubar[1,1] * self.yubar[1,2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,2] * self.yu[1,2] * (self.yubar[1,2])**(2) + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,2] * self.yu[1,2] * (self.yubar[1,2])**(2) + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,2] * self.yu[1,2] * (self.yubar[1,2])**(2) + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[0,0] * self.ydqPhibar[mif2,2] * self.yquPhi[0,0] * self.yubar[2,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[0,1] * self.ydqPhibar[mif2,2] * self.yquPhi[0,0] * self.yubar[2,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[0,2] * self.ydqPhibar[mif2,2] * self.yquPhi[0,0] * self.yubar[2,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[1,0] * self.ydqPhibar[mif2,2] * self.yquPhi[1,0] * self.yubar[2,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[1,1] * self.ydqPhibar[mif2,2] * self.yquPhi[1,0] * self.yubar[2,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[1,2] * self.ydqPhibar[mif2,2] * self.yquPhi[1,0] * self.yubar[2,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[2,0] * self.ydqPhibar[mif2,2] * self.yquPhi[2,0] * self.yubar[2,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[2,1] * self.ydqPhibar[mif2,2] * self.yquPhi[2,0] * self.yubar[2,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[2,2] * self.ydqPhibar[mif2,2] * self.yquPhi[2,0] * self.yubar[2,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,0] * self.ydqPhibar[0,2] * self.yquPhi[mif1,0] * self.yubar[2,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,0] * self.ydqPhibar[0,2] * self.yquPhi[mif1,0] * self.yubar[2,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,0] * self.ydqPhibar[0,2] * self.yquPhi[mif1,0] * self.yubar[2,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,1] * self.ydqPhibar[1,2] * self.yquPhi[mif1,0] * self.yubar[2,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,1] * self.ydqPhibar[1,2] * self.yquPhi[mif1,0] * self.yubar[2,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,1] * self.ydqPhibar[1,2] * self.yquPhi[mif1,0] * self.yubar[2,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,2] * self.ydqPhibar[2,2] * self.yquPhi[mif1,0] * self.yubar[2,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,2] * self.ydqPhibar[2,2] * self.yquPhi[mif1,0] * self.yubar[2,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,2] * self.ydqPhibar[2,2] * self.yquPhi[mif1,0] * self.yubar[2,0] + -1/8 * self.lam * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,0] * self.yubar[2,0] + -1/12 * self.invepsilonbar * self.lam * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,0] * self.yubar[2,0] + 1/12 * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,0] * self.yubar[2,0] + 1/12 * self.lam * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,0] * self.yubar[2,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,0] * self.ydqPhibar[mif2,2] * self.yu[0,0] * self.yubar[2,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,0] * self.ydqPhibar[mif2,2] * self.yu[0,0] * self.yubar[2,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,0] * self.ydqPhibar[mif2,2] * self.yu[0,0] * self.yubar[2,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,1] * self.ydqPhibar[mif2,2] * self.yu[1,0] * self.yubar[2,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,1] * self.ydqPhibar[mif2,2] * self.yu[1,0] * self.yubar[2,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,1] * self.ydqPhibar[mif2,2] * self.yu[1,0] * self.yubar[2,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,2] * self.ydqPhibar[mif2,2] * self.yu[2,0] * self.yubar[2,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,2] * self.ydqPhibar[mif2,2] * self.yu[2,0] * self.yubar[2,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,2] * self.ydqPhibar[mif2,2] * self.yu[2,0] * self.yubar[2,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yquPhi[mif1,0] * self.yquPhibar[0,0] * self.yu[2,0] * self.yubar[2,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yquPhi[mif1,0] * self.yquPhibar[1,0] * self.yu[2,0] * self.yubar[2,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yquPhi[mif1,0] * self.yquPhibar[2,0] * self.yu[2,0] * self.yubar[2,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yquPhi[mif1,0] * self.yquPhibar[0,1] * self.yu[2,1] * self.yubar[2,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yquPhi[mif1,0] * self.yquPhibar[1,1] * self.yu[2,1] * self.yubar[2,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yquPhi[mif1,0] * self.yquPhibar[2,1] * self.yu[2,1] * self.yubar[2,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yquPhi[mif1,0] * self.yquPhibar[0,2] * self.yu[2,2] * self.yubar[2,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yquPhi[mif1,0] * self.yquPhibar[1,2] * self.yu[2,2] * self.yubar[2,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yquPhi[mif1,0] * self.yquPhibar[2,2] * self.yu[2,2] * self.yubar[2,0] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,0] * self.yu[0,0] * self.yubar[0,0] * self.yubar[2,0] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,0] * self.yu[0,0] * self.yubar[0,0] * self.yubar[2,0] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,0] * self.yu[0,0] * self.yubar[0,0] * self.yubar[2,0] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,0] * self.yu[2,0] * self.yubar[0,0] * self.yubar[2,0] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,0] * self.yu[2,0] * self.yubar[0,0] * self.yubar[2,0] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,0] * self.yu[2,0] * self.yubar[0,0] * self.yubar[2,0] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,1] * self.yu[0,0] * self.yubar[0,1] * self.yubar[2,0] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,1] * self.yu[0,0] * self.yubar[0,1] * self.yubar[2,0] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,1] * self.yu[0,0] * self.yubar[0,1] * self.yubar[2,0] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,0] * self.yu[2,1] * self.yubar[0,1] * self.yubar[2,0] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,0] * self.yu[2,1] * self.yubar[0,1] * self.yubar[2,0] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,0] * self.yu[2,1] * self.yubar[0,1] * self.yubar[2,0] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,2] * self.yu[0,0] * self.yubar[0,2] * self.yubar[2,0] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,2] * self.yu[0,0] * self.yubar[0,2] * self.yubar[2,0] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,2] * self.yu[0,0] * self.yubar[0,2] * self.yubar[2,0] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,0] * self.yu[2,2] * self.yubar[0,2] * self.yubar[2,0] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,0] * self.yu[2,2] * self.yubar[0,2] * self.yubar[2,0] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,0] * self.yu[2,2] * self.yubar[0,2] * self.yubar[2,0] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,0] * self.yu[1,0] * self.yubar[1,0] * self.yubar[2,0] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,0] * self.yu[1,0] * self.yubar[1,0] * self.yubar[2,0] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,0] * self.yu[1,0] * self.yubar[1,0] * self.yubar[2,0] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,0] * self.yu[2,0] * self.yubar[1,0] * self.yubar[2,0] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,0] * self.yu[2,0] * self.yubar[1,0] * self.yubar[2,0] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,0] * self.yu[2,0] * self.yubar[1,0] * self.yubar[2,0] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,1] * self.yu[1,0] * self.yubar[1,1] * self.yubar[2,0] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,1] * self.yu[1,0] * self.yubar[1,1] * self.yubar[2,0] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,1] * self.yu[1,0] * self.yubar[1,1] * self.yubar[2,0] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,0] * self.yu[2,1] * self.yubar[1,1] * self.yubar[2,0] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,0] * self.yu[2,1] * self.yubar[1,1] * self.yubar[2,0] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,0] * self.yu[2,1] * self.yubar[1,1] * self.yubar[2,0] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,2] * self.yu[1,0] * self.yubar[1,2] * self.yubar[2,0] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,2] * self.yu[1,0] * self.yubar[1,2] * self.yubar[2,0] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,2] * self.yu[1,0] * self.yubar[1,2] * self.yubar[2,0] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,0] * self.yu[2,2] * self.yubar[1,2] * self.yubar[2,0] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,0] * self.yu[2,2] * self.yubar[1,2] * self.yubar[2,0] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,0] * self.yu[2,2] * self.yubar[1,2] * self.yubar[2,0] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,0] * self.yu[2,0] * (self.yubar[2,0])**(2) + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,0] * self.yu[2,0] * (self.yubar[2,0])**(2) + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,0] * self.yu[2,0] * (self.yubar[2,0])**(2) + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[0,0] * self.ydqPhibar[mif2,2] * self.yquPhi[0,1] * self.yubar[2,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[0,1] * self.ydqPhibar[mif2,2] * self.yquPhi[0,1] * self.yubar[2,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[0,2] * self.ydqPhibar[mif2,2] * self.yquPhi[0,1] * self.yubar[2,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[1,0] * self.ydqPhibar[mif2,2] * self.yquPhi[1,1] * self.yubar[2,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[1,1] * self.ydqPhibar[mif2,2] * self.yquPhi[1,1] * self.yubar[2,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[1,2] * self.ydqPhibar[mif2,2] * self.yquPhi[1,1] * self.yubar[2,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[2,0] * self.ydqPhibar[mif2,2] * self.yquPhi[2,1] * self.yubar[2,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[2,1] * self.ydqPhibar[mif2,2] * self.yquPhi[2,1] * self.yubar[2,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[2,2] * self.ydqPhibar[mif2,2] * self.yquPhi[2,1] * self.yubar[2,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,0] * self.ydqPhibar[0,2] * self.yquPhi[mif1,1] * self.yubar[2,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,0] * self.ydqPhibar[0,2] * self.yquPhi[mif1,1] * self.yubar[2,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,0] * self.ydqPhibar[0,2] * self.yquPhi[mif1,1] * self.yubar[2,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,1] * self.ydqPhibar[1,2] * self.yquPhi[mif1,1] * self.yubar[2,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,1] * self.ydqPhibar[1,2] * self.yquPhi[mif1,1] * self.yubar[2,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,1] * self.ydqPhibar[1,2] * self.yquPhi[mif1,1] * self.yubar[2,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,2] * self.ydqPhibar[2,2] * self.yquPhi[mif1,1] * self.yubar[2,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,2] * self.ydqPhibar[2,2] * self.yquPhi[mif1,1] * self.yubar[2,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,2] * self.ydqPhibar[2,2] * self.yquPhi[mif1,1] * self.yubar[2,1] + -1/8 * self.lam * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,1] * self.yubar[2,1] + -1/12 * self.invepsilonbar * self.lam * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,1] * self.yubar[2,1] + 1/12 * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,1] * self.yubar[2,1] + 1/12 * self.lam * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,1] * self.yubar[2,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,0] * self.ydqPhibar[mif2,2] * self.yu[0,1] * self.yubar[2,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,0] * self.ydqPhibar[mif2,2] * self.yu[0,1] * self.yubar[2,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,0] * self.ydqPhibar[mif2,2] * self.yu[0,1] * self.yubar[2,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,1] * self.ydqPhibar[mif2,2] * self.yu[1,1] * self.yubar[2,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,1] * self.ydqPhibar[mif2,2] * self.yu[1,1] * self.yubar[2,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,1] * self.ydqPhibar[mif2,2] * self.yu[1,1] * self.yubar[2,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yquPhi[mif1,1] * self.yquPhibar[0,0] * self.yu[2,0] * self.yubar[2,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yquPhi[mif1,1] * self.yquPhibar[1,0] * self.yu[2,0] * self.yubar[2,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yquPhi[mif1,1] * self.yquPhibar[2,0] * self.yu[2,0] * self.yubar[2,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,2] * self.ydqPhibar[mif2,2] * self.yu[2,1] * self.yubar[2,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,2] * self.ydqPhibar[mif2,2] * self.yu[2,1] * self.yubar[2,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,2] * self.ydqPhibar[mif2,2] * self.yu[2,1] * self.yubar[2,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yquPhi[mif1,1] * self.yquPhibar[0,1] * self.yu[2,1] * self.yubar[2,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yquPhi[mif1,1] * self.yquPhibar[1,1] * self.yu[2,1] * self.yubar[2,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yquPhi[mif1,1] * self.yquPhibar[2,1] * self.yu[2,1] * self.yubar[2,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yquPhi[mif1,1] * self.yquPhibar[0,2] * self.yu[2,2] * self.yubar[2,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yquPhi[mif1,1] * self.yquPhibar[1,2] * self.yu[2,2] * self.yubar[2,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yquPhi[mif1,1] * self.yquPhibar[2,2] * self.yu[2,2] * self.yubar[2,1] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,0] * self.yu[0,1] * self.yubar[0,0] * self.yubar[2,1] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,0] * self.yu[0,1] * self.yubar[0,0] * self.yubar[2,1] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,0] * self.yu[0,1] * self.yubar[0,0] * self.yubar[2,1] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,1] * self.yu[2,0] * self.yubar[0,0] * self.yubar[2,1] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,1] * self.yu[2,0] * self.yubar[0,0] * self.yubar[2,1] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,1] * self.yu[2,0] * self.yubar[0,0] * self.yubar[2,1] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,1] * self.yu[0,1] * self.yubar[0,1] * self.yubar[2,1] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,1] * self.yu[0,1] * self.yubar[0,1] * self.yubar[2,1] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,1] * self.yu[0,1] * self.yubar[0,1] * self.yubar[2,1] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,1] * self.yu[2,1] * self.yubar[0,1] * self.yubar[2,1] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,1] * self.yu[2,1] * self.yubar[0,1] * self.yubar[2,1] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,1] * self.yu[2,1] * self.yubar[0,1] * self.yubar[2,1] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,2] * self.yu[0,1] * self.yubar[0,2] * self.yubar[2,1] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,2] * self.yu[0,1] * self.yubar[0,2] * self.yubar[2,1] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,2] * self.yu[0,1] * self.yubar[0,2] * self.yubar[2,1] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,1] * self.yu[2,2] * self.yubar[0,2] * self.yubar[2,1] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,1] * self.yu[2,2] * self.yubar[0,2] * self.yubar[2,1] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,1] * self.yu[2,2] * self.yubar[0,2] * self.yubar[2,1] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,0] * self.yu[1,1] * self.yubar[1,0] * self.yubar[2,1] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,0] * self.yu[1,1] * self.yubar[1,0] * self.yubar[2,1] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,0] * self.yu[1,1] * self.yubar[1,0] * self.yubar[2,1] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,1] * self.yu[2,0] * self.yubar[1,0] * self.yubar[2,1] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,1] * self.yu[2,0] * self.yubar[1,0] * self.yubar[2,1] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,1] * self.yu[2,0] * self.yubar[1,0] * self.yubar[2,1] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,1] * self.yu[1,1] * self.yubar[1,1] * self.yubar[2,1] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,1] * self.yu[1,1] * self.yubar[1,1] * self.yubar[2,1] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,1] * self.yu[1,1] * self.yubar[1,1] * self.yubar[2,1] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,1] * self.yu[2,1] * self.yubar[1,1] * self.yubar[2,1] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,1] * self.yu[2,1] * self.yubar[1,1] * self.yubar[2,1] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,1] * self.yu[2,1] * self.yubar[1,1] * self.yubar[2,1] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,2] * self.yu[1,1] * self.yubar[1,2] * self.yubar[2,1] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,2] * self.yu[1,1] * self.yubar[1,2] * self.yubar[2,1] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,2] * self.yu[1,1] * self.yubar[1,2] * self.yubar[2,1] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,1] * self.yu[2,2] * self.yubar[1,2] * self.yubar[2,1] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,1] * self.yu[2,2] * self.yubar[1,2] * self.yubar[2,1] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,1] * self.yu[2,2] * self.yubar[1,2] * self.yubar[2,1] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,1] * self.yu[2,0] * self.yubar[2,0] * self.yubar[2,1] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,1] * self.yu[2,0] * self.yubar[2,0] * self.yubar[2,1] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,1] * self.yu[2,0] * self.yubar[2,0] * self.yubar[2,1] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,0] * self.yu[2,1] * self.yubar[2,0] * self.yubar[2,1] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,0] * self.yu[2,1] * self.yubar[2,0] * self.yubar[2,1] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,0] * self.yu[2,1] * self.yubar[2,0] * self.yubar[2,1] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,1] * self.yu[2,1] * (self.yubar[2,1])**(2) + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,1] * self.yu[2,1] * (self.yubar[2,1])**(2) + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,1] * self.yu[2,1] * (self.yubar[2,1])**(2) + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[0,0] * self.ydqPhibar[mif2,2] * self.yquPhi[0,2] * self.yubar[2,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[0,1] * self.ydqPhibar[mif2,2] * self.yquPhi[0,2] * self.yubar[2,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[0,2] * self.ydqPhibar[mif2,2] * self.yquPhi[0,2] * self.yubar[2,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[1,0] * self.ydqPhibar[mif2,2] * self.yquPhi[1,2] * self.yubar[2,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[1,1] * self.ydqPhibar[mif2,2] * self.yquPhi[1,2] * self.yubar[2,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[1,2] * self.ydqPhibar[mif2,2] * self.yquPhi[1,2] * self.yubar[2,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[2,0] * self.ydqPhibar[mif2,2] * self.yquPhi[2,2] * self.yubar[2,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[2,1] * self.ydqPhibar[mif2,2] * self.yquPhi[2,2] * self.yubar[2,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[2,2] * self.ydqPhibar[mif2,2] * self.yquPhi[2,2] * self.yubar[2,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,0] * self.ydqPhibar[0,2] * self.yquPhi[mif1,2] * self.yubar[2,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,0] * self.ydqPhibar[0,2] * self.yquPhi[mif1,2] * self.yubar[2,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,0] * self.ydqPhibar[0,2] * self.yquPhi[mif1,2] * self.yubar[2,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,1] * self.ydqPhibar[1,2] * self.yquPhi[mif1,2] * self.yubar[2,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,1] * self.ydqPhibar[1,2] * self.yquPhi[mif1,2] * self.yubar[2,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,1] * self.ydqPhibar[1,2] * self.yquPhi[mif1,2] * self.yubar[2,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,2] * self.ydqPhibar[2,2] * self.yquPhi[mif1,2] * self.yubar[2,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,2] * self.ydqPhibar[2,2] * self.yquPhi[mif1,2] * self.yubar[2,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,2] * self.ydqPhibar[2,2] * self.yquPhi[mif1,2] * self.yubar[2,2] + -1/8 * self.lam * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,2] * self.yubar[2,2] + -1/12 * self.invepsilonbar * self.lam * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,2] * self.yubar[2,2] + 1/12 * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,2] * self.yubar[2,2] + 1/12 * self.lam * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,2] * self.yubar[2,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,0] * self.ydqPhibar[mif2,2] * self.yu[0,2] * self.yubar[2,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,0] * self.ydqPhibar[mif2,2] * self.yu[0,2] * self.yubar[2,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,0] * self.ydqPhibar[mif2,2] * self.yu[0,2] * self.yubar[2,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,1] * self.ydqPhibar[mif2,2] * self.yu[1,2] * self.yubar[2,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,1] * self.ydqPhibar[mif2,2] * self.yu[1,2] * self.yubar[2,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,1] * self.ydqPhibar[mif2,2] * self.yu[1,2] * self.yubar[2,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yquPhi[mif1,2] * self.yquPhibar[0,0] * self.yu[2,0] * self.yubar[2,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yquPhi[mif1,2] * self.yquPhibar[1,0] * self.yu[2,0] * self.yubar[2,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yquPhi[mif1,2] * self.yquPhibar[2,0] * self.yu[2,0] * self.yubar[2,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yquPhi[mif1,2] * self.yquPhibar[0,1] * self.yu[2,1] * self.yubar[2,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yquPhi[mif1,2] * self.yquPhibar[1,1] * self.yu[2,1] * self.yubar[2,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yquPhi[mif1,2] * self.yquPhibar[2,1] * self.yu[2,1] * self.yubar[2,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,2] * self.ydqPhibar[mif2,2] * self.yu[2,2] * self.yubar[2,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,2] * self.ydqPhibar[mif2,2] * self.yu[2,2] * self.yubar[2,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,2] * self.ydqPhibar[mif2,2] * self.yu[2,2] * self.yubar[2,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yquPhi[mif1,2] * self.yquPhibar[0,2] * self.yu[2,2] * self.yubar[2,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yquPhi[mif1,2] * self.yquPhibar[1,2] * self.yu[2,2] * self.yubar[2,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yquPhi[mif1,2] * self.yquPhibar[2,2] * self.yu[2,2] * self.yubar[2,2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,0] * self.yu[0,2] * self.yubar[0,0] * self.yubar[2,2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,0] * self.yu[0,2] * self.yubar[0,0] * self.yubar[2,2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,0] * self.yu[0,2] * self.yubar[0,0] * self.yubar[2,2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,2] * self.yu[2,0] * self.yubar[0,0] * self.yubar[2,2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,2] * self.yu[2,0] * self.yubar[0,0] * self.yubar[2,2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,2] * self.yu[2,0] * self.yubar[0,0] * self.yubar[2,2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,1] * self.yu[0,2] * self.yubar[0,1] * self.yubar[2,2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,1] * self.yu[0,2] * self.yubar[0,1] * self.yubar[2,2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,1] * self.yu[0,2] * self.yubar[0,1] * self.yubar[2,2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,2] * self.yu[2,1] * self.yubar[0,1] * self.yubar[2,2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,2] * self.yu[2,1] * self.yubar[0,1] * self.yubar[2,2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,2] * self.yu[2,1] * self.yubar[0,1] * self.yubar[2,2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,2] * self.yu[0,2] * self.yubar[0,2] * self.yubar[2,2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,2] * self.yu[0,2] * self.yubar[0,2] * self.yubar[2,2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,2] * self.yu[0,2] * self.yubar[0,2] * self.yubar[2,2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,2] * self.yu[2,2] * self.yubar[0,2] * self.yubar[2,2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,2] * self.yu[2,2] * self.yubar[0,2] * self.yubar[2,2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,2] * self.yu[2,2] * self.yubar[0,2] * self.yubar[2,2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,0] * self.yu[1,2] * self.yubar[1,0] * self.yubar[2,2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,0] * self.yu[1,2] * self.yubar[1,0] * self.yubar[2,2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,0] * self.yu[1,2] * self.yubar[1,0] * self.yubar[2,2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,2] * self.yu[2,0] * self.yubar[1,0] * self.yubar[2,2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,2] * self.yu[2,0] * self.yubar[1,0] * self.yubar[2,2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,2] * self.yu[2,0] * self.yubar[1,0] * self.yubar[2,2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,1] * self.yu[1,2] * self.yubar[1,1] * self.yubar[2,2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,1] * self.yu[1,2] * self.yubar[1,1] * self.yubar[2,2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,1] * self.yu[1,2] * self.yubar[1,1] * self.yubar[2,2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,2] * self.yu[2,1] * self.yubar[1,1] * self.yubar[2,2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,2] * self.yu[2,1] * self.yubar[1,1] * self.yubar[2,2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,2] * self.yu[2,1] * self.yubar[1,1] * self.yubar[2,2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,2] * self.yu[1,2] * self.yubar[1,2] * self.yubar[2,2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,2] * self.yu[1,2] * self.yubar[1,2] * self.yubar[2,2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,2] * self.yu[1,2] * self.yubar[1,2] * self.yubar[2,2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,2] * self.yu[2,2] * self.yubar[1,2] * self.yubar[2,2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,2] * self.yu[2,2] * self.yubar[1,2] * self.yubar[2,2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,2] * self.yu[2,2] * self.yubar[1,2] * self.yubar[2,2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,2] * self.yu[2,0] * self.yubar[2,0] * self.yubar[2,2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,2] * self.yu[2,0] * self.yubar[2,0] * self.yubar[2,2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,2] * self.yu[2,0] * self.yubar[2,0] * self.yubar[2,2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,0] * self.yu[2,2] * self.yubar[2,0] * self.yubar[2,2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,0] * self.yu[2,2] * self.yubar[2,0] * self.yubar[2,2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,0] * self.yu[2,2] * self.yubar[2,0] * self.yubar[2,2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,2] * self.yu[2,1] * self.yubar[2,1] * self.yubar[2,2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,2] * self.yu[2,1] * self.yubar[2,1] * self.yubar[2,2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,2] * self.yu[2,1] * self.yubar[2,1] * self.yubar[2,2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,1] * self.yu[2,2] * self.yubar[2,1] * self.yubar[2,2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,1] * self.yu[2,2] * self.yubar[2,1] * self.yubar[2,2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,1] * self.yu[2,2] * self.yubar[2,1] * self.yubar[2,2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,2] * self.yu[2,2] * (self.yubar[2,2])**(2) + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,2] * self.yu[2,2] * (self.yubar[2,2])**(2) + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,2] * self.yu[2,2] * (self.yubar[2,2])**(2))

    def alphaOdW(self, mif1,mif2):
        return (-1/576 * self.g2 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydqPhi[0,0] * self.ydqPhibar[0,mif1] + -1/576 * self.g2 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydqPhi[0,1] * self.ydqPhibar[0,mif1] + -1/576 * self.g2 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydqPhi[0,2] * self.ydqPhibar[0,mif1] + -1/576 * self.g2 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydqPhi[1,0] * self.ydqPhibar[1,mif1] + -1/576 * self.g2 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydqPhi[1,1] * self.ydqPhibar[1,mif1] + -1/576 * self.g2 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydqPhi[1,2] * self.ydqPhibar[1,mif1] + -1/576 * self.g2 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydqPhi[2,0] * self.ydqPhibar[2,mif1] + -1/576 * self.g2 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydqPhi[2,1] * self.ydqPhibar[2,mif1] + -1/576 * self.g2 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydqPhi[2,2] * self.ydqPhibar[2,mif1] + -1/576 * self.g2 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yquPhi[mif1,0] * self.yquPhibar[0,0] + -1/576 * self.g2 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yquPhi[mif1,1] * self.yquPhibar[0,1] + -1/576 * self.g2 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yquPhi[mif1,2] * self.yquPhibar[0,2] + -1/576 * self.g2 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yquPhi[mif1,0] * self.yquPhibar[1,0] + -1/576 * self.g2 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yquPhi[mif1,1] * self.yquPhibar[1,1] + -1/576 * self.g2 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yquPhi[mif1,2] * self.yquPhibar[1,2] + -1/576 * self.g2 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yquPhi[mif1,0] * self.yquPhibar[2,0] + -1/576 * self.g2 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yquPhi[mif1,1] * self.yquPhibar[2,1] + -1/576 * self.g2 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yquPhi[mif1,2] * self.yquPhibar[2,2] + 1/192 * self.g2 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,0] * self.yubar[0,0] + 1/96 * self.g2 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,0] * self.yubar[0,0] + -1/96 * self.g2 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,0] * self.yubar[0,0] + 1/192 * self.g2 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,1] * self.yubar[0,1] + 1/96 * self.g2 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,1] * self.yubar[0,1] + -1/96 * self.g2 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,1] * self.yubar[0,1] + 1/192 * self.g2 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,2] * self.yubar[0,2] + 1/96 * self.g2 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,2] * self.yubar[0,2] + -1/96 * self.g2 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,0] * self.yquPhi[mif1,2] * self.yubar[0,2] + 1/192 * self.g2 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,0] * self.yubar[1,0] + 1/96 * self.g2 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,0] * self.yubar[1,0] + -1/96 * self.g2 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,0] * self.yubar[1,0] + 1/192 * self.g2 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,1] * self.yubar[1,1] + 1/96 * self.g2 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,1] * self.yubar[1,1] + -1/96 * self.g2 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,1] * self.yubar[1,1] + 1/192 * self.g2 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,2] * self.yubar[1,2] + 1/96 * self.g2 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,2] * self.yubar[1,2] + -1/96 * self.g2 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,1] * self.yquPhi[mif1,2] * self.yubar[1,2] + 1/192 * self.g2 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,0] * self.yubar[2,0] + 1/96 * self.g2 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,0] * self.yubar[2,0] + -1/96 * self.g2 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,0] * self.yubar[2,0] + 1/192 * self.g2 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,1] * self.yubar[2,1] + 1/96 * self.g2 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,1] * self.yubar[2,1] + -1/96 * self.g2 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,1] * self.yubar[2,1] + 1/192 * self.g2 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,2] * self.yubar[2,2] + 1/96 * self.g2 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,2] * self.yubar[2,2] + -1/96 * self.g2 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif2,2] * self.yquPhi[mif1,2] * self.yubar[2,2])

    def alphaOeB(self, mif1,mif2):
        return 0

    def alphaOed(self, mif1,mif2,mif3,mif4):
        return (-1/360 * (self.g1)**(4) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 11/648 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,0] + 1/108 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,0] + -1/108 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,0] + 11/648 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,1] + 1/108 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,1] + -1/108 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,1] + 11/648 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,2] + 1/108 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,2] + -1/108 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,2])

    def alphaOee(self, mif1,mif2,mif3,mif4):
        return -1/240 * (self.g1)**(4) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4)

    def alphaOeH(self, mif1,mif2):
        return (-1/480 * (self.g2)**(4) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] + 1/6 * (self.lambdaHatPrimePhi)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] + 2/3 * self.lambdaHatPrimePrimePhi * self.lambdaHatPrimePrimePhibar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2])

    def alphaOeu(self, mif1,mif2,mif3,mif4):
        return (1/180 * (self.g1)**(4) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 5/648 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yquPhi[0,mif4] * self.yquPhibar[0,mif3] + 1/108 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yquPhi[0,mif4] * self.yquPhibar[0,mif3] + -1/108 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[0,mif4] * self.yquPhibar[0,mif3] + 5/648 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yquPhi[1,mif4] * self.yquPhibar[1,mif3] + 1/108 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yquPhi[1,mif4] * self.yquPhibar[1,mif3] + -1/108 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[1,mif4] * self.yquPhibar[1,mif3] + 5/648 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yquPhi[2,mif4] * self.yquPhibar[2,mif3] + 1/108 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yquPhi[2,mif4] * self.yquPhibar[2,mif3] + -1/108 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[2,mif4] * self.yquPhibar[2,mif3])

    def alphaOeW(self, mif1,mif2):
        return 0

    def alphaOHd(self, mif1,mif2):
        return (1/720 * (self.g1)**(4) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,mif1] * self.ydqPhi[0,0] * self.ydqPhibar[0,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[0,mif1] * self.ydqPhi[0,1] * self.ydqPhibar[0,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[0,mif1] * self.ydqPhi[0,2] * self.ydqPhibar[0,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[1,mif1] * self.ydqPhi[0,0] * self.ydqPhibar[0,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,mif1] * self.ydqPhi[0,1] * self.ydqPhibar[0,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[1,mif1] * self.ydqPhi[0,2] * self.ydqPhibar[0,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[2,mif1] * self.ydqPhi[0,0] * self.ydqPhibar[0,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[2,mif1] * self.ydqPhi[0,1] * self.ydqPhibar[0,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,mif1] * self.ydqPhi[0,2] * self.ydqPhibar[0,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,mif1] * self.ydqPhi[1,0] * self.ydqPhibar[1,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[0,mif1] * self.ydqPhi[1,1] * self.ydqPhibar[1,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[0,mif1] * self.ydqPhi[1,2] * self.ydqPhibar[1,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[1,mif1] * self.ydqPhi[1,0] * self.ydqPhibar[1,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,mif1] * self.ydqPhi[1,1] * self.ydqPhibar[1,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[1,mif1] * self.ydqPhi[1,2] * self.ydqPhibar[1,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[2,mif1] * self.ydqPhi[1,0] * self.ydqPhibar[1,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[2,mif1] * self.ydqPhi[1,1] * self.ydqPhibar[1,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,mif1] * self.ydqPhi[1,2] * self.ydqPhibar[1,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,mif1] * self.ydqPhi[2,0] * self.ydqPhibar[2,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[0,mif1] * self.ydqPhi[2,1] * self.ydqPhibar[2,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[0,mif1] * self.ydqPhi[2,2] * self.ydqPhibar[2,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[1,mif1] * self.ydqPhi[2,0] * self.ydqPhibar[2,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,mif1] * self.ydqPhi[2,1] * self.ydqPhibar[2,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[1,mif1] * self.ydqPhi[2,2] * self.ydqPhibar[2,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[2,mif1] * self.ydqPhi[2,0] * self.ydqPhibar[2,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[2,mif1] * self.ydqPhi[2,1] * self.ydqPhibar[2,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,mif1] * self.ydqPhi[2,2] * self.ydqPhibar[2,2] + -11/1296 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,0] * self.ydqPhibar[mif2,0] + -1/216 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,0] * self.ydqPhibar[mif2,0] + 1/216 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif1,0] * self.ydqPhibar[mif2,0] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.ydqPhi[mif1,0] * self.ydqPhibar[mif2,0] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.ydqPhi[mif1,0] * self.ydqPhibar[mif2,0] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[0,0] * self.ydqPhi[mif1,0] * self.ydqPhibar[mif2,0] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.ydqPhi[mif1,0] * self.ydqPhibar[mif2,0] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.ydqPhi[mif1,0] * self.ydqPhibar[mif2,0] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[0,1] * self.ydqPhi[mif1,0] * self.ydqPhibar[mif2,0] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,2] * self.ydqPhi[mif1,0] * self.ydqPhibar[mif2,0] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,2] * self.ydqPhi[mif1,0] * self.ydqPhibar[mif2,0] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[0,2] * self.ydqPhi[mif1,0] * self.ydqPhibar[mif2,0] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[0,0] * self.ydqPhi[mif1,1] * self.ydqPhibar[mif2,0] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[0,0] * self.ydqPhi[mif1,1] * self.ydqPhibar[mif2,0] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[0,0] * self.ydqPhi[mif1,1] * self.ydqPhibar[mif2,0] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[0,1] * self.ydqPhi[mif1,1] * self.ydqPhibar[mif2,0] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[0,1] * self.ydqPhi[mif1,1] * self.ydqPhibar[mif2,0] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[0,1] * self.ydqPhi[mif1,1] * self.ydqPhibar[mif2,0] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[0,2] * self.ydqPhi[mif1,1] * self.ydqPhibar[mif2,0] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[0,2] * self.ydqPhi[mif1,1] * self.ydqPhibar[mif2,0] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[0,2] * self.ydqPhi[mif1,1] * self.ydqPhibar[mif2,0] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[0,0] * self.ydqPhi[mif1,2] * self.ydqPhibar[mif2,0] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[0,0] * self.ydqPhi[mif1,2] * self.ydqPhibar[mif2,0] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[0,0] * self.ydqPhi[mif1,2] * self.ydqPhibar[mif2,0] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[0,1] * self.ydqPhi[mif1,2] * self.ydqPhibar[mif2,0] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[0,1] * self.ydqPhi[mif1,2] * self.ydqPhibar[mif2,0] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[0,1] * self.ydqPhi[mif1,2] * self.ydqPhibar[mif2,0] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[0,2] * self.ydqPhi[mif1,2] * self.ydqPhibar[mif2,0] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[0,2] * self.ydqPhi[mif1,2] * self.ydqPhibar[mif2,0] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[0,2] * self.ydqPhi[mif1,2] * self.ydqPhibar[mif2,0] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[1,0] * self.ydqPhi[mif1,0] * self.ydqPhibar[mif2,1] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[1,0] * self.ydqPhi[mif1,0] * self.ydqPhibar[mif2,1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[1,0] * self.ydqPhi[mif1,0] * self.ydqPhibar[mif2,1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[1,1] * self.ydqPhi[mif1,0] * self.ydqPhibar[mif2,1] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[1,1] * self.ydqPhi[mif1,0] * self.ydqPhibar[mif2,1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[1,1] * self.ydqPhi[mif1,0] * self.ydqPhibar[mif2,1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[1,2] * self.ydqPhi[mif1,0] * self.ydqPhibar[mif2,1] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[1,2] * self.ydqPhi[mif1,0] * self.ydqPhibar[mif2,1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[1,2] * self.ydqPhi[mif1,0] * self.ydqPhibar[mif2,1] + -11/1296 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,1] * self.ydqPhibar[mif2,1] + -1/216 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,1] * self.ydqPhibar[mif2,1] + 1/216 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif1,1] * self.ydqPhibar[mif2,1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.ydqPhi[mif1,1] * self.ydqPhibar[mif2,1] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.ydqPhi[mif1,1] * self.ydqPhibar[mif2,1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[1,0] * self.ydqPhi[mif1,1] * self.ydqPhibar[mif2,1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,1] * self.ydqPhi[mif1,1] * self.ydqPhibar[mif2,1] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,1] * self.ydqPhi[mif1,1] * self.ydqPhibar[mif2,1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[1,1] * self.ydqPhi[mif1,1] * self.ydqPhibar[mif2,1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,2] * self.ydqPhi[mif1,1] * self.ydqPhibar[mif2,1] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,2] * self.ydqPhi[mif1,1] * self.ydqPhibar[mif2,1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[1,2] * self.ydqPhi[mif1,1] * self.ydqPhibar[mif2,1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[1,0] * self.ydqPhi[mif1,2] * self.ydqPhibar[mif2,1] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[1,0] * self.ydqPhi[mif1,2] * self.ydqPhibar[mif2,1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[1,0] * self.ydqPhi[mif1,2] * self.ydqPhibar[mif2,1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[1,1] * self.ydqPhi[mif1,2] * self.ydqPhibar[mif2,1] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[1,1] * self.ydqPhi[mif1,2] * self.ydqPhibar[mif2,1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[1,1] * self.ydqPhi[mif1,2] * self.ydqPhibar[mif2,1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[1,2] * self.ydqPhi[mif1,2] * self.ydqPhibar[mif2,1] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[1,2] * self.ydqPhi[mif1,2] * self.ydqPhibar[mif2,1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[1,2] * self.ydqPhi[mif1,2] * self.ydqPhibar[mif2,1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[2,0] * self.ydqPhi[mif1,0] * self.ydqPhibar[mif2,2] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[2,0] * self.ydqPhi[mif1,0] * self.ydqPhibar[mif2,2] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[2,0] * self.ydqPhi[mif1,0] * self.ydqPhibar[mif2,2] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[2,1] * self.ydqPhi[mif1,0] * self.ydqPhibar[mif2,2] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[2,1] * self.ydqPhi[mif1,0] * self.ydqPhibar[mif2,2] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[2,1] * self.ydqPhi[mif1,0] * self.ydqPhibar[mif2,2] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[2,2] * self.ydqPhi[mif1,0] * self.ydqPhibar[mif2,2] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[2,2] * self.ydqPhi[mif1,0] * self.ydqPhibar[mif2,2] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[2,2] * self.ydqPhi[mif1,0] * self.ydqPhibar[mif2,2] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[2,0] * self.ydqPhi[mif1,1] * self.ydqPhibar[mif2,2] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[2,0] * self.ydqPhi[mif1,1] * self.ydqPhibar[mif2,2] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[2,0] * self.ydqPhi[mif1,1] * self.ydqPhibar[mif2,2] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[2,1] * self.ydqPhi[mif1,1] * self.ydqPhibar[mif2,2] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[2,1] * self.ydqPhi[mif1,1] * self.ydqPhibar[mif2,2] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[2,1] * self.ydqPhi[mif1,1] * self.ydqPhibar[mif2,2] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[2,2] * self.ydqPhi[mif1,1] * self.ydqPhibar[mif2,2] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[2,2] * self.ydqPhi[mif1,1] * self.ydqPhibar[mif2,2] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[2,2] * self.ydqPhi[mif1,1] * self.ydqPhibar[mif2,2] + -11/1296 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,2] * self.ydqPhibar[mif2,2] + -1/216 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,2] * self.ydqPhibar[mif2,2] + 1/216 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif1,2] * self.ydqPhibar[mif2,2] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,0] * self.ydqPhi[mif1,2] * self.ydqPhibar[mif2,2] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,0] * self.ydqPhi[mif1,2] * self.ydqPhibar[mif2,2] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[2,0] * self.ydqPhi[mif1,2] * self.ydqPhibar[mif2,2] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,1] * self.ydqPhi[mif1,2] * self.ydqPhibar[mif2,2] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,1] * self.ydqPhi[mif1,2] * self.ydqPhibar[mif2,2] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[2,1] * self.ydqPhi[mif1,2] * self.ydqPhibar[mif2,2] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,2] * self.ydqPhi[mif1,2] * self.ydqPhibar[mif2,2] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,2] * self.ydqPhi[mif1,2] * self.ydqPhibar[mif2,2] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[2,2] * self.ydqPhi[mif1,2] * self.ydqPhibar[mif2,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,mif1] * self.yquPhi[0,0] * self.yquPhibar[0,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[1,mif1] * self.yquPhi[1,0] * self.yquPhibar[0,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[2,mif1] * self.yquPhi[2,0] * self.yquPhibar[0,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,mif1] * self.yquPhi[0,1] * self.yquPhibar[0,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[1,mif1] * self.yquPhi[1,1] * self.yquPhibar[0,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[2,mif1] * self.yquPhi[2,1] * self.yquPhibar[0,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,mif1] * self.yquPhi[0,2] * self.yquPhibar[0,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[1,mif1] * self.yquPhi[1,2] * self.yquPhibar[0,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[2,mif1] * self.yquPhi[2,2] * self.yquPhibar[0,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[0,mif1] * self.yquPhi[0,0] * self.yquPhibar[1,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,mif1] * self.yquPhi[1,0] * self.yquPhibar[1,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[2,mif1] * self.yquPhi[2,0] * self.yquPhibar[1,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[0,mif1] * self.yquPhi[0,1] * self.yquPhibar[1,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,mif1] * self.yquPhi[1,1] * self.yquPhibar[1,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[2,mif1] * self.yquPhi[2,1] * self.yquPhibar[1,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[0,mif1] * self.yquPhi[0,2] * self.yquPhibar[1,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,mif1] * self.yquPhi[1,2] * self.yquPhibar[1,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[2,mif1] * self.yquPhi[2,2] * self.yquPhibar[1,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[0,mif1] * self.yquPhi[0,0] * self.yquPhibar[2,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[1,mif1] * self.yquPhi[1,0] * self.yquPhibar[2,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,mif1] * self.yquPhi[2,0] * self.yquPhibar[2,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[0,mif1] * self.yquPhi[0,1] * self.yquPhibar[2,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[1,mif1] * self.yquPhi[1,1] * self.yquPhibar[2,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,mif1] * self.yquPhi[2,1] * self.yquPhibar[2,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[0,mif1] * self.yquPhi[0,2] * self.yquPhibar[2,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[1,mif1] * self.yquPhi[1,2] * self.yquPhibar[2,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,mif1] * self.yquPhi[2,2] * self.yquPhibar[2,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydqPhi[mif1,0] * self.yquPhibar[0,0] * self.yu[0,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydqPhi[mif1,0] * self.yquPhibar[1,0] * self.yu[0,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydqPhi[mif1,0] * self.yquPhibar[2,0] * self.yu[0,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydqPhi[mif1,0] * self.yquPhibar[0,1] * self.yu[0,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydqPhi[mif1,0] * self.yquPhibar[1,1] * self.yu[0,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydqPhi[mif1,0] * self.yquPhibar[2,1] * self.yu[0,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydqPhi[mif1,0] * self.yquPhibar[0,2] * self.yu[0,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydqPhi[mif1,0] * self.yquPhibar[1,2] * self.yu[0,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydqPhi[mif1,0] * self.yquPhibar[2,2] * self.yu[0,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydqPhi[mif1,1] * self.yquPhibar[0,0] * self.yu[1,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydqPhi[mif1,1] * self.yquPhibar[1,0] * self.yu[1,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydqPhi[mif1,1] * self.yquPhibar[2,0] * self.yu[1,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydqPhi[mif1,1] * self.yquPhibar[0,1] * self.yu[1,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydqPhi[mif1,1] * self.yquPhibar[1,1] * self.yu[1,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydqPhi[mif1,1] * self.yquPhibar[2,1] * self.yu[1,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydqPhi[mif1,1] * self.yquPhibar[0,2] * self.yu[1,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydqPhi[mif1,1] * self.yquPhibar[1,2] * self.yu[1,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydqPhi[mif1,1] * self.yquPhibar[2,2] * self.yu[1,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydqPhi[mif1,2] * self.yquPhibar[0,0] * self.yu[2,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydqPhi[mif1,2] * self.yquPhibar[1,0] * self.yu[2,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydqPhi[mif1,2] * self.yquPhibar[2,0] * self.yu[2,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydqPhi[mif1,2] * self.yquPhibar[0,1] * self.yu[2,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydqPhi[mif1,2] * self.yquPhibar[1,1] * self.yu[2,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydqPhi[mif1,2] * self.yquPhibar[2,1] * self.yu[2,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydqPhi[mif1,2] * self.yquPhibar[0,2] * self.yu[2,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydqPhi[mif1,2] * self.yquPhibar[1,2] * self.yu[2,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydqPhi[mif1,2] * self.yquPhibar[2,2] * self.yu[2,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif1] * self.ydqPhibar[mif2,0] * self.yquPhi[0,0] * self.yubar[0,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif1] * self.ydqPhibar[mif2,0] * self.yquPhi[1,0] * self.yubar[0,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif1] * self.ydqPhibar[mif2,0] * self.yquPhi[2,0] * self.yubar[0,0] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,0] * self.ydqPhibar[mif2,0] * self.yu[0,0] * self.yubar[0,0] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,0] * self.ydqPhibar[mif2,0] * self.yu[0,0] * self.yubar[0,0] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif1,0] * self.ydqPhibar[mif2,0] * self.yu[0,0] * self.yubar[0,0] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,1] * self.ydqPhibar[mif2,0] * self.yu[1,0] * self.yubar[0,0] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,1] * self.ydqPhibar[mif2,0] * self.yu[1,0] * self.yubar[0,0] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif1,1] * self.ydqPhibar[mif2,0] * self.yu[1,0] * self.yubar[0,0] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,2] * self.ydqPhibar[mif2,0] * self.yu[2,0] * self.yubar[0,0] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,2] * self.ydqPhibar[mif2,0] * self.yu[2,0] * self.yubar[0,0] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif1,2] * self.ydqPhibar[mif2,0] * self.yu[2,0] * self.yubar[0,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif1] * self.ydqPhibar[mif2,0] * self.yquPhi[0,1] * self.yubar[0,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif1] * self.ydqPhibar[mif2,0] * self.yquPhi[1,1] * self.yubar[0,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif1] * self.ydqPhibar[mif2,0] * self.yquPhi[2,1] * self.yubar[0,1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,0] * self.ydqPhibar[mif2,0] * self.yu[0,1] * self.yubar[0,1] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,0] * self.ydqPhibar[mif2,0] * self.yu[0,1] * self.yubar[0,1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif1,0] * self.ydqPhibar[mif2,0] * self.yu[0,1] * self.yubar[0,1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,1] * self.ydqPhibar[mif2,0] * self.yu[1,1] * self.yubar[0,1] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,1] * self.ydqPhibar[mif2,0] * self.yu[1,1] * self.yubar[0,1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif1,1] * self.ydqPhibar[mif2,0] * self.yu[1,1] * self.yubar[0,1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,2] * self.ydqPhibar[mif2,0] * self.yu[2,1] * self.yubar[0,1] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,2] * self.ydqPhibar[mif2,0] * self.yu[2,1] * self.yubar[0,1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif1,2] * self.ydqPhibar[mif2,0] * self.yu[2,1] * self.yubar[0,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif1] * self.ydqPhibar[mif2,0] * self.yquPhi[0,2] * self.yubar[0,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif1] * self.ydqPhibar[mif2,0] * self.yquPhi[1,2] * self.yubar[0,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif1] * self.ydqPhibar[mif2,0] * self.yquPhi[2,2] * self.yubar[0,2] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,0] * self.ydqPhibar[mif2,0] * self.yu[0,2] * self.yubar[0,2] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,0] * self.ydqPhibar[mif2,0] * self.yu[0,2] * self.yubar[0,2] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif1,0] * self.ydqPhibar[mif2,0] * self.yu[0,2] * self.yubar[0,2] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,1] * self.ydqPhibar[mif2,0] * self.yu[1,2] * self.yubar[0,2] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,1] * self.ydqPhibar[mif2,0] * self.yu[1,2] * self.yubar[0,2] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif1,1] * self.ydqPhibar[mif2,0] * self.yu[1,2] * self.yubar[0,2] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,2] * self.ydqPhibar[mif2,0] * self.yu[2,2] * self.yubar[0,2] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,2] * self.ydqPhibar[mif2,0] * self.yu[2,2] * self.yubar[0,2] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif1,2] * self.ydqPhibar[mif2,0] * self.yu[2,2] * self.yubar[0,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif1] * self.ydqPhibar[mif2,1] * self.yquPhi[0,0] * self.yubar[1,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif1] * self.ydqPhibar[mif2,1] * self.yquPhi[1,0] * self.yubar[1,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif1] * self.ydqPhibar[mif2,1] * self.yquPhi[2,0] * self.yubar[1,0] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,0] * self.ydqPhibar[mif2,1] * self.yu[0,0] * self.yubar[1,0] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,0] * self.ydqPhibar[mif2,1] * self.yu[0,0] * self.yubar[1,0] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif1,0] * self.ydqPhibar[mif2,1] * self.yu[0,0] * self.yubar[1,0] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,1] * self.ydqPhibar[mif2,1] * self.yu[1,0] * self.yubar[1,0] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,1] * self.ydqPhibar[mif2,1] * self.yu[1,0] * self.yubar[1,0] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif1,1] * self.ydqPhibar[mif2,1] * self.yu[1,0] * self.yubar[1,0] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,2] * self.ydqPhibar[mif2,1] * self.yu[2,0] * self.yubar[1,0] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,2] * self.ydqPhibar[mif2,1] * self.yu[2,0] * self.yubar[1,0] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif1,2] * self.ydqPhibar[mif2,1] * self.yu[2,0] * self.yubar[1,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif1] * self.ydqPhibar[mif2,1] * self.yquPhi[0,1] * self.yubar[1,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif1] * self.ydqPhibar[mif2,1] * self.yquPhi[1,1] * self.yubar[1,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif1] * self.ydqPhibar[mif2,1] * self.yquPhi[2,1] * self.yubar[1,1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,0] * self.ydqPhibar[mif2,1] * self.yu[0,1] * self.yubar[1,1] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,0] * self.ydqPhibar[mif2,1] * self.yu[0,1] * self.yubar[1,1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif1,0] * self.ydqPhibar[mif2,1] * self.yu[0,1] * self.yubar[1,1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,1] * self.ydqPhibar[mif2,1] * self.yu[1,1] * self.yubar[1,1] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,1] * self.ydqPhibar[mif2,1] * self.yu[1,1] * self.yubar[1,1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif1,1] * self.ydqPhibar[mif2,1] * self.yu[1,1] * self.yubar[1,1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,2] * self.ydqPhibar[mif2,1] * self.yu[2,1] * self.yubar[1,1] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,2] * self.ydqPhibar[mif2,1] * self.yu[2,1] * self.yubar[1,1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif1,2] * self.ydqPhibar[mif2,1] * self.yu[2,1] * self.yubar[1,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif1] * self.ydqPhibar[mif2,1] * self.yquPhi[0,2] * self.yubar[1,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif1] * self.ydqPhibar[mif2,1] * self.yquPhi[1,2] * self.yubar[1,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif1] * self.ydqPhibar[mif2,1] * self.yquPhi[2,2] * self.yubar[1,2] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,0] * self.ydqPhibar[mif2,1] * self.yu[0,2] * self.yubar[1,2] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,0] * self.ydqPhibar[mif2,1] * self.yu[0,2] * self.yubar[1,2] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif1,0] * self.ydqPhibar[mif2,1] * self.yu[0,2] * self.yubar[1,2] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,1] * self.ydqPhibar[mif2,1] * self.yu[1,2] * self.yubar[1,2] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,1] * self.ydqPhibar[mif2,1] * self.yu[1,2] * self.yubar[1,2] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif1,1] * self.ydqPhibar[mif2,1] * self.yu[1,2] * self.yubar[1,2] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,2] * self.ydqPhibar[mif2,1] * self.yu[2,2] * self.yubar[1,2] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,2] * self.ydqPhibar[mif2,1] * self.yu[2,2] * self.yubar[1,2] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif1,2] * self.ydqPhibar[mif2,1] * self.yu[2,2] * self.yubar[1,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif1] * self.ydqPhibar[mif2,2] * self.yquPhi[0,0] * self.yubar[2,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif1] * self.ydqPhibar[mif2,2] * self.yquPhi[1,0] * self.yubar[2,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif1] * self.ydqPhibar[mif2,2] * self.yquPhi[2,0] * self.yubar[2,0] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,0] * self.ydqPhibar[mif2,2] * self.yu[0,0] * self.yubar[2,0] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,0] * self.ydqPhibar[mif2,2] * self.yu[0,0] * self.yubar[2,0] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif1,0] * self.ydqPhibar[mif2,2] * self.yu[0,0] * self.yubar[2,0] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,1] * self.ydqPhibar[mif2,2] * self.yu[1,0] * self.yubar[2,0] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,1] * self.ydqPhibar[mif2,2] * self.yu[1,0] * self.yubar[2,0] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif1,1] * self.ydqPhibar[mif2,2] * self.yu[1,0] * self.yubar[2,0] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,2] * self.ydqPhibar[mif2,2] * self.yu[2,0] * self.yubar[2,0] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,2] * self.ydqPhibar[mif2,2] * self.yu[2,0] * self.yubar[2,0] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif1,2] * self.ydqPhibar[mif2,2] * self.yu[2,0] * self.yubar[2,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif1] * self.ydqPhibar[mif2,2] * self.yquPhi[0,1] * self.yubar[2,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif1] * self.ydqPhibar[mif2,2] * self.yquPhi[1,1] * self.yubar[2,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif1] * self.ydqPhibar[mif2,2] * self.yquPhi[2,1] * self.yubar[2,1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,0] * self.ydqPhibar[mif2,2] * self.yu[0,1] * self.yubar[2,1] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,0] * self.ydqPhibar[mif2,2] * self.yu[0,1] * self.yubar[2,1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif1,0] * self.ydqPhibar[mif2,2] * self.yu[0,1] * self.yubar[2,1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,1] * self.ydqPhibar[mif2,2] * self.yu[1,1] * self.yubar[2,1] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,1] * self.ydqPhibar[mif2,2] * self.yu[1,1] * self.yubar[2,1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif1,1] * self.ydqPhibar[mif2,2] * self.yu[1,1] * self.yubar[2,1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,2] * self.ydqPhibar[mif2,2] * self.yu[2,1] * self.yubar[2,1] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,2] * self.ydqPhibar[mif2,2] * self.yu[2,1] * self.yubar[2,1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif1,2] * self.ydqPhibar[mif2,2] * self.yu[2,1] * self.yubar[2,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif1] * self.ydqPhibar[mif2,2] * self.yquPhi[0,2] * self.yubar[2,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif1] * self.ydqPhibar[mif2,2] * self.yquPhi[1,2] * self.yubar[2,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif1] * self.ydqPhibar[mif2,2] * self.yquPhi[2,2] * self.yubar[2,2] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,0] * self.ydqPhibar[mif2,2] * self.yu[0,2] * self.yubar[2,2] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,0] * self.ydqPhibar[mif2,2] * self.yu[0,2] * self.yubar[2,2] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif1,0] * self.ydqPhibar[mif2,2] * self.yu[0,2] * self.yubar[2,2] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,1] * self.ydqPhibar[mif2,2] * self.yu[1,2] * self.yubar[2,2] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,1] * self.ydqPhibar[mif2,2] * self.yu[1,2] * self.yubar[2,2] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif1,1] * self.ydqPhibar[mif2,2] * self.yu[1,2] * self.yubar[2,2] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,2] * self.ydqPhibar[mif2,2] * self.yu[2,2] * self.yubar[2,2] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif1,2] * self.ydqPhibar[mif2,2] * self.yu[2,2] * self.yubar[2,2] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif1,2] * self.ydqPhibar[mif2,2] * self.yu[2,2] * self.yubar[2,2])

    def alphaOHe(self, mif1,mif2):
        return 1/240 * (self.g1)**(4) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2)

    def alphaOHl1(self, mif1,mif2):
        return 1/480 * (self.g1)**(4) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2)

    def alphaOHl3(self, mif1,mif2):
        return -1/480 * (self.g2)**(4) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2)

    def alphaOHq1(self, mif1,mif2):
        return (-1/1440 * (self.g1)**(4) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,0] * self.ydqPhi[0,0] * self.ydqPhibar[0,0] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,0] * self.ydqPhi[1,0] * self.ydqPhibar[0,0] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,0] * self.ydqPhi[2,0] * self.ydqPhibar[0,0] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,0] * self.ydqPhi[0,1] * self.ydqPhibar[0,1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,0] * self.ydqPhi[1,1] * self.ydqPhibar[0,1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,0] * self.ydqPhi[2,1] * self.ydqPhibar[0,1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,0] * self.ydqPhi[0,2] * self.ydqPhibar[0,2] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,0] * self.ydqPhi[1,2] * self.ydqPhibar[0,2] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,0] * self.ydqPhi[2,2] * self.ydqPhibar[0,2] + 19/2592 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif2] * self.ydqPhibar[0,mif1] + 1/216 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif2] * self.ydqPhibar[0,mif1] + -1/216 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[0,mif2] * self.ydqPhibar[0,mif1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.ydqPhi[0,mif2] * self.ydqPhibar[0,mif1] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.ydqPhi[0,mif2] * self.ydqPhibar[0,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[0,0] * self.ydqPhi[0,mif2] * self.ydqPhibar[0,mif1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.ydqPhi[0,mif2] * self.ydqPhibar[0,mif1] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.ydqPhi[0,mif2] * self.ydqPhibar[0,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[1,0] * self.ydqPhi[0,mif2] * self.ydqPhibar[0,mif1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,0] * self.ydqPhi[0,mif2] * self.ydqPhibar[0,mif1] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,0] * self.ydqPhi[0,mif2] * self.ydqPhibar[0,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[2,0] * self.ydqPhi[0,mif2] * self.ydqPhibar[0,mif1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,0] * self.ydqPhi[1,mif2] * self.ydqPhibar[0,mif1] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,0] * self.ydqPhi[1,mif2] * self.ydqPhibar[0,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[0,0] * self.ydqPhi[1,mif2] * self.ydqPhibar[0,mif1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,0] * self.ydqPhi[1,mif2] * self.ydqPhibar[0,mif1] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,0] * self.ydqPhi[1,mif2] * self.ydqPhibar[0,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[1,0] * self.ydqPhi[1,mif2] * self.ydqPhibar[0,mif1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,0] * self.ydqPhi[1,mif2] * self.ydqPhibar[0,mif1] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,0] * self.ydqPhi[1,mif2] * self.ydqPhibar[0,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[2,0] * self.ydqPhi[1,mif2] * self.ydqPhibar[0,mif1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,0] * self.ydqPhi[2,mif2] * self.ydqPhibar[0,mif1] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,0] * self.ydqPhi[2,mif2] * self.ydqPhibar[0,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[0,0] * self.ydqPhi[2,mif2] * self.ydqPhibar[0,mif1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,0] * self.ydqPhi[2,mif2] * self.ydqPhibar[0,mif1] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,0] * self.ydqPhi[2,mif2] * self.ydqPhibar[0,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[1,0] * self.ydqPhi[2,mif2] * self.ydqPhibar[0,mif1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,0] * self.ydqPhi[2,mif2] * self.ydqPhibar[0,mif1] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,0] * self.ydqPhi[2,mif2] * self.ydqPhibar[0,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[2,0] * self.ydqPhi[2,mif2] * self.ydqPhibar[0,mif1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,1] * self.ydqPhi[0,0] * self.ydqPhibar[1,0] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,1] * self.ydqPhi[1,0] * self.ydqPhibar[1,0] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,1] * self.ydqPhi[2,0] * self.ydqPhibar[1,0] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,1] * self.ydqPhi[0,1] * self.ydqPhibar[1,1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,1] * self.ydqPhi[1,1] * self.ydqPhibar[1,1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,1] * self.ydqPhi[2,1] * self.ydqPhibar[1,1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,1] * self.ydqPhi[0,2] * self.ydqPhibar[1,2] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,1] * self.ydqPhi[1,2] * self.ydqPhibar[1,2] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,1] * self.ydqPhi[2,2] * self.ydqPhibar[1,2] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,1] * self.ydqPhi[0,mif2] * self.ydqPhibar[1,mif1] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,1] * self.ydqPhi[0,mif2] * self.ydqPhibar[1,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[0,1] * self.ydqPhi[0,mif2] * self.ydqPhibar[1,mif1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,1] * self.ydqPhi[0,mif2] * self.ydqPhibar[1,mif1] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,1] * self.ydqPhi[0,mif2] * self.ydqPhibar[1,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[1,1] * self.ydqPhi[0,mif2] * self.ydqPhibar[1,mif1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,1] * self.ydqPhi[0,mif2] * self.ydqPhibar[1,mif1] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,1] * self.ydqPhi[0,mif2] * self.ydqPhibar[1,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[2,1] * self.ydqPhi[0,mif2] * self.ydqPhibar[1,mif1] + 19/2592 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,mif2] * self.ydqPhibar[1,mif1] + 1/216 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,mif2] * self.ydqPhibar[1,mif1] + -1/216 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[1,mif2] * self.ydqPhibar[1,mif1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.ydqPhi[1,mif2] * self.ydqPhibar[1,mif1] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.ydqPhi[1,mif2] * self.ydqPhibar[1,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[0,1] * self.ydqPhi[1,mif2] * self.ydqPhibar[1,mif1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,1] * self.ydqPhi[1,mif2] * self.ydqPhibar[1,mif1] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,1] * self.ydqPhi[1,mif2] * self.ydqPhibar[1,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[1,1] * self.ydqPhi[1,mif2] * self.ydqPhibar[1,mif1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,1] * self.ydqPhi[1,mif2] * self.ydqPhibar[1,mif1] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,1] * self.ydqPhi[1,mif2] * self.ydqPhibar[1,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[2,1] * self.ydqPhi[1,mif2] * self.ydqPhibar[1,mif1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,1] * self.ydqPhi[2,mif2] * self.ydqPhibar[1,mif1] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,1] * self.ydqPhi[2,mif2] * self.ydqPhibar[1,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[0,1] * self.ydqPhi[2,mif2] * self.ydqPhibar[1,mif1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,1] * self.ydqPhi[2,mif2] * self.ydqPhibar[1,mif1] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,1] * self.ydqPhi[2,mif2] * self.ydqPhibar[1,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[1,1] * self.ydqPhi[2,mif2] * self.ydqPhibar[1,mif1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,1] * self.ydqPhi[2,mif2] * self.ydqPhibar[1,mif1] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,1] * self.ydqPhi[2,mif2] * self.ydqPhibar[1,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[2,1] * self.ydqPhi[2,mif2] * self.ydqPhibar[1,mif1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,2] * self.ydqPhi[0,0] * self.ydqPhibar[2,0] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,2] * self.ydqPhi[1,0] * self.ydqPhibar[2,0] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,2] * self.ydqPhi[2,0] * self.ydqPhibar[2,0] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,2] * self.ydqPhi[0,1] * self.ydqPhibar[2,1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,2] * self.ydqPhi[1,1] * self.ydqPhibar[2,1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,2] * self.ydqPhi[2,1] * self.ydqPhibar[2,1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,2] * self.ydqPhi[0,2] * self.ydqPhibar[2,2] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,2] * self.ydqPhi[1,2] * self.ydqPhibar[2,2] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,2] * self.ydqPhi[2,2] * self.ydqPhibar[2,2] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,2] * self.ydqPhi[0,mif2] * self.ydqPhibar[2,mif1] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,2] * self.ydqPhi[0,mif2] * self.ydqPhibar[2,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[0,2] * self.ydqPhi[0,mif2] * self.ydqPhibar[2,mif1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,2] * self.ydqPhi[0,mif2] * self.ydqPhibar[2,mif1] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,2] * self.ydqPhi[0,mif2] * self.ydqPhibar[2,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[1,2] * self.ydqPhi[0,mif2] * self.ydqPhibar[2,mif1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,2] * self.ydqPhi[0,mif2] * self.ydqPhibar[2,mif1] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,2] * self.ydqPhi[0,mif2] * self.ydqPhibar[2,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[2,2] * self.ydqPhi[0,mif2] * self.ydqPhibar[2,mif1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,2] * self.ydqPhi[1,mif2] * self.ydqPhibar[2,mif1] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,2] * self.ydqPhi[1,mif2] * self.ydqPhibar[2,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[0,2] * self.ydqPhi[1,mif2] * self.ydqPhibar[2,mif1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,2] * self.ydqPhi[1,mif2] * self.ydqPhibar[2,mif1] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,2] * self.ydqPhi[1,mif2] * self.ydqPhibar[2,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[1,2] * self.ydqPhi[1,mif2] * self.ydqPhibar[2,mif1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,2] * self.ydqPhi[1,mif2] * self.ydqPhibar[2,mif1] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,2] * self.ydqPhi[1,mif2] * self.ydqPhibar[2,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[2,2] * self.ydqPhi[1,mif2] * self.ydqPhibar[2,mif1] + 19/2592 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,mif2] * self.ydqPhibar[2,mif1] + 1/216 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,mif2] * self.ydqPhibar[2,mif1] + -1/216 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[2,mif2] * self.ydqPhibar[2,mif1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,2] * self.ydqPhi[2,mif2] * self.ydqPhibar[2,mif1] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,2] * self.ydqPhi[2,mif2] * self.ydqPhibar[2,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[0,2] * self.ydqPhi[2,mif2] * self.ydqPhibar[2,mif1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,2] * self.ydqPhi[2,mif2] * self.ydqPhibar[2,mif1] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,2] * self.ydqPhi[2,mif2] * self.ydqPhibar[2,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[1,2] * self.ydqPhi[2,mif2] * self.ydqPhibar[2,mif1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,2] * self.ydqPhi[2,mif2] * self.ydqPhibar[2,mif1] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,2] * self.ydqPhi[2,mif2] * self.ydqPhibar[2,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[2,2] * self.ydqPhi[2,mif2] * self.ydqPhibar[2,mif1] + -35/2592 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[mif2,0] + -1/108 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[mif2,0] + 1/108 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,0] * self.yquPhibar[mif2,0] + -35/2592 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[mif2,1] + -1/108 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[mif2,1] + 1/108 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,1] * self.yquPhibar[mif2,1] + -35/2592 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[mif2,2] + -1/108 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[mif2,2] + 1/108 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,2] * self.yquPhibar[mif2,2] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,0] * self.yquPhibar[mif2,0] * self.yu[0,0] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,0] * self.yquPhibar[mif2,0] * self.yu[0,0] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,0] * self.yquPhibar[mif2,0] * self.yu[0,0] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,0] * self.yquPhibar[mif2,1] * self.yu[0,1] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,0] * self.yquPhibar[mif2,1] * self.yu[0,1] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,0] * self.yquPhibar[mif2,1] * self.yu[0,1] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,0] * self.yquPhibar[mif2,2] * self.yu[0,2] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,0] * self.yquPhibar[mif2,2] * self.yu[0,2] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,0] * self.yquPhibar[mif2,2] * self.yu[0,2] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,1] * self.yquPhibar[mif2,0] * self.yu[1,0] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,1] * self.yquPhibar[mif2,0] * self.yu[1,0] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,1] * self.yquPhibar[mif2,0] * self.yu[1,0] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,1] * self.yquPhibar[mif2,1] * self.yu[1,1] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,1] * self.yquPhibar[mif2,1] * self.yu[1,1] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,1] * self.yquPhibar[mif2,1] * self.yu[1,1] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,1] * self.yquPhibar[mif2,2] * self.yu[1,2] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,1] * self.yquPhibar[mif2,2] * self.yu[1,2] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,1] * self.yquPhibar[mif2,2] * self.yu[1,2] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,2] * self.yquPhibar[mif2,0] * self.yu[2,0] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,2] * self.yquPhibar[mif2,0] * self.yu[2,0] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,2] * self.yquPhibar[mif2,0] * self.yu[2,0] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,2] * self.yquPhibar[mif2,1] * self.yu[2,1] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,2] * self.yquPhibar[mif2,1] * self.yu[2,1] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,2] * self.yquPhibar[mif2,1] * self.yu[2,1] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,2] * self.yquPhibar[mif2,2] * self.yu[2,2] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,2] * self.yquPhibar[mif2,2] * self.yu[2,2] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,2] * self.yquPhibar[mif2,2] * self.yu[2,2] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydqPhi[0,mif2] * self.yquPhibar[0,0] * self.yu[mif1,0] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydqPhi[1,mif2] * self.yquPhibar[0,0] * self.yu[mif1,0] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydqPhi[2,mif2] * self.yquPhibar[0,0] * self.yu[mif1,0] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydqPhi[0,mif2] * self.yquPhibar[1,0] * self.yu[mif1,0] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydqPhi[1,mif2] * self.yquPhibar[1,0] * self.yu[mif1,0] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydqPhi[2,mif2] * self.yquPhibar[1,0] * self.yu[mif1,0] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydqPhi[0,mif2] * self.yquPhibar[2,0] * self.yu[mif1,0] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydqPhi[1,mif2] * self.yquPhibar[2,0] * self.yu[mif1,0] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydqPhi[2,mif2] * self.yquPhibar[2,0] * self.yu[mif1,0] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydqPhi[0,mif2] * self.yquPhibar[0,1] * self.yu[mif1,1] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydqPhi[1,mif2] * self.yquPhibar[0,1] * self.yu[mif1,1] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydqPhi[2,mif2] * self.yquPhibar[0,1] * self.yu[mif1,1] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydqPhi[0,mif2] * self.yquPhibar[1,1] * self.yu[mif1,1] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydqPhi[1,mif2] * self.yquPhibar[1,1] * self.yu[mif1,1] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydqPhi[2,mif2] * self.yquPhibar[1,1] * self.yu[mif1,1] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydqPhi[0,mif2] * self.yquPhibar[2,1] * self.yu[mif1,1] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydqPhi[1,mif2] * self.yquPhibar[2,1] * self.yu[mif1,1] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydqPhi[2,mif2] * self.yquPhibar[2,1] * self.yu[mif1,1] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydqPhi[0,mif2] * self.yquPhibar[0,2] * self.yu[mif1,2] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydqPhi[1,mif2] * self.yquPhibar[0,2] * self.yu[mif1,2] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydqPhi[2,mif2] * self.yquPhibar[0,2] * self.yu[mif1,2] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydqPhi[0,mif2] * self.yquPhibar[1,2] * self.yu[mif1,2] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydqPhi[1,mif2] * self.yquPhibar[1,2] * self.yu[mif1,2] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydqPhi[2,mif2] * self.yquPhibar[1,2] * self.yu[mif1,2] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydqPhi[0,mif2] * self.yquPhibar[2,2] * self.yu[mif1,2] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydqPhi[1,mif2] * self.yquPhibar[2,2] * self.yu[mif1,2] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydqPhi[2,mif2] * self.yquPhibar[2,2] * self.yu[mif1,2] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.ydqPhibar[0,0] * self.yquPhi[mif1,0] * self.yubar[0,0] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.ydqPhibar[1,0] * self.yquPhi[mif1,0] * self.yubar[0,0] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.ydqPhibar[2,0] * self.yquPhi[mif1,0] * self.yubar[0,0] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[mif2,0] * self.yu[0,0] * self.yubar[0,0] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[mif2,0] * self.yu[0,0] * self.yubar[0,0] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,0] * self.yquPhibar[mif2,0] * self.yu[0,0] * self.yubar[0,0] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[mif2,1] * self.yu[0,1] * self.yubar[0,0] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[mif2,1] * self.yu[0,1] * self.yubar[0,0] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,0] * self.yquPhibar[mif2,1] * self.yu[0,1] * self.yubar[0,0] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[mif2,2] * self.yu[0,2] * self.yubar[0,0] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[mif2,2] * self.yu[0,2] * self.yubar[0,0] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,0] * self.yquPhibar[mif2,2] * self.yu[0,2] * self.yubar[0,0] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.ydqPhibar[0,0] * self.yquPhi[mif1,1] * self.yubar[0,1] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.ydqPhibar[1,0] * self.yquPhi[mif1,1] * self.yubar[0,1] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.ydqPhibar[2,0] * self.yquPhi[mif1,1] * self.yubar[0,1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[mif2,0] * self.yu[0,0] * self.yubar[0,1] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[mif2,0] * self.yu[0,0] * self.yubar[0,1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,1] * self.yquPhibar[mif2,0] * self.yu[0,0] * self.yubar[0,1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[mif2,1] * self.yu[0,1] * self.yubar[0,1] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[mif2,1] * self.yu[0,1] * self.yubar[0,1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,1] * self.yquPhibar[mif2,1] * self.yu[0,1] * self.yubar[0,1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[mif2,2] * self.yu[0,2] * self.yubar[0,1] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[mif2,2] * self.yu[0,2] * self.yubar[0,1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,1] * self.yquPhibar[mif2,2] * self.yu[0,2] * self.yubar[0,1] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.ydqPhibar[0,0] * self.yquPhi[mif1,2] * self.yubar[0,2] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.ydqPhibar[1,0] * self.yquPhi[mif1,2] * self.yubar[0,2] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.ydqPhibar[2,0] * self.yquPhi[mif1,2] * self.yubar[0,2] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[mif2,0] * self.yu[0,0] * self.yubar[0,2] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[mif2,0] * self.yu[0,0] * self.yubar[0,2] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,2] * self.yquPhibar[mif2,0] * self.yu[0,0] * self.yubar[0,2] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[mif2,1] * self.yu[0,1] * self.yubar[0,2] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[mif2,1] * self.yu[0,1] * self.yubar[0,2] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,2] * self.yquPhibar[mif2,1] * self.yu[0,1] * self.yubar[0,2] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[mif2,2] * self.yu[0,2] * self.yubar[0,2] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[mif2,2] * self.yu[0,2] * self.yubar[0,2] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,2] * self.yquPhibar[mif2,2] * self.yu[0,2] * self.yubar[0,2] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.ydqPhibar[0,1] * self.yquPhi[mif1,0] * self.yubar[1,0] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.ydqPhibar[1,1] * self.yquPhi[mif1,0] * self.yubar[1,0] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.ydqPhibar[2,1] * self.yquPhi[mif1,0] * self.yubar[1,0] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[mif2,0] * self.yu[1,0] * self.yubar[1,0] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[mif2,0] * self.yu[1,0] * self.yubar[1,0] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,0] * self.yquPhibar[mif2,0] * self.yu[1,0] * self.yubar[1,0] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[mif2,1] * self.yu[1,1] * self.yubar[1,0] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[mif2,1] * self.yu[1,1] * self.yubar[1,0] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,0] * self.yquPhibar[mif2,1] * self.yu[1,1] * self.yubar[1,0] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[mif2,2] * self.yu[1,2] * self.yubar[1,0] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[mif2,2] * self.yu[1,2] * self.yubar[1,0] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,0] * self.yquPhibar[mif2,2] * self.yu[1,2] * self.yubar[1,0] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.ydqPhibar[0,1] * self.yquPhi[mif1,1] * self.yubar[1,1] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.ydqPhibar[1,1] * self.yquPhi[mif1,1] * self.yubar[1,1] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.ydqPhibar[2,1] * self.yquPhi[mif1,1] * self.yubar[1,1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[mif2,0] * self.yu[1,0] * self.yubar[1,1] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[mif2,0] * self.yu[1,0] * self.yubar[1,1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,1] * self.yquPhibar[mif2,0] * self.yu[1,0] * self.yubar[1,1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[mif2,1] * self.yu[1,1] * self.yubar[1,1] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[mif2,1] * self.yu[1,1] * self.yubar[1,1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,1] * self.yquPhibar[mif2,1] * self.yu[1,1] * self.yubar[1,1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[mif2,2] * self.yu[1,2] * self.yubar[1,1] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[mif2,2] * self.yu[1,2] * self.yubar[1,1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,1] * self.yquPhibar[mif2,2] * self.yu[1,2] * self.yubar[1,1] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.ydqPhibar[0,1] * self.yquPhi[mif1,2] * self.yubar[1,2] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.ydqPhibar[1,1] * self.yquPhi[mif1,2] * self.yubar[1,2] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.ydqPhibar[2,1] * self.yquPhi[mif1,2] * self.yubar[1,2] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[mif2,0] * self.yu[1,0] * self.yubar[1,2] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[mif2,0] * self.yu[1,0] * self.yubar[1,2] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,2] * self.yquPhibar[mif2,0] * self.yu[1,0] * self.yubar[1,2] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[mif2,1] * self.yu[1,1] * self.yubar[1,2] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[mif2,1] * self.yu[1,1] * self.yubar[1,2] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,2] * self.yquPhibar[mif2,1] * self.yu[1,1] * self.yubar[1,2] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[mif2,2] * self.yu[1,2] * self.yubar[1,2] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[mif2,2] * self.yu[1,2] * self.yubar[1,2] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,2] * self.yquPhibar[mif2,2] * self.yu[1,2] * self.yubar[1,2] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.ydqPhibar[0,2] * self.yquPhi[mif1,0] * self.yubar[2,0] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.ydqPhibar[1,2] * self.yquPhi[mif1,0] * self.yubar[2,0] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.ydqPhibar[2,2] * self.yquPhi[mif1,0] * self.yubar[2,0] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[mif2,0] * self.yu[2,0] * self.yubar[2,0] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[mif2,0] * self.yu[2,0] * self.yubar[2,0] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,0] * self.yquPhibar[mif2,0] * self.yu[2,0] * self.yubar[2,0] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[mif2,1] * self.yu[2,1] * self.yubar[2,0] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[mif2,1] * self.yu[2,1] * self.yubar[2,0] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,0] * self.yquPhibar[mif2,1] * self.yu[2,1] * self.yubar[2,0] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[mif2,2] * self.yu[2,2] * self.yubar[2,0] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[mif2,2] * self.yu[2,2] * self.yubar[2,0] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,0] * self.yquPhibar[mif2,2] * self.yu[2,2] * self.yubar[2,0] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.ydqPhibar[0,2] * self.yquPhi[mif1,1] * self.yubar[2,1] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.ydqPhibar[1,2] * self.yquPhi[mif1,1] * self.yubar[2,1] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.ydqPhibar[2,2] * self.yquPhi[mif1,1] * self.yubar[2,1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[mif2,0] * self.yu[2,0] * self.yubar[2,1] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[mif2,0] * self.yu[2,0] * self.yubar[2,1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,1] * self.yquPhibar[mif2,0] * self.yu[2,0] * self.yubar[2,1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[mif2,1] * self.yu[2,1] * self.yubar[2,1] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[mif2,1] * self.yu[2,1] * self.yubar[2,1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,1] * self.yquPhibar[mif2,1] * self.yu[2,1] * self.yubar[2,1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[mif2,2] * self.yu[2,2] * self.yubar[2,1] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[mif2,2] * self.yu[2,2] * self.yubar[2,1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,1] * self.yquPhibar[mif2,2] * self.yu[2,2] * self.yubar[2,1] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.ydqPhibar[0,2] * self.yquPhi[mif1,2] * self.yubar[2,2] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.ydqPhibar[1,2] * self.yquPhi[mif1,2] * self.yubar[2,2] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.ydqPhibar[2,2] * self.yquPhi[mif1,2] * self.yubar[2,2] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[mif2,0] * self.yu[2,0] * self.yubar[2,2] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[mif2,0] * self.yu[2,0] * self.yubar[2,2] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,2] * self.yquPhibar[mif2,0] * self.yu[2,0] * self.yubar[2,2] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[mif2,1] * self.yu[2,1] * self.yubar[2,2] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[mif2,1] * self.yu[2,1] * self.yubar[2,2] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,2] * self.yquPhibar[mif2,1] * self.yu[2,1] * self.yubar[2,2] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[mif2,2] * self.yu[2,2] * self.yubar[2,2] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[mif2,2] * self.yu[2,2] * self.yubar[2,2] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,2] * self.yquPhibar[mif2,2] * self.yu[2,2] * self.yubar[2,2] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.ydqPhibar[0,mif1] * self.yquPhi[0,0] * self.yubar[mif2,0] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.ydqPhibar[1,mif1] * self.yquPhi[0,0] * self.yubar[mif2,0] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.ydqPhibar[2,mif1] * self.yquPhi[0,0] * self.yubar[mif2,0] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.ydqPhibar[0,mif1] * self.yquPhi[1,0] * self.yubar[mif2,0] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.ydqPhibar[1,mif1] * self.yquPhi[1,0] * self.yubar[mif2,0] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.ydqPhibar[2,mif1] * self.yquPhi[1,0] * self.yubar[mif2,0] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[2,0] * self.yubar[mif2,0] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[2,0] * self.yubar[mif2,0] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[2,0] * self.yubar[mif2,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,0] * self.yquPhibar[0,0] * self.yu[mif1,0] * self.yubar[mif2,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,0] * self.yquPhibar[1,0] * self.yu[mif1,0] * self.yubar[mif2,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,0] * self.yquPhibar[2,0] * self.yu[mif1,0] * self.yubar[mif2,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,0] * self.yquPhibar[0,1] * self.yu[mif1,1] * self.yubar[mif2,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,0] * self.yquPhibar[1,1] * self.yu[mif1,1] * self.yubar[mif2,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,0] * self.yquPhibar[2,1] * self.yu[mif1,1] * self.yubar[mif2,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,0] * self.yquPhibar[0,2] * self.yu[mif1,2] * self.yubar[mif2,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,0] * self.yquPhibar[1,2] * self.yu[mif1,2] * self.yubar[mif2,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,0] * self.yquPhibar[2,2] * self.yu[mif1,2] * self.yubar[mif2,0] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.ydqPhibar[0,mif1] * self.yquPhi[0,1] * self.yubar[mif2,1] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.ydqPhibar[1,mif1] * self.yquPhi[0,1] * self.yubar[mif2,1] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.ydqPhibar[2,mif1] * self.yquPhi[0,1] * self.yubar[mif2,1] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.ydqPhibar[0,mif1] * self.yquPhi[1,1] * self.yubar[mif2,1] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.ydqPhibar[1,mif1] * self.yquPhi[1,1] * self.yubar[mif2,1] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.ydqPhibar[2,mif1] * self.yquPhi[1,1] * self.yubar[mif2,1] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[2,1] * self.yubar[mif2,1] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[2,1] * self.yubar[mif2,1] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[2,1] * self.yubar[mif2,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,1] * self.yquPhibar[0,0] * self.yu[mif1,0] * self.yubar[mif2,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,1] * self.yquPhibar[1,0] * self.yu[mif1,0] * self.yubar[mif2,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,1] * self.yquPhibar[2,0] * self.yu[mif1,0] * self.yubar[mif2,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,1] * self.yquPhibar[0,1] * self.yu[mif1,1] * self.yubar[mif2,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,1] * self.yquPhibar[1,1] * self.yu[mif1,1] * self.yubar[mif2,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,1] * self.yquPhibar[2,1] * self.yu[mif1,1] * self.yubar[mif2,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,1] * self.yquPhibar[0,2] * self.yu[mif1,2] * self.yubar[mif2,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,1] * self.yquPhibar[1,2] * self.yu[mif1,2] * self.yubar[mif2,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,1] * self.yquPhibar[2,2] * self.yu[mif1,2] * self.yubar[mif2,1] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.ydqPhibar[0,mif1] * self.yquPhi[0,2] * self.yubar[mif2,2] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.ydqPhibar[1,mif1] * self.yquPhi[0,2] * self.yubar[mif2,2] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.ydqPhibar[2,mif1] * self.yquPhi[0,2] * self.yubar[mif2,2] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.ydqPhibar[0,mif1] * self.yquPhi[1,2] * self.yubar[mif2,2] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.ydqPhibar[1,mif1] * self.yquPhi[1,2] * self.yubar[mif2,2] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.ydqPhibar[2,mif1] * self.yquPhi[1,2] * self.yubar[mif2,2] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[2,2] * self.yubar[mif2,2] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[2,2] * self.yubar[mif2,2] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[2,2] * self.yubar[mif2,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,2] * self.yquPhibar[0,0] * self.yu[mif1,0] * self.yubar[mif2,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,2] * self.yquPhibar[1,0] * self.yu[mif1,0] * self.yubar[mif2,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,2] * self.yquPhibar[2,0] * self.yu[mif1,0] * self.yubar[mif2,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,2] * self.yquPhibar[0,1] * self.yu[mif1,1] * self.yubar[mif2,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,2] * self.yquPhibar[1,1] * self.yu[mif1,1] * self.yubar[mif2,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,2] * self.yquPhibar[2,1] * self.yu[mif1,1] * self.yubar[mif2,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,2] * self.yquPhibar[0,2] * self.yu[mif1,2] * self.yubar[mif2,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,2] * self.yquPhibar[1,2] * self.yu[mif1,2] * self.yubar[mif2,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,2] * self.yquPhibar[2,2] * self.yu[mif1,2] * self.yubar[mif2,2])

    def alphaOHq3(self, mif1,mif2):
        return (-1/480 * (self.g2)**(4) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,0] * self.ydqPhi[0,0] * self.ydqPhibar[0,0] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,0] * self.ydqPhi[1,0] * self.ydqPhibar[0,0] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,0] * self.ydqPhi[2,0] * self.ydqPhibar[0,0] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,0] * self.ydqPhi[0,1] * self.ydqPhibar[0,1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,0] * self.ydqPhi[1,1] * self.ydqPhibar[0,1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,0] * self.ydqPhi[2,1] * self.ydqPhibar[0,1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,0] * self.ydqPhi[0,2] * self.ydqPhibar[0,2] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,0] * self.ydqPhi[1,2] * self.ydqPhibar[0,2] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,0] * self.ydqPhi[2,2] * self.ydqPhibar[0,2] + 1/864 * (self.g2)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif2] * self.ydqPhibar[0,mif1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,1] * self.ydqPhi[0,0] * self.ydqPhibar[1,0] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,1] * self.ydqPhi[1,0] * self.ydqPhibar[1,0] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,1] * self.ydqPhi[2,0] * self.ydqPhibar[1,0] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,1] * self.ydqPhi[0,1] * self.ydqPhibar[1,1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,1] * self.ydqPhi[1,1] * self.ydqPhibar[1,1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,1] * self.ydqPhi[2,1] * self.ydqPhibar[1,1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,1] * self.ydqPhi[0,2] * self.ydqPhibar[1,2] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,1] * self.ydqPhi[1,2] * self.ydqPhibar[1,2] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,1] * self.ydqPhi[2,2] * self.ydqPhibar[1,2] + 1/864 * (self.g2)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,mif2] * self.ydqPhibar[1,mif1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,2] * self.ydqPhi[0,0] * self.ydqPhibar[2,0] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,2] * self.ydqPhi[1,0] * self.ydqPhibar[2,0] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,2] * self.ydqPhi[2,0] * self.ydqPhibar[2,0] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,2] * self.ydqPhi[0,1] * self.ydqPhibar[2,1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,2] * self.ydqPhi[1,1] * self.ydqPhibar[2,1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,2] * self.ydqPhi[2,1] * self.ydqPhibar[2,1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,2] * self.ydqPhi[0,2] * self.ydqPhibar[2,2] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,2] * self.ydqPhi[1,2] * self.ydqPhibar[2,2] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,2] * self.ydqPhi[2,2] * self.ydqPhibar[2,2] + 1/864 * (self.g2)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,mif2] * self.ydqPhibar[2,mif1] + 1/864 * (self.g2)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[mif2,0] + 1/864 * (self.g2)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[mif2,1] + 1/864 * (self.g2)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[mif2,2] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,0] * self.yquPhibar[mif2,0] * self.yu[0,0] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,0] * self.yquPhibar[mif2,0] * self.yu[0,0] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,0] * self.yquPhibar[mif2,0] * self.yu[0,0] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,0] * self.yquPhibar[mif2,1] * self.yu[0,1] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,0] * self.yquPhibar[mif2,1] * self.yu[0,1] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,0] * self.yquPhibar[mif2,1] * self.yu[0,1] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,0] * self.yquPhibar[mif2,2] * self.yu[0,2] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,0] * self.yquPhibar[mif2,2] * self.yu[0,2] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,0] * self.yquPhibar[mif2,2] * self.yu[0,2] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,1] * self.yquPhibar[mif2,0] * self.yu[1,0] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,1] * self.yquPhibar[mif2,0] * self.yu[1,0] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,1] * self.yquPhibar[mif2,0] * self.yu[1,0] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,1] * self.yquPhibar[mif2,1] * self.yu[1,1] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,1] * self.yquPhibar[mif2,1] * self.yu[1,1] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,1] * self.yquPhibar[mif2,1] * self.yu[1,1] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,1] * self.yquPhibar[mif2,2] * self.yu[1,2] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,1] * self.yquPhibar[mif2,2] * self.yu[1,2] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,1] * self.yquPhibar[mif2,2] * self.yu[1,2] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,2] * self.yquPhibar[mif2,0] * self.yu[2,0] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,2] * self.yquPhibar[mif2,0] * self.yu[2,0] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,2] * self.yquPhibar[mif2,0] * self.yu[2,0] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,2] * self.yquPhibar[mif2,1] * self.yu[2,1] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,2] * self.yquPhibar[mif2,1] * self.yu[2,1] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,2] * self.yquPhibar[mif2,1] * self.yu[2,1] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,2] * self.yquPhibar[mif2,2] * self.yu[2,2] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,2] * self.yquPhibar[mif2,2] * self.yu[2,2] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,2] * self.yquPhibar[mif2,2] * self.yu[2,2] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydqPhi[0,mif2] * self.yquPhibar[0,0] * self.yu[mif1,0] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydqPhi[1,mif2] * self.yquPhibar[0,0] * self.yu[mif1,0] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydqPhi[2,mif2] * self.yquPhibar[0,0] * self.yu[mif1,0] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydqPhi[0,mif2] * self.yquPhibar[1,0] * self.yu[mif1,0] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydqPhi[1,mif2] * self.yquPhibar[1,0] * self.yu[mif1,0] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydqPhi[2,mif2] * self.yquPhibar[1,0] * self.yu[mif1,0] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydqPhi[0,mif2] * self.yquPhibar[2,0] * self.yu[mif1,0] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydqPhi[1,mif2] * self.yquPhibar[2,0] * self.yu[mif1,0] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydqPhi[2,mif2] * self.yquPhibar[2,0] * self.yu[mif1,0] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydqPhi[0,mif2] * self.yquPhibar[0,1] * self.yu[mif1,1] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydqPhi[1,mif2] * self.yquPhibar[0,1] * self.yu[mif1,1] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydqPhi[2,mif2] * self.yquPhibar[0,1] * self.yu[mif1,1] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydqPhi[0,mif2] * self.yquPhibar[1,1] * self.yu[mif1,1] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydqPhi[1,mif2] * self.yquPhibar[1,1] * self.yu[mif1,1] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydqPhi[2,mif2] * self.yquPhibar[1,1] * self.yu[mif1,1] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydqPhi[0,mif2] * self.yquPhibar[2,1] * self.yu[mif1,1] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydqPhi[1,mif2] * self.yquPhibar[2,1] * self.yu[mif1,1] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydqPhi[2,mif2] * self.yquPhibar[2,1] * self.yu[mif1,1] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydqPhi[0,mif2] * self.yquPhibar[0,2] * self.yu[mif1,2] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydqPhi[1,mif2] * self.yquPhibar[0,2] * self.yu[mif1,2] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydqPhi[2,mif2] * self.yquPhibar[0,2] * self.yu[mif1,2] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydqPhi[0,mif2] * self.yquPhibar[1,2] * self.yu[mif1,2] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydqPhi[1,mif2] * self.yquPhibar[1,2] * self.yu[mif1,2] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydqPhi[2,mif2] * self.yquPhibar[1,2] * self.yu[mif1,2] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydqPhi[0,mif2] * self.yquPhibar[2,2] * self.yu[mif1,2] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydqPhi[1,mif2] * self.yquPhibar[2,2] * self.yu[mif1,2] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydqPhi[2,mif2] * self.yquPhibar[2,2] * self.yu[mif1,2] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.ydqPhibar[0,0] * self.yquPhi[mif1,0] * self.yubar[0,0] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.ydqPhibar[1,0] * self.yquPhi[mif1,0] * self.yubar[0,0] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.ydqPhibar[2,0] * self.yquPhi[mif1,0] * self.yubar[0,0] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.ydqPhibar[0,0] * self.yquPhi[mif1,1] * self.yubar[0,1] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.ydqPhibar[1,0] * self.yquPhi[mif1,1] * self.yubar[0,1] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.ydqPhibar[2,0] * self.yquPhi[mif1,1] * self.yubar[0,1] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.ydqPhibar[0,0] * self.yquPhi[mif1,2] * self.yubar[0,2] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.ydqPhibar[1,0] * self.yquPhi[mif1,2] * self.yubar[0,2] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.ydqPhibar[2,0] * self.yquPhi[mif1,2] * self.yubar[0,2] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.ydqPhibar[0,1] * self.yquPhi[mif1,0] * self.yubar[1,0] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.ydqPhibar[1,1] * self.yquPhi[mif1,0] * self.yubar[1,0] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.ydqPhibar[2,1] * self.yquPhi[mif1,0] * self.yubar[1,0] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.ydqPhibar[0,1] * self.yquPhi[mif1,1] * self.yubar[1,1] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.ydqPhibar[1,1] * self.yquPhi[mif1,1] * self.yubar[1,1] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.ydqPhibar[2,1] * self.yquPhi[mif1,1] * self.yubar[1,1] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.ydqPhibar[0,1] * self.yquPhi[mif1,2] * self.yubar[1,2] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.ydqPhibar[1,1] * self.yquPhi[mif1,2] * self.yubar[1,2] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.ydqPhibar[2,1] * self.yquPhi[mif1,2] * self.yubar[1,2] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.ydqPhibar[0,2] * self.yquPhi[mif1,0] * self.yubar[2,0] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.ydqPhibar[1,2] * self.yquPhi[mif1,0] * self.yubar[2,0] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.ydqPhibar[2,2] * self.yquPhi[mif1,0] * self.yubar[2,0] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.ydqPhibar[0,2] * self.yquPhi[mif1,1] * self.yubar[2,1] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.ydqPhibar[1,2] * self.yquPhi[mif1,1] * self.yubar[2,1] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.ydqPhibar[2,2] * self.yquPhi[mif1,1] * self.yubar[2,1] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.ydqPhibar[0,2] * self.yquPhi[mif1,2] * self.yubar[2,2] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.ydqPhibar[1,2] * self.yquPhi[mif1,2] * self.yubar[2,2] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.ydqPhibar[2,2] * self.yquPhi[mif1,2] * self.yubar[2,2] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.ydqPhibar[0,mif1] * self.yquPhi[0,0] * self.yubar[mif2,0] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.ydqPhibar[1,mif1] * self.yquPhi[0,0] * self.yubar[mif2,0] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.ydqPhibar[2,mif1] * self.yquPhi[0,0] * self.yubar[mif2,0] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.ydqPhibar[0,mif1] * self.yquPhi[1,0] * self.yubar[mif2,0] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.ydqPhibar[1,mif1] * self.yquPhi[1,0] * self.yubar[mif2,0] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.ydqPhibar[2,mif1] * self.yquPhi[1,0] * self.yubar[mif2,0] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[2,0] * self.yubar[mif2,0] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[2,0] * self.yubar[mif2,0] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[2,0] * self.yubar[mif2,0] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,0] * self.yquPhibar[0,0] * self.yu[mif1,0] * self.yubar[mif2,0] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,0] * self.yquPhibar[1,0] * self.yu[mif1,0] * self.yubar[mif2,0] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,0] * self.yquPhibar[2,0] * self.yu[mif1,0] * self.yubar[mif2,0] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,0] * self.yquPhibar[0,1] * self.yu[mif1,1] * self.yubar[mif2,0] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,0] * self.yquPhibar[1,1] * self.yu[mif1,1] * self.yubar[mif2,0] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,0] * self.yquPhibar[2,1] * self.yu[mif1,1] * self.yubar[mif2,0] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,0] * self.yquPhibar[0,2] * self.yu[mif1,2] * self.yubar[mif2,0] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,0] * self.yquPhibar[1,2] * self.yu[mif1,2] * self.yubar[mif2,0] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,0] * self.yquPhibar[2,2] * self.yu[mif1,2] * self.yubar[mif2,0] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.ydqPhibar[0,mif1] * self.yquPhi[0,1] * self.yubar[mif2,1] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.ydqPhibar[1,mif1] * self.yquPhi[0,1] * self.yubar[mif2,1] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.ydqPhibar[2,mif1] * self.yquPhi[0,1] * self.yubar[mif2,1] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.ydqPhibar[0,mif1] * self.yquPhi[1,1] * self.yubar[mif2,1] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.ydqPhibar[1,mif1] * self.yquPhi[1,1] * self.yubar[mif2,1] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.ydqPhibar[2,mif1] * self.yquPhi[1,1] * self.yubar[mif2,1] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[2,1] * self.yubar[mif2,1] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[2,1] * self.yubar[mif2,1] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[2,1] * self.yubar[mif2,1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,1] * self.yquPhibar[0,0] * self.yu[mif1,0] * self.yubar[mif2,1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,1] * self.yquPhibar[1,0] * self.yu[mif1,0] * self.yubar[mif2,1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,1] * self.yquPhibar[2,0] * self.yu[mif1,0] * self.yubar[mif2,1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,1] * self.yquPhibar[0,1] * self.yu[mif1,1] * self.yubar[mif2,1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,1] * self.yquPhibar[1,1] * self.yu[mif1,1] * self.yubar[mif2,1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,1] * self.yquPhibar[2,1] * self.yu[mif1,1] * self.yubar[mif2,1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,1] * self.yquPhibar[0,2] * self.yu[mif1,2] * self.yubar[mif2,1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,1] * self.yquPhibar[1,2] * self.yu[mif1,2] * self.yubar[mif2,1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,1] * self.yquPhibar[2,2] * self.yu[mif1,2] * self.yubar[mif2,1] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.ydqPhibar[0,mif1] * self.yquPhi[0,2] * self.yubar[mif2,2] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.ydqPhibar[1,mif1] * self.yquPhi[0,2] * self.yubar[mif2,2] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.ydqPhibar[2,mif1] * self.yquPhi[0,2] * self.yubar[mif2,2] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.ydqPhibar[0,mif1] * self.yquPhi[1,2] * self.yubar[mif2,2] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.ydqPhibar[1,mif1] * self.yquPhi[1,2] * self.yubar[mif2,2] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.ydqPhibar[2,mif1] * self.yquPhi[1,2] * self.yubar[mif2,2] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[2,2] * self.yubar[mif2,2] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[2,2] * self.yubar[mif2,2] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[2,2] * self.yubar[mif2,2] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,2] * self.yquPhibar[0,0] * self.yu[mif1,0] * self.yubar[mif2,2] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,2] * self.yquPhibar[1,0] * self.yu[mif1,0] * self.yubar[mif2,2] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,2] * self.yquPhibar[2,0] * self.yu[mif1,0] * self.yubar[mif2,2] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,2] * self.yquPhibar[0,1] * self.yu[mif1,1] * self.yubar[mif2,2] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,2] * self.yquPhibar[1,1] * self.yu[mif1,1] * self.yubar[mif2,2] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,2] * self.yquPhibar[2,1] * self.yu[mif1,1] * self.yubar[mif2,2] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,2] * self.yquPhibar[0,2] * self.yu[mif1,2] * self.yubar[mif2,2] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,2] * self.yquPhibar[1,2] * self.yu[mif1,2] * self.yubar[mif2,2] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,2] * self.yquPhibar[2,2] * self.yu[mif1,2] * self.yubar[mif2,2])

    def alphaOHu(self, mif1,mif2):
        return (-1/360 * (self.g1)**(4) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -5/1296 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhibar[0,mif1] + -1/216 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhibar[0,mif1] + 1/216 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[0,mif2] * self.yquPhibar[0,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.yquPhi[0,mif2] * self.yquPhibar[0,mif1] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.yquPhi[0,mif2] * self.yquPhibar[0,mif1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[0,0] * self.yquPhi[0,mif2] * self.yquPhibar[0,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.yquPhi[0,mif2] * self.yquPhibar[0,mif1] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.yquPhi[0,mif2] * self.yquPhibar[0,mif1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[0,1] * self.yquPhi[0,mif2] * self.yquPhibar[0,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,2] * self.yquPhi[0,mif2] * self.yquPhibar[0,mif1] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,2] * self.yquPhi[0,mif2] * self.yquPhibar[0,mif1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[0,2] * self.yquPhi[0,mif2] * self.yquPhibar[0,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[1,0] * self.yquPhi[1,mif2] * self.yquPhibar[0,mif1] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[1,0] * self.yquPhi[1,mif2] * self.yquPhibar[0,mif1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[1,0] * self.yquPhi[1,mif2] * self.yquPhibar[0,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[1,1] * self.yquPhi[1,mif2] * self.yquPhibar[0,mif1] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[1,1] * self.yquPhi[1,mif2] * self.yquPhibar[0,mif1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[1,1] * self.yquPhi[1,mif2] * self.yquPhibar[0,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[1,2] * self.yquPhi[1,mif2] * self.yquPhibar[0,mif1] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[1,2] * self.yquPhi[1,mif2] * self.yquPhibar[0,mif1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[1,2] * self.yquPhi[1,mif2] * self.yquPhibar[0,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[2,0] * self.yquPhi[2,mif2] * self.yquPhibar[0,mif1] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[2,0] * self.yquPhi[2,mif2] * self.yquPhibar[0,mif1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[2,0] * self.yquPhi[2,mif2] * self.yquPhibar[0,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[2,1] * self.yquPhi[2,mif2] * self.yquPhibar[0,mif1] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[2,1] * self.yquPhi[2,mif2] * self.yquPhibar[0,mif1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[2,1] * self.yquPhi[2,mif2] * self.yquPhibar[0,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[2,2] * self.yquPhi[2,mif2] * self.yquPhibar[0,mif1] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[2,2] * self.yquPhi[2,mif2] * self.yquPhibar[0,mif1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[2,2] * self.yquPhi[2,mif2] * self.yquPhibar[0,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[0,0] * self.yquPhi[0,mif2] * self.yquPhibar[1,mif1] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[0,0] * self.yquPhi[0,mif2] * self.yquPhibar[1,mif1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[0,0] * self.yquPhi[0,mif2] * self.yquPhibar[1,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[0,1] * self.yquPhi[0,mif2] * self.yquPhibar[1,mif1] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[0,1] * self.yquPhi[0,mif2] * self.yquPhibar[1,mif1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[0,1] * self.yquPhi[0,mif2] * self.yquPhibar[1,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[0,2] * self.yquPhi[0,mif2] * self.yquPhibar[1,mif1] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[0,2] * self.yquPhi[0,mif2] * self.yquPhibar[1,mif1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[0,2] * self.yquPhi[0,mif2] * self.yquPhibar[1,mif1] + -5/1296 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhibar[1,mif1] + -1/216 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhibar[1,mif1] + 1/216 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[1,mif2] * self.yquPhibar[1,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.yquPhi[1,mif2] * self.yquPhibar[1,mif1] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.yquPhi[1,mif2] * self.yquPhibar[1,mif1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[1,0] * self.yquPhi[1,mif2] * self.yquPhibar[1,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,1] * self.yquPhi[1,mif2] * self.yquPhibar[1,mif1] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,1] * self.yquPhi[1,mif2] * self.yquPhibar[1,mif1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[1,1] * self.yquPhi[1,mif2] * self.yquPhibar[1,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,2] * self.yquPhi[1,mif2] * self.yquPhibar[1,mif1] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,2] * self.yquPhi[1,mif2] * self.yquPhibar[1,mif1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[1,2] * self.yquPhi[1,mif2] * self.yquPhibar[1,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[2,0] * self.yquPhi[2,mif2] * self.yquPhibar[1,mif1] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[2,0] * self.yquPhi[2,mif2] * self.yquPhibar[1,mif1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[2,0] * self.yquPhi[2,mif2] * self.yquPhibar[1,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[2,1] * self.yquPhi[2,mif2] * self.yquPhibar[1,mif1] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[2,1] * self.yquPhi[2,mif2] * self.yquPhibar[1,mif1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[2,1] * self.yquPhi[2,mif2] * self.yquPhibar[1,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[2,2] * self.yquPhi[2,mif2] * self.yquPhibar[1,mif1] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[2,2] * self.yquPhi[2,mif2] * self.yquPhibar[1,mif1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[2,2] * self.yquPhi[2,mif2] * self.yquPhibar[1,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[0,0] * self.yquPhi[0,mif2] * self.yquPhibar[2,mif1] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[0,0] * self.yquPhi[0,mif2] * self.yquPhibar[2,mif1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[0,0] * self.yquPhi[0,mif2] * self.yquPhibar[2,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[0,1] * self.yquPhi[0,mif2] * self.yquPhibar[2,mif1] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[0,1] * self.yquPhi[0,mif2] * self.yquPhibar[2,mif1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[0,1] * self.yquPhi[0,mif2] * self.yquPhibar[2,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[0,2] * self.yquPhi[0,mif2] * self.yquPhibar[2,mif1] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[0,2] * self.yquPhi[0,mif2] * self.yquPhibar[2,mif1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[0,2] * self.yquPhi[0,mif2] * self.yquPhibar[2,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[1,0] * self.yquPhi[1,mif2] * self.yquPhibar[2,mif1] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[1,0] * self.yquPhi[1,mif2] * self.yquPhibar[2,mif1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[1,0] * self.yquPhi[1,mif2] * self.yquPhibar[2,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[1,1] * self.yquPhi[1,mif2] * self.yquPhibar[2,mif1] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[1,1] * self.yquPhi[1,mif2] * self.yquPhibar[2,mif1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[1,1] * self.yquPhi[1,mif2] * self.yquPhibar[2,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[1,2] * self.yquPhi[1,mif2] * self.yquPhibar[2,mif1] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[1,2] * self.yquPhi[1,mif2] * self.yquPhibar[2,mif1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[1,2] * self.yquPhi[1,mif2] * self.yquPhibar[2,mif1] + -5/1296 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhibar[2,mif1] + -1/216 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhibar[2,mif1] + 1/216 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[2,mif2] * self.yquPhibar[2,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,0] * self.yquPhi[2,mif2] * self.yquPhibar[2,mif1] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,0] * self.yquPhi[2,mif2] * self.yquPhibar[2,mif1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[2,0] * self.yquPhi[2,mif2] * self.yquPhibar[2,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,1] * self.yquPhi[2,mif2] * self.yquPhibar[2,mif1] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,1] * self.yquPhi[2,mif2] * self.yquPhibar[2,mif1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[2,1] * self.yquPhi[2,mif2] * self.yquPhibar[2,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,2] * self.yquPhi[2,mif2] * self.yquPhibar[2,mif1] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,2] * self.yquPhi[2,mif2] * self.yquPhibar[2,mif1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[2,2] * self.yquPhi[2,mif2] * self.yquPhibar[2,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydqPhi[0,0] * self.yquPhibar[0,mif1] * self.yu[0,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydqPhi[1,0] * self.yquPhibar[0,mif1] * self.yu[0,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydqPhi[2,0] * self.yquPhibar[0,mif1] * self.yu[0,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydqPhi[0,0] * self.yquPhibar[1,mif1] * self.yu[0,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydqPhi[1,0] * self.yquPhibar[1,mif1] * self.yu[0,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydqPhi[2,0] * self.yquPhibar[1,mif1] * self.yu[0,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydqPhi[0,0] * self.yquPhibar[2,mif1] * self.yu[0,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydqPhi[1,0] * self.yquPhibar[2,mif1] * self.yu[0,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydqPhi[2,0] * self.yquPhibar[2,mif1] * self.yu[0,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydqPhi[0,1] * self.yquPhibar[0,mif1] * self.yu[1,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydqPhi[1,1] * self.yquPhibar[0,mif1] * self.yu[1,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydqPhi[2,1] * self.yquPhibar[0,mif1] * self.yu[1,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydqPhi[0,1] * self.yquPhibar[1,mif1] * self.yu[1,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydqPhi[1,1] * self.yquPhibar[1,mif1] * self.yu[1,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydqPhi[2,1] * self.yquPhibar[1,mif1] * self.yu[1,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydqPhi[0,1] * self.yquPhibar[2,mif1] * self.yu[1,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydqPhi[1,1] * self.yquPhibar[2,mif1] * self.yu[1,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydqPhi[2,1] * self.yquPhibar[2,mif1] * self.yu[1,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydqPhi[0,2] * self.yquPhibar[0,mif1] * self.yu[2,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydqPhi[1,2] * self.yquPhibar[0,mif1] * self.yu[2,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydqPhi[2,2] * self.yquPhibar[0,mif1] * self.yu[2,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydqPhi[0,2] * self.yquPhibar[1,mif1] * self.yu[2,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydqPhi[1,2] * self.yquPhibar[1,mif1] * self.yu[2,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydqPhi[2,2] * self.yquPhibar[1,mif1] * self.yu[2,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydqPhi[0,2] * self.yquPhibar[2,mif1] * self.yu[2,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydqPhi[1,2] * self.yquPhibar[2,mif1] * self.yu[2,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydqPhi[2,2] * self.yquPhibar[2,mif1] * self.yu[2,mif2] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhibar[0,mif1] * self.yu[0,0] * self.yubar[0,0] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhibar[0,mif1] * self.yu[0,0] * self.yubar[0,0] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[0,mif2] * self.yquPhibar[0,mif1] * self.yu[0,0] * self.yubar[0,0] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhibar[1,mif1] * self.yu[1,0] * self.yubar[0,0] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhibar[1,mif1] * self.yu[1,0] * self.yubar[0,0] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[0,mif2] * self.yquPhibar[1,mif1] * self.yu[1,0] * self.yubar[0,0] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhibar[2,mif1] * self.yu[2,0] * self.yubar[0,0] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhibar[2,mif1] * self.yu[2,0] * self.yubar[0,0] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[0,mif2] * self.yquPhibar[2,mif1] * self.yu[2,0] * self.yubar[0,0] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhibar[0,mif1] * self.yu[0,1] * self.yubar[0,1] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhibar[0,mif1] * self.yu[0,1] * self.yubar[0,1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[0,mif2] * self.yquPhibar[0,mif1] * self.yu[0,1] * self.yubar[0,1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhibar[1,mif1] * self.yu[1,1] * self.yubar[0,1] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhibar[1,mif1] * self.yu[1,1] * self.yubar[0,1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[0,mif2] * self.yquPhibar[1,mif1] * self.yu[1,1] * self.yubar[0,1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhibar[2,mif1] * self.yu[2,1] * self.yubar[0,1] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhibar[2,mif1] * self.yu[2,1] * self.yubar[0,1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[0,mif2] * self.yquPhibar[2,mif1] * self.yu[2,1] * self.yubar[0,1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhibar[0,mif1] * self.yu[0,2] * self.yubar[0,2] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhibar[0,mif1] * self.yu[0,2] * self.yubar[0,2] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[0,mif2] * self.yquPhibar[0,mif1] * self.yu[0,2] * self.yubar[0,2] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhibar[1,mif1] * self.yu[1,2] * self.yubar[0,2] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhibar[1,mif1] * self.yu[1,2] * self.yubar[0,2] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[0,mif2] * self.yquPhibar[1,mif1] * self.yu[1,2] * self.yubar[0,2] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhibar[2,mif1] * self.yu[2,2] * self.yubar[0,2] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhibar[2,mif1] * self.yu[2,2] * self.yubar[0,2] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[0,mif2] * self.yquPhibar[2,mif1] * self.yu[2,2] * self.yubar[0,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.ydqPhibar[0,0] * self.yquPhi[0,mif2] * self.yubar[0,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.ydqPhibar[1,0] * self.yquPhi[0,mif2] * self.yubar[0,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.ydqPhibar[2,0] * self.yquPhi[0,mif2] * self.yubar[0,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.ydqPhibar[0,0] * self.yquPhi[1,mif2] * self.yubar[0,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.ydqPhibar[1,0] * self.yquPhi[1,mif2] * self.yubar[0,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.ydqPhibar[2,0] * self.yquPhi[1,mif2] * self.yubar[0,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.ydqPhibar[0,0] * self.yquPhi[2,mif2] * self.yubar[0,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.ydqPhibar[1,0] * self.yquPhi[2,mif2] * self.yubar[0,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.ydqPhibar[2,0] * self.yquPhi[2,mif2] * self.yubar[0,mif1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,0] * self.ydqPhibar[0,0] * self.yu[0,mif2] * self.yubar[0,mif1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,0] * self.ydqPhibar[1,0] * self.yu[0,mif2] * self.yubar[0,mif1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,0] * self.ydqPhibar[2,0] * self.yu[0,mif2] * self.yubar[0,mif1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,0] * self.yquPhibar[0,0] * self.yu[0,mif2] * self.yubar[0,mif1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,1] * self.yquPhibar[0,1] * self.yu[0,mif2] * self.yubar[0,mif1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,2] * self.yquPhibar[0,2] * self.yu[0,mif2] * self.yubar[0,mif1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,1] * self.ydqPhibar[0,0] * self.yu[1,mif2] * self.yubar[0,mif1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,1] * self.ydqPhibar[1,0] * self.yu[1,mif2] * self.yubar[0,mif1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,1] * self.ydqPhibar[2,0] * self.yu[1,mif2] * self.yubar[0,mif1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,0] * self.yquPhibar[1,0] * self.yu[1,mif2] * self.yubar[0,mif1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,1] * self.yquPhibar[1,1] * self.yu[1,mif2] * self.yubar[0,mif1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,2] * self.yquPhibar[1,2] * self.yu[1,mif2] * self.yubar[0,mif1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,2] * self.ydqPhibar[0,0] * self.yu[2,mif2] * self.yubar[0,mif1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,2] * self.ydqPhibar[1,0] * self.yu[2,mif2] * self.yubar[0,mif1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,2] * self.ydqPhibar[2,0] * self.yu[2,mif2] * self.yubar[0,mif1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,0] * self.yquPhibar[2,0] * self.yu[2,mif2] * self.yubar[0,mif1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,1] * self.yquPhibar[2,1] * self.yu[2,mif2] * self.yubar[0,mif1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,2] * self.yquPhibar[2,2] * self.yu[2,mif2] * self.yubar[0,mif1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhibar[0,mif1] * self.yu[0,0] * self.yubar[1,0] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhibar[0,mif1] * self.yu[0,0] * self.yubar[1,0] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[1,mif2] * self.yquPhibar[0,mif1] * self.yu[0,0] * self.yubar[1,0] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhibar[1,mif1] * self.yu[1,0] * self.yubar[1,0] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhibar[1,mif1] * self.yu[1,0] * self.yubar[1,0] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[1,mif2] * self.yquPhibar[1,mif1] * self.yu[1,0] * self.yubar[1,0] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhibar[2,mif1] * self.yu[2,0] * self.yubar[1,0] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhibar[2,mif1] * self.yu[2,0] * self.yubar[1,0] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[1,mif2] * self.yquPhibar[2,mif1] * self.yu[2,0] * self.yubar[1,0] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhibar[0,mif1] * self.yu[0,1] * self.yubar[1,1] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhibar[0,mif1] * self.yu[0,1] * self.yubar[1,1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[1,mif2] * self.yquPhibar[0,mif1] * self.yu[0,1] * self.yubar[1,1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhibar[1,mif1] * self.yu[1,1] * self.yubar[1,1] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhibar[1,mif1] * self.yu[1,1] * self.yubar[1,1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[1,mif2] * self.yquPhibar[1,mif1] * self.yu[1,1] * self.yubar[1,1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhibar[2,mif1] * self.yu[2,1] * self.yubar[1,1] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhibar[2,mif1] * self.yu[2,1] * self.yubar[1,1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[1,mif2] * self.yquPhibar[2,mif1] * self.yu[2,1] * self.yubar[1,1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhibar[0,mif1] * self.yu[0,2] * self.yubar[1,2] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhibar[0,mif1] * self.yu[0,2] * self.yubar[1,2] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[1,mif2] * self.yquPhibar[0,mif1] * self.yu[0,2] * self.yubar[1,2] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhibar[1,mif1] * self.yu[1,2] * self.yubar[1,2] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhibar[1,mif1] * self.yu[1,2] * self.yubar[1,2] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[1,mif2] * self.yquPhibar[1,mif1] * self.yu[1,2] * self.yubar[1,2] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhibar[2,mif1] * self.yu[2,2] * self.yubar[1,2] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhibar[2,mif1] * self.yu[2,2] * self.yubar[1,2] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[1,mif2] * self.yquPhibar[2,mif1] * self.yu[2,2] * self.yubar[1,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.ydqPhibar[0,1] * self.yquPhi[0,mif2] * self.yubar[1,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.ydqPhibar[1,1] * self.yquPhi[0,mif2] * self.yubar[1,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.ydqPhibar[2,1] * self.yquPhi[0,mif2] * self.yubar[1,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.ydqPhibar[0,1] * self.yquPhi[1,mif2] * self.yubar[1,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.ydqPhibar[1,1] * self.yquPhi[1,mif2] * self.yubar[1,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.ydqPhibar[2,1] * self.yquPhi[1,mif2] * self.yubar[1,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.ydqPhibar[0,1] * self.yquPhi[2,mif2] * self.yubar[1,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.ydqPhibar[1,1] * self.yquPhi[2,mif2] * self.yubar[1,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.ydqPhibar[2,1] * self.yquPhi[2,mif2] * self.yubar[1,mif1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,0] * self.ydqPhibar[0,1] * self.yu[0,mif2] * self.yubar[1,mif1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,0] * self.ydqPhibar[1,1] * self.yu[0,mif2] * self.yubar[1,mif1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,0] * self.ydqPhibar[2,1] * self.yu[0,mif2] * self.yubar[1,mif1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,0] * self.yquPhibar[0,0] * self.yu[0,mif2] * self.yubar[1,mif1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,1] * self.yquPhibar[0,1] * self.yu[0,mif2] * self.yubar[1,mif1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,2] * self.yquPhibar[0,2] * self.yu[0,mif2] * self.yubar[1,mif1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,1] * self.ydqPhibar[0,1] * self.yu[1,mif2] * self.yubar[1,mif1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,1] * self.ydqPhibar[1,1] * self.yu[1,mif2] * self.yubar[1,mif1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,1] * self.ydqPhibar[2,1] * self.yu[1,mif2] * self.yubar[1,mif1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,0] * self.yquPhibar[1,0] * self.yu[1,mif2] * self.yubar[1,mif1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,1] * self.yquPhibar[1,1] * self.yu[1,mif2] * self.yubar[1,mif1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,2] * self.yquPhibar[1,2] * self.yu[1,mif2] * self.yubar[1,mif1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,2] * self.ydqPhibar[0,1] * self.yu[2,mif2] * self.yubar[1,mif1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,2] * self.ydqPhibar[1,1] * self.yu[2,mif2] * self.yubar[1,mif1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,2] * self.ydqPhibar[2,1] * self.yu[2,mif2] * self.yubar[1,mif1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,0] * self.yquPhibar[2,0] * self.yu[2,mif2] * self.yubar[1,mif1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,1] * self.yquPhibar[2,1] * self.yu[2,mif2] * self.yubar[1,mif1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,2] * self.yquPhibar[2,2] * self.yu[2,mif2] * self.yubar[1,mif1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhibar[0,mif1] * self.yu[0,0] * self.yubar[2,0] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhibar[0,mif1] * self.yu[0,0] * self.yubar[2,0] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[2,mif2] * self.yquPhibar[0,mif1] * self.yu[0,0] * self.yubar[2,0] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhibar[1,mif1] * self.yu[1,0] * self.yubar[2,0] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhibar[1,mif1] * self.yu[1,0] * self.yubar[2,0] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[2,mif2] * self.yquPhibar[1,mif1] * self.yu[1,0] * self.yubar[2,0] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhibar[2,mif1] * self.yu[2,0] * self.yubar[2,0] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhibar[2,mif1] * self.yu[2,0] * self.yubar[2,0] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[2,mif2] * self.yquPhibar[2,mif1] * self.yu[2,0] * self.yubar[2,0] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhibar[0,mif1] * self.yu[0,1] * self.yubar[2,1] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhibar[0,mif1] * self.yu[0,1] * self.yubar[2,1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[2,mif2] * self.yquPhibar[0,mif1] * self.yu[0,1] * self.yubar[2,1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhibar[1,mif1] * self.yu[1,1] * self.yubar[2,1] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhibar[1,mif1] * self.yu[1,1] * self.yubar[2,1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[2,mif2] * self.yquPhibar[1,mif1] * self.yu[1,1] * self.yubar[2,1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhibar[2,mif1] * self.yu[2,1] * self.yubar[2,1] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhibar[2,mif1] * self.yu[2,1] * self.yubar[2,1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[2,mif2] * self.yquPhibar[2,mif1] * self.yu[2,1] * self.yubar[2,1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhibar[0,mif1] * self.yu[0,2] * self.yubar[2,2] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhibar[0,mif1] * self.yu[0,2] * self.yubar[2,2] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[2,mif2] * self.yquPhibar[0,mif1] * self.yu[0,2] * self.yubar[2,2] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhibar[1,mif1] * self.yu[1,2] * self.yubar[2,2] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhibar[1,mif1] * self.yu[1,2] * self.yubar[2,2] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[2,mif2] * self.yquPhibar[1,mif1] * self.yu[1,2] * self.yubar[2,2] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhibar[2,mif1] * self.yu[2,2] * self.yubar[2,2] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhibar[2,mif1] * self.yu[2,2] * self.yubar[2,2] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[2,mif2] * self.yquPhibar[2,mif1] * self.yu[2,2] * self.yubar[2,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.ydqPhibar[0,2] * self.yquPhi[0,mif2] * self.yubar[2,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.ydqPhibar[1,2] * self.yquPhi[0,mif2] * self.yubar[2,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.ydqPhibar[2,2] * self.yquPhi[0,mif2] * self.yubar[2,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.ydqPhibar[0,2] * self.yquPhi[1,mif2] * self.yubar[2,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.ydqPhibar[1,2] * self.yquPhi[1,mif2] * self.yubar[2,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.ydqPhibar[2,2] * self.yquPhi[1,mif2] * self.yubar[2,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.ydqPhibar[0,2] * self.yquPhi[2,mif2] * self.yubar[2,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.ydqPhibar[1,2] * self.yquPhi[2,mif2] * self.yubar[2,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.ydqPhibar[2,2] * self.yquPhi[2,mif2] * self.yubar[2,mif1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,0] * self.ydqPhibar[0,2] * self.yu[0,mif2] * self.yubar[2,mif1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,0] * self.ydqPhibar[1,2] * self.yu[0,mif2] * self.yubar[2,mif1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,0] * self.ydqPhibar[2,2] * self.yu[0,mif2] * self.yubar[2,mif1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,0] * self.yquPhibar[0,0] * self.yu[0,mif2] * self.yubar[2,mif1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,1] * self.yquPhibar[0,1] * self.yu[0,mif2] * self.yubar[2,mif1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,2] * self.yquPhibar[0,2] * self.yu[0,mif2] * self.yubar[2,mif1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,1] * self.ydqPhibar[0,2] * self.yu[1,mif2] * self.yubar[2,mif1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,1] * self.ydqPhibar[1,2] * self.yu[1,mif2] * self.yubar[2,mif1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,1] * self.ydqPhibar[2,2] * self.yu[1,mif2] * self.yubar[2,mif1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,0] * self.yquPhibar[1,0] * self.yu[1,mif2] * self.yubar[2,mif1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,1] * self.yquPhibar[1,1] * self.yu[1,mif2] * self.yubar[2,mif1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,2] * self.yquPhibar[1,2] * self.yu[1,mif2] * self.yubar[2,mif1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,2] * self.ydqPhibar[0,2] * self.yu[2,mif2] * self.yubar[2,mif1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,2] * self.ydqPhibar[1,2] * self.yu[2,mif2] * self.yubar[2,mif1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,2] * self.ydqPhibar[2,2] * self.yu[2,mif2] * self.yubar[2,mif1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,0] * self.yquPhibar[2,0] * self.yu[2,mif2] * self.yubar[2,mif1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,1] * self.yquPhibar[2,1] * self.yu[2,mif2] * self.yubar[2,mif1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,2] * self.yquPhibar[2,2] * self.yu[2,mif2] * self.yubar[2,mif1])

    def alphaOHud(self, mif1,mif2):
        return (1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.yd[0,mif2] * self.ydqPhi[0,0] * self.yquPhibar[0,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.yd[1,mif2] * self.ydqPhi[0,1] * self.yquPhibar[0,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.yd[2,mif2] * self.ydqPhi[0,2] * self.yquPhibar[0,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.yd[0,mif2] * self.ydqPhi[1,0] * self.yquPhibar[0,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.yd[1,mif2] * self.ydqPhi[1,1] * self.yquPhibar[0,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.yd[2,mif2] * self.ydqPhi[1,2] * self.yquPhibar[0,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.yd[0,mif2] * self.ydqPhi[2,0] * self.yquPhibar[0,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.yd[1,mif2] * self.ydqPhi[2,1] * self.yquPhibar[0,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.yd[2,mif2] * self.ydqPhi[2,2] * self.yquPhibar[0,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[1,0] * self.ydqPhi[0,0] * self.yquPhibar[1,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.yd[1,mif2] * self.ydqPhi[0,1] * self.yquPhibar[1,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.yd[2,mif2] * self.ydqPhi[0,2] * self.yquPhibar[1,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[1,1] * self.ydqPhi[1,0] * self.yquPhibar[1,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.yd[1,mif2] * self.ydqPhi[1,1] * self.yquPhibar[1,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.yd[2,mif2] * self.ydqPhi[1,2] * self.yquPhibar[1,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[1,2] * self.ydqPhi[2,0] * self.yquPhibar[1,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.yd[1,mif2] * self.ydqPhi[2,1] * self.yquPhibar[1,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.yd[2,mif2] * self.ydqPhi[2,2] * self.yquPhibar[1,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[2,0] * self.ydqPhi[0,0] * self.yquPhibar[2,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[2,0] * self.ydqPhi[0,1] * self.yquPhibar[2,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.yd[2,mif2] * self.ydqPhi[0,2] * self.yquPhibar[2,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[2,1] * self.ydqPhi[1,0] * self.yquPhibar[2,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[2,1] * self.ydqPhi[1,1] * self.yquPhibar[2,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.yd[2,mif2] * self.ydqPhi[1,2] * self.yquPhibar[2,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[2,2] * self.ydqPhi[2,0] * self.yquPhibar[2,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[2,2] * self.ydqPhi[2,1] * self.yquPhibar[2,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.yd[2,mif2] * self.ydqPhi[2,2] * self.yquPhibar[2,mif1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydqPhi[0,0] * self.ydqPhibar[0,0] * self.yubar[0,mif1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydqPhi[0,1] * self.ydqPhibar[0,0] * self.yubar[0,mif1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydqPhi[0,2] * self.ydqPhibar[0,0] * self.yubar[0,mif1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydqPhi[1,0] * self.ydqPhibar[1,0] * self.yubar[0,mif1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydqPhi[1,1] * self.ydqPhibar[1,0] * self.yubar[0,mif1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydqPhi[1,2] * self.ydqPhibar[1,0] * self.yubar[0,mif1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydqPhi[2,0] * self.ydqPhibar[2,0] * self.yubar[0,mif1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydqPhi[2,1] * self.ydqPhibar[2,0] * self.yubar[0,mif1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydqPhi[2,2] * self.ydqPhibar[2,0] * self.yubar[0,mif1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yquPhi[0,0] * self.yquPhibar[0,0] * self.yubar[0,mif1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yquPhi[0,1] * self.yquPhibar[0,1] * self.yubar[0,mif1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yquPhi[0,2] * self.yquPhibar[0,2] * self.yubar[0,mif1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yquPhi[0,0] * self.yquPhibar[1,0] * self.yubar[0,mif1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yquPhi[0,1] * self.yquPhibar[1,1] * self.yubar[0,mif1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yquPhi[0,2] * self.yquPhibar[1,2] * self.yubar[0,mif1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yquPhi[0,0] * self.yquPhibar[2,0] * self.yubar[0,mif1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yquPhi[0,1] * self.yquPhibar[2,1] * self.yubar[0,mif1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yquPhi[0,2] * self.yquPhibar[2,2] * self.yubar[0,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[0,0] * self.yubar[0,0] * self.yubar[0,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[0,1] * self.yubar[0,1] * self.yubar[0,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[0,2] * self.yubar[0,2] * self.yubar[0,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[0,0] * self.yubar[0,mif1] * self.yubar[1,0] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[0,1] * self.yubar[0,mif1] * self.yubar[1,1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[0,2] * self.yubar[0,mif1] * self.yubar[1,2] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydqPhi[0,0] * self.ydqPhibar[0,1] * self.yubar[1,mif1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydqPhi[0,1] * self.ydqPhibar[0,1] * self.yubar[1,mif1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydqPhi[0,2] * self.ydqPhibar[0,1] * self.yubar[1,mif1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydqPhi[1,0] * self.ydqPhibar[1,1] * self.yubar[1,mif1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydqPhi[1,1] * self.ydqPhibar[1,1] * self.yubar[1,mif1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydqPhi[1,2] * self.ydqPhibar[1,1] * self.yubar[1,mif1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydqPhi[2,0] * self.ydqPhibar[2,1] * self.yubar[1,mif1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydqPhi[2,1] * self.ydqPhibar[2,1] * self.yubar[1,mif1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydqPhi[2,2] * self.ydqPhibar[2,1] * self.yubar[1,mif1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yquPhi[1,0] * self.yquPhibar[0,0] * self.yubar[1,mif1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yquPhi[1,1] * self.yquPhibar[0,1] * self.yubar[1,mif1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yquPhi[1,2] * self.yquPhibar[0,2] * self.yubar[1,mif1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yquPhi[1,0] * self.yquPhibar[1,0] * self.yubar[1,mif1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yquPhi[1,1] * self.yquPhibar[1,1] * self.yubar[1,mif1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yquPhi[1,2] * self.yquPhibar[1,2] * self.yubar[1,mif1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yquPhi[1,0] * self.yquPhibar[2,0] * self.yubar[1,mif1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yquPhi[1,1] * self.yquPhibar[2,1] * self.yubar[1,mif1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yquPhi[1,2] * self.yquPhibar[2,2] * self.yubar[1,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[1,0] * self.yubar[0,0] * self.yubar[1,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[1,1] * self.yubar[0,1] * self.yubar[1,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[1,2] * self.yubar[0,2] * self.yubar[1,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[1,0] * self.yubar[1,0] * self.yubar[1,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[1,1] * self.yubar[1,1] * self.yubar[1,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[1,2] * self.yubar[1,2] * self.yubar[1,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[0,0] * self.yubar[0,mif1] * self.yubar[2,0] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[1,0] * self.yubar[1,mif1] * self.yubar[2,0] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[0,1] * self.yubar[0,mif1] * self.yubar[2,1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[1,1] * self.yubar[1,mif1] * self.yubar[2,1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[0,2] * self.yubar[0,mif1] * self.yubar[2,2] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[1,2] * self.yubar[1,mif1] * self.yubar[2,2] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydqPhi[0,0] * self.ydqPhibar[0,2] * self.yubar[2,mif1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydqPhi[0,1] * self.ydqPhibar[0,2] * self.yubar[2,mif1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydqPhi[0,2] * self.ydqPhibar[0,2] * self.yubar[2,mif1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydqPhi[1,0] * self.ydqPhibar[1,2] * self.yubar[2,mif1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydqPhi[1,1] * self.ydqPhibar[1,2] * self.yubar[2,mif1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydqPhi[1,2] * self.ydqPhibar[1,2] * self.yubar[2,mif1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydqPhi[2,0] * self.ydqPhibar[2,2] * self.yubar[2,mif1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydqPhi[2,1] * self.ydqPhibar[2,2] * self.yubar[2,mif1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydqPhi[2,2] * self.ydqPhibar[2,2] * self.yubar[2,mif1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yquPhi[2,0] * self.yquPhibar[0,0] * self.yubar[2,mif1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yquPhi[2,1] * self.yquPhibar[0,1] * self.yubar[2,mif1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yquPhi[2,2] * self.yquPhibar[0,2] * self.yubar[2,mif1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yquPhi[2,0] * self.yquPhibar[1,0] * self.yubar[2,mif1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yquPhi[2,1] * self.yquPhibar[1,1] * self.yubar[2,mif1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yquPhi[2,2] * self.yquPhibar[1,2] * self.yubar[2,mif1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yquPhi[2,0] * self.yquPhibar[2,0] * self.yubar[2,mif1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yquPhi[2,1] * self.yquPhibar[2,1] * self.yubar[2,mif1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yquPhi[2,2] * self.yquPhibar[2,2] * self.yubar[2,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[2,0] * self.yubar[0,0] * self.yubar[2,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[2,1] * self.yubar[0,1] * self.yubar[2,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,0] * self.yquPhi[2,2] * self.yubar[0,2] * self.yubar[2,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[2,0] * self.yubar[1,0] * self.yubar[2,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[2,1] * self.yubar[1,1] * self.yubar[2,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,1] * self.yquPhi[2,2] * self.yubar[1,2] * self.yubar[2,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[2,0] * self.yubar[2,0] * self.yubar[2,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[2,1] * self.yubar[2,1] * self.yubar[2,mif1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif2,2] * self.yquPhi[2,2] * self.yubar[2,2] * self.yubar[2,mif1])

    def alphaOld(self, mif1,mif2,mif3,mif4):
        return (-1/720 * (self.g1)**(4) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 11/1296 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,0] + 1/216 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,0] + -1/216 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,0] + 11/1296 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,1] + 1/216 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,1] + -1/216 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,1] + 11/1296 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,2] + 1/216 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,2] + -1/216 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,2])

    def alphaOle(self, mif1,mif2,mif3,mif4):
        return -1/240 * (self.g1)**(4) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4)

    def alphaOledq(self, mif1,mif2,mif3,mif4):
        return (-1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,0] * self.yl[mif1,mif2] * self.yquPhibar[mif4,0] * self.yu[0,0] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,0] * self.yl[mif1,mif2] * self.yquPhibar[mif4,0] * self.yu[0,0] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,0] * self.yl[mif1,mif2] * self.yquPhibar[mif4,0] * self.yu[0,0] + -1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,0] * self.yl[mif1,mif2] * self.yquPhibar[mif4,1] * self.yu[0,1] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,0] * self.yl[mif1,mif2] * self.yquPhibar[mif4,1] * self.yu[0,1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,0] * self.yl[mif1,mif2] * self.yquPhibar[mif4,1] * self.yu[0,1] + -1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,0] * self.yl[mif1,mif2] * self.yquPhibar[mif4,2] * self.yu[0,2] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,0] * self.yl[mif1,mif2] * self.yquPhibar[mif4,2] * self.yu[0,2] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,0] * self.yl[mif1,mif2] * self.yquPhibar[mif4,2] * self.yu[0,2] + -1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,1] * self.yl[mif1,mif2] * self.yquPhibar[mif4,0] * self.yu[1,0] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,1] * self.yl[mif1,mif2] * self.yquPhibar[mif4,0] * self.yu[1,0] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,1] * self.yl[mif1,mif2] * self.yquPhibar[mif4,0] * self.yu[1,0] + -1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,1] * self.yl[mif1,mif2] * self.yquPhibar[mif4,1] * self.yu[1,1] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,1] * self.yl[mif1,mif2] * self.yquPhibar[mif4,1] * self.yu[1,1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,1] * self.yl[mif1,mif2] * self.yquPhibar[mif4,1] * self.yu[1,1] + -1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,1] * self.yl[mif1,mif2] * self.yquPhibar[mif4,2] * self.yu[1,2] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,1] * self.yl[mif1,mif2] * self.yquPhibar[mif4,2] * self.yu[1,2] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,1] * self.yl[mif1,mif2] * self.yquPhibar[mif4,2] * self.yu[1,2] + -1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,2] * self.yl[mif1,mif2] * self.yquPhibar[mif4,0] * self.yu[2,0] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,2] * self.yl[mif1,mif2] * self.yquPhibar[mif4,0] * self.yu[2,0] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,2] * self.yl[mif1,mif2] * self.yquPhibar[mif4,0] * self.yu[2,0] + -1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,2] * self.yl[mif1,mif2] * self.yquPhibar[mif4,1] * self.yu[2,1] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,2] * self.yl[mif1,mif2] * self.yquPhibar[mif4,1] * self.yu[2,1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,2] * self.yl[mif1,mif2] * self.yquPhibar[mif4,1] * self.yu[2,1] + -1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,2] * self.yl[mif1,mif2] * self.yquPhibar[mif4,2] * self.yu[2,2] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,2] * self.yl[mif1,mif2] * self.yquPhibar[mif4,2] * self.yu[2,2] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,2] * self.yl[mif1,mif2] * self.yquPhibar[mif4,2] * self.yu[2,2])

    def alphaOlequ1(self, mif1,mif2,mif3,mif4):
        return (1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.ydqPhibar[0,mif3] * self.yl[mif1,mif2] * self.yquPhi[0,mif4] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.ydqPhibar[0,mif3] * self.yl[mif1,mif2] * self.yquPhi[0,mif4] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[0,0] * self.ydqPhibar[0,mif3] * self.yl[mif1,mif2] * self.yquPhi[0,mif4] + 1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.ydqPhibar[1,mif3] * self.yl[mif1,mif2] * self.yquPhi[0,mif4] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.ydqPhibar[1,mif3] * self.yl[mif1,mif2] * self.yquPhi[0,mif4] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[0,1] * self.ydqPhibar[1,mif3] * self.yl[mif1,mif2] * self.yquPhi[0,mif4] + 1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.ydqPhibar[2,mif3] * self.yl[mif1,mif2] * self.yquPhi[0,mif4] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.ydqPhibar[2,mif3] * self.yl[mif1,mif2] * self.yquPhi[0,mif4] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[0,2] * self.ydqPhibar[2,mif3] * self.yl[mif1,mif2] * self.yquPhi[0,mif4] + 1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.ydqPhibar[0,mif3] * self.yl[mif1,mif2] * self.yquPhi[1,mif4] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.ydqPhibar[0,mif3] * self.yl[mif1,mif2] * self.yquPhi[1,mif4] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[1,0] * self.ydqPhibar[0,mif3] * self.yl[mif1,mif2] * self.yquPhi[1,mif4] + 1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.ydqPhibar[1,mif3] * self.yl[mif1,mif2] * self.yquPhi[1,mif4] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.ydqPhibar[1,mif3] * self.yl[mif1,mif2] * self.yquPhi[1,mif4] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[1,1] * self.ydqPhibar[1,mif3] * self.yl[mif1,mif2] * self.yquPhi[1,mif4] + 1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.ydqPhibar[2,mif3] * self.yl[mif1,mif2] * self.yquPhi[1,mif4] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.ydqPhibar[2,mif3] * self.yl[mif1,mif2] * self.yquPhi[1,mif4] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[1,2] * self.ydqPhibar[2,mif3] * self.yl[mif1,mif2] * self.yquPhi[1,mif4] + 1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.ydqPhibar[0,mif3] * self.yl[mif1,mif2] * self.yquPhi[2,mif4] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.ydqPhibar[0,mif3] * self.yl[mif1,mif2] * self.yquPhi[2,mif4] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[2,0] * self.ydqPhibar[0,mif3] * self.yl[mif1,mif2] * self.yquPhi[2,mif4] + 1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.ydqPhibar[1,mif3] * self.yl[mif1,mif2] * self.yquPhi[2,mif4] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.ydqPhibar[1,mif3] * self.yl[mif1,mif2] * self.yquPhi[2,mif4] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[2,1] * self.ydqPhibar[1,mif3] * self.yl[mif1,mif2] * self.yquPhi[2,mif4] + 1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.ydqPhibar[2,mif3] * self.yl[mif1,mif2] * self.yquPhi[2,mif4] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.ydqPhibar[2,mif3] * self.yl[mif1,mif2] * self.yquPhi[2,mif4] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[2,2] * self.ydqPhibar[2,mif3] * self.yl[mif1,mif2] * self.yquPhi[2,mif4])

    def alphaOlequ3(self, mif1,mif2,mif3,mif4):
        return 0

    def alphaOll(self, mif1,mif2,mif3,mif4):
        return (-1/480 * (self.g2)**(4) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.kronecker_delta(mif2,mif3) + -1/960 * (self.g1)**(4) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 1/960 * (self.g2)**(4) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4))

    def alphaOlq1(self, mif1,mif2,mif3,mif4):
        return (1/1440 * (self.g1)**(4) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -19/2592 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.ydqPhi[0,mif4] * self.ydqPhibar[0,mif3] + -1/216 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.ydqPhi[0,mif4] * self.ydqPhibar[0,mif3] + 1/216 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[0,mif4] * self.ydqPhibar[0,mif3] + -19/2592 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.ydqPhi[1,mif4] * self.ydqPhibar[1,mif3] + -1/216 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.ydqPhi[1,mif4] * self.ydqPhibar[1,mif3] + 1/216 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[1,mif4] * self.ydqPhibar[1,mif3] + -19/2592 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.ydqPhi[2,mif4] * self.ydqPhibar[2,mif3] + -1/216 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.ydqPhi[2,mif4] * self.ydqPhibar[2,mif3] + 1/216 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[2,mif4] * self.ydqPhibar[2,mif3] + 35/2592 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yquPhi[mif3,0] * self.yquPhibar[mif4,0] + 1/108 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yquPhi[mif3,0] * self.yquPhibar[mif4,0] + -1/108 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif3,0] * self.yquPhibar[mif4,0] + 35/2592 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yquPhi[mif3,1] * self.yquPhibar[mif4,1] + 1/108 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yquPhi[mif3,1] * self.yquPhibar[mif4,1] + -1/108 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif3,1] * self.yquPhibar[mif4,1] + 35/2592 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yquPhi[mif3,2] * self.yquPhibar[mif4,2] + 1/108 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yquPhi[mif3,2] * self.yquPhibar[mif4,2] + -1/108 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif3,2] * self.yquPhibar[mif4,2])

    def alphaOlq3(self, mif1,mif2,mif3,mif4):
        return (-1/480 * (self.g2)**(4) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 1/864 * (self.g2)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.ydqPhi[0,mif4] * self.ydqPhibar[0,mif3] + 1/864 * (self.g2)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.ydqPhi[1,mif4] * self.ydqPhibar[1,mif3] + 1/864 * (self.g2)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.ydqPhi[2,mif4] * self.ydqPhibar[2,mif3] + 1/864 * (self.g2)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yquPhi[mif3,0] * self.yquPhibar[mif4,0] + 1/864 * (self.g2)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yquPhi[mif3,1] * self.yquPhibar[mif4,1] + 1/864 * (self.g2)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yquPhi[mif3,2] * self.yquPhibar[mif4,2])

    def alphaOlu(self, mif1,mif2,mif3,mif4):
        return (1/360 * (self.g1)**(4) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 5/1296 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yquPhi[0,mif4] * self.yquPhibar[0,mif3] + 1/216 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yquPhi[0,mif4] * self.yquPhibar[0,mif3] + -1/216 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[0,mif4] * self.yquPhibar[0,mif3] + 5/1296 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yquPhi[1,mif4] * self.yquPhibar[1,mif3] + 1/216 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yquPhi[1,mif4] * self.yquPhibar[1,mif3] + -1/216 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[1,mif4] * self.yquPhibar[1,mif3] + 5/1296 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yquPhi[2,mif4] * self.yquPhibar[2,mif3] + 1/216 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yquPhi[2,mif4] * self.yquPhibar[2,mif3] + -1/216 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[2,mif4] * self.yquPhibar[2,mif3])

    def alphaOqd1(self, mif1,mif2,mif3,mif4):
        return (1/2160 * (self.g1)**(4) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -19/3888 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.ydqPhi[0,mif2] * self.ydqPhibar[0,mif1] + -1/324 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.ydqPhi[0,mif2] * self.ydqPhibar[0,mif1] + 1/324 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[0,mif2] * self.ydqPhibar[0,mif1] + -19/3888 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.ydqPhi[1,mif2] * self.ydqPhibar[1,mif1] + -1/324 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.ydqPhi[1,mif2] * self.ydqPhibar[1,mif1] + 1/324 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[1,mif2] * self.ydqPhibar[1,mif1] + -19/3888 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.ydqPhi[2,mif2] * self.ydqPhibar[2,mif1] + -1/324 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.ydqPhi[2,mif2] * self.ydqPhibar[2,mif1] + 1/324 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[2,mif2] * self.ydqPhibar[2,mif1] + -11/3888 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,0] + -1/648 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,0] + 1/648 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,0] + 1/288 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif2] * self.ydqPhi[mif3,0] * self.ydqPhibar[0,mif1] * self.ydqPhibar[mif4,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,0] * self.ydqPhi[mif3,mif2] * self.ydqPhibar[0,mif1] * self.ydqPhibar[mif4,0] + 1/72 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,0] * self.ydqPhi[mif3,mif2] * self.ydqPhibar[0,mif1] * self.ydqPhibar[mif4,0] + -1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[0,0] * self.ydqPhi[mif3,mif2] * self.ydqPhibar[0,mif1] * self.ydqPhibar[mif4,0] + 1/288 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,mif2] * self.ydqPhi[mif3,0] * self.ydqPhibar[1,mif1] * self.ydqPhibar[mif4,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,0] * self.ydqPhi[mif3,mif2] * self.ydqPhibar[1,mif1] * self.ydqPhibar[mif4,0] + 1/72 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,0] * self.ydqPhi[mif3,mif2] * self.ydqPhibar[1,mif1] * self.ydqPhibar[mif4,0] + -1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[1,0] * self.ydqPhi[mif3,mif2] * self.ydqPhibar[1,mif1] * self.ydqPhibar[mif4,0] + 1/288 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,mif2] * self.ydqPhi[mif3,0] * self.ydqPhibar[2,mif1] * self.ydqPhibar[mif4,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,0] * self.ydqPhi[mif3,mif2] * self.ydqPhibar[2,mif1] * self.ydqPhibar[mif4,0] + 1/72 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,0] * self.ydqPhi[mif3,mif2] * self.ydqPhibar[2,mif1] * self.ydqPhibar[mif4,0] + -1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[2,0] * self.ydqPhi[mif3,mif2] * self.ydqPhibar[2,mif1] * self.ydqPhibar[mif4,0] + -11/3888 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,1] + -1/648 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,1] + 1/648 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,1] + 1/288 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif2] * self.ydqPhi[mif3,1] * self.ydqPhibar[0,mif1] * self.ydqPhibar[mif4,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,1] * self.ydqPhi[mif3,mif2] * self.ydqPhibar[0,mif1] * self.ydqPhibar[mif4,1] + 1/72 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,1] * self.ydqPhi[mif3,mif2] * self.ydqPhibar[0,mif1] * self.ydqPhibar[mif4,1] + -1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[0,1] * self.ydqPhi[mif3,mif2] * self.ydqPhibar[0,mif1] * self.ydqPhibar[mif4,1] + 1/288 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,mif2] * self.ydqPhi[mif3,1] * self.ydqPhibar[1,mif1] * self.ydqPhibar[mif4,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,1] * self.ydqPhi[mif3,mif2] * self.ydqPhibar[1,mif1] * self.ydqPhibar[mif4,1] + 1/72 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,1] * self.ydqPhi[mif3,mif2] * self.ydqPhibar[1,mif1] * self.ydqPhibar[mif4,1] + -1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[1,1] * self.ydqPhi[mif3,mif2] * self.ydqPhibar[1,mif1] * self.ydqPhibar[mif4,1] + 1/288 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,mif2] * self.ydqPhi[mif3,1] * self.ydqPhibar[2,mif1] * self.ydqPhibar[mif4,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,1] * self.ydqPhi[mif3,mif2] * self.ydqPhibar[2,mif1] * self.ydqPhibar[mif4,1] + 1/72 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,1] * self.ydqPhi[mif3,mif2] * self.ydqPhibar[2,mif1] * self.ydqPhibar[mif4,1] + -1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[2,1] * self.ydqPhi[mif3,mif2] * self.ydqPhibar[2,mif1] * self.ydqPhibar[mif4,1] + -11/3888 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,2] + -1/648 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,2] + 1/648 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,2] + 1/288 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif2] * self.ydqPhi[mif3,2] * self.ydqPhibar[0,mif1] * self.ydqPhibar[mif4,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,2] * self.ydqPhi[mif3,mif2] * self.ydqPhibar[0,mif1] * self.ydqPhibar[mif4,2] + 1/72 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,2] * self.ydqPhi[mif3,mif2] * self.ydqPhibar[0,mif1] * self.ydqPhibar[mif4,2] + -1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[0,2] * self.ydqPhi[mif3,mif2] * self.ydqPhibar[0,mif1] * self.ydqPhibar[mif4,2] + 1/288 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,mif2] * self.ydqPhi[mif3,2] * self.ydqPhibar[1,mif1] * self.ydqPhibar[mif4,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,2] * self.ydqPhi[mif3,mif2] * self.ydqPhibar[1,mif1] * self.ydqPhibar[mif4,2] + 1/72 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,2] * self.ydqPhi[mif3,mif2] * self.ydqPhibar[1,mif1] * self.ydqPhibar[mif4,2] + -1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[1,2] * self.ydqPhi[mif3,mif2] * self.ydqPhibar[1,mif1] * self.ydqPhibar[mif4,2] + 1/288 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,mif2] * self.ydqPhi[mif3,2] * self.ydqPhibar[2,mif1] * self.ydqPhibar[mif4,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,2] * self.ydqPhi[mif3,mif2] * self.ydqPhibar[2,mif1] * self.ydqPhibar[mif4,2] + 1/72 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,2] * self.ydqPhi[mif3,mif2] * self.ydqPhibar[2,mif1] * self.ydqPhibar[mif4,2] + -1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[2,2] * self.ydqPhi[mif3,mif2] * self.ydqPhibar[2,mif1] * self.ydqPhibar[mif4,2] + -2/9 * (self.MPhi)**(-2) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,mif1] + -1/5184 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,mif1] + -1/1728 * self.epsilonbar * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,mif1] + -1/192 * (self.g2)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,mif1] + -1/64 * self.epsilonbar * (self.g2)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,mif1] + -7/432 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,mif1] + -7/144 * self.epsilonbar * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,mif1] + -1/2592 * self.epsilonbar * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,mif1] + -1/96 * self.epsilonbar * (self.g2)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,mif1] + -7/216 * self.epsilonbar * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,mif1] + 1/2592 * self.epsilonbar * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,mif1] + 1/96 * self.epsilonbar * (self.g2)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,mif1] + 7/216 * self.epsilonbar * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,mif1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif2] * self.ydqPhi[mif3,0] * self.ydqPhibar[0,0] * self.ydqPhibar[mif4,mif1] + 1/72 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif2] * self.ydqPhi[mif3,0] * self.ydqPhibar[0,0] * self.ydqPhibar[mif4,mif1] + -1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[0,mif2] * self.ydqPhi[mif3,0] * self.ydqPhibar[0,0] * self.ydqPhibar[mif4,mif1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif2] * self.ydqPhi[mif3,1] * self.ydqPhibar[0,1] * self.ydqPhibar[mif4,mif1] + 1/72 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif2] * self.ydqPhi[mif3,1] * self.ydqPhibar[0,1] * self.ydqPhibar[mif4,mif1] + -1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[0,mif2] * self.ydqPhi[mif3,1] * self.ydqPhibar[0,1] * self.ydqPhibar[mif4,mif1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif2] * self.ydqPhi[mif3,2] * self.ydqPhibar[0,2] * self.ydqPhibar[mif4,mif1] + 1/72 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif2] * self.ydqPhi[mif3,2] * self.ydqPhibar[0,2] * self.ydqPhibar[mif4,mif1] + -1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[0,mif2] * self.ydqPhi[mif3,2] * self.ydqPhibar[0,2] * self.ydqPhibar[mif4,mif1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,mif2] * self.ydqPhi[mif3,0] * self.ydqPhibar[1,0] * self.ydqPhibar[mif4,mif1] + 1/72 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,mif2] * self.ydqPhi[mif3,0] * self.ydqPhibar[1,0] * self.ydqPhibar[mif4,mif1] + -1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[1,mif2] * self.ydqPhi[mif3,0] * self.ydqPhibar[1,0] * self.ydqPhibar[mif4,mif1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,mif2] * self.ydqPhi[mif3,1] * self.ydqPhibar[1,1] * self.ydqPhibar[mif4,mif1] + 1/72 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,mif2] * self.ydqPhi[mif3,1] * self.ydqPhibar[1,1] * self.ydqPhibar[mif4,mif1] + -1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[1,mif2] * self.ydqPhi[mif3,1] * self.ydqPhibar[1,1] * self.ydqPhibar[mif4,mif1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,mif2] * self.ydqPhi[mif3,2] * self.ydqPhibar[1,2] * self.ydqPhibar[mif4,mif1] + 1/72 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,mif2] * self.ydqPhi[mif3,2] * self.ydqPhibar[1,2] * self.ydqPhibar[mif4,mif1] + -1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[1,mif2] * self.ydqPhi[mif3,2] * self.ydqPhibar[1,2] * self.ydqPhibar[mif4,mif1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,mif2] * self.ydqPhi[mif3,0] * self.ydqPhibar[2,0] * self.ydqPhibar[mif4,mif1] + 1/72 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,mif2] * self.ydqPhi[mif3,0] * self.ydqPhibar[2,0] * self.ydqPhibar[mif4,mif1] + -1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[2,mif2] * self.ydqPhi[mif3,0] * self.ydqPhibar[2,0] * self.ydqPhibar[mif4,mif1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,mif2] * self.ydqPhi[mif3,1] * self.ydqPhibar[2,1] * self.ydqPhibar[mif4,mif1] + 1/72 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,mif2] * self.ydqPhi[mif3,1] * self.ydqPhibar[2,1] * self.ydqPhibar[mif4,mif1] + -1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[2,mif2] * self.ydqPhi[mif3,1] * self.ydqPhibar[2,1] * self.ydqPhibar[mif4,mif1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,mif2] * self.ydqPhi[mif3,2] * self.ydqPhibar[2,2] * self.ydqPhibar[mif4,mif1] + 1/72 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,mif2] * self.ydqPhi[mif3,2] * self.ydqPhibar[2,2] * self.ydqPhibar[mif4,mif1] + -1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[2,mif2] * self.ydqPhi[mif3,2] * self.ydqPhibar[2,2] * self.ydqPhibar[mif4,mif1] + 1/216 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,0] * self.yquPhi[mif1,0] * self.yquPhibar[0,0] + 1/144 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,0] * self.yquPhi[mif1,0] * self.yquPhibar[0,0] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,0] * self.yquPhi[mif1,0] * self.yquPhibar[0,0] + 1/216 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,0] * self.yquPhi[mif1,1] * self.yquPhibar[0,1] + 1/144 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,0] * self.yquPhi[mif1,1] * self.yquPhibar[0,1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,0] * self.yquPhi[mif1,1] * self.yquPhibar[0,1] + 1/216 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,0] * self.yquPhi[mif1,2] * self.yquPhibar[0,2] + 1/144 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,0] * self.yquPhi[mif1,2] * self.yquPhibar[0,2] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,0] * self.yquPhi[mif1,2] * self.yquPhibar[0,2] + 1/216 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,1] * self.yquPhi[mif1,0] * self.yquPhibar[1,0] + 1/144 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,1] * self.yquPhi[mif1,0] * self.yquPhibar[1,0] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,1] * self.yquPhi[mif1,0] * self.yquPhibar[1,0] + 1/216 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,1] * self.yquPhi[mif1,1] * self.yquPhibar[1,1] + 1/144 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,1] * self.yquPhi[mif1,1] * self.yquPhibar[1,1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,1] * self.yquPhi[mif1,1] * self.yquPhibar[1,1] + 1/216 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,1] * self.yquPhi[mif1,2] * self.yquPhibar[1,2] + 1/144 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,1] * self.yquPhi[mif1,2] * self.yquPhibar[1,2] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,1] * self.yquPhi[mif1,2] * self.yquPhibar[1,2] + 1/216 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,2] * self.yquPhi[mif1,0] * self.yquPhibar[2,0] + 1/144 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,2] * self.yquPhi[mif1,0] * self.yquPhibar[2,0] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,2] * self.yquPhi[mif1,0] * self.yquPhibar[2,0] + 1/216 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,2] * self.yquPhi[mif1,1] * self.yquPhibar[2,1] + 1/144 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,2] * self.yquPhi[mif1,1] * self.yquPhibar[2,1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,2] * self.yquPhi[mif1,1] * self.yquPhibar[2,1] + 1/216 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,2] * self.yquPhi[mif1,2] * self.yquPhibar[2,2] + 1/144 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,2] * self.yquPhi[mif1,2] * self.yquPhibar[2,2] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,2] * self.yquPhi[mif1,2] * self.yquPhibar[2,2] + 1/216 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,mif1] * self.yquPhi[0,0] * self.yquPhibar[mif2,0] + 1/144 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,mif1] * self.yquPhi[0,0] * self.yquPhibar[mif2,0] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,mif1] * self.yquPhi[0,0] * self.yquPhibar[mif2,0] + 1/216 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,mif1] * self.yquPhi[1,0] * self.yquPhibar[mif2,0] + 1/144 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,mif1] * self.yquPhi[1,0] * self.yquPhibar[mif2,0] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,mif1] * self.yquPhi[1,0] * self.yquPhibar[mif2,0] + 1/216 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,mif1] * self.yquPhi[2,0] * self.yquPhibar[mif2,0] + 1/144 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,mif1] * self.yquPhi[2,0] * self.yquPhibar[mif2,0] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,mif1] * self.yquPhi[2,0] * self.yquPhibar[mif2,0] + 35/3888 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yquPhi[mif1,0] * self.yquPhibar[mif2,0] + 1/162 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yquPhi[mif1,0] * self.yquPhibar[mif2,0] + -1/162 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,0] * self.yquPhibar[mif2,0] + -1/288 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,0] * self.yquPhi[mif1,0] * self.yquPhibar[mif2,0] + -1/288 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,1] * self.yquPhi[mif1,0] * self.yquPhibar[mif2,0] + -1/288 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,2] * self.yquPhi[mif1,0] * self.yquPhibar[mif2,0] + 1/216 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,mif1] * self.yquPhi[0,1] * self.yquPhibar[mif2,1] + 1/144 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,mif1] * self.yquPhi[0,1] * self.yquPhibar[mif2,1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,mif1] * self.yquPhi[0,1] * self.yquPhibar[mif2,1] + 1/216 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,mif1] * self.yquPhi[1,1] * self.yquPhibar[mif2,1] + 1/144 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,mif1] * self.yquPhi[1,1] * self.yquPhibar[mif2,1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,mif1] * self.yquPhi[1,1] * self.yquPhibar[mif2,1] + 1/216 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,mif1] * self.yquPhi[2,1] * self.yquPhibar[mif2,1] + 1/144 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,mif1] * self.yquPhi[2,1] * self.yquPhibar[mif2,1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,mif1] * self.yquPhi[2,1] * self.yquPhibar[mif2,1] + 35/3888 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yquPhi[mif1,1] * self.yquPhibar[mif2,1] + 1/162 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yquPhi[mif1,1] * self.yquPhibar[mif2,1] + -1/162 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,1] * self.yquPhibar[mif2,1] + -1/288 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,0] * self.yquPhi[mif1,1] * self.yquPhibar[mif2,1] + -1/288 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,1] * self.yquPhi[mif1,1] * self.yquPhibar[mif2,1] + -1/288 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,2] * self.yquPhi[mif1,1] * self.yquPhibar[mif2,1] + 1/216 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,mif1] * self.yquPhi[0,2] * self.yquPhibar[mif2,2] + 1/144 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,mif1] * self.yquPhi[0,2] * self.yquPhibar[mif2,2] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,mif1] * self.yquPhi[0,2] * self.yquPhibar[mif2,2] + 1/216 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,mif1] * self.yquPhi[1,2] * self.yquPhibar[mif2,2] + 1/144 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,mif1] * self.yquPhi[1,2] * self.yquPhibar[mif2,2] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,mif1] * self.yquPhi[1,2] * self.yquPhibar[mif2,2] + 1/216 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,mif1] * self.yquPhi[2,2] * self.yquPhibar[mif2,2] + 1/144 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,mif1] * self.yquPhi[2,2] * self.yquPhibar[mif2,2] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,mif1] * self.yquPhi[2,2] * self.yquPhibar[mif2,2] + 35/3888 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yquPhi[mif1,2] * self.yquPhibar[mif2,2] + 1/162 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yquPhi[mif1,2] * self.yquPhibar[mif2,2] + -1/162 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,2] * self.yquPhibar[mif2,2] + -1/288 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,0] * self.yquPhi[mif1,2] * self.yquPhibar[mif2,2] + -1/288 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,1] * self.yquPhi[mif1,2] * self.yquPhibar[mif2,2] + -1/288 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,2] * self.yquPhi[mif1,2] * self.yquPhibar[mif2,2] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.ydqPhi[mif3,0] * self.yquPhibar[mif2,0] * self.yu[0,0] + 1/144 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.ydqPhi[mif3,0] * self.yquPhibar[mif2,0] * self.yu[0,0] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif4] * self.ydqPhi[mif3,0] * self.yquPhibar[mif2,0] * self.yu[0,0] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.ydqPhi[mif3,0] * self.yquPhibar[mif2,1] * self.yu[0,1] + 1/144 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.ydqPhi[mif3,0] * self.yquPhibar[mif2,1] * self.yu[0,1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif4] * self.ydqPhi[mif3,0] * self.yquPhibar[mif2,1] * self.yu[0,1] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.ydqPhi[mif3,0] * self.yquPhibar[mif2,2] * self.yu[0,2] + 1/144 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.ydqPhi[mif3,0] * self.yquPhibar[mif2,2] * self.yu[0,2] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif4] * self.ydqPhi[mif3,0] * self.yquPhibar[mif2,2] * self.yu[0,2] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.ydqPhi[mif3,1] * self.yquPhibar[mif2,0] * self.yu[1,0] + 1/144 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.ydqPhi[mif3,1] * self.yquPhibar[mif2,0] * self.yu[1,0] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif4] * self.ydqPhi[mif3,1] * self.yquPhibar[mif2,0] * self.yu[1,0] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.ydqPhi[mif3,1] * self.yquPhibar[mif2,1] * self.yu[1,1] + 1/144 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.ydqPhi[mif3,1] * self.yquPhibar[mif2,1] * self.yu[1,1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif4] * self.ydqPhi[mif3,1] * self.yquPhibar[mif2,1] * self.yu[1,1] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.ydqPhi[mif3,1] * self.yquPhibar[mif2,2] * self.yu[1,2] + 1/144 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.ydqPhi[mif3,1] * self.yquPhibar[mif2,2] * self.yu[1,2] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif4] * self.ydqPhi[mif3,1] * self.yquPhibar[mif2,2] * self.yu[1,2] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.ydqPhi[mif3,2] * self.yquPhibar[mif2,0] * self.yu[2,0] + 1/144 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.ydqPhi[mif3,2] * self.yquPhibar[mif2,0] * self.yu[2,0] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif4] * self.ydqPhi[mif3,2] * self.yquPhibar[mif2,0] * self.yu[2,0] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.ydqPhi[mif3,2] * self.yquPhibar[mif2,1] * self.yu[2,1] + 1/144 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.ydqPhi[mif3,2] * self.yquPhibar[mif2,1] * self.yu[2,1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif4] * self.ydqPhi[mif3,2] * self.yquPhibar[mif2,1] * self.yu[2,1] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.ydqPhi[mif3,2] * self.yquPhibar[mif2,2] * self.yu[2,2] + 1/144 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.ydqPhi[mif3,2] * self.yquPhibar[mif2,2] * self.yu[2,2] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif4] * self.ydqPhi[mif3,2] * self.yquPhibar[mif2,2] * self.yu[2,2] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,mif3] * self.ydqPhibar[mif4,0] * self.yquPhi[mif1,0] * self.yubar[0,0] + 1/144 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,mif3] * self.ydqPhibar[mif4,0] * self.yquPhi[mif1,0] * self.yubar[0,0] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,mif3] * self.ydqPhibar[mif4,0] * self.yquPhi[mif1,0] * self.yubar[0,0] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,mif3] * self.ydqPhibar[mif4,0] * self.yquPhi[mif1,1] * self.yubar[0,1] + 1/144 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,mif3] * self.ydqPhibar[mif4,0] * self.yquPhi[mif1,1] * self.yubar[0,1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,mif3] * self.ydqPhibar[mif4,0] * self.yquPhi[mif1,1] * self.yubar[0,1] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,mif3] * self.ydqPhibar[mif4,0] * self.yquPhi[mif1,2] * self.yubar[0,2] + 1/144 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,mif3] * self.ydqPhibar[mif4,0] * self.yquPhi[mif1,2] * self.yubar[0,2] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,mif3] * self.ydqPhibar[mif4,0] * self.yquPhi[mif1,2] * self.yubar[0,2] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,mif3] * self.ydqPhibar[mif4,1] * self.yquPhi[mif1,0] * self.yubar[1,0] + 1/144 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,mif3] * self.ydqPhibar[mif4,1] * self.yquPhi[mif1,0] * self.yubar[1,0] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,mif3] * self.ydqPhibar[mif4,1] * self.yquPhi[mif1,0] * self.yubar[1,0] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,mif3] * self.ydqPhibar[mif4,1] * self.yquPhi[mif1,1] * self.yubar[1,1] + 1/144 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,mif3] * self.ydqPhibar[mif4,1] * self.yquPhi[mif1,1] * self.yubar[1,1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,mif3] * self.ydqPhibar[mif4,1] * self.yquPhi[mif1,1] * self.yubar[1,1] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,mif3] * self.ydqPhibar[mif4,1] * self.yquPhi[mif1,2] * self.yubar[1,2] + 1/144 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,mif3] * self.ydqPhibar[mif4,1] * self.yquPhi[mif1,2] * self.yubar[1,2] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,mif3] * self.ydqPhibar[mif4,1] * self.yquPhi[mif1,2] * self.yubar[1,2] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,mif3] * self.ydqPhibar[mif4,2] * self.yquPhi[mif1,0] * self.yubar[2,0] + 1/144 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,mif3] * self.ydqPhibar[mif4,2] * self.yquPhi[mif1,0] * self.yubar[2,0] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,mif3] * self.ydqPhibar[mif4,2] * self.yquPhi[mif1,0] * self.yubar[2,0] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,mif3] * self.ydqPhibar[mif4,2] * self.yquPhi[mif1,1] * self.yubar[2,1] + 1/144 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,mif3] * self.ydqPhibar[mif4,2] * self.yquPhi[mif1,1] * self.yubar[2,1] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,mif3] * self.ydqPhibar[mif4,2] * self.yquPhi[mif1,1] * self.yubar[2,1] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,mif3] * self.ydqPhibar[mif4,2] * self.yquPhi[mif1,2] * self.yubar[2,2] + 1/144 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,mif3] * self.ydqPhibar[mif4,2] * self.yquPhi[mif1,2] * self.yubar[2,2] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,mif3] * self.ydqPhibar[mif4,2] * self.yquPhi[mif1,2] * self.yubar[2,2])

    def alphaOqd8(self, mif1,mif2,mif3,mif4):
        return (-1/80 * (self.g3)**(4) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 17/1728 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.ydqPhi[0,mif2] * self.ydqPhibar[0,mif1] + 1/288 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.ydqPhi[0,mif2] * self.ydqPhibar[0,mif1] + -1/288 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[0,mif2] * self.ydqPhibar[0,mif1] + -5/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[mif2,0] * self.ydqPhi[mif3,0] * self.ydqPhibar[0,mif1] + -1/64 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[mif2,0] * self.ydqPhi[mif3,0] * self.ydqPhibar[0,mif1] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,mif4] * self.ydbar[mif2,0] * self.ydqPhi[mif3,0] * self.ydqPhibar[0,mif1] + -5/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[mif2,0] * self.ydqPhi[mif3,1] * self.ydqPhibar[0,mif1] + -1/64 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[mif2,0] * self.ydqPhi[mif3,1] * self.ydqPhibar[0,mif1] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,mif4] * self.ydbar[mif2,0] * self.ydqPhi[mif3,1] * self.ydqPhibar[0,mif1] + -5/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[mif2,0] * self.ydqPhi[mif3,2] * self.ydqPhibar[0,mif1] + -1/64 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[mif2,0] * self.ydqPhi[mif3,2] * self.ydqPhibar[0,mif1] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,mif4] * self.ydbar[mif2,0] * self.ydqPhi[mif3,2] * self.ydqPhibar[0,mif1] + 17/1728 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.ydqPhi[1,mif2] * self.ydqPhibar[1,mif1] + 1/288 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.ydqPhi[1,mif2] * self.ydqPhibar[1,mif1] + -1/288 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[1,mif2] * self.ydqPhibar[1,mif1] + -5/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[mif2,1] * self.ydqPhi[mif3,0] * self.ydqPhibar[1,mif1] + -1/64 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[mif2,1] * self.ydqPhi[mif3,0] * self.ydqPhibar[1,mif1] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,mif4] * self.ydbar[mif2,1] * self.ydqPhi[mif3,0] * self.ydqPhibar[1,mif1] + -5/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[mif2,1] * self.ydqPhi[mif3,1] * self.ydqPhibar[1,mif1] + -1/64 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[mif2,1] * self.ydqPhi[mif3,1] * self.ydqPhibar[1,mif1] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,mif4] * self.ydbar[mif2,1] * self.ydqPhi[mif3,1] * self.ydqPhibar[1,mif1] + -5/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[mif2,1] * self.ydqPhi[mif3,2] * self.ydqPhibar[1,mif1] + -1/64 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[mif2,1] * self.ydqPhi[mif3,2] * self.ydqPhibar[1,mif1] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,mif4] * self.ydbar[mif2,1] * self.ydqPhi[mif3,2] * self.ydqPhibar[1,mif1] + 17/1728 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.ydqPhi[2,mif2] * self.ydqPhibar[2,mif1] + 1/288 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.ydqPhi[2,mif2] * self.ydqPhibar[2,mif1] + -1/288 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[2,mif2] * self.ydqPhibar[2,mif1] + -5/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[mif2,2] * self.ydqPhi[mif3,0] * self.ydqPhibar[2,mif1] + -1/64 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[mif2,2] * self.ydqPhi[mif3,0] * self.ydqPhibar[2,mif1] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,mif4] * self.ydbar[mif2,2] * self.ydqPhi[mif3,0] * self.ydqPhibar[2,mif1] + -5/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[mif2,2] * self.ydqPhi[mif3,1] * self.ydqPhibar[2,mif1] + -1/64 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[mif2,2] * self.ydqPhi[mif3,1] * self.ydqPhibar[2,mif1] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,mif4] * self.ydbar[mif2,2] * self.ydqPhi[mif3,1] * self.ydqPhibar[2,mif1] + -5/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[mif2,2] * self.ydqPhi[mif3,2] * self.ydqPhibar[2,mif1] + -1/64 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[mif2,2] * self.ydqPhi[mif3,2] * self.ydqPhibar[2,mif1] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,mif4] * self.ydbar[mif2,2] * self.ydqPhi[mif3,2] * self.ydqPhibar[2,mif1] + -5/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[0,mif3] * self.ydqPhi[0,mif2] * self.ydqPhibar[mif4,0] + -1/64 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[0,mif3] * self.ydqPhi[0,mif2] * self.ydqPhibar[mif4,0] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] * self.ydbar[0,mif3] * self.ydqPhi[0,mif2] * self.ydqPhibar[mif4,0] + -5/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[0,mif3] * self.ydqPhi[1,mif2] * self.ydqPhibar[mif4,0] + -1/64 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[0,mif3] * self.ydqPhi[1,mif2] * self.ydqPhibar[mif4,0] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] * self.ydbar[0,mif3] * self.ydqPhi[1,mif2] * self.ydqPhibar[mif4,0] + -5/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[0,mif3] * self.ydqPhi[2,mif2] * self.ydqPhibar[mif4,0] + -1/64 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[0,mif3] * self.ydqPhi[2,mif2] * self.ydqPhibar[mif4,0] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] * self.ydbar[0,mif3] * self.ydqPhi[2,mif2] * self.ydqPhibar[mif4,0] + 17/864 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,0] + 1/144 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,0] + -1/144 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,0] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif2] * self.ydqPhi[mif3,0] * self.ydqPhibar[0,mif1] * self.ydqPhibar[mif4,0] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,0] * self.ydqPhi[mif3,mif2] * self.ydqPhibar[0,mif1] * self.ydqPhibar[mif4,0] + -1/96 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,0] * self.ydqPhi[mif3,mif2] * self.ydqPhibar[0,mif1] * self.ydqPhibar[mif4,0] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[0,0] * self.ydqPhi[mif3,mif2] * self.ydqPhibar[0,mif1] * self.ydqPhibar[mif4,0] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,mif2] * self.ydqPhi[mif3,0] * self.ydqPhibar[1,mif1] * self.ydqPhibar[mif4,0] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,0] * self.ydqPhi[mif3,mif2] * self.ydqPhibar[1,mif1] * self.ydqPhibar[mif4,0] + -1/96 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,0] * self.ydqPhi[mif3,mif2] * self.ydqPhibar[1,mif1] * self.ydqPhibar[mif4,0] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[1,0] * self.ydqPhi[mif3,mif2] * self.ydqPhibar[1,mif1] * self.ydqPhibar[mif4,0] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,mif2] * self.ydqPhi[mif3,0] * self.ydqPhibar[2,mif1] * self.ydqPhibar[mif4,0] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,0] * self.ydqPhi[mif3,mif2] * self.ydqPhibar[2,mif1] * self.ydqPhibar[mif4,0] + -1/96 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,0] * self.ydqPhi[mif3,mif2] * self.ydqPhibar[2,mif1] * self.ydqPhibar[mif4,0] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[2,0] * self.ydqPhi[mif3,mif2] * self.ydqPhibar[2,mif1] * self.ydqPhibar[mif4,0] + -5/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[1,mif3] * self.ydqPhi[0,mif2] * self.ydqPhibar[mif4,1] + -1/64 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[1,mif3] * self.ydqPhi[0,mif2] * self.ydqPhibar[mif4,1] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] * self.ydbar[1,mif3] * self.ydqPhi[0,mif2] * self.ydqPhibar[mif4,1] + -5/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[1,mif3] * self.ydqPhi[1,mif2] * self.ydqPhibar[mif4,1] + -1/64 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[1,mif3] * self.ydqPhi[1,mif2] * self.ydqPhibar[mif4,1] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] * self.ydbar[1,mif3] * self.ydqPhi[1,mif2] * self.ydqPhibar[mif4,1] + -5/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[1,mif3] * self.ydqPhi[2,mif2] * self.ydqPhibar[mif4,1] + -1/64 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[1,mif3] * self.ydqPhi[2,mif2] * self.ydqPhibar[mif4,1] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] * self.ydbar[1,mif3] * self.ydqPhi[2,mif2] * self.ydqPhibar[mif4,1] + 17/864 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,1] + 1/144 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,1] + -1/144 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,1] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif2] * self.ydqPhi[mif3,1] * self.ydqPhibar[0,mif1] * self.ydqPhibar[mif4,1] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,1] * self.ydqPhi[mif3,mif2] * self.ydqPhibar[0,mif1] * self.ydqPhibar[mif4,1] + -1/96 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,1] * self.ydqPhi[mif3,mif2] * self.ydqPhibar[0,mif1] * self.ydqPhibar[mif4,1] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[0,1] * self.ydqPhi[mif3,mif2] * self.ydqPhibar[0,mif1] * self.ydqPhibar[mif4,1] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,mif2] * self.ydqPhi[mif3,1] * self.ydqPhibar[1,mif1] * self.ydqPhibar[mif4,1] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,1] * self.ydqPhi[mif3,mif2] * self.ydqPhibar[1,mif1] * self.ydqPhibar[mif4,1] + -1/96 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,1] * self.ydqPhi[mif3,mif2] * self.ydqPhibar[1,mif1] * self.ydqPhibar[mif4,1] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[1,1] * self.ydqPhi[mif3,mif2] * self.ydqPhibar[1,mif1] * self.ydqPhibar[mif4,1] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,mif2] * self.ydqPhi[mif3,1] * self.ydqPhibar[2,mif1] * self.ydqPhibar[mif4,1] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,1] * self.ydqPhi[mif3,mif2] * self.ydqPhibar[2,mif1] * self.ydqPhibar[mif4,1] + -1/96 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,1] * self.ydqPhi[mif3,mif2] * self.ydqPhibar[2,mif1] * self.ydqPhibar[mif4,1] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[2,1] * self.ydqPhi[mif3,mif2] * self.ydqPhibar[2,mif1] * self.ydqPhibar[mif4,1] + -5/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[2,mif3] * self.ydqPhi[0,mif2] * self.ydqPhibar[mif4,2] + -1/64 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[2,mif3] * self.ydqPhi[0,mif2] * self.ydqPhibar[mif4,2] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] * self.ydbar[2,mif3] * self.ydqPhi[0,mif2] * self.ydqPhibar[mif4,2] + -5/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[2,mif3] * self.ydqPhi[1,mif2] * self.ydqPhibar[mif4,2] + -1/64 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[2,mif3] * self.ydqPhi[1,mif2] * self.ydqPhibar[mif4,2] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] * self.ydbar[2,mif3] * self.ydqPhi[1,mif2] * self.ydqPhibar[mif4,2] + -5/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[2,mif3] * self.ydqPhi[2,mif2] * self.ydqPhibar[mif4,2] + -1/64 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[2,mif3] * self.ydqPhi[2,mif2] * self.ydqPhibar[mif4,2] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] * self.ydbar[2,mif3] * self.ydqPhi[2,mif2] * self.ydqPhibar[mif4,2] + 17/864 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,2] + 1/144 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,2] + -1/144 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,2] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif2] * self.ydqPhi[mif3,2] * self.ydqPhibar[0,mif1] * self.ydqPhibar[mif4,2] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,2] * self.ydqPhi[mif3,mif2] * self.ydqPhibar[0,mif1] * self.ydqPhibar[mif4,2] + -1/96 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,2] * self.ydqPhi[mif3,mif2] * self.ydqPhibar[0,mif1] * self.ydqPhibar[mif4,2] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[0,2] * self.ydqPhi[mif3,mif2] * self.ydqPhibar[0,mif1] * self.ydqPhibar[mif4,2] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,mif2] * self.ydqPhi[mif3,2] * self.ydqPhibar[1,mif1] * self.ydqPhibar[mif4,2] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,2] * self.ydqPhi[mif3,mif2] * self.ydqPhibar[1,mif1] * self.ydqPhibar[mif4,2] + -1/96 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,2] * self.ydqPhi[mif3,mif2] * self.ydqPhibar[1,mif1] * self.ydqPhibar[mif4,2] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[1,2] * self.ydqPhi[mif3,mif2] * self.ydqPhibar[1,mif1] * self.ydqPhibar[mif4,2] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,mif2] * self.ydqPhi[mif3,2] * self.ydqPhibar[2,mif1] * self.ydqPhibar[mif4,2] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,2] * self.ydqPhi[mif3,mif2] * self.ydqPhibar[2,mif1] * self.ydqPhibar[mif4,2] + -1/96 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,2] * self.ydqPhi[mif3,mif2] * self.ydqPhibar[2,mif1] * self.ydqPhibar[mif4,2] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[2,2] * self.ydqPhi[mif3,mif2] * self.ydqPhibar[2,mif1] * self.ydqPhibar[mif4,2] + 1/6 * (self.MPhi)**(-2) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,mif1] + 1/6912 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,mif1] + 1/2304 * self.epsilonbar * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,mif1] + 1/256 * (self.g2)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,mif1] + 3/256 * self.epsilonbar * (self.g2)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,mif1] + -11/576 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,mif1] + -11/192 * self.epsilonbar * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,mif1] + 1/3456 * self.epsilonbar * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,mif1] + 1/128 * self.epsilonbar * (self.g2)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,mif1] + -11/288 * self.epsilonbar * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,mif1] + -1/3456 * self.epsilonbar * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,mif1] + -1/128 * self.epsilonbar * (self.g2)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,mif1] + 11/288 * self.epsilonbar * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,mif1] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif2] * self.ydqPhi[mif3,0] * self.ydqPhibar[0,0] * self.ydqPhibar[mif4,mif1] + -1/96 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif2] * self.ydqPhi[mif3,0] * self.ydqPhibar[0,0] * self.ydqPhibar[mif4,mif1] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[0,mif2] * self.ydqPhi[mif3,0] * self.ydqPhibar[0,0] * self.ydqPhibar[mif4,mif1] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif2] * self.ydqPhi[mif3,1] * self.ydqPhibar[0,1] * self.ydqPhibar[mif4,mif1] + -1/96 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif2] * self.ydqPhi[mif3,1] * self.ydqPhibar[0,1] * self.ydqPhibar[mif4,mif1] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[0,mif2] * self.ydqPhi[mif3,1] * self.ydqPhibar[0,1] * self.ydqPhibar[mif4,mif1] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif2] * self.ydqPhi[mif3,2] * self.ydqPhibar[0,2] * self.ydqPhibar[mif4,mif1] + -1/96 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif2] * self.ydqPhi[mif3,2] * self.ydqPhibar[0,2] * self.ydqPhibar[mif4,mif1] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[0,mif2] * self.ydqPhi[mif3,2] * self.ydqPhibar[0,2] * self.ydqPhibar[mif4,mif1] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,mif2] * self.ydqPhi[mif3,0] * self.ydqPhibar[1,0] * self.ydqPhibar[mif4,mif1] + -1/96 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,mif2] * self.ydqPhi[mif3,0] * self.ydqPhibar[1,0] * self.ydqPhibar[mif4,mif1] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[1,mif2] * self.ydqPhi[mif3,0] * self.ydqPhibar[1,0] * self.ydqPhibar[mif4,mif1] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,mif2] * self.ydqPhi[mif3,1] * self.ydqPhibar[1,1] * self.ydqPhibar[mif4,mif1] + -1/96 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,mif2] * self.ydqPhi[mif3,1] * self.ydqPhibar[1,1] * self.ydqPhibar[mif4,mif1] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[1,mif2] * self.ydqPhi[mif3,1] * self.ydqPhibar[1,1] * self.ydqPhibar[mif4,mif1] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,mif2] * self.ydqPhi[mif3,2] * self.ydqPhibar[1,2] * self.ydqPhibar[mif4,mif1] + -1/96 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,mif2] * self.ydqPhi[mif3,2] * self.ydqPhibar[1,2] * self.ydqPhibar[mif4,mif1] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[1,mif2] * self.ydqPhi[mif3,2] * self.ydqPhibar[1,2] * self.ydqPhibar[mif4,mif1] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,mif2] * self.ydqPhi[mif3,0] * self.ydqPhibar[2,0] * self.ydqPhibar[mif4,mif1] + -1/96 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,mif2] * self.ydqPhi[mif3,0] * self.ydqPhibar[2,0] * self.ydqPhibar[mif4,mif1] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[2,mif2] * self.ydqPhi[mif3,0] * self.ydqPhibar[2,0] * self.ydqPhibar[mif4,mif1] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,mif2] * self.ydqPhi[mif3,1] * self.ydqPhibar[2,1] * self.ydqPhibar[mif4,mif1] + -1/96 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,mif2] * self.ydqPhi[mif3,1] * self.ydqPhibar[2,1] * self.ydqPhibar[mif4,mif1] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[2,mif2] * self.ydqPhi[mif3,1] * self.ydqPhibar[2,1] * self.ydqPhibar[mif4,mif1] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,mif2] * self.ydqPhi[mif3,2] * self.ydqPhibar[2,2] * self.ydqPhibar[mif4,mif1] + -1/96 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,mif2] * self.ydqPhi[mif3,2] * self.ydqPhibar[2,2] * self.ydqPhibar[mif4,mif1] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[2,mif2] * self.ydqPhi[mif3,2] * self.ydqPhibar[2,2] * self.ydqPhibar[mif4,mif1] + -1/288 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,0] * self.yquPhi[mif1,0] * self.yquPhibar[0,0] + -1/192 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,0] * self.yquPhi[mif1,0] * self.yquPhibar[0,0] + 1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,0] * self.yquPhi[mif1,0] * self.yquPhibar[0,0] + -1/288 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,0] * self.yquPhi[mif1,1] * self.yquPhibar[0,1] + -1/192 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,0] * self.yquPhi[mif1,1] * self.yquPhibar[0,1] + 1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,0] * self.yquPhi[mif1,1] * self.yquPhibar[0,1] + -1/288 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,0] * self.yquPhi[mif1,2] * self.yquPhibar[0,2] + -1/192 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,0] * self.yquPhi[mif1,2] * self.yquPhibar[0,2] + 1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,0] * self.yquPhi[mif1,2] * self.yquPhibar[0,2] + -1/288 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,1] * self.yquPhi[mif1,0] * self.yquPhibar[1,0] + -1/192 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,1] * self.yquPhi[mif1,0] * self.yquPhibar[1,0] + 1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,1] * self.yquPhi[mif1,0] * self.yquPhibar[1,0] + -1/288 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,1] * self.yquPhi[mif1,1] * self.yquPhibar[1,1] + -1/192 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,1] * self.yquPhi[mif1,1] * self.yquPhibar[1,1] + 1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,1] * self.yquPhi[mif1,1] * self.yquPhibar[1,1] + -1/288 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,1] * self.yquPhi[mif1,2] * self.yquPhibar[1,2] + -1/192 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,1] * self.yquPhi[mif1,2] * self.yquPhibar[1,2] + 1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,1] * self.yquPhi[mif1,2] * self.yquPhibar[1,2] + -1/288 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,2] * self.yquPhi[mif1,0] * self.yquPhibar[2,0] + -1/192 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,2] * self.yquPhi[mif1,0] * self.yquPhibar[2,0] + 1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,2] * self.yquPhi[mif1,0] * self.yquPhibar[2,0] + -1/288 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,2] * self.yquPhi[mif1,1] * self.yquPhibar[2,1] + -1/192 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,2] * self.yquPhi[mif1,1] * self.yquPhibar[2,1] + 1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,2] * self.yquPhi[mif1,1] * self.yquPhibar[2,1] + -1/288 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,2] * self.yquPhi[mif1,2] * self.yquPhibar[2,2] + -1/192 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,2] * self.yquPhi[mif1,2] * self.yquPhibar[2,2] + 1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,mif2] * self.ydqPhibar[mif4,2] * self.yquPhi[mif1,2] * self.yquPhibar[2,2] + -1/288 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,mif1] * self.yquPhi[0,0] * self.yquPhibar[mif2,0] + -1/192 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,mif1] * self.yquPhi[0,0] * self.yquPhibar[mif2,0] + 1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,mif1] * self.yquPhi[0,0] * self.yquPhibar[mif2,0] + -1/288 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,mif1] * self.yquPhi[1,0] * self.yquPhibar[mif2,0] + -1/192 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,mif1] * self.yquPhi[1,0] * self.yquPhibar[mif2,0] + 1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,mif1] * self.yquPhi[1,0] * self.yquPhibar[mif2,0] + -1/288 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,mif1] * self.yquPhi[2,0] * self.yquPhibar[mif2,0] + -1/192 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,mif1] * self.yquPhi[2,0] * self.yquPhibar[mif2,0] + 1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,mif1] * self.yquPhi[2,0] * self.yquPhibar[mif2,0] + 17/1728 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yquPhi[mif1,0] * self.yquPhibar[mif2,0] + 1/288 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yquPhi[mif1,0] * self.yquPhibar[mif2,0] + -1/288 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,0] * self.yquPhibar[mif2,0] + -7/384 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,0] * self.yquPhi[mif1,0] * self.yquPhibar[mif2,0] + -7/384 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,1] * self.yquPhi[mif1,0] * self.yquPhibar[mif2,0] + -7/384 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,2] * self.yquPhi[mif1,0] * self.yquPhibar[mif2,0] + -1/288 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,mif1] * self.yquPhi[0,1] * self.yquPhibar[mif2,1] + -1/192 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,mif1] * self.yquPhi[0,1] * self.yquPhibar[mif2,1] + 1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,mif1] * self.yquPhi[0,1] * self.yquPhibar[mif2,1] + -1/288 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,mif1] * self.yquPhi[1,1] * self.yquPhibar[mif2,1] + -1/192 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,mif1] * self.yquPhi[1,1] * self.yquPhibar[mif2,1] + 1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,mif1] * self.yquPhi[1,1] * self.yquPhibar[mif2,1] + -1/288 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,mif1] * self.yquPhi[2,1] * self.yquPhibar[mif2,1] + -1/192 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,mif1] * self.yquPhi[2,1] * self.yquPhibar[mif2,1] + 1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,mif1] * self.yquPhi[2,1] * self.yquPhibar[mif2,1] + 17/1728 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yquPhi[mif1,1] * self.yquPhibar[mif2,1] + 1/288 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yquPhi[mif1,1] * self.yquPhibar[mif2,1] + -1/288 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,1] * self.yquPhibar[mif2,1] + -7/384 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,0] * self.yquPhi[mif1,1] * self.yquPhibar[mif2,1] + -7/384 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,1] * self.yquPhi[mif1,1] * self.yquPhibar[mif2,1] + -7/384 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,2] * self.yquPhi[mif1,1] * self.yquPhibar[mif2,1] + -1/288 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,mif1] * self.yquPhi[0,2] * self.yquPhibar[mif2,2] + -1/192 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,mif1] * self.yquPhi[0,2] * self.yquPhibar[mif2,2] + 1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,mif1] * self.yquPhi[0,2] * self.yquPhibar[mif2,2] + -1/288 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,mif1] * self.yquPhi[1,2] * self.yquPhibar[mif2,2] + -1/192 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,mif1] * self.yquPhi[1,2] * self.yquPhibar[mif2,2] + 1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,mif1] * self.yquPhi[1,2] * self.yquPhibar[mif2,2] + -1/288 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,mif1] * self.yquPhi[2,2] * self.yquPhibar[mif2,2] + -1/192 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,mif1] * self.yquPhi[2,2] * self.yquPhibar[mif2,2] + 1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,mif1] * self.yquPhi[2,2] * self.yquPhibar[mif2,2] + 17/1728 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yquPhi[mif1,2] * self.yquPhibar[mif2,2] + 1/288 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yquPhi[mif1,2] * self.yquPhibar[mif2,2] + -1/288 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,2] * self.yquPhibar[mif2,2] + -7/384 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,0] * self.yquPhi[mif1,2] * self.yquPhibar[mif2,2] + -7/384 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,1] * self.yquPhi[mif1,2] * self.yquPhibar[mif2,2] + -7/384 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,2] * self.yquPhi[mif1,2] * self.yquPhibar[mif2,2] + 1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.ydqPhi[mif3,0] * self.yquPhibar[mif2,0] * self.yu[0,0] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.ydqPhi[mif3,0] * self.yquPhibar[mif2,0] * self.yu[0,0] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif4] * self.ydqPhi[mif3,0] * self.yquPhibar[mif2,0] * self.yu[0,0] + 1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.ydqPhi[mif3,0] * self.yquPhibar[mif2,1] * self.yu[0,1] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.ydqPhi[mif3,0] * self.yquPhibar[mif2,1] * self.yu[0,1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif4] * self.ydqPhi[mif3,0] * self.yquPhibar[mif2,1] * self.yu[0,1] + 1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.ydqPhi[mif3,0] * self.yquPhibar[mif2,2] * self.yu[0,2] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.ydqPhi[mif3,0] * self.yquPhibar[mif2,2] * self.yu[0,2] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif4] * self.ydqPhi[mif3,0] * self.yquPhibar[mif2,2] * self.yu[0,2] + 1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.ydqPhi[mif3,1] * self.yquPhibar[mif2,0] * self.yu[1,0] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.ydqPhi[mif3,1] * self.yquPhibar[mif2,0] * self.yu[1,0] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif4] * self.ydqPhi[mif3,1] * self.yquPhibar[mif2,0] * self.yu[1,0] + 1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.ydqPhi[mif3,1] * self.yquPhibar[mif2,1] * self.yu[1,1] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.ydqPhi[mif3,1] * self.yquPhibar[mif2,1] * self.yu[1,1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif4] * self.ydqPhi[mif3,1] * self.yquPhibar[mif2,1] * self.yu[1,1] + 1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.ydqPhi[mif3,1] * self.yquPhibar[mif2,2] * self.yu[1,2] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.ydqPhi[mif3,1] * self.yquPhibar[mif2,2] * self.yu[1,2] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif4] * self.ydqPhi[mif3,1] * self.yquPhibar[mif2,2] * self.yu[1,2] + 1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.ydqPhi[mif3,2] * self.yquPhibar[mif2,0] * self.yu[2,0] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.ydqPhi[mif3,2] * self.yquPhibar[mif2,0] * self.yu[2,0] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif4] * self.ydqPhi[mif3,2] * self.yquPhibar[mif2,0] * self.yu[2,0] + 1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.ydqPhi[mif3,2] * self.yquPhibar[mif2,1] * self.yu[2,1] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.ydqPhi[mif3,2] * self.yquPhibar[mif2,1] * self.yu[2,1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif4] * self.ydqPhi[mif3,2] * self.yquPhibar[mif2,1] * self.yu[2,1] + 1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.ydqPhi[mif3,2] * self.yquPhibar[mif2,2] * self.yu[2,2] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif4] * self.ydqPhi[mif3,2] * self.yquPhibar[mif2,2] * self.yu[2,2] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,mif4] * self.ydqPhi[mif3,2] * self.yquPhibar[mif2,2] * self.yu[2,2] + -3/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydqPhi[mif3,0] * self.yquPhibar[mif2,0] * self.yu[mif1,0] + -1/64 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydqPhi[mif3,0] * self.yquPhibar[mif2,0] * self.yu[mif1,0] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,mif4] * self.ydqPhi[mif3,0] * self.yquPhibar[mif2,0] * self.yu[mif1,0] + -3/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydqPhi[mif3,1] * self.yquPhibar[mif2,0] * self.yu[mif1,0] + -1/64 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydqPhi[mif3,1] * self.yquPhibar[mif2,0] * self.yu[mif1,0] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,mif4] * self.ydqPhi[mif3,1] * self.yquPhibar[mif2,0] * self.yu[mif1,0] + -3/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydqPhi[mif3,2] * self.yquPhibar[mif2,0] * self.yu[mif1,0] + -1/64 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydqPhi[mif3,2] * self.yquPhibar[mif2,0] * self.yu[mif1,0] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,mif4] * self.ydqPhi[mif3,2] * self.yquPhibar[mif2,0] * self.yu[mif1,0] + -3/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydqPhi[mif3,0] * self.yquPhibar[mif2,1] * self.yu[mif1,1] + -1/64 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydqPhi[mif3,0] * self.yquPhibar[mif2,1] * self.yu[mif1,1] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,mif4] * self.ydqPhi[mif3,0] * self.yquPhibar[mif2,1] * self.yu[mif1,1] + -3/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydqPhi[mif3,1] * self.yquPhibar[mif2,1] * self.yu[mif1,1] + -1/64 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydqPhi[mif3,1] * self.yquPhibar[mif2,1] * self.yu[mif1,1] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,mif4] * self.ydqPhi[mif3,1] * self.yquPhibar[mif2,1] * self.yu[mif1,1] + -3/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydqPhi[mif3,2] * self.yquPhibar[mif2,1] * self.yu[mif1,1] + -1/64 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydqPhi[mif3,2] * self.yquPhibar[mif2,1] * self.yu[mif1,1] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,mif4] * self.ydqPhi[mif3,2] * self.yquPhibar[mif2,1] * self.yu[mif1,1] + -3/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydqPhi[mif3,0] * self.yquPhibar[mif2,2] * self.yu[mif1,2] + -1/64 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydqPhi[mif3,0] * self.yquPhibar[mif2,2] * self.yu[mif1,2] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,mif4] * self.ydqPhi[mif3,0] * self.yquPhibar[mif2,2] * self.yu[mif1,2] + -3/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydqPhi[mif3,1] * self.yquPhibar[mif2,2] * self.yu[mif1,2] + -1/64 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydqPhi[mif3,1] * self.yquPhibar[mif2,2] * self.yu[mif1,2] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,mif4] * self.ydqPhi[mif3,1] * self.yquPhibar[mif2,2] * self.yu[mif1,2] + -3/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydqPhi[mif3,2] * self.yquPhibar[mif2,2] * self.yu[mif1,2] + -1/64 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydqPhi[mif3,2] * self.yquPhibar[mif2,2] * self.yu[mif1,2] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,mif4] * self.ydqPhi[mif3,2] * self.yquPhibar[mif2,2] * self.yu[mif1,2] + 1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,mif3] * self.ydqPhibar[mif4,0] * self.yquPhi[mif1,0] * self.yubar[0,0] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,mif3] * self.ydqPhibar[mif4,0] * self.yquPhi[mif1,0] * self.yubar[0,0] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,mif3] * self.ydqPhibar[mif4,0] * self.yquPhi[mif1,0] * self.yubar[0,0] + 1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,mif3] * self.ydqPhibar[mif4,0] * self.yquPhi[mif1,1] * self.yubar[0,1] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,mif3] * self.ydqPhibar[mif4,0] * self.yquPhi[mif1,1] * self.yubar[0,1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,mif3] * self.ydqPhibar[mif4,0] * self.yquPhi[mif1,1] * self.yubar[0,1] + 1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,mif3] * self.ydqPhibar[mif4,0] * self.yquPhi[mif1,2] * self.yubar[0,2] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,mif3] * self.ydqPhibar[mif4,0] * self.yquPhi[mif1,2] * self.yubar[0,2] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,mif3] * self.ydqPhibar[mif4,0] * self.yquPhi[mif1,2] * self.yubar[0,2] + 1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,mif3] * self.ydqPhibar[mif4,1] * self.yquPhi[mif1,0] * self.yubar[1,0] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,mif3] * self.ydqPhibar[mif4,1] * self.yquPhi[mif1,0] * self.yubar[1,0] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,mif3] * self.ydqPhibar[mif4,1] * self.yquPhi[mif1,0] * self.yubar[1,0] + 1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,mif3] * self.ydqPhibar[mif4,1] * self.yquPhi[mif1,1] * self.yubar[1,1] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,mif3] * self.ydqPhibar[mif4,1] * self.yquPhi[mif1,1] * self.yubar[1,1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,mif3] * self.ydqPhibar[mif4,1] * self.yquPhi[mif1,1] * self.yubar[1,1] + 1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,mif3] * self.ydqPhibar[mif4,1] * self.yquPhi[mif1,2] * self.yubar[1,2] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,mif3] * self.ydqPhibar[mif4,1] * self.yquPhi[mif1,2] * self.yubar[1,2] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,mif3] * self.ydqPhibar[mif4,1] * self.yquPhi[mif1,2] * self.yubar[1,2] + 1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,mif3] * self.ydqPhibar[mif4,2] * self.yquPhi[mif1,0] * self.yubar[2,0] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,mif3] * self.ydqPhibar[mif4,2] * self.yquPhi[mif1,0] * self.yubar[2,0] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,mif3] * self.ydqPhibar[mif4,2] * self.yquPhi[mif1,0] * self.yubar[2,0] + 1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,mif3] * self.ydqPhibar[mif4,2] * self.yquPhi[mif1,1] * self.yubar[2,1] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,mif3] * self.ydqPhibar[mif4,2] * self.yquPhi[mif1,1] * self.yubar[2,1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,mif3] * self.ydqPhibar[mif4,2] * self.yquPhi[mif1,1] * self.yubar[2,1] + 1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,mif3] * self.ydqPhibar[mif4,2] * self.yquPhi[mif1,2] * self.yubar[2,2] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,mif3] * self.ydqPhibar[mif4,2] * self.yquPhi[mif1,2] * self.yubar[2,2] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,mif3] * self.ydqPhibar[mif4,2] * self.yquPhi[mif1,2] * self.yubar[2,2] + -3/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif3] * self.ydqPhibar[mif4,0] * self.yquPhi[mif1,0] * self.yubar[mif2,0] + -1/64 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif3] * self.ydqPhibar[mif4,0] * self.yquPhi[mif1,0] * self.yubar[mif2,0] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[0,mif3] * self.ydqPhibar[mif4,0] * self.yquPhi[mif1,0] * self.yubar[mif2,0] + -3/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif3] * self.ydqPhibar[mif4,1] * self.yquPhi[mif1,0] * self.yubar[mif2,0] + -1/64 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif3] * self.ydqPhibar[mif4,1] * self.yquPhi[mif1,0] * self.yubar[mif2,0] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[1,mif3] * self.ydqPhibar[mif4,1] * self.yquPhi[mif1,0] * self.yubar[mif2,0] + -3/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif3] * self.ydqPhibar[mif4,2] * self.yquPhi[mif1,0] * self.yubar[mif2,0] + -1/64 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif3] * self.ydqPhibar[mif4,2] * self.yquPhi[mif1,0] * self.yubar[mif2,0] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[2,mif3] * self.ydqPhibar[mif4,2] * self.yquPhi[mif1,0] * self.yubar[mif2,0] + -3/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif3] * self.ydqPhibar[mif4,0] * self.yquPhi[mif1,1] * self.yubar[mif2,1] + -1/64 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif3] * self.ydqPhibar[mif4,0] * self.yquPhi[mif1,1] * self.yubar[mif2,1] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[0,mif3] * self.ydqPhibar[mif4,0] * self.yquPhi[mif1,1] * self.yubar[mif2,1] + -3/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif3] * self.ydqPhibar[mif4,1] * self.yquPhi[mif1,1] * self.yubar[mif2,1] + -1/64 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif3] * self.ydqPhibar[mif4,1] * self.yquPhi[mif1,1] * self.yubar[mif2,1] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[1,mif3] * self.ydqPhibar[mif4,1] * self.yquPhi[mif1,1] * self.yubar[mif2,1] + -3/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif3] * self.ydqPhibar[mif4,2] * self.yquPhi[mif1,1] * self.yubar[mif2,1] + -1/64 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif3] * self.ydqPhibar[mif4,2] * self.yquPhi[mif1,1] * self.yubar[mif2,1] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[2,mif3] * self.ydqPhibar[mif4,2] * self.yquPhi[mif1,1] * self.yubar[mif2,1] + -3/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif3] * self.ydqPhibar[mif4,0] * self.yquPhi[mif1,2] * self.yubar[mif2,2] + -1/64 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif3] * self.ydqPhibar[mif4,0] * self.yquPhi[mif1,2] * self.yubar[mif2,2] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[0,mif3] * self.ydqPhibar[mif4,0] * self.yquPhi[mif1,2] * self.yubar[mif2,2] + -3/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif3] * self.ydqPhibar[mif4,1] * self.yquPhi[mif1,2] * self.yubar[mif2,2] + -1/64 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif3] * self.ydqPhibar[mif4,1] * self.yquPhi[mif1,2] * self.yubar[mif2,2] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[1,mif3] * self.ydqPhibar[mif4,1] * self.yquPhi[mif1,2] * self.yubar[mif2,2] + -3/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif3] * self.ydqPhibar[mif4,2] * self.yquPhi[mif1,2] * self.yubar[mif2,2] + -1/64 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif3] * self.ydqPhibar[mif4,2] * self.yquPhi[mif1,2] * self.yubar[mif2,2] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[2,mif3] * self.ydqPhibar[mif4,2] * self.yquPhi[mif1,2] * self.yubar[mif2,2])

    def alphaOqe(self, mif1,mif2,mif3,mif4):
        return (1/720 * (self.g1)**(4) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -19/1296 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.ydqPhi[0,mif2] * self.ydqPhibar[0,mif1] + -1/108 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.ydqPhi[0,mif2] * self.ydqPhibar[0,mif1] + 1/108 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[0,mif2] * self.ydqPhibar[0,mif1] + -19/1296 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.ydqPhi[1,mif2] * self.ydqPhibar[1,mif1] + -1/108 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.ydqPhi[1,mif2] * self.ydqPhibar[1,mif1] + 1/108 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[1,mif2] * self.ydqPhibar[1,mif1] + -19/1296 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.ydqPhi[2,mif2] * self.ydqPhibar[2,mif1] + -1/108 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.ydqPhi[2,mif2] * self.ydqPhibar[2,mif1] + 1/108 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[2,mif2] * self.ydqPhibar[2,mif1] + 35/1296 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yquPhi[mif1,0] * self.yquPhibar[mif2,0] + 1/54 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yquPhi[mif1,0] * self.yquPhibar[mif2,0] + -1/54 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,0] * self.yquPhibar[mif2,0] + 35/1296 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yquPhi[mif1,1] * self.yquPhibar[mif2,1] + 1/54 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yquPhi[mif1,1] * self.yquPhibar[mif2,1] + -1/54 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,1] * self.yquPhibar[mif2,1] + 35/1296 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yquPhi[mif1,2] * self.yquPhibar[mif2,2] + 1/54 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yquPhi[mif1,2] * self.yquPhibar[mif2,2] + -1/54 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,2] * self.yquPhibar[mif2,2])

    def alphaOqq1(self, mif1,mif2,mif3,mif4):
        return (-1/640 * (self.g3)**(4) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.kronecker_delta(mif2,mif3) + -1/8640 * (self.g1)**(4) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 1/960 * (self.g3)**(4) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 19/15552 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.ydqPhi[0,mif2] * self.ydqPhibar[0,mif1] + -17/20736 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.ydqPhi[0,mif2] * self.ydqPhibar[0,mif1] + 1/1296 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.ydqPhi[0,mif2] * self.ydqPhibar[0,mif1] + -1/3456 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.ydqPhi[0,mif2] * self.ydqPhibar[0,mif1] + -1/1296 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[0,mif2] * self.ydqPhibar[0,mif1] + 1/3456 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[0,mif2] * self.ydqPhibar[0,mif1] + 3/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,0] * self.ydbar[mif4,0] * self.ydqPhi[0,mif2] * self.ydqPhibar[0,mif1] + 1/256 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,0] * self.ydbar[mif4,0] * self.ydqPhi[0,mif2] * self.ydqPhibar[0,mif1] + -1/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif3,0] * self.ydbar[mif4,0] * self.ydqPhi[0,mif2] * self.ydqPhibar[0,mif1] + 17/13824 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.ydqPhi[0,mif4] * self.ydqPhibar[0,mif1] + 1/2304 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.ydqPhi[0,mif4] * self.ydqPhibar[0,mif1] + -1/2304 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[0,mif4] * self.ydqPhibar[0,mif1] + 1/3072 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,0] * self.ydbar[mif2,0] * self.ydqPhi[0,mif4] * self.ydqPhibar[0,mif1] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,0] * self.ydbar[mif2,0] * self.ydqPhi[0,mif4] * self.ydqPhibar[0,mif1] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif3,0] * self.ydbar[mif2,0] * self.ydqPhi[0,mif4] * self.ydqPhibar[0,mif1] + 3/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,1] * self.ydbar[mif4,0] * self.ydqPhi[1,mif2] * self.ydqPhibar[0,mif1] + 1/256 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,1] * self.ydbar[mif4,0] * self.ydqPhi[1,mif2] * self.ydqPhibar[0,mif1] + -1/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif3,1] * self.ydbar[mif4,0] * self.ydqPhi[1,mif2] * self.ydqPhibar[0,mif1] + 1/3072 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,1] * self.ydbar[mif2,0] * self.ydqPhi[1,mif4] * self.ydqPhibar[0,mif1] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,1] * self.ydbar[mif2,0] * self.ydqPhi[1,mif4] * self.ydqPhibar[0,mif1] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif3,1] * self.ydbar[mif2,0] * self.ydqPhi[1,mif4] * self.ydqPhibar[0,mif1] + 3/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,2] * self.ydbar[mif4,0] * self.ydqPhi[2,mif2] * self.ydqPhibar[0,mif1] + 1/256 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,2] * self.ydbar[mif4,0] * self.ydqPhi[2,mif2] * self.ydqPhibar[0,mif1] + -1/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif3,2] * self.ydbar[mif4,0] * self.ydqPhi[2,mif2] * self.ydqPhibar[0,mif1] + 1/3072 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,2] * self.ydbar[mif2,0] * self.ydqPhi[2,mif4] * self.ydqPhibar[0,mif1] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,2] * self.ydbar[mif2,0] * self.ydqPhi[2,mif4] * self.ydqPhibar[0,mif1] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif3,2] * self.ydbar[mif2,0] * self.ydqPhi[2,mif4] * self.ydqPhibar[0,mif1] + 17/13824 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.ydqPhi[0,mif2] * self.ydqPhibar[0,mif3] + 1/2304 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.ydqPhi[0,mif2] * self.ydqPhibar[0,mif3] + -1/2304 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[0,mif2] * self.ydqPhibar[0,mif3] + -1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif4,0] * self.ydqPhi[0,mif2] * self.ydqPhibar[0,mif3] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif4,0] * self.ydqPhi[0,mif2] * self.ydqPhibar[0,mif3] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] * self.ydbar[mif4,0] * self.ydqPhi[0,mif2] * self.ydqPhibar[0,mif3] + 19/15552 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.ydqPhi[0,mif4] * self.ydqPhibar[0,mif3] + -17/20736 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.ydqPhi[0,mif4] * self.ydqPhibar[0,mif3] + 1/1296 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.ydqPhi[0,mif4] * self.ydqPhibar[0,mif3] + -1/3456 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.ydqPhi[0,mif4] * self.ydqPhibar[0,mif3] + -1/1296 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[0,mif4] * self.ydqPhibar[0,mif3] + 1/3456 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[0,mif4] * self.ydqPhibar[0,mif3] + -1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,0] * self.ydqPhi[0,mif4] * self.ydqPhibar[0,mif3] + 1/256 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,0] * self.ydqPhi[0,mif4] * self.ydqPhibar[0,mif3] + -1/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] * self.ydbar[mif2,0] * self.ydqPhi[0,mif4] * self.ydqPhibar[0,mif3] + -1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif4,0] * self.ydqPhi[1,mif2] * self.ydqPhibar[0,mif3] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif4,0] * self.ydqPhi[1,mif2] * self.ydqPhibar[0,mif3] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] * self.ydbar[mif4,0] * self.ydqPhi[1,mif2] * self.ydqPhibar[0,mif3] + -1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,0] * self.ydqPhi[1,mif4] * self.ydqPhibar[0,mif3] + 1/256 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,0] * self.ydqPhi[1,mif4] * self.ydqPhibar[0,mif3] + -1/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] * self.ydbar[mif2,0] * self.ydqPhi[1,mif4] * self.ydqPhibar[0,mif3] + -1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif4,0] * self.ydqPhi[2,mif2] * self.ydqPhibar[0,mif3] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif4,0] * self.ydqPhi[2,mif2] * self.ydqPhibar[0,mif3] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] * self.ydbar[mif4,0] * self.ydqPhi[2,mif2] * self.ydqPhibar[0,mif3] + -1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,0] * self.ydqPhi[2,mif4] * self.ydqPhibar[0,mif3] + 1/256 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,0] * self.ydqPhi[2,mif4] * self.ydqPhibar[0,mif3] + -1/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] * self.ydbar[mif2,0] * self.ydqPhi[2,mif4] * self.ydqPhibar[0,mif3] + -43/9216 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif2] * self.ydqPhi[0,mif4] * self.ydqPhibar[0,mif1] * self.ydqPhibar[0,mif3] + 3/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,0] * self.ydbar[mif4,1] * self.ydqPhi[0,mif2] * self.ydqPhibar[1,mif1] + 1/256 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,0] * self.ydbar[mif4,1] * self.ydqPhi[0,mif2] * self.ydqPhibar[1,mif1] + -1/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif3,0] * self.ydbar[mif4,1] * self.ydqPhi[0,mif2] * self.ydqPhibar[1,mif1] + 1/3072 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,0] * self.ydbar[mif2,1] * self.ydqPhi[0,mif4] * self.ydqPhibar[1,mif1] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,0] * self.ydbar[mif2,1] * self.ydqPhi[0,mif4] * self.ydqPhibar[1,mif1] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif3,0] * self.ydbar[mif2,1] * self.ydqPhi[0,mif4] * self.ydqPhibar[1,mif1] + 19/15552 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.ydqPhi[1,mif2] * self.ydqPhibar[1,mif1] + -17/20736 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.ydqPhi[1,mif2] * self.ydqPhibar[1,mif1] + 1/1296 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.ydqPhi[1,mif2] * self.ydqPhibar[1,mif1] + -1/3456 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.ydqPhi[1,mif2] * self.ydqPhibar[1,mif1] + -1/1296 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[1,mif2] * self.ydqPhibar[1,mif1] + 1/3456 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[1,mif2] * self.ydqPhibar[1,mif1] + 3/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,1] * self.ydbar[mif4,1] * self.ydqPhi[1,mif2] * self.ydqPhibar[1,mif1] + 1/256 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,1] * self.ydbar[mif4,1] * self.ydqPhi[1,mif2] * self.ydqPhibar[1,mif1] + -1/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif3,1] * self.ydbar[mif4,1] * self.ydqPhi[1,mif2] * self.ydqPhibar[1,mif1] + 17/13824 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.ydqPhi[1,mif4] * self.ydqPhibar[1,mif1] + 1/2304 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.ydqPhi[1,mif4] * self.ydqPhibar[1,mif1] + -1/2304 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[1,mif4] * self.ydqPhibar[1,mif1] + 1/3072 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,1] * self.ydbar[mif2,1] * self.ydqPhi[1,mif4] * self.ydqPhibar[1,mif1] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,1] * self.ydbar[mif2,1] * self.ydqPhi[1,mif4] * self.ydqPhibar[1,mif1] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif3,1] * self.ydbar[mif2,1] * self.ydqPhi[1,mif4] * self.ydqPhibar[1,mif1] + 3/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,2] * self.ydbar[mif4,1] * self.ydqPhi[2,mif2] * self.ydqPhibar[1,mif1] + 1/256 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,2] * self.ydbar[mif4,1] * self.ydqPhi[2,mif2] * self.ydqPhibar[1,mif1] + -1/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif3,2] * self.ydbar[mif4,1] * self.ydqPhi[2,mif2] * self.ydqPhibar[1,mif1] + 1/3072 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,2] * self.ydbar[mif2,1] * self.ydqPhi[2,mif4] * self.ydqPhibar[1,mif1] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,2] * self.ydbar[mif2,1] * self.ydqPhi[2,mif4] * self.ydqPhibar[1,mif1] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif3,2] * self.ydbar[mif2,1] * self.ydqPhi[2,mif4] * self.ydqPhibar[1,mif1] + -1/9216 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif4] * self.ydqPhi[1,mif2] * self.ydqPhibar[0,mif3] * self.ydqPhibar[1,mif1] + -7/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif2] * self.ydqPhi[1,mif4] * self.ydqPhibar[0,mif3] * self.ydqPhibar[1,mif1] + -1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif4,1] * self.ydqPhi[0,mif2] * self.ydqPhibar[1,mif3] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif4,1] * self.ydqPhi[0,mif2] * self.ydqPhibar[1,mif3] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] * self.ydbar[mif4,1] * self.ydqPhi[0,mif2] * self.ydqPhibar[1,mif3] + -1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,1] * self.ydqPhi[0,mif4] * self.ydqPhibar[1,mif3] + 1/256 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,1] * self.ydqPhi[0,mif4] * self.ydqPhibar[1,mif3] + -1/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] * self.ydbar[mif2,1] * self.ydqPhi[0,mif4] * self.ydqPhibar[1,mif3] + 17/13824 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.ydqPhi[1,mif2] * self.ydqPhibar[1,mif3] + 1/2304 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.ydqPhi[1,mif2] * self.ydqPhibar[1,mif3] + -1/2304 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[1,mif2] * self.ydqPhibar[1,mif3] + -1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif4,1] * self.ydqPhi[1,mif2] * self.ydqPhibar[1,mif3] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif4,1] * self.ydqPhi[1,mif2] * self.ydqPhibar[1,mif3] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] * self.ydbar[mif4,1] * self.ydqPhi[1,mif2] * self.ydqPhibar[1,mif3] + 19/15552 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.ydqPhi[1,mif4] * self.ydqPhibar[1,mif3] + -17/20736 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.ydqPhi[1,mif4] * self.ydqPhibar[1,mif3] + 1/1296 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.ydqPhi[1,mif4] * self.ydqPhibar[1,mif3] + -1/3456 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.ydqPhi[1,mif4] * self.ydqPhibar[1,mif3] + -1/1296 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[1,mif4] * self.ydqPhibar[1,mif3] + 1/3456 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[1,mif4] * self.ydqPhibar[1,mif3] + -1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,1] * self.ydqPhi[1,mif4] * self.ydqPhibar[1,mif3] + 1/256 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,1] * self.ydqPhi[1,mif4] * self.ydqPhibar[1,mif3] + -1/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] * self.ydbar[mif2,1] * self.ydqPhi[1,mif4] * self.ydqPhibar[1,mif3] + -1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif4,1] * self.ydqPhi[2,mif2] * self.ydqPhibar[1,mif3] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif4,1] * self.ydqPhi[2,mif2] * self.ydqPhibar[1,mif3] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] * self.ydbar[mif4,1] * self.ydqPhi[2,mif2] * self.ydqPhibar[1,mif3] + -1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,1] * self.ydqPhi[2,mif4] * self.ydqPhibar[1,mif3] + 1/256 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,1] * self.ydqPhi[2,mif4] * self.ydqPhibar[1,mif3] + -1/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] * self.ydbar[mif2,1] * self.ydqPhi[2,mif4] * self.ydqPhibar[1,mif3] + -7/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif4] * self.ydqPhi[1,mif2] * self.ydqPhibar[0,mif1] * self.ydqPhibar[1,mif3] + -1/9216 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif2] * self.ydqPhi[1,mif4] * self.ydqPhibar[0,mif1] * self.ydqPhibar[1,mif3] + -43/9216 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,mif2] * self.ydqPhi[1,mif4] * self.ydqPhibar[1,mif1] * self.ydqPhibar[1,mif3] + 3/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,0] * self.ydbar[mif4,2] * self.ydqPhi[0,mif2] * self.ydqPhibar[2,mif1] + 1/256 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,0] * self.ydbar[mif4,2] * self.ydqPhi[0,mif2] * self.ydqPhibar[2,mif1] + -1/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif3,0] * self.ydbar[mif4,2] * self.ydqPhi[0,mif2] * self.ydqPhibar[2,mif1] + 1/3072 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,0] * self.ydbar[mif2,2] * self.ydqPhi[0,mif4] * self.ydqPhibar[2,mif1] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,0] * self.ydbar[mif2,2] * self.ydqPhi[0,mif4] * self.ydqPhibar[2,mif1] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif3,0] * self.ydbar[mif2,2] * self.ydqPhi[0,mif4] * self.ydqPhibar[2,mif1] + 3/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,1] * self.ydbar[mif4,2] * self.ydqPhi[1,mif2] * self.ydqPhibar[2,mif1] + 1/256 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,1] * self.ydbar[mif4,2] * self.ydqPhi[1,mif2] * self.ydqPhibar[2,mif1] + -1/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif3,1] * self.ydbar[mif4,2] * self.ydqPhi[1,mif2] * self.ydqPhibar[2,mif1] + 1/3072 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,1] * self.ydbar[mif2,2] * self.ydqPhi[1,mif4] * self.ydqPhibar[2,mif1] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,1] * self.ydbar[mif2,2] * self.ydqPhi[1,mif4] * self.ydqPhibar[2,mif1] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif3,1] * self.ydbar[mif2,2] * self.ydqPhi[1,mif4] * self.ydqPhibar[2,mif1] + 19/15552 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.ydqPhi[2,mif2] * self.ydqPhibar[2,mif1] + -17/20736 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.ydqPhi[2,mif2] * self.ydqPhibar[2,mif1] + 1/1296 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.ydqPhi[2,mif2] * self.ydqPhibar[2,mif1] + -1/3456 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.ydqPhi[2,mif2] * self.ydqPhibar[2,mif1] + -1/1296 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[2,mif2] * self.ydqPhibar[2,mif1] + 1/3456 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[2,mif2] * self.ydqPhibar[2,mif1] + 3/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,2] * self.ydbar[mif4,2] * self.ydqPhi[2,mif2] * self.ydqPhibar[2,mif1] + 1/256 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,2] * self.ydbar[mif4,2] * self.ydqPhi[2,mif2] * self.ydqPhibar[2,mif1] + -1/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif3,2] * self.ydbar[mif4,2] * self.ydqPhi[2,mif2] * self.ydqPhibar[2,mif1] + 17/13824 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.ydqPhi[2,mif4] * self.ydqPhibar[2,mif1] + 1/2304 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.ydqPhi[2,mif4] * self.ydqPhibar[2,mif1] + -1/2304 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[2,mif4] * self.ydqPhibar[2,mif1] + 1/3072 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,2] * self.ydbar[mif2,2] * self.ydqPhi[2,mif4] * self.ydqPhibar[2,mif1] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,2] * self.ydbar[mif2,2] * self.ydqPhi[2,mif4] * self.ydqPhibar[2,mif1] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif3,2] * self.ydbar[mif2,2] * self.ydqPhi[2,mif4] * self.ydqPhibar[2,mif1] + -1/9216 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif4] * self.ydqPhi[2,mif2] * self.ydqPhibar[0,mif3] * self.ydqPhibar[2,mif1] + -7/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif2] * self.ydqPhi[2,mif4] * self.ydqPhibar[0,mif3] * self.ydqPhibar[2,mif1] + -1/9216 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,mif4] * self.ydqPhi[2,mif2] * self.ydqPhibar[1,mif3] * self.ydqPhibar[2,mif1] + -7/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,mif2] * self.ydqPhi[2,mif4] * self.ydqPhibar[1,mif3] * self.ydqPhibar[2,mif1] + -1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif4,2] * self.ydqPhi[0,mif2] * self.ydqPhibar[2,mif3] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif4,2] * self.ydqPhi[0,mif2] * self.ydqPhibar[2,mif3] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] * self.ydbar[mif4,2] * self.ydqPhi[0,mif2] * self.ydqPhibar[2,mif3] + -1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,2] * self.ydqPhi[0,mif4] * self.ydqPhibar[2,mif3] + 1/256 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif2,2] * self.ydqPhi[0,mif4] * self.ydqPhibar[2,mif3] + -1/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] * self.ydbar[mif2,2] * self.ydqPhi[0,mif4] * self.ydqPhibar[2,mif3] + -1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif4,2] * self.ydqPhi[1,mif2] * self.ydqPhibar[2,mif3] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif4,2] * self.ydqPhi[1,mif2] * self.ydqPhibar[2,mif3] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] * self.ydbar[mif4,2] * self.ydqPhi[1,mif2] * self.ydqPhibar[2,mif3] + -1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,2] * self.ydqPhi[1,mif4] * self.ydqPhibar[2,mif3] + 1/256 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif2,2] * self.ydqPhi[1,mif4] * self.ydqPhibar[2,mif3] + -1/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] * self.ydbar[mif2,2] * self.ydqPhi[1,mif4] * self.ydqPhibar[2,mif3] + 17/13824 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.ydqPhi[2,mif2] * self.ydqPhibar[2,mif3] + 1/2304 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.ydqPhi[2,mif2] * self.ydqPhibar[2,mif3] + -1/2304 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[2,mif2] * self.ydqPhibar[2,mif3] + -1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif4,2] * self.ydqPhi[2,mif2] * self.ydqPhibar[2,mif3] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif4,2] * self.ydqPhi[2,mif2] * self.ydqPhibar[2,mif3] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] * self.ydbar[mif4,2] * self.ydqPhi[2,mif2] * self.ydqPhibar[2,mif3] + 19/15552 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.ydqPhi[2,mif4] * self.ydqPhibar[2,mif3] + -17/20736 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.ydqPhi[2,mif4] * self.ydqPhibar[2,mif3] + 1/1296 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.ydqPhi[2,mif4] * self.ydqPhibar[2,mif3] + -1/3456 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.ydqPhi[2,mif4] * self.ydqPhibar[2,mif3] + -1/1296 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[2,mif4] * self.ydqPhibar[2,mif3] + 1/3456 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[2,mif4] * self.ydqPhibar[2,mif3] + -1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,2] * self.ydqPhi[2,mif4] * self.ydqPhibar[2,mif3] + 1/256 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif2,2] * self.ydqPhi[2,mif4] * self.ydqPhibar[2,mif3] + -1/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] * self.ydbar[mif2,2] * self.ydqPhi[2,mif4] * self.ydqPhibar[2,mif3] + -7/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif4] * self.ydqPhi[2,mif2] * self.ydqPhibar[0,mif1] * self.ydqPhibar[2,mif3] + -1/9216 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif2] * self.ydqPhi[2,mif4] * self.ydqPhibar[0,mif1] * self.ydqPhibar[2,mif3] + -7/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,mif4] * self.ydqPhi[2,mif2] * self.ydqPhibar[1,mif1] * self.ydqPhibar[2,mif3] + -1/9216 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,mif2] * self.ydqPhi[2,mif4] * self.ydqPhibar[1,mif1] * self.ydqPhibar[2,mif3] + -43/9216 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,mif2] * self.ydqPhi[2,mif4] * self.ydqPhibar[2,mif1] * self.ydqPhibar[2,mif3] + -35/15552 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yquPhi[mif1,0] * self.yquPhibar[mif2,0] + -17/20736 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yquPhi[mif1,0] * self.yquPhibar[mif2,0] + -1/648 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yquPhi[mif1,0] * self.yquPhibar[mif2,0] + -1/3456 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yquPhi[mif1,0] * self.yquPhibar[mif2,0] + 1/648 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,0] * self.yquPhibar[mif2,0] + 1/3456 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,0] * self.yquPhibar[mif2,0] + 5/4608 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif4] * self.ydqPhibar[0,mif3] * self.yquPhi[mif1,0] * self.yquPhibar[mif2,0] + 5/4608 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,mif4] * self.ydqPhibar[1,mif3] * self.yquPhi[mif1,0] * self.yquPhibar[mif2,0] + 5/4608 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,mif4] * self.ydqPhibar[2,mif3] * self.yquPhi[mif1,0] * self.yquPhibar[mif2,0] + 17/13824 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yquPhi[mif3,0] * self.yquPhibar[mif2,0] + 1/2304 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yquPhi[mif3,0] * self.yquPhibar[mif2,0] + -1/2304 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif3,0] * self.yquPhibar[mif2,0] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif4] * self.ydqPhibar[0,mif1] * self.yquPhi[mif3,0] * self.yquPhibar[mif2,0] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,mif4] * self.ydqPhibar[1,mif1] * self.yquPhi[mif3,0] * self.yquPhibar[mif2,0] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,mif4] * self.ydqPhibar[2,mif1] * self.yquPhi[mif3,0] * self.yquPhibar[mif2,0] + -35/15552 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yquPhi[mif1,1] * self.yquPhibar[mif2,1] + -17/20736 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yquPhi[mif1,1] * self.yquPhibar[mif2,1] + -1/648 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yquPhi[mif1,1] * self.yquPhibar[mif2,1] + -1/3456 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yquPhi[mif1,1] * self.yquPhibar[mif2,1] + 1/648 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,1] * self.yquPhibar[mif2,1] + 1/3456 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,1] * self.yquPhibar[mif2,1] + 5/4608 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif4] * self.ydqPhibar[0,mif3] * self.yquPhi[mif1,1] * self.yquPhibar[mif2,1] + 5/4608 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,mif4] * self.ydqPhibar[1,mif3] * self.yquPhi[mif1,1] * self.yquPhibar[mif2,1] + 5/4608 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,mif4] * self.ydqPhibar[2,mif3] * self.yquPhi[mif1,1] * self.yquPhibar[mif2,1] + 17/13824 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yquPhi[mif3,1] * self.yquPhibar[mif2,1] + 1/2304 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yquPhi[mif3,1] * self.yquPhibar[mif2,1] + -1/2304 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif3,1] * self.yquPhibar[mif2,1] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif4] * self.ydqPhibar[0,mif1] * self.yquPhi[mif3,1] * self.yquPhibar[mif2,1] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,mif4] * self.ydqPhibar[1,mif1] * self.yquPhi[mif3,1] * self.yquPhibar[mif2,1] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,mif4] * self.ydqPhibar[2,mif1] * self.yquPhi[mif3,1] * self.yquPhibar[mif2,1] + -35/15552 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yquPhi[mif1,2] * self.yquPhibar[mif2,2] + -17/20736 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yquPhi[mif1,2] * self.yquPhibar[mif2,2] + -1/648 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yquPhi[mif1,2] * self.yquPhibar[mif2,2] + -1/3456 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yquPhi[mif1,2] * self.yquPhibar[mif2,2] + 1/648 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,2] * self.yquPhibar[mif2,2] + 1/3456 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,2] * self.yquPhibar[mif2,2] + 5/4608 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif4] * self.ydqPhibar[0,mif3] * self.yquPhi[mif1,2] * self.yquPhibar[mif2,2] + 5/4608 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,mif4] * self.ydqPhibar[1,mif3] * self.yquPhi[mif1,2] * self.yquPhibar[mif2,2] + 5/4608 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,mif4] * self.ydqPhibar[2,mif3] * self.yquPhi[mif1,2] * self.yquPhibar[mif2,2] + 17/13824 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yquPhi[mif3,2] * self.yquPhibar[mif2,2] + 1/2304 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yquPhi[mif3,2] * self.yquPhibar[mif2,2] + -1/2304 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif3,2] * self.yquPhibar[mif2,2] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif4] * self.ydqPhibar[0,mif1] * self.yquPhi[mif3,2] * self.yquPhibar[mif2,2] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,mif4] * self.ydqPhibar[1,mif1] * self.yquPhi[mif3,2] * self.yquPhibar[mif2,2] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,mif4] * self.ydqPhibar[2,mif1] * self.yquPhi[mif3,2] * self.yquPhibar[mif2,2] + 17/13824 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yquPhi[mif1,0] * self.yquPhibar[mif4,0] + 1/2304 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yquPhi[mif1,0] * self.yquPhibar[mif4,0] + -1/2304 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,0] * self.yquPhibar[mif4,0] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif2] * self.ydqPhibar[0,mif3] * self.yquPhi[mif1,0] * self.yquPhibar[mif4,0] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,mif2] * self.ydqPhibar[1,mif3] * self.yquPhi[mif1,0] * self.yquPhibar[mif4,0] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,mif2] * self.ydqPhibar[2,mif3] * self.yquPhi[mif1,0] * self.yquPhibar[mif4,0] + -35/15552 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yquPhi[mif3,0] * self.yquPhibar[mif4,0] + -17/20736 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yquPhi[mif3,0] * self.yquPhibar[mif4,0] + -1/648 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yquPhi[mif3,0] * self.yquPhibar[mif4,0] + -1/3456 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yquPhi[mif3,0] * self.yquPhibar[mif4,0] + 1/648 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif3,0] * self.yquPhibar[mif4,0] + 1/3456 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif3,0] * self.yquPhibar[mif4,0] + 5/4608 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif2] * self.ydqPhibar[0,mif1] * self.yquPhi[mif3,0] * self.yquPhibar[mif4,0] + 5/4608 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,mif2] * self.ydqPhibar[1,mif1] * self.yquPhi[mif3,0] * self.yquPhibar[mif4,0] + 5/4608 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,mif2] * self.ydqPhibar[2,mif1] * self.yquPhi[mif3,0] * self.yquPhibar[mif4,0] + -43/9216 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhi[mif3,0] * self.yquPhibar[mif2,0] * self.yquPhibar[mif4,0] + -1/9216 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhi[mif3,0] * self.yquPhibar[mif2,1] * self.yquPhibar[mif4,0] + -7/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhi[mif3,1] * self.yquPhibar[mif2,1] * self.yquPhibar[mif4,0] + -1/9216 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhi[mif3,0] * self.yquPhibar[mif2,2] * self.yquPhibar[mif4,0] + -7/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhi[mif3,2] * self.yquPhibar[mif2,2] * self.yquPhibar[mif4,0] + 17/13824 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yquPhi[mif1,1] * self.yquPhibar[mif4,1] + 1/2304 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yquPhi[mif1,1] * self.yquPhibar[mif4,1] + -1/2304 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,1] * self.yquPhibar[mif4,1] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif2] * self.ydqPhibar[0,mif3] * self.yquPhi[mif1,1] * self.yquPhibar[mif4,1] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,mif2] * self.ydqPhibar[1,mif3] * self.yquPhi[mif1,1] * self.yquPhibar[mif4,1] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,mif2] * self.ydqPhibar[2,mif3] * self.yquPhi[mif1,1] * self.yquPhibar[mif4,1] + -35/15552 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yquPhi[mif3,1] * self.yquPhibar[mif4,1] + -17/20736 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yquPhi[mif3,1] * self.yquPhibar[mif4,1] + -1/648 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yquPhi[mif3,1] * self.yquPhibar[mif4,1] + -1/3456 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yquPhi[mif3,1] * self.yquPhibar[mif4,1] + 1/648 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif3,1] * self.yquPhibar[mif4,1] + 1/3456 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif3,1] * self.yquPhibar[mif4,1] + 5/4608 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif2] * self.ydqPhibar[0,mif1] * self.yquPhi[mif3,1] * self.yquPhibar[mif4,1] + 5/4608 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,mif2] * self.ydqPhibar[1,mif1] * self.yquPhi[mif3,1] * self.yquPhibar[mif4,1] + 5/4608 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,mif2] * self.ydqPhibar[2,mif1] * self.yquPhi[mif3,1] * self.yquPhibar[mif4,1] + -7/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhi[mif3,0] * self.yquPhibar[mif2,0] * self.yquPhibar[mif4,1] + -1/9216 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhi[mif3,1] * self.yquPhibar[mif2,0] * self.yquPhibar[mif4,1] + -43/9216 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhi[mif3,1] * self.yquPhibar[mif2,1] * self.yquPhibar[mif4,1] + -1/9216 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhi[mif3,1] * self.yquPhibar[mif2,2] * self.yquPhibar[mif4,1] + -7/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhi[mif3,2] * self.yquPhibar[mif2,2] * self.yquPhibar[mif4,1] + 17/13824 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yquPhi[mif1,2] * self.yquPhibar[mif4,2] + 1/2304 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yquPhi[mif1,2] * self.yquPhibar[mif4,2] + -1/2304 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,2] * self.yquPhibar[mif4,2] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif2] * self.ydqPhibar[0,mif3] * self.yquPhi[mif1,2] * self.yquPhibar[mif4,2] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,mif2] * self.ydqPhibar[1,mif3] * self.yquPhi[mif1,2] * self.yquPhibar[mif4,2] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,mif2] * self.ydqPhibar[2,mif3] * self.yquPhi[mif1,2] * self.yquPhibar[mif4,2] + -35/15552 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yquPhi[mif3,2] * self.yquPhibar[mif4,2] + -17/20736 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yquPhi[mif3,2] * self.yquPhibar[mif4,2] + -1/648 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yquPhi[mif3,2] * self.yquPhibar[mif4,2] + -1/3456 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yquPhi[mif3,2] * self.yquPhibar[mif4,2] + 1/648 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif3,2] * self.yquPhibar[mif4,2] + 1/3456 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif3,2] * self.yquPhibar[mif4,2] + 5/4608 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif2] * self.ydqPhibar[0,mif1] * self.yquPhi[mif3,2] * self.yquPhibar[mif4,2] + 5/4608 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,mif2] * self.ydqPhibar[1,mif1] * self.yquPhi[mif3,2] * self.yquPhibar[mif4,2] + 5/4608 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,mif2] * self.ydqPhibar[2,mif1] * self.yquPhi[mif3,2] * self.yquPhibar[mif4,2] + -7/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhi[mif3,0] * self.yquPhibar[mif2,0] * self.yquPhibar[mif4,2] + -1/9216 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhi[mif3,2] * self.yquPhibar[mif2,0] * self.yquPhibar[mif4,2] + -7/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhi[mif3,1] * self.yquPhibar[mif2,1] * self.yquPhibar[mif4,2] + -1/9216 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhi[mif3,2] * self.yquPhibar[mif2,1] * self.yquPhibar[mif4,2] + -43/9216 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhi[mif3,2] * self.yquPhibar[mif2,2] * self.yquPhibar[mif4,2] + -1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,0] * self.ydqPhi[0,mif4] * self.yquPhibar[mif2,0] * self.yu[mif1,0] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,0] * self.ydqPhi[0,mif4] * self.yquPhibar[mif2,0] * self.yu[mif1,0] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif3,0] * self.ydqPhi[0,mif4] * self.yquPhibar[mif2,0] * self.yu[mif1,0] + -1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,1] * self.ydqPhi[1,mif4] * self.yquPhibar[mif2,0] * self.yu[mif1,0] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,1] * self.ydqPhi[1,mif4] * self.yquPhibar[mif2,0] * self.yu[mif1,0] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif3,1] * self.ydqPhi[1,mif4] * self.yquPhibar[mif2,0] * self.yu[mif1,0] + -1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,2] * self.ydqPhi[2,mif4] * self.yquPhibar[mif2,0] * self.yu[mif1,0] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,2] * self.ydqPhi[2,mif4] * self.yquPhibar[mif2,0] * self.yu[mif1,0] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif3,2] * self.ydqPhi[2,mif4] * self.yquPhibar[mif2,0] * self.yu[mif1,0] + -3/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,0] * self.ydqPhi[0,mif2] * self.yquPhibar[mif4,0] * self.yu[mif1,0] + -1/512 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,0] * self.ydqPhi[0,mif2] * self.yquPhibar[mif4,0] * self.yu[mif1,0] + 1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif3,0] * self.ydqPhi[0,mif2] * self.yquPhibar[mif4,0] * self.yu[mif1,0] + -3/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,1] * self.ydqPhi[1,mif2] * self.yquPhibar[mif4,0] * self.yu[mif1,0] + -1/512 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,1] * self.ydqPhi[1,mif2] * self.yquPhibar[mif4,0] * self.yu[mif1,0] + 1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif3,1] * self.ydqPhi[1,mif2] * self.yquPhibar[mif4,0] * self.yu[mif1,0] + -3/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,2] * self.ydqPhi[2,mif2] * self.yquPhibar[mif4,0] * self.yu[mif1,0] + -1/512 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,2] * self.ydqPhi[2,mif2] * self.yquPhibar[mif4,0] * self.yu[mif1,0] + 1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif3,2] * self.ydqPhi[2,mif2] * self.yquPhibar[mif4,0] * self.yu[mif1,0] + -1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,0] * self.ydqPhi[0,mif4] * self.yquPhibar[mif2,1] * self.yu[mif1,1] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,0] * self.ydqPhi[0,mif4] * self.yquPhibar[mif2,1] * self.yu[mif1,1] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif3,0] * self.ydqPhi[0,mif4] * self.yquPhibar[mif2,1] * self.yu[mif1,1] + -1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,1] * self.ydqPhi[1,mif4] * self.yquPhibar[mif2,1] * self.yu[mif1,1] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,1] * self.ydqPhi[1,mif4] * self.yquPhibar[mif2,1] * self.yu[mif1,1] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif3,1] * self.ydqPhi[1,mif4] * self.yquPhibar[mif2,1] * self.yu[mif1,1] + -1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,2] * self.ydqPhi[2,mif4] * self.yquPhibar[mif2,1] * self.yu[mif1,1] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,2] * self.ydqPhi[2,mif4] * self.yquPhibar[mif2,1] * self.yu[mif1,1] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif3,2] * self.ydqPhi[2,mif4] * self.yquPhibar[mif2,1] * self.yu[mif1,1] + -3/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,0] * self.ydqPhi[0,mif2] * self.yquPhibar[mif4,1] * self.yu[mif1,1] + -1/512 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,0] * self.ydqPhi[0,mif2] * self.yquPhibar[mif4,1] * self.yu[mif1,1] + 1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif3,0] * self.ydqPhi[0,mif2] * self.yquPhibar[mif4,1] * self.yu[mif1,1] + -3/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,1] * self.ydqPhi[1,mif2] * self.yquPhibar[mif4,1] * self.yu[mif1,1] + -1/512 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,1] * self.ydqPhi[1,mif2] * self.yquPhibar[mif4,1] * self.yu[mif1,1] + 1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif3,1] * self.ydqPhi[1,mif2] * self.yquPhibar[mif4,1] * self.yu[mif1,1] + -3/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,2] * self.ydqPhi[2,mif2] * self.yquPhibar[mif4,1] * self.yu[mif1,1] + -1/512 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,2] * self.ydqPhi[2,mif2] * self.yquPhibar[mif4,1] * self.yu[mif1,1] + 1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif3,2] * self.ydqPhi[2,mif2] * self.yquPhibar[mif4,1] * self.yu[mif1,1] + -1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,0] * self.ydqPhi[0,mif4] * self.yquPhibar[mif2,2] * self.yu[mif1,2] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,0] * self.ydqPhi[0,mif4] * self.yquPhibar[mif2,2] * self.yu[mif1,2] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif3,0] * self.ydqPhi[0,mif4] * self.yquPhibar[mif2,2] * self.yu[mif1,2] + -1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,1] * self.ydqPhi[1,mif4] * self.yquPhibar[mif2,2] * self.yu[mif1,2] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,1] * self.ydqPhi[1,mif4] * self.yquPhibar[mif2,2] * self.yu[mif1,2] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif3,1] * self.ydqPhi[1,mif4] * self.yquPhibar[mif2,2] * self.yu[mif1,2] + -1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,2] * self.ydqPhi[2,mif4] * self.yquPhibar[mif2,2] * self.yu[mif1,2] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,2] * self.ydqPhi[2,mif4] * self.yquPhibar[mif2,2] * self.yu[mif1,2] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif3,2] * self.ydqPhi[2,mif4] * self.yquPhibar[mif2,2] * self.yu[mif1,2] + -3/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,0] * self.ydqPhi[0,mif2] * self.yquPhibar[mif4,2] * self.yu[mif1,2] + -1/512 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,0] * self.ydqPhi[0,mif2] * self.yquPhibar[mif4,2] * self.yu[mif1,2] + 1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif3,0] * self.ydqPhi[0,mif2] * self.yquPhibar[mif4,2] * self.yu[mif1,2] + -3/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,1] * self.ydqPhi[1,mif2] * self.yquPhibar[mif4,2] * self.yu[mif1,2] + -1/512 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,1] * self.ydqPhi[1,mif2] * self.yquPhibar[mif4,2] * self.yu[mif1,2] + 1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif3,1] * self.ydqPhi[1,mif2] * self.yquPhibar[mif4,2] * self.yu[mif1,2] + -3/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,2] * self.ydqPhi[2,mif2] * self.yquPhibar[mif4,2] * self.yu[mif1,2] + -1/512 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,2] * self.ydqPhi[2,mif2] * self.yquPhibar[mif4,2] * self.yu[mif1,2] + 1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif3,2] * self.ydqPhi[2,mif2] * self.yquPhibar[mif4,2] * self.yu[mif1,2] + -3/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,mif4] * self.yquPhibar[mif2,0] * self.yu[mif3,0] + -1/512 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,mif4] * self.yquPhibar[mif2,0] * self.yu[mif3,0] + 1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] * self.ydqPhi[0,mif4] * self.yquPhibar[mif2,0] * self.yu[mif3,0] + -3/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,mif4] * self.yquPhibar[mif2,0] * self.yu[mif3,0] + -1/512 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,mif4] * self.yquPhibar[mif2,0] * self.yu[mif3,0] + 1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] * self.ydqPhi[1,mif4] * self.yquPhibar[mif2,0] * self.yu[mif3,0] + -3/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,mif4] * self.yquPhibar[mif2,0] * self.yu[mif3,0] + -1/512 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,mif4] * self.yquPhibar[mif2,0] * self.yu[mif3,0] + 1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] * self.ydqPhi[2,mif4] * self.yquPhibar[mif2,0] * self.yu[mif3,0] + -1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,mif2] * self.yquPhibar[mif4,0] * self.yu[mif3,0] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,mif2] * self.yquPhibar[mif4,0] * self.yu[mif3,0] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] * self.ydqPhi[0,mif2] * self.yquPhibar[mif4,0] * self.yu[mif3,0] + -1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,mif2] * self.yquPhibar[mif4,0] * self.yu[mif3,0] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,mif2] * self.yquPhibar[mif4,0] * self.yu[mif3,0] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] * self.ydqPhi[1,mif2] * self.yquPhibar[mif4,0] * self.yu[mif3,0] + -1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,mif2] * self.yquPhibar[mif4,0] * self.yu[mif3,0] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,mif2] * self.yquPhibar[mif4,0] * self.yu[mif3,0] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] * self.ydqPhi[2,mif2] * self.yquPhibar[mif4,0] * self.yu[mif3,0] + -3/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,mif4] * self.yquPhibar[mif2,1] * self.yu[mif3,1] + -1/512 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,mif4] * self.yquPhibar[mif2,1] * self.yu[mif3,1] + 1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] * self.ydqPhi[0,mif4] * self.yquPhibar[mif2,1] * self.yu[mif3,1] + -3/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,mif4] * self.yquPhibar[mif2,1] * self.yu[mif3,1] + -1/512 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,mif4] * self.yquPhibar[mif2,1] * self.yu[mif3,1] + 1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] * self.ydqPhi[1,mif4] * self.yquPhibar[mif2,1] * self.yu[mif3,1] + -3/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,mif4] * self.yquPhibar[mif2,1] * self.yu[mif3,1] + -1/512 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,mif4] * self.yquPhibar[mif2,1] * self.yu[mif3,1] + 1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] * self.ydqPhi[2,mif4] * self.yquPhibar[mif2,1] * self.yu[mif3,1] + -1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,mif2] * self.yquPhibar[mif4,1] * self.yu[mif3,1] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,mif2] * self.yquPhibar[mif4,1] * self.yu[mif3,1] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] * self.ydqPhi[0,mif2] * self.yquPhibar[mif4,1] * self.yu[mif3,1] + -1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,mif2] * self.yquPhibar[mif4,1] * self.yu[mif3,1] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,mif2] * self.yquPhibar[mif4,1] * self.yu[mif3,1] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] * self.ydqPhi[1,mif2] * self.yquPhibar[mif4,1] * self.yu[mif3,1] + -1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,mif2] * self.yquPhibar[mif4,1] * self.yu[mif3,1] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,mif2] * self.yquPhibar[mif4,1] * self.yu[mif3,1] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] * self.ydqPhi[2,mif2] * self.yquPhibar[mif4,1] * self.yu[mif3,1] + -3/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,mif4] * self.yquPhibar[mif2,2] * self.yu[mif3,2] + -1/512 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,mif4] * self.yquPhibar[mif2,2] * self.yu[mif3,2] + 1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] * self.ydqPhi[0,mif4] * self.yquPhibar[mif2,2] * self.yu[mif3,2] + -3/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,mif4] * self.yquPhibar[mif2,2] * self.yu[mif3,2] + -1/512 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,mif4] * self.yquPhibar[mif2,2] * self.yu[mif3,2] + 1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] * self.ydqPhi[1,mif4] * self.yquPhibar[mif2,2] * self.yu[mif3,2] + -3/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,mif4] * self.yquPhibar[mif2,2] * self.yu[mif3,2] + -1/512 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,mif4] * self.yquPhibar[mif2,2] * self.yu[mif3,2] + 1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] * self.ydqPhi[2,mif4] * self.yquPhibar[mif2,2] * self.yu[mif3,2] + -1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,mif2] * self.yquPhibar[mif4,2] * self.yu[mif3,2] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,mif2] * self.yquPhibar[mif4,2] * self.yu[mif3,2] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] * self.ydqPhi[0,mif2] * self.yquPhibar[mif4,2] * self.yu[mif3,2] + -1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,mif2] * self.yquPhibar[mif4,2] * self.yu[mif3,2] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,mif2] * self.yquPhibar[mif4,2] * self.yu[mif3,2] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] * self.ydqPhi[1,mif2] * self.yquPhibar[mif4,2] * self.yu[mif3,2] + -1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,mif2] * self.yquPhibar[mif4,2] * self.yu[mif3,2] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,mif2] * self.yquPhibar[mif4,2] * self.yu[mif3,2] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] * self.ydqPhi[2,mif2] * self.yquPhibar[mif4,2] * self.yu[mif3,2] + -1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,0] * self.ydqPhibar[0,mif3] * self.yquPhi[mif1,0] * self.yubar[mif2,0] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,0] * self.ydqPhibar[0,mif3] * self.yquPhi[mif1,0] * self.yubar[mif2,0] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif4,0] * self.ydqPhibar[0,mif3] * self.yquPhi[mif1,0] * self.yubar[mif2,0] + -1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,1] * self.ydqPhibar[1,mif3] * self.yquPhi[mif1,0] * self.yubar[mif2,0] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,1] * self.ydqPhibar[1,mif3] * self.yquPhi[mif1,0] * self.yubar[mif2,0] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif4,1] * self.ydqPhibar[1,mif3] * self.yquPhi[mif1,0] * self.yubar[mif2,0] + -1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,2] * self.ydqPhibar[2,mif3] * self.yquPhi[mif1,0] * self.yubar[mif2,0] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,2] * self.ydqPhibar[2,mif3] * self.yquPhi[mif1,0] * self.yubar[mif2,0] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif4,2] * self.ydqPhibar[2,mif3] * self.yquPhi[mif1,0] * self.yubar[mif2,0] + -3/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,0] * self.ydqPhibar[0,mif1] * self.yquPhi[mif3,0] * self.yubar[mif2,0] + -1/512 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,0] * self.ydqPhibar[0,mif1] * self.yquPhi[mif3,0] * self.yubar[mif2,0] + 1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif4,0] * self.ydqPhibar[0,mif1] * self.yquPhi[mif3,0] * self.yubar[mif2,0] + -3/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,1] * self.ydqPhibar[1,mif1] * self.yquPhi[mif3,0] * self.yubar[mif2,0] + -1/512 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,1] * self.ydqPhibar[1,mif1] * self.yquPhi[mif3,0] * self.yubar[mif2,0] + 1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif4,1] * self.ydqPhibar[1,mif1] * self.yquPhi[mif3,0] * self.yubar[mif2,0] + -3/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,2] * self.ydqPhibar[2,mif1] * self.yquPhi[mif3,0] * self.yubar[mif2,0] + -1/512 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,2] * self.ydqPhibar[2,mif1] * self.yquPhi[mif3,0] * self.yubar[mif2,0] + 1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif4,2] * self.ydqPhibar[2,mif1] * self.yquPhi[mif3,0] * self.yubar[mif2,0] + -1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif3,0] * self.yquPhibar[mif4,0] * self.yu[mif1,0] * self.yubar[mif2,0] + 1/256 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif3,0] * self.yquPhibar[mif4,0] * self.yu[mif1,0] * self.yubar[mif2,0] + -1/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif3,0] * self.yquPhibar[mif4,0] * self.yu[mif1,0] * self.yubar[mif2,0] + -1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif3,0] * self.yquPhibar[mif4,1] * self.yu[mif1,1] * self.yubar[mif2,0] + 1/256 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif3,0] * self.yquPhibar[mif4,1] * self.yu[mif1,1] * self.yubar[mif2,0] + -1/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif3,0] * self.yquPhibar[mif4,1] * self.yu[mif1,1] * self.yubar[mif2,0] + -1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif3,0] * self.yquPhibar[mif4,2] * self.yu[mif1,2] * self.yubar[mif2,0] + 1/256 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif3,0] * self.yquPhibar[mif4,2] * self.yu[mif1,2] * self.yubar[mif2,0] + -1/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif3,0] * self.yquPhibar[mif4,2] * self.yu[mif1,2] * self.yubar[mif2,0] + 1/3072 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[mif4,0] * self.yu[mif3,0] * self.yubar[mif2,0] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[mif4,0] * self.yu[mif3,0] * self.yubar[mif2,0] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,0] * self.yquPhibar[mif4,0] * self.yu[mif3,0] * self.yubar[mif2,0] + 1/3072 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[mif4,1] * self.yu[mif3,1] * self.yubar[mif2,0] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[mif4,1] * self.yu[mif3,1] * self.yubar[mif2,0] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,0] * self.yquPhibar[mif4,1] * self.yu[mif3,1] * self.yubar[mif2,0] + 1/3072 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[mif4,2] * self.yu[mif3,2] * self.yubar[mif2,0] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[mif4,2] * self.yu[mif3,2] * self.yubar[mif2,0] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,0] * self.yquPhibar[mif4,2] * self.yu[mif3,2] * self.yubar[mif2,0] + -1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,0] * self.ydqPhibar[0,mif3] * self.yquPhi[mif1,1] * self.yubar[mif2,1] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,0] * self.ydqPhibar[0,mif3] * self.yquPhi[mif1,1] * self.yubar[mif2,1] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif4,0] * self.ydqPhibar[0,mif3] * self.yquPhi[mif1,1] * self.yubar[mif2,1] + -1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,1] * self.ydqPhibar[1,mif3] * self.yquPhi[mif1,1] * self.yubar[mif2,1] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,1] * self.ydqPhibar[1,mif3] * self.yquPhi[mif1,1] * self.yubar[mif2,1] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif4,1] * self.ydqPhibar[1,mif3] * self.yquPhi[mif1,1] * self.yubar[mif2,1] + -1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,2] * self.ydqPhibar[2,mif3] * self.yquPhi[mif1,1] * self.yubar[mif2,1] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,2] * self.ydqPhibar[2,mif3] * self.yquPhi[mif1,1] * self.yubar[mif2,1] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif4,2] * self.ydqPhibar[2,mif3] * self.yquPhi[mif1,1] * self.yubar[mif2,1] + -3/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,0] * self.ydqPhibar[0,mif1] * self.yquPhi[mif3,1] * self.yubar[mif2,1] + -1/512 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,0] * self.ydqPhibar[0,mif1] * self.yquPhi[mif3,1] * self.yubar[mif2,1] + 1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif4,0] * self.ydqPhibar[0,mif1] * self.yquPhi[mif3,1] * self.yubar[mif2,1] + -3/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,1] * self.ydqPhibar[1,mif1] * self.yquPhi[mif3,1] * self.yubar[mif2,1] + -1/512 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,1] * self.ydqPhibar[1,mif1] * self.yquPhi[mif3,1] * self.yubar[mif2,1] + 1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif4,1] * self.ydqPhibar[1,mif1] * self.yquPhi[mif3,1] * self.yubar[mif2,1] + -3/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,2] * self.ydqPhibar[2,mif1] * self.yquPhi[mif3,1] * self.yubar[mif2,1] + -1/512 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,2] * self.ydqPhibar[2,mif1] * self.yquPhi[mif3,1] * self.yubar[mif2,1] + 1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif4,2] * self.ydqPhibar[2,mif1] * self.yquPhi[mif3,1] * self.yubar[mif2,1] + -1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif3,1] * self.yquPhibar[mif4,0] * self.yu[mif1,0] * self.yubar[mif2,1] + 1/256 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif3,1] * self.yquPhibar[mif4,0] * self.yu[mif1,0] * self.yubar[mif2,1] + -1/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif3,1] * self.yquPhibar[mif4,0] * self.yu[mif1,0] * self.yubar[mif2,1] + -1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif3,1] * self.yquPhibar[mif4,1] * self.yu[mif1,1] * self.yubar[mif2,1] + 1/256 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif3,1] * self.yquPhibar[mif4,1] * self.yu[mif1,1] * self.yubar[mif2,1] + -1/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif3,1] * self.yquPhibar[mif4,1] * self.yu[mif1,1] * self.yubar[mif2,1] + -1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif3,1] * self.yquPhibar[mif4,2] * self.yu[mif1,2] * self.yubar[mif2,1] + 1/256 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif3,1] * self.yquPhibar[mif4,2] * self.yu[mif1,2] * self.yubar[mif2,1] + -1/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif3,1] * self.yquPhibar[mif4,2] * self.yu[mif1,2] * self.yubar[mif2,1] + 1/3072 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[mif4,0] * self.yu[mif3,0] * self.yubar[mif2,1] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[mif4,0] * self.yu[mif3,0] * self.yubar[mif2,1] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,1] * self.yquPhibar[mif4,0] * self.yu[mif3,0] * self.yubar[mif2,1] + 1/3072 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[mif4,1] * self.yu[mif3,1] * self.yubar[mif2,1] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[mif4,1] * self.yu[mif3,1] * self.yubar[mif2,1] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,1] * self.yquPhibar[mif4,1] * self.yu[mif3,1] * self.yubar[mif2,1] + 1/3072 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[mif4,2] * self.yu[mif3,2] * self.yubar[mif2,1] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[mif4,2] * self.yu[mif3,2] * self.yubar[mif2,1] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,1] * self.yquPhibar[mif4,2] * self.yu[mif3,2] * self.yubar[mif2,1] + -1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,0] * self.ydqPhibar[0,mif3] * self.yquPhi[mif1,2] * self.yubar[mif2,2] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,0] * self.ydqPhibar[0,mif3] * self.yquPhi[mif1,2] * self.yubar[mif2,2] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif4,0] * self.ydqPhibar[0,mif3] * self.yquPhi[mif1,2] * self.yubar[mif2,2] + -1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,1] * self.ydqPhibar[1,mif3] * self.yquPhi[mif1,2] * self.yubar[mif2,2] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,1] * self.ydqPhibar[1,mif3] * self.yquPhi[mif1,2] * self.yubar[mif2,2] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif4,1] * self.ydqPhibar[1,mif3] * self.yquPhi[mif1,2] * self.yubar[mif2,2] + -1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,2] * self.ydqPhibar[2,mif3] * self.yquPhi[mif1,2] * self.yubar[mif2,2] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,2] * self.ydqPhibar[2,mif3] * self.yquPhi[mif1,2] * self.yubar[mif2,2] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif4,2] * self.ydqPhibar[2,mif3] * self.yquPhi[mif1,2] * self.yubar[mif2,2] + -3/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,0] * self.ydqPhibar[0,mif1] * self.yquPhi[mif3,2] * self.yubar[mif2,2] + -1/512 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,0] * self.ydqPhibar[0,mif1] * self.yquPhi[mif3,2] * self.yubar[mif2,2] + 1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif4,0] * self.ydqPhibar[0,mif1] * self.yquPhi[mif3,2] * self.yubar[mif2,2] + -3/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,1] * self.ydqPhibar[1,mif1] * self.yquPhi[mif3,2] * self.yubar[mif2,2] + -1/512 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,1] * self.ydqPhibar[1,mif1] * self.yquPhi[mif3,2] * self.yubar[mif2,2] + 1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif4,1] * self.ydqPhibar[1,mif1] * self.yquPhi[mif3,2] * self.yubar[mif2,2] + -3/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,2] * self.ydqPhibar[2,mif1] * self.yquPhi[mif3,2] * self.yubar[mif2,2] + -1/512 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,2] * self.ydqPhibar[2,mif1] * self.yquPhi[mif3,2] * self.yubar[mif2,2] + 1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif4,2] * self.ydqPhibar[2,mif1] * self.yquPhi[mif3,2] * self.yubar[mif2,2] + -1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif3,2] * self.yquPhibar[mif4,0] * self.yu[mif1,0] * self.yubar[mif2,2] + 1/256 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif3,2] * self.yquPhibar[mif4,0] * self.yu[mif1,0] * self.yubar[mif2,2] + -1/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif3,2] * self.yquPhibar[mif4,0] * self.yu[mif1,0] * self.yubar[mif2,2] + -1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif3,2] * self.yquPhibar[mif4,1] * self.yu[mif1,1] * self.yubar[mif2,2] + 1/256 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif3,2] * self.yquPhibar[mif4,1] * self.yu[mif1,1] * self.yubar[mif2,2] + -1/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif3,2] * self.yquPhibar[mif4,1] * self.yu[mif1,1] * self.yubar[mif2,2] + -1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif3,2] * self.yquPhibar[mif4,2] * self.yu[mif1,2] * self.yubar[mif2,2] + 1/256 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif3,2] * self.yquPhibar[mif4,2] * self.yu[mif1,2] * self.yubar[mif2,2] + -1/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif3,2] * self.yquPhibar[mif4,2] * self.yu[mif1,2] * self.yubar[mif2,2] + 1/3072 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[mif4,0] * self.yu[mif3,0] * self.yubar[mif2,2] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[mif4,0] * self.yu[mif3,0] * self.yubar[mif2,2] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,2] * self.yquPhibar[mif4,0] * self.yu[mif3,0] * self.yubar[mif2,2] + 1/3072 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[mif4,1] * self.yu[mif3,1] * self.yubar[mif2,2] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[mif4,1] * self.yu[mif3,1] * self.yubar[mif2,2] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,2] * self.yquPhibar[mif4,1] * self.yu[mif3,1] * self.yubar[mif2,2] + 1/3072 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[mif4,2] * self.yu[mif3,2] * self.yubar[mif2,2] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[mif4,2] * self.yu[mif3,2] * self.yubar[mif2,2] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,2] * self.yquPhibar[mif4,2] * self.yu[mif3,2] * self.yubar[mif2,2] + -3/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.ydqPhibar[0,mif3] * self.yquPhi[mif1,0] * self.yubar[mif4,0] + -1/512 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.ydqPhibar[0,mif3] * self.yquPhi[mif1,0] * self.yubar[mif4,0] + 1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,0] * self.ydqPhibar[0,mif3] * self.yquPhi[mif1,0] * self.yubar[mif4,0] + -3/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.ydqPhibar[1,mif3] * self.yquPhi[mif1,0] * self.yubar[mif4,0] + -1/512 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.ydqPhibar[1,mif3] * self.yquPhi[mif1,0] * self.yubar[mif4,0] + 1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,1] * self.ydqPhibar[1,mif3] * self.yquPhi[mif1,0] * self.yubar[mif4,0] + -3/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.ydqPhibar[2,mif3] * self.yquPhi[mif1,0] * self.yubar[mif4,0] + -1/512 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.ydqPhibar[2,mif3] * self.yquPhi[mif1,0] * self.yubar[mif4,0] + 1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,2] * self.ydqPhibar[2,mif3] * self.yquPhi[mif1,0] * self.yubar[mif4,0] + -1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[mif3,0] * self.yubar[mif4,0] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[mif3,0] * self.yubar[mif4,0] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[mif3,0] * self.yubar[mif4,0] + -1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[mif3,0] * self.yubar[mif4,0] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[mif3,0] * self.yubar[mif4,0] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[mif3,0] * self.yubar[mif4,0] + -1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[mif3,0] * self.yubar[mif4,0] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[mif3,0] * self.yubar[mif4,0] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[mif3,0] * self.yubar[mif4,0] + -1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif3,0] * self.yquPhibar[mif2,0] * self.yu[mif1,0] * self.yubar[mif4,0] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif3,0] * self.yquPhibar[mif2,0] * self.yu[mif1,0] * self.yubar[mif4,0] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif3,0] * self.yquPhibar[mif2,0] * self.yu[mif1,0] * self.yubar[mif4,0] + -1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif3,0] * self.yquPhibar[mif2,1] * self.yu[mif1,1] * self.yubar[mif4,0] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif3,0] * self.yquPhibar[mif2,1] * self.yu[mif1,1] * self.yubar[mif4,0] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif3,0] * self.yquPhibar[mif2,1] * self.yu[mif1,1] * self.yubar[mif4,0] + -1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif3,0] * self.yquPhibar[mif2,2] * self.yu[mif1,2] * self.yubar[mif4,0] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif3,0] * self.yquPhibar[mif2,2] * self.yu[mif1,2] * self.yubar[mif4,0] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif3,0] * self.yquPhibar[mif2,2] * self.yu[mif1,2] * self.yubar[mif4,0] + 3/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[mif2,0] * self.yu[mif3,0] * self.yubar[mif4,0] + 1/256 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[mif2,0] * self.yu[mif3,0] * self.yubar[mif4,0] + -1/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,0] * self.yquPhibar[mif2,0] * self.yu[mif3,0] * self.yubar[mif4,0] + 3/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[mif2,1] * self.yu[mif3,1] * self.yubar[mif4,0] + 1/256 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[mif2,1] * self.yu[mif3,1] * self.yubar[mif4,0] + -1/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,0] * self.yquPhibar[mif2,1] * self.yu[mif3,1] * self.yubar[mif4,0] + 3/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[mif2,2] * self.yu[mif3,2] * self.yubar[mif4,0] + 1/256 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[mif2,2] * self.yu[mif3,2] * self.yubar[mif4,0] + -1/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,0] * self.yquPhibar[mif2,2] * self.yu[mif3,2] * self.yubar[mif4,0] + -3/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.ydqPhibar[0,mif3] * self.yquPhi[mif1,1] * self.yubar[mif4,1] + -1/512 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.ydqPhibar[0,mif3] * self.yquPhi[mif1,1] * self.yubar[mif4,1] + 1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,0] * self.ydqPhibar[0,mif3] * self.yquPhi[mif1,1] * self.yubar[mif4,1] + -3/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.ydqPhibar[1,mif3] * self.yquPhi[mif1,1] * self.yubar[mif4,1] + -1/512 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.ydqPhibar[1,mif3] * self.yquPhi[mif1,1] * self.yubar[mif4,1] + 1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,1] * self.ydqPhibar[1,mif3] * self.yquPhi[mif1,1] * self.yubar[mif4,1] + -3/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.ydqPhibar[2,mif3] * self.yquPhi[mif1,1] * self.yubar[mif4,1] + -1/512 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.ydqPhibar[2,mif3] * self.yquPhi[mif1,1] * self.yubar[mif4,1] + 1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,2] * self.ydqPhibar[2,mif3] * self.yquPhi[mif1,1] * self.yubar[mif4,1] + -1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[mif3,1] * self.yubar[mif4,1] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[mif3,1] * self.yubar[mif4,1] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[mif3,1] * self.yubar[mif4,1] + -1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[mif3,1] * self.yubar[mif4,1] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[mif3,1] * self.yubar[mif4,1] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[mif3,1] * self.yubar[mif4,1] + -1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[mif3,1] * self.yubar[mif4,1] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[mif3,1] * self.yubar[mif4,1] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[mif3,1] * self.yubar[mif4,1] + -1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif3,1] * self.yquPhibar[mif2,0] * self.yu[mif1,0] * self.yubar[mif4,1] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif3,1] * self.yquPhibar[mif2,0] * self.yu[mif1,0] * self.yubar[mif4,1] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif3,1] * self.yquPhibar[mif2,0] * self.yu[mif1,0] * self.yubar[mif4,1] + -1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif3,1] * self.yquPhibar[mif2,1] * self.yu[mif1,1] * self.yubar[mif4,1] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif3,1] * self.yquPhibar[mif2,1] * self.yu[mif1,1] * self.yubar[mif4,1] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif3,1] * self.yquPhibar[mif2,1] * self.yu[mif1,1] * self.yubar[mif4,1] + -1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif3,1] * self.yquPhibar[mif2,2] * self.yu[mif1,2] * self.yubar[mif4,1] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif3,1] * self.yquPhibar[mif2,2] * self.yu[mif1,2] * self.yubar[mif4,1] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif3,1] * self.yquPhibar[mif2,2] * self.yu[mif1,2] * self.yubar[mif4,1] + 3/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[mif2,0] * self.yu[mif3,0] * self.yubar[mif4,1] + 1/256 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[mif2,0] * self.yu[mif3,0] * self.yubar[mif4,1] + -1/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,1] * self.yquPhibar[mif2,0] * self.yu[mif3,0] * self.yubar[mif4,1] + 3/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[mif2,1] * self.yu[mif3,1] * self.yubar[mif4,1] + 1/256 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[mif2,1] * self.yu[mif3,1] * self.yubar[mif4,1] + -1/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,1] * self.yquPhibar[mif2,1] * self.yu[mif3,1] * self.yubar[mif4,1] + 3/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[mif2,2] * self.yu[mif3,2] * self.yubar[mif4,1] + 1/256 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[mif2,2] * self.yu[mif3,2] * self.yubar[mif4,1] + -1/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,1] * self.yquPhibar[mif2,2] * self.yu[mif3,2] * self.yubar[mif4,1] + -3/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.ydqPhibar[0,mif3] * self.yquPhi[mif1,2] * self.yubar[mif4,2] + -1/512 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.ydqPhibar[0,mif3] * self.yquPhi[mif1,2] * self.yubar[mif4,2] + 1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,0] * self.ydqPhibar[0,mif3] * self.yquPhi[mif1,2] * self.yubar[mif4,2] + -3/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.ydqPhibar[1,mif3] * self.yquPhi[mif1,2] * self.yubar[mif4,2] + -1/512 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.ydqPhibar[1,mif3] * self.yquPhi[mif1,2] * self.yubar[mif4,2] + 1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,1] * self.ydqPhibar[1,mif3] * self.yquPhi[mif1,2] * self.yubar[mif4,2] + -3/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.ydqPhibar[2,mif3] * self.yquPhi[mif1,2] * self.yubar[mif4,2] + -1/512 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.ydqPhibar[2,mif3] * self.yquPhi[mif1,2] * self.yubar[mif4,2] + 1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,2] * self.ydqPhibar[2,mif3] * self.yquPhi[mif1,2] * self.yubar[mif4,2] + -1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[mif3,2] * self.yubar[mif4,2] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[mif3,2] * self.yubar[mif4,2] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[mif3,2] * self.yubar[mif4,2] + -1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[mif3,2] * self.yubar[mif4,2] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[mif3,2] * self.yubar[mif4,2] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[mif3,2] * self.yubar[mif4,2] + -1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[mif3,2] * self.yubar[mif4,2] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[mif3,2] * self.yubar[mif4,2] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[mif3,2] * self.yubar[mif4,2] + -1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif3,2] * self.yquPhibar[mif2,0] * self.yu[mif1,0] * self.yubar[mif4,2] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif3,2] * self.yquPhibar[mif2,0] * self.yu[mif1,0] * self.yubar[mif4,2] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif3,2] * self.yquPhibar[mif2,0] * self.yu[mif1,0] * self.yubar[mif4,2] + -1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif3,2] * self.yquPhibar[mif2,1] * self.yu[mif1,1] * self.yubar[mif4,2] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif3,2] * self.yquPhibar[mif2,1] * self.yu[mif1,1] * self.yubar[mif4,2] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif3,2] * self.yquPhibar[mif2,1] * self.yu[mif1,1] * self.yubar[mif4,2] + -1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif3,2] * self.yquPhibar[mif2,2] * self.yu[mif1,2] * self.yubar[mif4,2] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif3,2] * self.yquPhibar[mif2,2] * self.yu[mif1,2] * self.yubar[mif4,2] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif3,2] * self.yquPhibar[mif2,2] * self.yu[mif1,2] * self.yubar[mif4,2] + 3/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[mif2,0] * self.yu[mif3,0] * self.yubar[mif4,2] + 1/256 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[mif2,0] * self.yu[mif3,0] * self.yubar[mif4,2] + -1/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,2] * self.yquPhibar[mif2,0] * self.yu[mif3,0] * self.yubar[mif4,2] + 3/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[mif2,1] * self.yu[mif3,1] * self.yubar[mif4,2] + 1/256 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[mif2,1] * self.yu[mif3,1] * self.yubar[mif4,2] + -1/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,2] * self.yquPhibar[mif2,1] * self.yu[mif3,1] * self.yubar[mif4,2] + 3/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[mif2,2] * self.yu[mif3,2] * self.yubar[mif4,2] + 1/256 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[mif2,2] * self.yu[mif3,2] * self.yubar[mif4,2] + -1/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,2] * self.yquPhibar[mif2,2] * self.yu[mif3,2] * self.yubar[mif4,2])

    def alphaOqq3(self, mif1,mif2,mif3,mif4):
        return (-1/640 * (self.g3)**(4) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.kronecker_delta(mif2,mif3) + -1/960 * (self.g2)**(4) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 1/1728 * (self.g2)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.ydqPhi[0,mif2] * self.ydqPhibar[0,mif1] + 17/13824 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.ydqPhi[0,mif4] * self.ydqPhibar[0,mif1] + 1/2304 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.ydqPhi[0,mif4] * self.ydqPhibar[0,mif1] + -1/2304 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[0,mif4] * self.ydqPhibar[0,mif1] + 1/3072 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,0] * self.ydbar[mif2,0] * self.ydqPhi[0,mif4] * self.ydqPhibar[0,mif1] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,0] * self.ydbar[mif2,0] * self.ydqPhi[0,mif4] * self.ydqPhibar[0,mif1] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif3,0] * self.ydbar[mif2,0] * self.ydqPhi[0,mif4] * self.ydqPhibar[0,mif1] + 1/3072 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,1] * self.ydbar[mif2,0] * self.ydqPhi[1,mif4] * self.ydqPhibar[0,mif1] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,1] * self.ydbar[mif2,0] * self.ydqPhi[1,mif4] * self.ydqPhibar[0,mif1] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif3,1] * self.ydbar[mif2,0] * self.ydqPhi[1,mif4] * self.ydqPhibar[0,mif1] + 1/3072 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,2] * self.ydbar[mif2,0] * self.ydqPhi[2,mif4] * self.ydqPhibar[0,mif1] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,2] * self.ydbar[mif2,0] * self.ydqPhi[2,mif4] * self.ydqPhibar[0,mif1] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif3,2] * self.ydbar[mif2,0] * self.ydqPhi[2,mif4] * self.ydqPhibar[0,mif1] + 17/13824 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.ydqPhi[0,mif2] * self.ydqPhibar[0,mif3] + 1/2304 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.ydqPhi[0,mif2] * self.ydqPhibar[0,mif3] + -1/2304 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[0,mif2] * self.ydqPhibar[0,mif3] + -1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif4,0] * self.ydqPhi[0,mif2] * self.ydqPhibar[0,mif3] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif4,0] * self.ydqPhi[0,mif2] * self.ydqPhibar[0,mif3] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] * self.ydbar[mif4,0] * self.ydqPhi[0,mif2] * self.ydqPhibar[0,mif3] + 1/1728 * (self.g2)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.ydqPhi[0,mif4] * self.ydqPhibar[0,mif3] + -1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif4,0] * self.ydqPhi[1,mif2] * self.ydqPhibar[0,mif3] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif4,0] * self.ydqPhi[1,mif2] * self.ydqPhibar[0,mif3] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] * self.ydbar[mif4,0] * self.ydqPhi[1,mif2] * self.ydqPhibar[0,mif3] + -1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif4,0] * self.ydqPhi[2,mif2] * self.ydqPhibar[0,mif3] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif4,0] * self.ydqPhi[2,mif2] * self.ydqPhibar[0,mif3] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] * self.ydbar[mif4,0] * self.ydqPhi[2,mif2] * self.ydqPhibar[0,mif3] + -1/9216 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif2] * self.ydqPhi[0,mif4] * self.ydqPhibar[0,mif1] * self.ydqPhibar[0,mif3] + 1/3072 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,0] * self.ydbar[mif2,1] * self.ydqPhi[0,mif4] * self.ydqPhibar[1,mif1] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,0] * self.ydbar[mif2,1] * self.ydqPhi[0,mif4] * self.ydqPhibar[1,mif1] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif3,0] * self.ydbar[mif2,1] * self.ydqPhi[0,mif4] * self.ydqPhibar[1,mif1] + 1/1728 * (self.g2)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.ydqPhi[1,mif2] * self.ydqPhibar[1,mif1] + 17/13824 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.ydqPhi[1,mif4] * self.ydqPhibar[1,mif1] + 1/2304 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.ydqPhi[1,mif4] * self.ydqPhibar[1,mif1] + -1/2304 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[1,mif4] * self.ydqPhibar[1,mif1] + 1/3072 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,1] * self.ydbar[mif2,1] * self.ydqPhi[1,mif4] * self.ydqPhibar[1,mif1] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,1] * self.ydbar[mif2,1] * self.ydqPhi[1,mif4] * self.ydqPhibar[1,mif1] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif3,1] * self.ydbar[mif2,1] * self.ydqPhi[1,mif4] * self.ydqPhibar[1,mif1] + 1/3072 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,2] * self.ydbar[mif2,1] * self.ydqPhi[2,mif4] * self.ydqPhibar[1,mif1] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,2] * self.ydbar[mif2,1] * self.ydqPhi[2,mif4] * self.ydqPhibar[1,mif1] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif3,2] * self.ydbar[mif2,1] * self.ydqPhi[2,mif4] * self.ydqPhibar[1,mif1] + -1/9216 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif4] * self.ydqPhi[1,mif2] * self.ydqPhibar[0,mif3] * self.ydqPhibar[1,mif1] + -1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif4,1] * self.ydqPhi[0,mif2] * self.ydqPhibar[1,mif3] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif4,1] * self.ydqPhi[0,mif2] * self.ydqPhibar[1,mif3] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] * self.ydbar[mif4,1] * self.ydqPhi[0,mif2] * self.ydqPhibar[1,mif3] + 17/13824 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.ydqPhi[1,mif2] * self.ydqPhibar[1,mif3] + 1/2304 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.ydqPhi[1,mif2] * self.ydqPhibar[1,mif3] + -1/2304 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[1,mif2] * self.ydqPhibar[1,mif3] + -1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif4,1] * self.ydqPhi[1,mif2] * self.ydqPhibar[1,mif3] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif4,1] * self.ydqPhi[1,mif2] * self.ydqPhibar[1,mif3] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] * self.ydbar[mif4,1] * self.ydqPhi[1,mif2] * self.ydqPhibar[1,mif3] + 1/1728 * (self.g2)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.ydqPhi[1,mif4] * self.ydqPhibar[1,mif3] + -1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif4,1] * self.ydqPhi[2,mif2] * self.ydqPhibar[1,mif3] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif4,1] * self.ydqPhi[2,mif2] * self.ydqPhibar[1,mif3] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] * self.ydbar[mif4,1] * self.ydqPhi[2,mif2] * self.ydqPhibar[1,mif3] + -1/9216 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif2] * self.ydqPhi[1,mif4] * self.ydqPhibar[0,mif1] * self.ydqPhibar[1,mif3] + -1/9216 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,mif2] * self.ydqPhi[1,mif4] * self.ydqPhibar[1,mif1] * self.ydqPhibar[1,mif3] + 1/3072 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,0] * self.ydbar[mif2,2] * self.ydqPhi[0,mif4] * self.ydqPhibar[2,mif1] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,0] * self.ydbar[mif2,2] * self.ydqPhi[0,mif4] * self.ydqPhibar[2,mif1] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif3,0] * self.ydbar[mif2,2] * self.ydqPhi[0,mif4] * self.ydqPhibar[2,mif1] + 1/3072 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,1] * self.ydbar[mif2,2] * self.ydqPhi[1,mif4] * self.ydqPhibar[2,mif1] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,1] * self.ydbar[mif2,2] * self.ydqPhi[1,mif4] * self.ydqPhibar[2,mif1] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif3,1] * self.ydbar[mif2,2] * self.ydqPhi[1,mif4] * self.ydqPhibar[2,mif1] + 1/1728 * (self.g2)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.ydqPhi[2,mif2] * self.ydqPhibar[2,mif1] + 17/13824 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.ydqPhi[2,mif4] * self.ydqPhibar[2,mif1] + 1/2304 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.ydqPhi[2,mif4] * self.ydqPhibar[2,mif1] + -1/2304 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[2,mif4] * self.ydqPhibar[2,mif1] + 1/3072 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,2] * self.ydbar[mif2,2] * self.ydqPhi[2,mif4] * self.ydqPhibar[2,mif1] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,2] * self.ydbar[mif2,2] * self.ydqPhi[2,mif4] * self.ydqPhibar[2,mif1] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif3,2] * self.ydbar[mif2,2] * self.ydqPhi[2,mif4] * self.ydqPhibar[2,mif1] + -1/9216 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif4] * self.ydqPhi[2,mif2] * self.ydqPhibar[0,mif3] * self.ydqPhibar[2,mif1] + -1/9216 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,mif4] * self.ydqPhi[2,mif2] * self.ydqPhibar[1,mif3] * self.ydqPhibar[2,mif1] + -1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif4,2] * self.ydqPhi[0,mif2] * self.ydqPhibar[2,mif3] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydbar[mif4,2] * self.ydqPhi[0,mif2] * self.ydqPhibar[2,mif3] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] * self.ydbar[mif4,2] * self.ydqPhi[0,mif2] * self.ydqPhibar[2,mif3] + -1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif4,2] * self.ydqPhi[1,mif2] * self.ydqPhibar[2,mif3] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydbar[mif4,2] * self.ydqPhi[1,mif2] * self.ydqPhibar[2,mif3] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] * self.ydbar[mif4,2] * self.ydqPhi[1,mif2] * self.ydqPhibar[2,mif3] + 17/13824 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.ydqPhi[2,mif2] * self.ydqPhibar[2,mif3] + 1/2304 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.ydqPhi[2,mif2] * self.ydqPhibar[2,mif3] + -1/2304 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[2,mif2] * self.ydqPhibar[2,mif3] + -1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif4,2] * self.ydqPhi[2,mif2] * self.ydqPhibar[2,mif3] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydbar[mif4,2] * self.ydqPhi[2,mif2] * self.ydqPhibar[2,mif3] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] * self.ydbar[mif4,2] * self.ydqPhi[2,mif2] * self.ydqPhibar[2,mif3] + 1/1728 * (self.g2)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.ydqPhi[2,mif4] * self.ydqPhibar[2,mif3] + -1/9216 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif2] * self.ydqPhi[2,mif4] * self.ydqPhibar[0,mif1] * self.ydqPhibar[2,mif3] + -1/9216 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,mif2] * self.ydqPhi[2,mif4] * self.ydqPhibar[1,mif1] * self.ydqPhibar[2,mif3] + -1/9216 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,mif2] * self.ydqPhi[2,mif4] * self.ydqPhibar[2,mif1] * self.ydqPhibar[2,mif3] + 1/1728 * (self.g2)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yquPhi[mif1,0] * self.yquPhibar[mif2,0] + -5/4608 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif4] * self.ydqPhibar[0,mif3] * self.yquPhi[mif1,0] * self.yquPhibar[mif2,0] + -5/4608 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,mif4] * self.ydqPhibar[1,mif3] * self.yquPhi[mif1,0] * self.yquPhibar[mif2,0] + -5/4608 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,mif4] * self.ydqPhibar[2,mif3] * self.yquPhi[mif1,0] * self.yquPhibar[mif2,0] + 17/13824 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yquPhi[mif3,0] * self.yquPhibar[mif2,0] + 1/2304 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yquPhi[mif3,0] * self.yquPhibar[mif2,0] + -1/2304 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif3,0] * self.yquPhibar[mif2,0] + -1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif4] * self.ydqPhibar[0,mif1] * self.yquPhi[mif3,0] * self.yquPhibar[mif2,0] + -1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,mif4] * self.ydqPhibar[1,mif1] * self.yquPhi[mif3,0] * self.yquPhibar[mif2,0] + -1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,mif4] * self.ydqPhibar[2,mif1] * self.yquPhi[mif3,0] * self.yquPhibar[mif2,0] + 1/1728 * (self.g2)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yquPhi[mif1,1] * self.yquPhibar[mif2,1] + -5/4608 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif4] * self.ydqPhibar[0,mif3] * self.yquPhi[mif1,1] * self.yquPhibar[mif2,1] + -5/4608 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,mif4] * self.ydqPhibar[1,mif3] * self.yquPhi[mif1,1] * self.yquPhibar[mif2,1] + -5/4608 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,mif4] * self.ydqPhibar[2,mif3] * self.yquPhi[mif1,1] * self.yquPhibar[mif2,1] + 17/13824 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yquPhi[mif3,1] * self.yquPhibar[mif2,1] + 1/2304 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yquPhi[mif3,1] * self.yquPhibar[mif2,1] + -1/2304 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif3,1] * self.yquPhibar[mif2,1] + -1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif4] * self.ydqPhibar[0,mif1] * self.yquPhi[mif3,1] * self.yquPhibar[mif2,1] + -1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,mif4] * self.ydqPhibar[1,mif1] * self.yquPhi[mif3,1] * self.yquPhibar[mif2,1] + -1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,mif4] * self.ydqPhibar[2,mif1] * self.yquPhi[mif3,1] * self.yquPhibar[mif2,1] + 1/1728 * (self.g2)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yquPhi[mif1,2] * self.yquPhibar[mif2,2] + -5/4608 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif4] * self.ydqPhibar[0,mif3] * self.yquPhi[mif1,2] * self.yquPhibar[mif2,2] + -5/4608 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,mif4] * self.ydqPhibar[1,mif3] * self.yquPhi[mif1,2] * self.yquPhibar[mif2,2] + -5/4608 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,mif4] * self.ydqPhibar[2,mif3] * self.yquPhi[mif1,2] * self.yquPhibar[mif2,2] + 17/13824 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yquPhi[mif3,2] * self.yquPhibar[mif2,2] + 1/2304 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yquPhi[mif3,2] * self.yquPhibar[mif2,2] + -1/2304 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif3,2] * self.yquPhibar[mif2,2] + -1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif4] * self.ydqPhibar[0,mif1] * self.yquPhi[mif3,2] * self.yquPhibar[mif2,2] + -1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,mif4] * self.ydqPhibar[1,mif1] * self.yquPhi[mif3,2] * self.yquPhibar[mif2,2] + -1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,mif4] * self.ydqPhibar[2,mif1] * self.yquPhi[mif3,2] * self.yquPhibar[mif2,2] + 17/13824 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yquPhi[mif1,0] * self.yquPhibar[mif4,0] + 1/2304 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yquPhi[mif1,0] * self.yquPhibar[mif4,0] + -1/2304 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,0] * self.yquPhibar[mif4,0] + -1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif2] * self.ydqPhibar[0,mif3] * self.yquPhi[mif1,0] * self.yquPhibar[mif4,0] + -1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,mif2] * self.ydqPhibar[1,mif3] * self.yquPhi[mif1,0] * self.yquPhibar[mif4,0] + -1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,mif2] * self.ydqPhibar[2,mif3] * self.yquPhi[mif1,0] * self.yquPhibar[mif4,0] + 1/1728 * (self.g2)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yquPhi[mif3,0] * self.yquPhibar[mif4,0] + -5/4608 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif2] * self.ydqPhibar[0,mif1] * self.yquPhi[mif3,0] * self.yquPhibar[mif4,0] + -5/4608 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,mif2] * self.ydqPhibar[1,mif1] * self.yquPhi[mif3,0] * self.yquPhibar[mif4,0] + -5/4608 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,mif2] * self.ydqPhibar[2,mif1] * self.yquPhi[mif3,0] * self.yquPhibar[mif4,0] + -1/9216 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhi[mif3,0] * self.yquPhibar[mif2,0] * self.yquPhibar[mif4,0] + -1/9216 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhi[mif3,0] * self.yquPhibar[mif2,1] * self.yquPhibar[mif4,0] + -1/9216 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhi[mif3,0] * self.yquPhibar[mif2,2] * self.yquPhibar[mif4,0] + 17/13824 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yquPhi[mif1,1] * self.yquPhibar[mif4,1] + 1/2304 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yquPhi[mif1,1] * self.yquPhibar[mif4,1] + -1/2304 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,1] * self.yquPhibar[mif4,1] + -1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif2] * self.ydqPhibar[0,mif3] * self.yquPhi[mif1,1] * self.yquPhibar[mif4,1] + -1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,mif2] * self.ydqPhibar[1,mif3] * self.yquPhi[mif1,1] * self.yquPhibar[mif4,1] + -1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,mif2] * self.ydqPhibar[2,mif3] * self.yquPhi[mif1,1] * self.yquPhibar[mif4,1] + 1/1728 * (self.g2)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yquPhi[mif3,1] * self.yquPhibar[mif4,1] + -5/4608 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif2] * self.ydqPhibar[0,mif1] * self.yquPhi[mif3,1] * self.yquPhibar[mif4,1] + -5/4608 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,mif2] * self.ydqPhibar[1,mif1] * self.yquPhi[mif3,1] * self.yquPhibar[mif4,1] + -5/4608 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,mif2] * self.ydqPhibar[2,mif1] * self.yquPhi[mif3,1] * self.yquPhibar[mif4,1] + -1/9216 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhi[mif3,1] * self.yquPhibar[mif2,0] * self.yquPhibar[mif4,1] + -1/9216 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhi[mif3,1] * self.yquPhibar[mif2,1] * self.yquPhibar[mif4,1] + -1/9216 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhi[mif3,1] * self.yquPhibar[mif2,2] * self.yquPhibar[mif4,1] + 17/13824 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yquPhi[mif1,2] * self.yquPhibar[mif4,2] + 1/2304 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yquPhi[mif1,2] * self.yquPhibar[mif4,2] + -1/2304 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,2] * self.yquPhibar[mif4,2] + -1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif2] * self.ydqPhibar[0,mif3] * self.yquPhi[mif1,2] * self.yquPhibar[mif4,2] + -1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,mif2] * self.ydqPhibar[1,mif3] * self.yquPhi[mif1,2] * self.yquPhibar[mif4,2] + -1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,mif2] * self.ydqPhibar[2,mif3] * self.yquPhi[mif1,2] * self.yquPhibar[mif4,2] + 1/1728 * (self.g2)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yquPhi[mif3,2] * self.yquPhibar[mif4,2] + -5/4608 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif2] * self.ydqPhibar[0,mif1] * self.yquPhi[mif3,2] * self.yquPhibar[mif4,2] + -5/4608 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,mif2] * self.ydqPhibar[1,mif1] * self.yquPhi[mif3,2] * self.yquPhibar[mif4,2] + -5/4608 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,mif2] * self.ydqPhibar[2,mif1] * self.yquPhi[mif3,2] * self.yquPhibar[mif4,2] + -1/9216 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhi[mif3,2] * self.yquPhibar[mif2,0] * self.yquPhibar[mif4,2] + -1/9216 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhi[mif3,2] * self.yquPhibar[mif2,1] * self.yquPhibar[mif4,2] + -1/9216 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhi[mif3,2] * self.yquPhibar[mif2,2] * self.yquPhibar[mif4,2] + 1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,0] * self.ydqPhi[0,mif4] * self.yquPhibar[mif2,0] * self.yu[mif1,0] + 1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,0] * self.ydqPhi[0,mif4] * self.yquPhibar[mif2,0] * self.yu[mif1,0] + -1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif3,0] * self.ydqPhi[0,mif4] * self.yquPhibar[mif2,0] * self.yu[mif1,0] + 1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,1] * self.ydqPhi[1,mif4] * self.yquPhibar[mif2,0] * self.yu[mif1,0] + 1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,1] * self.ydqPhi[1,mif4] * self.yquPhibar[mif2,0] * self.yu[mif1,0] + -1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif3,1] * self.ydqPhi[1,mif4] * self.yquPhibar[mif2,0] * self.yu[mif1,0] + 1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,2] * self.ydqPhi[2,mif4] * self.yquPhibar[mif2,0] * self.yu[mif1,0] + 1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,2] * self.ydqPhi[2,mif4] * self.yquPhibar[mif2,0] * self.yu[mif1,0] + -1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif3,2] * self.ydqPhi[2,mif4] * self.yquPhibar[mif2,0] * self.yu[mif1,0] + 3/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,0] * self.ydqPhi[0,mif2] * self.yquPhibar[mif4,0] * self.yu[mif1,0] + 1/512 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,0] * self.ydqPhi[0,mif2] * self.yquPhibar[mif4,0] * self.yu[mif1,0] + -1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif3,0] * self.ydqPhi[0,mif2] * self.yquPhibar[mif4,0] * self.yu[mif1,0] + 3/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,1] * self.ydqPhi[1,mif2] * self.yquPhibar[mif4,0] * self.yu[mif1,0] + 1/512 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,1] * self.ydqPhi[1,mif2] * self.yquPhibar[mif4,0] * self.yu[mif1,0] + -1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif3,1] * self.ydqPhi[1,mif2] * self.yquPhibar[mif4,0] * self.yu[mif1,0] + 3/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,2] * self.ydqPhi[2,mif2] * self.yquPhibar[mif4,0] * self.yu[mif1,0] + 1/512 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,2] * self.ydqPhi[2,mif2] * self.yquPhibar[mif4,0] * self.yu[mif1,0] + -1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif3,2] * self.ydqPhi[2,mif2] * self.yquPhibar[mif4,0] * self.yu[mif1,0] + 1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,0] * self.ydqPhi[0,mif4] * self.yquPhibar[mif2,1] * self.yu[mif1,1] + 1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,0] * self.ydqPhi[0,mif4] * self.yquPhibar[mif2,1] * self.yu[mif1,1] + -1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif3,0] * self.ydqPhi[0,mif4] * self.yquPhibar[mif2,1] * self.yu[mif1,1] + 1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,1] * self.ydqPhi[1,mif4] * self.yquPhibar[mif2,1] * self.yu[mif1,1] + 1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,1] * self.ydqPhi[1,mif4] * self.yquPhibar[mif2,1] * self.yu[mif1,1] + -1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif3,1] * self.ydqPhi[1,mif4] * self.yquPhibar[mif2,1] * self.yu[mif1,1] + 1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,2] * self.ydqPhi[2,mif4] * self.yquPhibar[mif2,1] * self.yu[mif1,1] + 1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,2] * self.ydqPhi[2,mif4] * self.yquPhibar[mif2,1] * self.yu[mif1,1] + -1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif3,2] * self.ydqPhi[2,mif4] * self.yquPhibar[mif2,1] * self.yu[mif1,1] + 3/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,0] * self.ydqPhi[0,mif2] * self.yquPhibar[mif4,1] * self.yu[mif1,1] + 1/512 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,0] * self.ydqPhi[0,mif2] * self.yquPhibar[mif4,1] * self.yu[mif1,1] + -1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif3,0] * self.ydqPhi[0,mif2] * self.yquPhibar[mif4,1] * self.yu[mif1,1] + 3/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,1] * self.ydqPhi[1,mif2] * self.yquPhibar[mif4,1] * self.yu[mif1,1] + 1/512 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,1] * self.ydqPhi[1,mif2] * self.yquPhibar[mif4,1] * self.yu[mif1,1] + -1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif3,1] * self.ydqPhi[1,mif2] * self.yquPhibar[mif4,1] * self.yu[mif1,1] + 3/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,2] * self.ydqPhi[2,mif2] * self.yquPhibar[mif4,1] * self.yu[mif1,1] + 1/512 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,2] * self.ydqPhi[2,mif2] * self.yquPhibar[mif4,1] * self.yu[mif1,1] + -1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif3,2] * self.ydqPhi[2,mif2] * self.yquPhibar[mif4,1] * self.yu[mif1,1] + 1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,0] * self.ydqPhi[0,mif4] * self.yquPhibar[mif2,2] * self.yu[mif1,2] + 1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,0] * self.ydqPhi[0,mif4] * self.yquPhibar[mif2,2] * self.yu[mif1,2] + -1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif3,0] * self.ydqPhi[0,mif4] * self.yquPhibar[mif2,2] * self.yu[mif1,2] + 1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,1] * self.ydqPhi[1,mif4] * self.yquPhibar[mif2,2] * self.yu[mif1,2] + 1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,1] * self.ydqPhi[1,mif4] * self.yquPhibar[mif2,2] * self.yu[mif1,2] + -1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif3,1] * self.ydqPhi[1,mif4] * self.yquPhibar[mif2,2] * self.yu[mif1,2] + 1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,2] * self.ydqPhi[2,mif4] * self.yquPhibar[mif2,2] * self.yu[mif1,2] + 1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,2] * self.ydqPhi[2,mif4] * self.yquPhibar[mif2,2] * self.yu[mif1,2] + -1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif3,2] * self.ydqPhi[2,mif4] * self.yquPhibar[mif2,2] * self.yu[mif1,2] + 3/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,0] * self.ydqPhi[0,mif2] * self.yquPhibar[mif4,2] * self.yu[mif1,2] + 1/512 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,0] * self.ydqPhi[0,mif2] * self.yquPhibar[mif4,2] * self.yu[mif1,2] + -1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif3,0] * self.ydqPhi[0,mif2] * self.yquPhibar[mif4,2] * self.yu[mif1,2] + 3/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,1] * self.ydqPhi[1,mif2] * self.yquPhibar[mif4,2] * self.yu[mif1,2] + 1/512 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,1] * self.ydqPhi[1,mif2] * self.yquPhibar[mif4,2] * self.yu[mif1,2] + -1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif3,1] * self.ydqPhi[1,mif2] * self.yquPhibar[mif4,2] * self.yu[mif1,2] + 3/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,2] * self.ydqPhi[2,mif2] * self.yquPhibar[mif4,2] * self.yu[mif1,2] + 1/512 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,2] * self.ydqPhi[2,mif2] * self.yquPhibar[mif4,2] * self.yu[mif1,2] + -1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif3,2] * self.ydqPhi[2,mif2] * self.yquPhibar[mif4,2] * self.yu[mif1,2] + 3/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,mif4] * self.yquPhibar[mif2,0] * self.yu[mif3,0] + 1/512 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,mif4] * self.yquPhibar[mif2,0] * self.yu[mif3,0] + -1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] * self.ydqPhi[0,mif4] * self.yquPhibar[mif2,0] * self.yu[mif3,0] + 3/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,mif4] * self.yquPhibar[mif2,0] * self.yu[mif3,0] + 1/512 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,mif4] * self.yquPhibar[mif2,0] * self.yu[mif3,0] + -1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] * self.ydqPhi[1,mif4] * self.yquPhibar[mif2,0] * self.yu[mif3,0] + 3/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,mif4] * self.yquPhibar[mif2,0] * self.yu[mif3,0] + 1/512 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,mif4] * self.yquPhibar[mif2,0] * self.yu[mif3,0] + -1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] * self.ydqPhi[2,mif4] * self.yquPhibar[mif2,0] * self.yu[mif3,0] + 1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,mif2] * self.yquPhibar[mif4,0] * self.yu[mif3,0] + 1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,mif2] * self.yquPhibar[mif4,0] * self.yu[mif3,0] + -1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] * self.ydqPhi[0,mif2] * self.yquPhibar[mif4,0] * self.yu[mif3,0] + 1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,mif2] * self.yquPhibar[mif4,0] * self.yu[mif3,0] + 1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,mif2] * self.yquPhibar[mif4,0] * self.yu[mif3,0] + -1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] * self.ydqPhi[1,mif2] * self.yquPhibar[mif4,0] * self.yu[mif3,0] + 1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,mif2] * self.yquPhibar[mif4,0] * self.yu[mif3,0] + 1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,mif2] * self.yquPhibar[mif4,0] * self.yu[mif3,0] + -1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] * self.ydqPhi[2,mif2] * self.yquPhibar[mif4,0] * self.yu[mif3,0] + 3/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,mif4] * self.yquPhibar[mif2,1] * self.yu[mif3,1] + 1/512 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,mif4] * self.yquPhibar[mif2,1] * self.yu[mif3,1] + -1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] * self.ydqPhi[0,mif4] * self.yquPhibar[mif2,1] * self.yu[mif3,1] + 3/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,mif4] * self.yquPhibar[mif2,1] * self.yu[mif3,1] + 1/512 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,mif4] * self.yquPhibar[mif2,1] * self.yu[mif3,1] + -1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] * self.ydqPhi[1,mif4] * self.yquPhibar[mif2,1] * self.yu[mif3,1] + 3/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,mif4] * self.yquPhibar[mif2,1] * self.yu[mif3,1] + 1/512 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,mif4] * self.yquPhibar[mif2,1] * self.yu[mif3,1] + -1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] * self.ydqPhi[2,mif4] * self.yquPhibar[mif2,1] * self.yu[mif3,1] + 1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,mif2] * self.yquPhibar[mif4,1] * self.yu[mif3,1] + 1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,mif2] * self.yquPhibar[mif4,1] * self.yu[mif3,1] + -1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] * self.ydqPhi[0,mif2] * self.yquPhibar[mif4,1] * self.yu[mif3,1] + 1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,mif2] * self.yquPhibar[mif4,1] * self.yu[mif3,1] + 1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,mif2] * self.yquPhibar[mif4,1] * self.yu[mif3,1] + -1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] * self.ydqPhi[1,mif2] * self.yquPhibar[mif4,1] * self.yu[mif3,1] + 1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,mif2] * self.yquPhibar[mif4,1] * self.yu[mif3,1] + 1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,mif2] * self.yquPhibar[mif4,1] * self.yu[mif3,1] + -1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] * self.ydqPhi[2,mif2] * self.yquPhibar[mif4,1] * self.yu[mif3,1] + 3/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,mif4] * self.yquPhibar[mif2,2] * self.yu[mif3,2] + 1/512 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,mif4] * self.yquPhibar[mif2,2] * self.yu[mif3,2] + -1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] * self.ydqPhi[0,mif4] * self.yquPhibar[mif2,2] * self.yu[mif3,2] + 3/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,mif4] * self.yquPhibar[mif2,2] * self.yu[mif3,2] + 1/512 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,mif4] * self.yquPhibar[mif2,2] * self.yu[mif3,2] + -1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] * self.ydqPhi[1,mif4] * self.yquPhibar[mif2,2] * self.yu[mif3,2] + 3/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,mif4] * self.yquPhibar[mif2,2] * self.yu[mif3,2] + 1/512 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,mif4] * self.yquPhibar[mif2,2] * self.yu[mif3,2] + -1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] * self.ydqPhi[2,mif4] * self.yquPhibar[mif2,2] * self.yu[mif3,2] + 1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,mif2] * self.yquPhibar[mif4,2] * self.yu[mif3,2] + 1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,mif2] * self.yquPhibar[mif4,2] * self.yu[mif3,2] + -1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] * self.ydqPhi[0,mif2] * self.yquPhibar[mif4,2] * self.yu[mif3,2] + 1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,mif2] * self.yquPhibar[mif4,2] * self.yu[mif3,2] + 1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,mif2] * self.yquPhibar[mif4,2] * self.yu[mif3,2] + -1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] * self.ydqPhi[1,mif2] * self.yquPhibar[mif4,2] * self.yu[mif3,2] + 1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,mif2] * self.yquPhibar[mif4,2] * self.yu[mif3,2] + 1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,mif2] * self.yquPhibar[mif4,2] * self.yu[mif3,2] + -1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] * self.ydqPhi[2,mif2] * self.yquPhibar[mif4,2] * self.yu[mif3,2] + 1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,0] * self.ydqPhibar[0,mif3] * self.yquPhi[mif1,0] * self.yubar[mif2,0] + 1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,0] * self.ydqPhibar[0,mif3] * self.yquPhi[mif1,0] * self.yubar[mif2,0] + -1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif4,0] * self.ydqPhibar[0,mif3] * self.yquPhi[mif1,0] * self.yubar[mif2,0] + 1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,1] * self.ydqPhibar[1,mif3] * self.yquPhi[mif1,0] * self.yubar[mif2,0] + 1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,1] * self.ydqPhibar[1,mif3] * self.yquPhi[mif1,0] * self.yubar[mif2,0] + -1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif4,1] * self.ydqPhibar[1,mif3] * self.yquPhi[mif1,0] * self.yubar[mif2,0] + 1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,2] * self.ydqPhibar[2,mif3] * self.yquPhi[mif1,0] * self.yubar[mif2,0] + 1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,2] * self.ydqPhibar[2,mif3] * self.yquPhi[mif1,0] * self.yubar[mif2,0] + -1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif4,2] * self.ydqPhibar[2,mif3] * self.yquPhi[mif1,0] * self.yubar[mif2,0] + 3/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,0] * self.ydqPhibar[0,mif1] * self.yquPhi[mif3,0] * self.yubar[mif2,0] + 1/512 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,0] * self.ydqPhibar[0,mif1] * self.yquPhi[mif3,0] * self.yubar[mif2,0] + -1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif4,0] * self.ydqPhibar[0,mif1] * self.yquPhi[mif3,0] * self.yubar[mif2,0] + 3/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,1] * self.ydqPhibar[1,mif1] * self.yquPhi[mif3,0] * self.yubar[mif2,0] + 1/512 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,1] * self.ydqPhibar[1,mif1] * self.yquPhi[mif3,0] * self.yubar[mif2,0] + -1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif4,1] * self.ydqPhibar[1,mif1] * self.yquPhi[mif3,0] * self.yubar[mif2,0] + 3/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,2] * self.ydqPhibar[2,mif1] * self.yquPhi[mif3,0] * self.yubar[mif2,0] + 1/512 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,2] * self.ydqPhibar[2,mif1] * self.yquPhi[mif3,0] * self.yubar[mif2,0] + -1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif4,2] * self.ydqPhibar[2,mif1] * self.yquPhi[mif3,0] * self.yubar[mif2,0] + 1/3072 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[mif4,0] * self.yu[mif3,0] * self.yubar[mif2,0] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[mif4,0] * self.yu[mif3,0] * self.yubar[mif2,0] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,0] * self.yquPhibar[mif4,0] * self.yu[mif3,0] * self.yubar[mif2,0] + 1/3072 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[mif4,1] * self.yu[mif3,1] * self.yubar[mif2,0] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[mif4,1] * self.yu[mif3,1] * self.yubar[mif2,0] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,0] * self.yquPhibar[mif4,1] * self.yu[mif3,1] * self.yubar[mif2,0] + 1/3072 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[mif4,2] * self.yu[mif3,2] * self.yubar[mif2,0] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[mif4,2] * self.yu[mif3,2] * self.yubar[mif2,0] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,0] * self.yquPhibar[mif4,2] * self.yu[mif3,2] * self.yubar[mif2,0] + 1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,0] * self.ydqPhibar[0,mif3] * self.yquPhi[mif1,1] * self.yubar[mif2,1] + 1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,0] * self.ydqPhibar[0,mif3] * self.yquPhi[mif1,1] * self.yubar[mif2,1] + -1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif4,0] * self.ydqPhibar[0,mif3] * self.yquPhi[mif1,1] * self.yubar[mif2,1] + 1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,1] * self.ydqPhibar[1,mif3] * self.yquPhi[mif1,1] * self.yubar[mif2,1] + 1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,1] * self.ydqPhibar[1,mif3] * self.yquPhi[mif1,1] * self.yubar[mif2,1] + -1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif4,1] * self.ydqPhibar[1,mif3] * self.yquPhi[mif1,1] * self.yubar[mif2,1] + 1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,2] * self.ydqPhibar[2,mif3] * self.yquPhi[mif1,1] * self.yubar[mif2,1] + 1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,2] * self.ydqPhibar[2,mif3] * self.yquPhi[mif1,1] * self.yubar[mif2,1] + -1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif4,2] * self.ydqPhibar[2,mif3] * self.yquPhi[mif1,1] * self.yubar[mif2,1] + 3/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,0] * self.ydqPhibar[0,mif1] * self.yquPhi[mif3,1] * self.yubar[mif2,1] + 1/512 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,0] * self.ydqPhibar[0,mif1] * self.yquPhi[mif3,1] * self.yubar[mif2,1] + -1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif4,0] * self.ydqPhibar[0,mif1] * self.yquPhi[mif3,1] * self.yubar[mif2,1] + 3/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,1] * self.ydqPhibar[1,mif1] * self.yquPhi[mif3,1] * self.yubar[mif2,1] + 1/512 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,1] * self.ydqPhibar[1,mif1] * self.yquPhi[mif3,1] * self.yubar[mif2,1] + -1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif4,1] * self.ydqPhibar[1,mif1] * self.yquPhi[mif3,1] * self.yubar[mif2,1] + 3/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,2] * self.ydqPhibar[2,mif1] * self.yquPhi[mif3,1] * self.yubar[mif2,1] + 1/512 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,2] * self.ydqPhibar[2,mif1] * self.yquPhi[mif3,1] * self.yubar[mif2,1] + -1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif4,2] * self.ydqPhibar[2,mif1] * self.yquPhi[mif3,1] * self.yubar[mif2,1] + 1/3072 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[mif4,0] * self.yu[mif3,0] * self.yubar[mif2,1] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[mif4,0] * self.yu[mif3,0] * self.yubar[mif2,1] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,1] * self.yquPhibar[mif4,0] * self.yu[mif3,0] * self.yubar[mif2,1] + 1/3072 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[mif4,1] * self.yu[mif3,1] * self.yubar[mif2,1] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[mif4,1] * self.yu[mif3,1] * self.yubar[mif2,1] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,1] * self.yquPhibar[mif4,1] * self.yu[mif3,1] * self.yubar[mif2,1] + 1/3072 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[mif4,2] * self.yu[mif3,2] * self.yubar[mif2,1] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[mif4,2] * self.yu[mif3,2] * self.yubar[mif2,1] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,1] * self.yquPhibar[mif4,2] * self.yu[mif3,2] * self.yubar[mif2,1] + 1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,0] * self.ydqPhibar[0,mif3] * self.yquPhi[mif1,2] * self.yubar[mif2,2] + 1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,0] * self.ydqPhibar[0,mif3] * self.yquPhi[mif1,2] * self.yubar[mif2,2] + -1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif4,0] * self.ydqPhibar[0,mif3] * self.yquPhi[mif1,2] * self.yubar[mif2,2] + 1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,1] * self.ydqPhibar[1,mif3] * self.yquPhi[mif1,2] * self.yubar[mif2,2] + 1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,1] * self.ydqPhibar[1,mif3] * self.yquPhi[mif1,2] * self.yubar[mif2,2] + -1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif4,1] * self.ydqPhibar[1,mif3] * self.yquPhi[mif1,2] * self.yubar[mif2,2] + 1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,2] * self.ydqPhibar[2,mif3] * self.yquPhi[mif1,2] * self.yubar[mif2,2] + 1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,2] * self.ydqPhibar[2,mif3] * self.yquPhi[mif1,2] * self.yubar[mif2,2] + -1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif4,2] * self.ydqPhibar[2,mif3] * self.yquPhi[mif1,2] * self.yubar[mif2,2] + 3/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,0] * self.ydqPhibar[0,mif1] * self.yquPhi[mif3,2] * self.yubar[mif2,2] + 1/512 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,0] * self.ydqPhibar[0,mif1] * self.yquPhi[mif3,2] * self.yubar[mif2,2] + -1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif4,0] * self.ydqPhibar[0,mif1] * self.yquPhi[mif3,2] * self.yubar[mif2,2] + 3/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,1] * self.ydqPhibar[1,mif1] * self.yquPhi[mif3,2] * self.yubar[mif2,2] + 1/512 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,1] * self.ydqPhibar[1,mif1] * self.yquPhi[mif3,2] * self.yubar[mif2,2] + -1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif4,1] * self.ydqPhibar[1,mif1] * self.yquPhi[mif3,2] * self.yubar[mif2,2] + 3/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,2] * self.ydqPhibar[2,mif1] * self.yquPhi[mif3,2] * self.yubar[mif2,2] + 1/512 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif4,2] * self.ydqPhibar[2,mif1] * self.yquPhi[mif3,2] * self.yubar[mif2,2] + -1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif4,2] * self.ydqPhibar[2,mif1] * self.yquPhi[mif3,2] * self.yubar[mif2,2] + 1/3072 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[mif4,0] * self.yu[mif3,0] * self.yubar[mif2,2] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[mif4,0] * self.yu[mif3,0] * self.yubar[mif2,2] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,2] * self.yquPhibar[mif4,0] * self.yu[mif3,0] * self.yubar[mif2,2] + 1/3072 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[mif4,1] * self.yu[mif3,1] * self.yubar[mif2,2] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[mif4,1] * self.yu[mif3,1] * self.yubar[mif2,2] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,2] * self.yquPhibar[mif4,1] * self.yu[mif3,1] * self.yubar[mif2,2] + 1/3072 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[mif4,2] * self.yu[mif3,2] * self.yubar[mif2,2] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[mif4,2] * self.yu[mif3,2] * self.yubar[mif2,2] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,2] * self.yquPhibar[mif4,2] * self.yu[mif3,2] * self.yubar[mif2,2] + 3/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.ydqPhibar[0,mif3] * self.yquPhi[mif1,0] * self.yubar[mif4,0] + 1/512 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.ydqPhibar[0,mif3] * self.yquPhi[mif1,0] * self.yubar[mif4,0] + -1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,0] * self.ydqPhibar[0,mif3] * self.yquPhi[mif1,0] * self.yubar[mif4,0] + 3/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.ydqPhibar[1,mif3] * self.yquPhi[mif1,0] * self.yubar[mif4,0] + 1/512 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.ydqPhibar[1,mif3] * self.yquPhi[mif1,0] * self.yubar[mif4,0] + -1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,1] * self.ydqPhibar[1,mif3] * self.yquPhi[mif1,0] * self.yubar[mif4,0] + 3/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.ydqPhibar[2,mif3] * self.yquPhi[mif1,0] * self.yubar[mif4,0] + 1/512 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.ydqPhibar[2,mif3] * self.yquPhi[mif1,0] * self.yubar[mif4,0] + -1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,2] * self.ydqPhibar[2,mif3] * self.yquPhi[mif1,0] * self.yubar[mif4,0] + 1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[mif3,0] * self.yubar[mif4,0] + 1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[mif3,0] * self.yubar[mif4,0] + -1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[mif3,0] * self.yubar[mif4,0] + 1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[mif3,0] * self.yubar[mif4,0] + 1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[mif3,0] * self.yubar[mif4,0] + -1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[mif3,0] * self.yubar[mif4,0] + 1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[mif3,0] * self.yubar[mif4,0] + 1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[mif3,0] * self.yubar[mif4,0] + -1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[mif3,0] * self.yubar[mif4,0] + -1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif3,0] * self.yquPhibar[mif2,0] * self.yu[mif1,0] * self.yubar[mif4,0] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif3,0] * self.yquPhibar[mif2,0] * self.yu[mif1,0] * self.yubar[mif4,0] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif3,0] * self.yquPhibar[mif2,0] * self.yu[mif1,0] * self.yubar[mif4,0] + -1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif3,0] * self.yquPhibar[mif2,1] * self.yu[mif1,1] * self.yubar[mif4,0] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif3,0] * self.yquPhibar[mif2,1] * self.yu[mif1,1] * self.yubar[mif4,0] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif3,0] * self.yquPhibar[mif2,1] * self.yu[mif1,1] * self.yubar[mif4,0] + -1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif3,0] * self.yquPhibar[mif2,2] * self.yu[mif1,2] * self.yubar[mif4,0] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif3,0] * self.yquPhibar[mif2,2] * self.yu[mif1,2] * self.yubar[mif4,0] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif3,0] * self.yquPhibar[mif2,2] * self.yu[mif1,2] * self.yubar[mif4,0] + 3/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.ydqPhibar[0,mif3] * self.yquPhi[mif1,1] * self.yubar[mif4,1] + 1/512 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.ydqPhibar[0,mif3] * self.yquPhi[mif1,1] * self.yubar[mif4,1] + -1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,0] * self.ydqPhibar[0,mif3] * self.yquPhi[mif1,1] * self.yubar[mif4,1] + 3/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.ydqPhibar[1,mif3] * self.yquPhi[mif1,1] * self.yubar[mif4,1] + 1/512 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.ydqPhibar[1,mif3] * self.yquPhi[mif1,1] * self.yubar[mif4,1] + -1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,1] * self.ydqPhibar[1,mif3] * self.yquPhi[mif1,1] * self.yubar[mif4,1] + 3/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.ydqPhibar[2,mif3] * self.yquPhi[mif1,1] * self.yubar[mif4,1] + 1/512 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.ydqPhibar[2,mif3] * self.yquPhi[mif1,1] * self.yubar[mif4,1] + -1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,2] * self.ydqPhibar[2,mif3] * self.yquPhi[mif1,1] * self.yubar[mif4,1] + 1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[mif3,1] * self.yubar[mif4,1] + 1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[mif3,1] * self.yubar[mif4,1] + -1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[mif3,1] * self.yubar[mif4,1] + 1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[mif3,1] * self.yubar[mif4,1] + 1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[mif3,1] * self.yubar[mif4,1] + -1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[mif3,1] * self.yubar[mif4,1] + 1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[mif3,1] * self.yubar[mif4,1] + 1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[mif3,1] * self.yubar[mif4,1] + -1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[mif3,1] * self.yubar[mif4,1] + -1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif3,1] * self.yquPhibar[mif2,0] * self.yu[mif1,0] * self.yubar[mif4,1] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif3,1] * self.yquPhibar[mif2,0] * self.yu[mif1,0] * self.yubar[mif4,1] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif3,1] * self.yquPhibar[mif2,0] * self.yu[mif1,0] * self.yubar[mif4,1] + -1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif3,1] * self.yquPhibar[mif2,1] * self.yu[mif1,1] * self.yubar[mif4,1] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif3,1] * self.yquPhibar[mif2,1] * self.yu[mif1,1] * self.yubar[mif4,1] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif3,1] * self.yquPhibar[mif2,1] * self.yu[mif1,1] * self.yubar[mif4,1] + -1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif3,1] * self.yquPhibar[mif2,2] * self.yu[mif1,2] * self.yubar[mif4,1] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif3,1] * self.yquPhibar[mif2,2] * self.yu[mif1,2] * self.yubar[mif4,1] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif3,1] * self.yquPhibar[mif2,2] * self.yu[mif1,2] * self.yubar[mif4,1] + 3/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.ydqPhibar[0,mif3] * self.yquPhi[mif1,2] * self.yubar[mif4,2] + 1/512 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.ydqPhibar[0,mif3] * self.yquPhi[mif1,2] * self.yubar[mif4,2] + -1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,0] * self.ydqPhibar[0,mif3] * self.yquPhi[mif1,2] * self.yubar[mif4,2] + 3/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.ydqPhibar[1,mif3] * self.yquPhi[mif1,2] * self.yubar[mif4,2] + 1/512 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.ydqPhibar[1,mif3] * self.yquPhi[mif1,2] * self.yubar[mif4,2] + -1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,1] * self.ydqPhibar[1,mif3] * self.yquPhi[mif1,2] * self.yubar[mif4,2] + 3/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.ydqPhibar[2,mif3] * self.yquPhi[mif1,2] * self.yubar[mif4,2] + 1/512 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.ydqPhibar[2,mif3] * self.yquPhi[mif1,2] * self.yubar[mif4,2] + -1/512 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,2] * self.ydqPhibar[2,mif3] * self.yquPhi[mif1,2] * self.yubar[mif4,2] + 1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[mif3,2] * self.yubar[mif4,2] + 1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[mif3,2] * self.yubar[mif4,2] + -1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[mif3,2] * self.yubar[mif4,2] + 1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[mif3,2] * self.yubar[mif4,2] + 1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[mif3,2] * self.yubar[mif4,2] + -1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[mif3,2] * self.yubar[mif4,2] + 1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[mif3,2] * self.yubar[mif4,2] + 1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[mif3,2] * self.yubar[mif4,2] + -1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[mif3,2] * self.yubar[mif4,2] + -1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif3,2] * self.yquPhibar[mif2,0] * self.yu[mif1,0] * self.yubar[mif4,2] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif3,2] * self.yquPhibar[mif2,0] * self.yu[mif1,0] * self.yubar[mif4,2] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif3,2] * self.yquPhibar[mif2,0] * self.yu[mif1,0] * self.yubar[mif4,2] + -1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif3,2] * self.yquPhibar[mif2,1] * self.yu[mif1,1] * self.yubar[mif4,2] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif3,2] * self.yquPhibar[mif2,1] * self.yu[mif1,1] * self.yubar[mif4,2] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif3,2] * self.yquPhibar[mif2,1] * self.yu[mif1,1] * self.yubar[mif4,2] + -1/1024 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif3,2] * self.yquPhibar[mif2,2] * self.yu[mif1,2] * self.yubar[mif4,2] + -1/1536 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif3,2] * self.yquPhibar[mif2,2] * self.yu[mif1,2] * self.yubar[mif4,2] + 1/1536 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif3,2] * self.yquPhibar[mif2,2] * self.yu[mif1,2] * self.yubar[mif4,2])

    def alphaOqu1(self, mif1,mif2,mif3,mif4):
        return (-1/1080 * (self.g1)**(4) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 19/1944 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.ydqPhi[0,mif2] * self.ydqPhibar[0,mif1] + 1/162 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.ydqPhi[0,mif2] * self.ydqPhibar[0,mif1] + -1/162 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[0,mif2] * self.ydqPhibar[0,mif1] + 19/1944 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.ydqPhi[1,mif2] * self.ydqPhibar[1,mif1] + 1/162 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.ydqPhi[1,mif2] * self.ydqPhibar[1,mif1] + -1/162 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[1,mif2] * self.ydqPhibar[1,mif1] + 19/1944 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.ydqPhi[2,mif2] * self.ydqPhibar[2,mif1] + 1/162 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.ydqPhi[2,mif2] * self.ydqPhibar[2,mif1] + -1/162 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[2,mif2] * self.ydqPhibar[2,mif1] + -5/3888 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yquPhi[0,mif4] * self.yquPhibar[0,mif3] + -1/648 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yquPhi[0,mif4] * self.yquPhibar[0,mif3] + 1/648 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[0,mif4] * self.yquPhibar[0,mif3] + -1/288 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif2] * self.ydqPhibar[0,mif1] * self.yquPhi[0,mif4] * self.yquPhibar[0,mif3] + -1/288 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,mif2] * self.ydqPhibar[1,mif1] * self.yquPhi[0,mif4] * self.yquPhibar[0,mif3] + -1/288 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,mif2] * self.ydqPhibar[2,mif1] * self.yquPhi[0,mif4] * self.yquPhibar[0,mif3] + 1/216 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif2] * self.ydqPhibar[0,0] * self.yquPhi[mif1,mif4] * self.yquPhibar[0,mif3] + 1/144 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif2] * self.ydqPhibar[0,0] * self.yquPhi[mif1,mif4] * self.yquPhibar[0,mif3] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[0,mif2] * self.ydqPhibar[0,0] * self.yquPhi[mif1,mif4] * self.yquPhibar[0,mif3] + 1/216 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,mif2] * self.ydqPhibar[1,0] * self.yquPhi[mif1,mif4] * self.yquPhibar[0,mif3] + 1/144 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,mif2] * self.ydqPhibar[1,0] * self.yquPhi[mif1,mif4] * self.yquPhibar[0,mif3] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[1,mif2] * self.ydqPhibar[1,0] * self.yquPhi[mif1,mif4] * self.yquPhibar[0,mif3] + 1/216 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,mif2] * self.ydqPhibar[2,0] * self.yquPhi[mif1,mif4] * self.yquPhibar[0,mif3] + 1/144 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,mif2] * self.ydqPhibar[2,0] * self.yquPhi[mif1,mif4] * self.yquPhibar[0,mif3] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[2,mif2] * self.ydqPhibar[2,0] * self.yquPhi[mif1,mif4] * self.yquPhibar[0,mif3] + -5/3888 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yquPhi[1,mif4] * self.yquPhibar[1,mif3] + -1/648 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yquPhi[1,mif4] * self.yquPhibar[1,mif3] + 1/648 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[1,mif4] * self.yquPhibar[1,mif3] + -1/288 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif2] * self.ydqPhibar[0,mif1] * self.yquPhi[1,mif4] * self.yquPhibar[1,mif3] + -1/288 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,mif2] * self.ydqPhibar[1,mif1] * self.yquPhi[1,mif4] * self.yquPhibar[1,mif3] + -1/288 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,mif2] * self.ydqPhibar[2,mif1] * self.yquPhi[1,mif4] * self.yquPhibar[1,mif3] + 1/216 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif2] * self.ydqPhibar[0,1] * self.yquPhi[mif1,mif4] * self.yquPhibar[1,mif3] + 1/144 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif2] * self.ydqPhibar[0,1] * self.yquPhi[mif1,mif4] * self.yquPhibar[1,mif3] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[0,mif2] * self.ydqPhibar[0,1] * self.yquPhi[mif1,mif4] * self.yquPhibar[1,mif3] + 1/216 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,mif2] * self.ydqPhibar[1,1] * self.yquPhi[mif1,mif4] * self.yquPhibar[1,mif3] + 1/144 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,mif2] * self.ydqPhibar[1,1] * self.yquPhi[mif1,mif4] * self.yquPhibar[1,mif3] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[1,mif2] * self.ydqPhibar[1,1] * self.yquPhi[mif1,mif4] * self.yquPhibar[1,mif3] + 1/216 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,mif2] * self.ydqPhibar[2,1] * self.yquPhi[mif1,mif4] * self.yquPhibar[1,mif3] + 1/144 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,mif2] * self.ydqPhibar[2,1] * self.yquPhi[mif1,mif4] * self.yquPhibar[1,mif3] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[2,mif2] * self.ydqPhibar[2,1] * self.yquPhi[mif1,mif4] * self.yquPhibar[1,mif3] + -5/3888 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yquPhi[2,mif4] * self.yquPhibar[2,mif3] + -1/648 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yquPhi[2,mif4] * self.yquPhibar[2,mif3] + 1/648 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[2,mif4] * self.yquPhibar[2,mif3] + -1/288 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif2] * self.ydqPhibar[0,mif1] * self.yquPhi[2,mif4] * self.yquPhibar[2,mif3] + -1/288 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,mif2] * self.ydqPhibar[1,mif1] * self.yquPhi[2,mif4] * self.yquPhibar[2,mif3] + -1/288 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,mif2] * self.ydqPhibar[2,mif1] * self.yquPhi[2,mif4] * self.yquPhibar[2,mif3] + 1/216 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif2] * self.ydqPhibar[0,2] * self.yquPhi[mif1,mif4] * self.yquPhibar[2,mif3] + 1/144 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif2] * self.ydqPhibar[0,2] * self.yquPhi[mif1,mif4] * self.yquPhibar[2,mif3] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[0,mif2] * self.ydqPhibar[0,2] * self.yquPhi[mif1,mif4] * self.yquPhibar[2,mif3] + 1/216 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,mif2] * self.ydqPhibar[1,2] * self.yquPhi[mif1,mif4] * self.yquPhibar[2,mif3] + 1/144 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,mif2] * self.ydqPhibar[1,2] * self.yquPhi[mif1,mif4] * self.yquPhibar[2,mif3] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[1,mif2] * self.ydqPhibar[1,2] * self.yquPhi[mif1,mif4] * self.yquPhibar[2,mif3] + 1/216 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,mif2] * self.ydqPhibar[2,2] * self.yquPhi[mif1,mif4] * self.yquPhibar[2,mif3] + 1/144 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,mif2] * self.ydqPhibar[2,2] * self.yquPhi[mif1,mif4] * self.yquPhibar[2,mif3] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[2,mif2] * self.ydqPhibar[2,2] * self.yquPhi[mif1,mif4] * self.yquPhibar[2,mif3] + -35/1944 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yquPhi[mif1,0] * self.yquPhibar[mif2,0] + -1/81 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yquPhi[mif1,0] * self.yquPhibar[mif2,0] + 1/81 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,0] * self.yquPhibar[mif2,0] + 1/288 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif4] * self.yquPhi[mif1,0] * self.yquPhibar[0,mif3] * self.yquPhibar[mif2,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,0] * self.yquPhi[mif1,mif4] * self.yquPhibar[0,mif3] * self.yquPhibar[mif2,0] + 1/72 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,0] * self.yquPhi[mif1,mif4] * self.yquPhibar[0,mif3] * self.yquPhibar[mif2,0] + -1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[0,0] * self.yquPhi[mif1,mif4] * self.yquPhibar[0,mif3] * self.yquPhibar[mif2,0] + 1/288 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif4] * self.yquPhi[mif1,0] * self.yquPhibar[1,mif3] * self.yquPhibar[mif2,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,0] * self.yquPhi[mif1,mif4] * self.yquPhibar[1,mif3] * self.yquPhibar[mif2,0] + 1/72 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,0] * self.yquPhi[mif1,mif4] * self.yquPhibar[1,mif3] * self.yquPhibar[mif2,0] + -1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[1,0] * self.yquPhi[mif1,mif4] * self.yquPhibar[1,mif3] * self.yquPhibar[mif2,0] + 1/288 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif4] * self.yquPhi[mif1,0] * self.yquPhibar[2,mif3] * self.yquPhibar[mif2,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,0] * self.yquPhi[mif1,mif4] * self.yquPhibar[2,mif3] * self.yquPhibar[mif2,0] + 1/72 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,0] * self.yquPhi[mif1,mif4] * self.yquPhibar[2,mif3] * self.yquPhibar[mif2,0] + -1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[2,0] * self.yquPhi[mif1,mif4] * self.yquPhibar[2,mif3] * self.yquPhibar[mif2,0] + -35/1944 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yquPhi[mif1,1] * self.yquPhibar[mif2,1] + -1/81 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yquPhi[mif1,1] * self.yquPhibar[mif2,1] + 1/81 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,1] * self.yquPhibar[mif2,1] + 1/288 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif4] * self.yquPhi[mif1,1] * self.yquPhibar[0,mif3] * self.yquPhibar[mif2,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,1] * self.yquPhi[mif1,mif4] * self.yquPhibar[0,mif3] * self.yquPhibar[mif2,1] + 1/72 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,1] * self.yquPhi[mif1,mif4] * self.yquPhibar[0,mif3] * self.yquPhibar[mif2,1] + -1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[0,1] * self.yquPhi[mif1,mif4] * self.yquPhibar[0,mif3] * self.yquPhibar[mif2,1] + 1/288 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif4] * self.yquPhi[mif1,1] * self.yquPhibar[1,mif3] * self.yquPhibar[mif2,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,1] * self.yquPhi[mif1,mif4] * self.yquPhibar[1,mif3] * self.yquPhibar[mif2,1] + 1/72 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,1] * self.yquPhi[mif1,mif4] * self.yquPhibar[1,mif3] * self.yquPhibar[mif2,1] + -1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[1,1] * self.yquPhi[mif1,mif4] * self.yquPhibar[1,mif3] * self.yquPhibar[mif2,1] + 1/288 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif4] * self.yquPhi[mif1,1] * self.yquPhibar[2,mif3] * self.yquPhibar[mif2,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,1] * self.yquPhi[mif1,mif4] * self.yquPhibar[2,mif3] * self.yquPhibar[mif2,1] + 1/72 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,1] * self.yquPhi[mif1,mif4] * self.yquPhibar[2,mif3] * self.yquPhibar[mif2,1] + -1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[2,1] * self.yquPhi[mif1,mif4] * self.yquPhibar[2,mif3] * self.yquPhibar[mif2,1] + -35/1944 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yquPhi[mif1,2] * self.yquPhibar[mif2,2] + -1/81 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yquPhi[mif1,2] * self.yquPhibar[mif2,2] + 1/81 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,2] * self.yquPhibar[mif2,2] + 1/288 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif4] * self.yquPhi[mif1,2] * self.yquPhibar[0,mif3] * self.yquPhibar[mif2,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,2] * self.yquPhi[mif1,mif4] * self.yquPhibar[0,mif3] * self.yquPhibar[mif2,2] + 1/72 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,2] * self.yquPhi[mif1,mif4] * self.yquPhibar[0,mif3] * self.yquPhibar[mif2,2] + -1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[0,2] * self.yquPhi[mif1,mif4] * self.yquPhibar[0,mif3] * self.yquPhibar[mif2,2] + 1/288 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif4] * self.yquPhi[mif1,2] * self.yquPhibar[1,mif3] * self.yquPhibar[mif2,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,2] * self.yquPhi[mif1,mif4] * self.yquPhibar[1,mif3] * self.yquPhibar[mif2,2] + 1/72 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,2] * self.yquPhi[mif1,mif4] * self.yquPhibar[1,mif3] * self.yquPhibar[mif2,2] + -1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[1,2] * self.yquPhi[mif1,mif4] * self.yquPhibar[1,mif3] * self.yquPhibar[mif2,2] + 1/288 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif4] * self.yquPhi[mif1,2] * self.yquPhibar[2,mif3] * self.yquPhibar[mif2,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,2] * self.yquPhi[mif1,mif4] * self.yquPhibar[2,mif3] * self.yquPhibar[mif2,2] + 1/72 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,2] * self.yquPhi[mif1,mif4] * self.yquPhibar[2,mif3] * self.yquPhibar[mif2,2] + -1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[2,2] * self.yquPhi[mif1,mif4] * self.yquPhibar[2,mif3] * self.yquPhibar[mif2,2] + 1/216 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,0] * self.ydqPhibar[0,mif1] * self.yquPhi[0,mif4] * self.yquPhibar[mif2,mif3] + 1/144 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,0] * self.ydqPhibar[0,mif1] * self.yquPhi[0,mif4] * self.yquPhibar[mif2,mif3] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[0,0] * self.ydqPhibar[0,mif1] * self.yquPhi[0,mif4] * self.yquPhibar[mif2,mif3] + 1/216 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,0] * self.ydqPhibar[1,mif1] * self.yquPhi[0,mif4] * self.yquPhibar[mif2,mif3] + 1/144 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,0] * self.ydqPhibar[1,mif1] * self.yquPhi[0,mif4] * self.yquPhibar[mif2,mif3] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[1,0] * self.ydqPhibar[1,mif1] * self.yquPhi[0,mif4] * self.yquPhibar[mif2,mif3] + 1/216 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,0] * self.ydqPhibar[2,mif1] * self.yquPhi[0,mif4] * self.yquPhibar[mif2,mif3] + 1/144 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,0] * self.ydqPhibar[2,mif1] * self.yquPhi[0,mif4] * self.yquPhibar[mif2,mif3] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[2,0] * self.ydqPhibar[2,mif1] * self.yquPhi[0,mif4] * self.yquPhibar[mif2,mif3] + 1/216 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,1] * self.ydqPhibar[0,mif1] * self.yquPhi[1,mif4] * self.yquPhibar[mif2,mif3] + 1/144 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,1] * self.ydqPhibar[0,mif1] * self.yquPhi[1,mif4] * self.yquPhibar[mif2,mif3] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[0,1] * self.ydqPhibar[0,mif1] * self.yquPhi[1,mif4] * self.yquPhibar[mif2,mif3] + 1/216 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,1] * self.ydqPhibar[1,mif1] * self.yquPhi[1,mif4] * self.yquPhibar[mif2,mif3] + 1/144 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,1] * self.ydqPhibar[1,mif1] * self.yquPhi[1,mif4] * self.yquPhibar[mif2,mif3] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[1,1] * self.ydqPhibar[1,mif1] * self.yquPhi[1,mif4] * self.yquPhibar[mif2,mif3] + 1/216 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,1] * self.ydqPhibar[2,mif1] * self.yquPhi[1,mif4] * self.yquPhibar[mif2,mif3] + 1/144 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,1] * self.ydqPhibar[2,mif1] * self.yquPhi[1,mif4] * self.yquPhibar[mif2,mif3] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[2,1] * self.ydqPhibar[2,mif1] * self.yquPhi[1,mif4] * self.yquPhibar[mif2,mif3] + 1/216 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,2] * self.ydqPhibar[0,mif1] * self.yquPhi[2,mif4] * self.yquPhibar[mif2,mif3] + 1/144 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,2] * self.ydqPhibar[0,mif1] * self.yquPhi[2,mif4] * self.yquPhibar[mif2,mif3] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[0,2] * self.ydqPhibar[0,mif1] * self.yquPhi[2,mif4] * self.yquPhibar[mif2,mif3] + 1/216 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,2] * self.ydqPhibar[1,mif1] * self.yquPhi[2,mif4] * self.yquPhibar[mif2,mif3] + 1/144 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,2] * self.ydqPhibar[1,mif1] * self.yquPhi[2,mif4] * self.yquPhibar[mif2,mif3] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[1,2] * self.ydqPhibar[1,mif1] * self.yquPhi[2,mif4] * self.yquPhibar[mif2,mif3] + 1/216 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[2,mif4] * self.yquPhibar[mif2,mif3] + 1/144 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[2,mif4] * self.yquPhibar[mif2,mif3] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[2,mif4] * self.yquPhibar[mif2,mif3] + -2/9 * (self.MPhi)**(-2) * self.yquPhi[mif1,mif4] * self.yquPhibar[mif2,mif3] + -25/5184 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,mif4] * self.yquPhibar[mif2,mif3] + -25/1728 * self.epsilonbar * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,mif4] * self.yquPhibar[mif2,mif3] + -1/192 * (self.g2)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,mif4] * self.yquPhibar[mif2,mif3] + -1/64 * self.epsilonbar * (self.g2)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,mif4] * self.yquPhibar[mif2,mif3] + -7/432 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,mif4] * self.yquPhibar[mif2,mif3] + -7/144 * self.epsilonbar * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,mif4] * self.yquPhibar[mif2,mif3] + -25/2592 * self.epsilonbar * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,mif4] * self.yquPhibar[mif2,mif3] + -1/96 * self.epsilonbar * (self.g2)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,mif4] * self.yquPhibar[mif2,mif3] + -7/216 * self.epsilonbar * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,mif4] * self.yquPhibar[mif2,mif3] + 25/2592 * self.epsilonbar * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,mif4] * self.yquPhibar[mif2,mif3] + 1/96 * self.epsilonbar * (self.g2)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,mif4] * self.yquPhibar[mif2,mif3] + 7/216 * self.epsilonbar * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,mif4] * self.yquPhibar[mif2,mif3] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif4] * self.yquPhi[mif1,0] * self.yquPhibar[0,0] * self.yquPhibar[mif2,mif3] + 1/72 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif4] * self.yquPhi[mif1,0] * self.yquPhibar[0,0] * self.yquPhibar[mif2,mif3] + -1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[0,mif4] * self.yquPhi[mif1,0] * self.yquPhibar[0,0] * self.yquPhibar[mif2,mif3] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif4] * self.yquPhi[mif1,1] * self.yquPhibar[0,1] * self.yquPhibar[mif2,mif3] + 1/72 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif4] * self.yquPhi[mif1,1] * self.yquPhibar[0,1] * self.yquPhibar[mif2,mif3] + -1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[0,mif4] * self.yquPhi[mif1,1] * self.yquPhibar[0,1] * self.yquPhibar[mif2,mif3] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif4] * self.yquPhi[mif1,2] * self.yquPhibar[0,2] * self.yquPhibar[mif2,mif3] + 1/72 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif4] * self.yquPhi[mif1,2] * self.yquPhibar[0,2] * self.yquPhibar[mif2,mif3] + -1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[0,mif4] * self.yquPhi[mif1,2] * self.yquPhibar[0,2] * self.yquPhibar[mif2,mif3] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif4] * self.yquPhi[mif1,0] * self.yquPhibar[1,0] * self.yquPhibar[mif2,mif3] + 1/72 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif4] * self.yquPhi[mif1,0] * self.yquPhibar[1,0] * self.yquPhibar[mif2,mif3] + -1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[1,mif4] * self.yquPhi[mif1,0] * self.yquPhibar[1,0] * self.yquPhibar[mif2,mif3] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif4] * self.yquPhi[mif1,1] * self.yquPhibar[1,1] * self.yquPhibar[mif2,mif3] + 1/72 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif4] * self.yquPhi[mif1,1] * self.yquPhibar[1,1] * self.yquPhibar[mif2,mif3] + -1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[1,mif4] * self.yquPhi[mif1,1] * self.yquPhibar[1,1] * self.yquPhibar[mif2,mif3] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif4] * self.yquPhi[mif1,2] * self.yquPhibar[1,2] * self.yquPhibar[mif2,mif3] + 1/72 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif4] * self.yquPhi[mif1,2] * self.yquPhibar[1,2] * self.yquPhibar[mif2,mif3] + -1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[1,mif4] * self.yquPhi[mif1,2] * self.yquPhibar[1,2] * self.yquPhibar[mif2,mif3] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif4] * self.yquPhi[mif1,0] * self.yquPhibar[2,0] * self.yquPhibar[mif2,mif3] + 1/72 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif4] * self.yquPhi[mif1,0] * self.yquPhibar[2,0] * self.yquPhibar[mif2,mif3] + -1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[2,mif4] * self.yquPhi[mif1,0] * self.yquPhibar[2,0] * self.yquPhibar[mif2,mif3] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif4] * self.yquPhi[mif1,1] * self.yquPhibar[2,1] * self.yquPhibar[mif2,mif3] + 1/72 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif4] * self.yquPhi[mif1,1] * self.yquPhibar[2,1] * self.yquPhibar[mif2,mif3] + -1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[2,mif4] * self.yquPhi[mif1,1] * self.yquPhibar[2,1] * self.yquPhibar[mif2,mif3] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif4] * self.yquPhi[mif1,2] * self.yquPhibar[2,2] * self.yquPhibar[mif2,mif3] + 1/72 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif4] * self.yquPhi[mif1,2] * self.yquPhibar[2,2] * self.yquPhibar[mif2,mif3] + -1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[2,mif4] * self.yquPhi[mif1,2] * self.yquPhibar[2,2] * self.yquPhibar[mif2,mif3] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydqPhi[0,mif2] * self.yquPhibar[0,mif3] * self.yu[mif1,mif4] + 1/144 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydqPhi[0,mif2] * self.yquPhibar[0,mif3] * self.yu[mif1,mif4] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydqPhi[0,mif2] * self.yquPhibar[0,mif3] * self.yu[mif1,mif4] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydqPhi[1,mif2] * self.yquPhibar[0,mif3] * self.yu[mif1,mif4] + 1/144 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydqPhi[1,mif2] * self.yquPhibar[0,mif3] * self.yu[mif1,mif4] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydqPhi[1,mif2] * self.yquPhibar[0,mif3] * self.yu[mif1,mif4] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydqPhi[2,mif2] * self.yquPhibar[0,mif3] * self.yu[mif1,mif4] + 1/144 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydqPhi[2,mif2] * self.yquPhibar[0,mif3] * self.yu[mif1,mif4] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydqPhi[2,mif2] * self.yquPhibar[0,mif3] * self.yu[mif1,mif4] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydqPhi[0,mif2] * self.yquPhibar[1,mif3] * self.yu[mif1,mif4] + 1/144 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydqPhi[0,mif2] * self.yquPhibar[1,mif3] * self.yu[mif1,mif4] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydqPhi[0,mif2] * self.yquPhibar[1,mif3] * self.yu[mif1,mif4] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydqPhi[1,mif2] * self.yquPhibar[1,mif3] * self.yu[mif1,mif4] + 1/144 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydqPhi[1,mif2] * self.yquPhibar[1,mif3] * self.yu[mif1,mif4] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydqPhi[1,mif2] * self.yquPhibar[1,mif3] * self.yu[mif1,mif4] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydqPhi[2,mif2] * self.yquPhibar[1,mif3] * self.yu[mif1,mif4] + 1/144 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydqPhi[2,mif2] * self.yquPhibar[1,mif3] * self.yu[mif1,mif4] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydqPhi[2,mif2] * self.yquPhibar[1,mif3] * self.yu[mif1,mif4] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydqPhi[0,mif2] * self.yquPhibar[2,mif3] * self.yu[mif1,mif4] + 1/144 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydqPhi[0,mif2] * self.yquPhibar[2,mif3] * self.yu[mif1,mif4] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydqPhi[0,mif2] * self.yquPhibar[2,mif3] * self.yu[mif1,mif4] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydqPhi[1,mif2] * self.yquPhibar[2,mif3] * self.yu[mif1,mif4] + 1/144 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydqPhi[1,mif2] * self.yquPhibar[2,mif3] * self.yu[mif1,mif4] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydqPhi[1,mif2] * self.yquPhibar[2,mif3] * self.yu[mif1,mif4] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydqPhi[2,mif2] * self.yquPhibar[2,mif3] * self.yu[mif1,mif4] + 1/144 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydqPhi[2,mif2] * self.yquPhibar[2,mif3] * self.yu[mif1,mif4] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydqPhi[2,mif2] * self.yquPhibar[2,mif3] * self.yu[mif1,mif4] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.ydqPhibar[0,mif1] * self.yquPhi[0,mif4] * self.yubar[mif2,mif3] + 1/144 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.ydqPhibar[0,mif1] * self.yquPhi[0,mif4] * self.yubar[mif2,mif3] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[0,0] * self.ydqPhibar[0,mif1] * self.yquPhi[0,mif4] * self.yubar[mif2,mif3] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.ydqPhibar[1,mif1] * self.yquPhi[0,mif4] * self.yubar[mif2,mif3] + 1/144 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.ydqPhibar[1,mif1] * self.yquPhi[0,mif4] * self.yubar[mif2,mif3] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[0,1] * self.ydqPhibar[1,mif1] * self.yquPhi[0,mif4] * self.yubar[mif2,mif3] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.ydqPhibar[2,mif1] * self.yquPhi[0,mif4] * self.yubar[mif2,mif3] + 1/144 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.ydqPhibar[2,mif1] * self.yquPhi[0,mif4] * self.yubar[mif2,mif3] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[0,2] * self.ydqPhibar[2,mif1] * self.yquPhi[0,mif4] * self.yubar[mif2,mif3] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.ydqPhibar[0,mif1] * self.yquPhi[1,mif4] * self.yubar[mif2,mif3] + 1/144 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.ydqPhibar[0,mif1] * self.yquPhi[1,mif4] * self.yubar[mif2,mif3] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[1,0] * self.ydqPhibar[0,mif1] * self.yquPhi[1,mif4] * self.yubar[mif2,mif3] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.ydqPhibar[1,mif1] * self.yquPhi[1,mif4] * self.yubar[mif2,mif3] + 1/144 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.ydqPhibar[1,mif1] * self.yquPhi[1,mif4] * self.yubar[mif2,mif3] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[1,1] * self.ydqPhibar[1,mif1] * self.yquPhi[1,mif4] * self.yubar[mif2,mif3] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.ydqPhibar[2,mif1] * self.yquPhi[1,mif4] * self.yubar[mif2,mif3] + 1/144 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.ydqPhibar[2,mif1] * self.yquPhi[1,mif4] * self.yubar[mif2,mif3] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[1,2] * self.ydqPhibar[2,mif1] * self.yquPhi[1,mif4] * self.yubar[mif2,mif3] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[2,mif4] * self.yubar[mif2,mif3] + 1/144 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[2,mif4] * self.yubar[mif2,mif3] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[2,mif4] * self.yubar[mif2,mif3] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[2,mif4] * self.yubar[mif2,mif3] + 1/144 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[2,mif4] * self.yubar[mif2,mif3] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[2,mif4] * self.yubar[mif2,mif3] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[2,mif4] * self.yubar[mif2,mif3] + 1/144 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[2,mif4] * self.yubar[mif2,mif3] + -1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[2,mif4] * self.yubar[mif2,mif3])

    def alphaOqu8(self, mif1,mif2,mif3,mif4):
        return (-1/80 * (self.g3)**(4) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 17/1728 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.ydqPhi[0,mif2] * self.ydqPhibar[0,mif1] + 1/288 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.ydqPhi[0,mif2] * self.ydqPhibar[0,mif1] + -1/288 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[0,mif2] * self.ydqPhibar[0,mif1] + 17/1728 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.ydqPhi[1,mif2] * self.ydqPhibar[1,mif1] + 1/288 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.ydqPhi[1,mif2] * self.ydqPhibar[1,mif1] + -1/288 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[1,mif2] * self.ydqPhibar[1,mif1] + 17/1728 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.ydqPhi[2,mif2] * self.ydqPhibar[2,mif1] + 1/288 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.ydqPhi[2,mif2] * self.ydqPhibar[2,mif1] + -1/288 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[2,mif2] * self.ydqPhibar[2,mif1] + 17/864 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yquPhi[0,mif4] * self.yquPhibar[0,mif3] + 1/144 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yquPhi[0,mif4] * self.yquPhibar[0,mif3] + -1/144 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[0,mif4] * self.yquPhibar[0,mif3] + -7/384 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif2] * self.ydqPhibar[0,mif1] * self.yquPhi[0,mif4] * self.yquPhibar[0,mif3] + -7/384 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,mif2] * self.ydqPhibar[1,mif1] * self.yquPhi[0,mif4] * self.yquPhibar[0,mif3] + -7/384 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,mif2] * self.ydqPhibar[2,mif1] * self.yquPhi[0,mif4] * self.yquPhibar[0,mif3] + -1/288 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif2] * self.ydqPhibar[0,0] * self.yquPhi[mif1,mif4] * self.yquPhibar[0,mif3] + -1/192 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif2] * self.ydqPhibar[0,0] * self.yquPhi[mif1,mif4] * self.yquPhibar[0,mif3] + 1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[0,mif2] * self.ydqPhibar[0,0] * self.yquPhi[mif1,mif4] * self.yquPhibar[0,mif3] + -1/288 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,mif2] * self.ydqPhibar[1,0] * self.yquPhi[mif1,mif4] * self.yquPhibar[0,mif3] + -1/192 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,mif2] * self.ydqPhibar[1,0] * self.yquPhi[mif1,mif4] * self.yquPhibar[0,mif3] + 1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[1,mif2] * self.ydqPhibar[1,0] * self.yquPhi[mif1,mif4] * self.yquPhibar[0,mif3] + -1/288 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,mif2] * self.ydqPhibar[2,0] * self.yquPhi[mif1,mif4] * self.yquPhibar[0,mif3] + -1/192 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,mif2] * self.ydqPhibar[2,0] * self.yquPhi[mif1,mif4] * self.yquPhibar[0,mif3] + 1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[2,mif2] * self.ydqPhibar[2,0] * self.yquPhi[mif1,mif4] * self.yquPhibar[0,mif3] + 17/864 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yquPhi[1,mif4] * self.yquPhibar[1,mif3] + 1/144 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yquPhi[1,mif4] * self.yquPhibar[1,mif3] + -1/144 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[1,mif4] * self.yquPhibar[1,mif3] + -7/384 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif2] * self.ydqPhibar[0,mif1] * self.yquPhi[1,mif4] * self.yquPhibar[1,mif3] + -7/384 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,mif2] * self.ydqPhibar[1,mif1] * self.yquPhi[1,mif4] * self.yquPhibar[1,mif3] + -7/384 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,mif2] * self.ydqPhibar[2,mif1] * self.yquPhi[1,mif4] * self.yquPhibar[1,mif3] + -1/288 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif2] * self.ydqPhibar[0,1] * self.yquPhi[mif1,mif4] * self.yquPhibar[1,mif3] + -1/192 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif2] * self.ydqPhibar[0,1] * self.yquPhi[mif1,mif4] * self.yquPhibar[1,mif3] + 1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[0,mif2] * self.ydqPhibar[0,1] * self.yquPhi[mif1,mif4] * self.yquPhibar[1,mif3] + -1/288 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,mif2] * self.ydqPhibar[1,1] * self.yquPhi[mif1,mif4] * self.yquPhibar[1,mif3] + -1/192 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,mif2] * self.ydqPhibar[1,1] * self.yquPhi[mif1,mif4] * self.yquPhibar[1,mif3] + 1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[1,mif2] * self.ydqPhibar[1,1] * self.yquPhi[mif1,mif4] * self.yquPhibar[1,mif3] + -1/288 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,mif2] * self.ydqPhibar[2,1] * self.yquPhi[mif1,mif4] * self.yquPhibar[1,mif3] + -1/192 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,mif2] * self.ydqPhibar[2,1] * self.yquPhi[mif1,mif4] * self.yquPhibar[1,mif3] + 1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[2,mif2] * self.ydqPhibar[2,1] * self.yquPhi[mif1,mif4] * self.yquPhibar[1,mif3] + 17/864 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yquPhi[2,mif4] * self.yquPhibar[2,mif3] + 1/144 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yquPhi[2,mif4] * self.yquPhibar[2,mif3] + -1/144 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[2,mif4] * self.yquPhibar[2,mif3] + -7/384 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif2] * self.ydqPhibar[0,mif1] * self.yquPhi[2,mif4] * self.yquPhibar[2,mif3] + -7/384 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,mif2] * self.ydqPhibar[1,mif1] * self.yquPhi[2,mif4] * self.yquPhibar[2,mif3] + -7/384 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,mif2] * self.ydqPhibar[2,mif1] * self.yquPhi[2,mif4] * self.yquPhibar[2,mif3] + -1/288 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif2] * self.ydqPhibar[0,2] * self.yquPhi[mif1,mif4] * self.yquPhibar[2,mif3] + -1/192 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,mif2] * self.ydqPhibar[0,2] * self.yquPhi[mif1,mif4] * self.yquPhibar[2,mif3] + 1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[0,mif2] * self.ydqPhibar[0,2] * self.yquPhi[mif1,mif4] * self.yquPhibar[2,mif3] + -1/288 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,mif2] * self.ydqPhibar[1,2] * self.yquPhi[mif1,mif4] * self.yquPhibar[2,mif3] + -1/192 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,mif2] * self.ydqPhibar[1,2] * self.yquPhi[mif1,mif4] * self.yquPhibar[2,mif3] + 1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[1,mif2] * self.ydqPhibar[1,2] * self.yquPhi[mif1,mif4] * self.yquPhibar[2,mif3] + -1/288 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,mif2] * self.ydqPhibar[2,2] * self.yquPhi[mif1,mif4] * self.yquPhibar[2,mif3] + -1/192 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,mif2] * self.ydqPhibar[2,2] * self.yquPhi[mif1,mif4] * self.yquPhibar[2,mif3] + 1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[2,mif2] * self.ydqPhibar[2,2] * self.yquPhi[mif1,mif4] * self.yquPhibar[2,mif3] + 17/1728 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yquPhi[mif1,0] * self.yquPhibar[mif2,0] + 1/288 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yquPhi[mif1,0] * self.yquPhibar[mif2,0] + -1/288 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,0] * self.yquPhibar[mif2,0] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif4] * self.yquPhi[mif1,0] * self.yquPhibar[0,mif3] * self.yquPhibar[mif2,0] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,0] * self.yquPhi[mif1,mif4] * self.yquPhibar[0,mif3] * self.yquPhibar[mif2,0] + -1/96 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,0] * self.yquPhi[mif1,mif4] * self.yquPhibar[0,mif3] * self.yquPhibar[mif2,0] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[0,0] * self.yquPhi[mif1,mif4] * self.yquPhibar[0,mif3] * self.yquPhibar[mif2,0] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif4] * self.yquPhi[mif1,0] * self.yquPhibar[1,mif3] * self.yquPhibar[mif2,0] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,0] * self.yquPhi[mif1,mif4] * self.yquPhibar[1,mif3] * self.yquPhibar[mif2,0] + -1/96 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,0] * self.yquPhi[mif1,mif4] * self.yquPhibar[1,mif3] * self.yquPhibar[mif2,0] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[1,0] * self.yquPhi[mif1,mif4] * self.yquPhibar[1,mif3] * self.yquPhibar[mif2,0] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif4] * self.yquPhi[mif1,0] * self.yquPhibar[2,mif3] * self.yquPhibar[mif2,0] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,0] * self.yquPhi[mif1,mif4] * self.yquPhibar[2,mif3] * self.yquPhibar[mif2,0] + -1/96 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,0] * self.yquPhi[mif1,mif4] * self.yquPhibar[2,mif3] * self.yquPhibar[mif2,0] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[2,0] * self.yquPhi[mif1,mif4] * self.yquPhibar[2,mif3] * self.yquPhibar[mif2,0] + 17/1728 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yquPhi[mif1,1] * self.yquPhibar[mif2,1] + 1/288 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yquPhi[mif1,1] * self.yquPhibar[mif2,1] + -1/288 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,1] * self.yquPhibar[mif2,1] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif4] * self.yquPhi[mif1,1] * self.yquPhibar[0,mif3] * self.yquPhibar[mif2,1] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,1] * self.yquPhi[mif1,mif4] * self.yquPhibar[0,mif3] * self.yquPhibar[mif2,1] + -1/96 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,1] * self.yquPhi[mif1,mif4] * self.yquPhibar[0,mif3] * self.yquPhibar[mif2,1] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[0,1] * self.yquPhi[mif1,mif4] * self.yquPhibar[0,mif3] * self.yquPhibar[mif2,1] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif4] * self.yquPhi[mif1,1] * self.yquPhibar[1,mif3] * self.yquPhibar[mif2,1] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,1] * self.yquPhi[mif1,mif4] * self.yquPhibar[1,mif3] * self.yquPhibar[mif2,1] + -1/96 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,1] * self.yquPhi[mif1,mif4] * self.yquPhibar[1,mif3] * self.yquPhibar[mif2,1] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[1,1] * self.yquPhi[mif1,mif4] * self.yquPhibar[1,mif3] * self.yquPhibar[mif2,1] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif4] * self.yquPhi[mif1,1] * self.yquPhibar[2,mif3] * self.yquPhibar[mif2,1] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,1] * self.yquPhi[mif1,mif4] * self.yquPhibar[2,mif3] * self.yquPhibar[mif2,1] + -1/96 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,1] * self.yquPhi[mif1,mif4] * self.yquPhibar[2,mif3] * self.yquPhibar[mif2,1] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[2,1] * self.yquPhi[mif1,mif4] * self.yquPhibar[2,mif3] * self.yquPhibar[mif2,1] + 17/1728 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yquPhi[mif1,2] * self.yquPhibar[mif2,2] + 1/288 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yquPhi[mif1,2] * self.yquPhibar[mif2,2] + -1/288 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,2] * self.yquPhibar[mif2,2] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif4] * self.yquPhi[mif1,2] * self.yquPhibar[0,mif3] * self.yquPhibar[mif2,2] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,2] * self.yquPhi[mif1,mif4] * self.yquPhibar[0,mif3] * self.yquPhibar[mif2,2] + -1/96 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,2] * self.yquPhi[mif1,mif4] * self.yquPhibar[0,mif3] * self.yquPhibar[mif2,2] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[0,2] * self.yquPhi[mif1,mif4] * self.yquPhibar[0,mif3] * self.yquPhibar[mif2,2] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif4] * self.yquPhi[mif1,2] * self.yquPhibar[1,mif3] * self.yquPhibar[mif2,2] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,2] * self.yquPhi[mif1,mif4] * self.yquPhibar[1,mif3] * self.yquPhibar[mif2,2] + -1/96 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,2] * self.yquPhi[mif1,mif4] * self.yquPhibar[1,mif3] * self.yquPhibar[mif2,2] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[1,2] * self.yquPhi[mif1,mif4] * self.yquPhibar[1,mif3] * self.yquPhibar[mif2,2] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif4] * self.yquPhi[mif1,2] * self.yquPhibar[2,mif3] * self.yquPhibar[mif2,2] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,2] * self.yquPhi[mif1,mif4] * self.yquPhibar[2,mif3] * self.yquPhibar[mif2,2] + -1/96 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,2] * self.yquPhi[mif1,mif4] * self.yquPhibar[2,mif3] * self.yquPhibar[mif2,2] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[2,2] * self.yquPhi[mif1,mif4] * self.yquPhibar[2,mif3] * self.yquPhibar[mif2,2] + -1/288 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,0] * self.ydqPhibar[0,mif1] * self.yquPhi[0,mif4] * self.yquPhibar[mif2,mif3] + -1/192 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,0] * self.ydqPhibar[0,mif1] * self.yquPhi[0,mif4] * self.yquPhibar[mif2,mif3] + 1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[0,0] * self.ydqPhibar[0,mif1] * self.yquPhi[0,mif4] * self.yquPhibar[mif2,mif3] + -1/288 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,0] * self.ydqPhibar[1,mif1] * self.yquPhi[0,mif4] * self.yquPhibar[mif2,mif3] + -1/192 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,0] * self.ydqPhibar[1,mif1] * self.yquPhi[0,mif4] * self.yquPhibar[mif2,mif3] + 1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[1,0] * self.ydqPhibar[1,mif1] * self.yquPhi[0,mif4] * self.yquPhibar[mif2,mif3] + -1/288 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,0] * self.ydqPhibar[2,mif1] * self.yquPhi[0,mif4] * self.yquPhibar[mif2,mif3] + -1/192 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,0] * self.ydqPhibar[2,mif1] * self.yquPhi[0,mif4] * self.yquPhibar[mif2,mif3] + 1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[2,0] * self.ydqPhibar[2,mif1] * self.yquPhi[0,mif4] * self.yquPhibar[mif2,mif3] + -1/288 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,1] * self.ydqPhibar[0,mif1] * self.yquPhi[1,mif4] * self.yquPhibar[mif2,mif3] + -1/192 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,1] * self.ydqPhibar[0,mif1] * self.yquPhi[1,mif4] * self.yquPhibar[mif2,mif3] + 1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[0,1] * self.ydqPhibar[0,mif1] * self.yquPhi[1,mif4] * self.yquPhibar[mif2,mif3] + -1/288 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,1] * self.ydqPhibar[1,mif1] * self.yquPhi[1,mif4] * self.yquPhibar[mif2,mif3] + -1/192 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,1] * self.ydqPhibar[1,mif1] * self.yquPhi[1,mif4] * self.yquPhibar[mif2,mif3] + 1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[1,1] * self.ydqPhibar[1,mif1] * self.yquPhi[1,mif4] * self.yquPhibar[mif2,mif3] + -1/288 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,1] * self.ydqPhibar[2,mif1] * self.yquPhi[1,mif4] * self.yquPhibar[mif2,mif3] + -1/192 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,1] * self.ydqPhibar[2,mif1] * self.yquPhi[1,mif4] * self.yquPhibar[mif2,mif3] + 1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[2,1] * self.ydqPhibar[2,mif1] * self.yquPhi[1,mif4] * self.yquPhibar[mif2,mif3] + -1/288 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,2] * self.ydqPhibar[0,mif1] * self.yquPhi[2,mif4] * self.yquPhibar[mif2,mif3] + -1/192 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,2] * self.ydqPhibar[0,mif1] * self.yquPhi[2,mif4] * self.yquPhibar[mif2,mif3] + 1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[0,2] * self.ydqPhibar[0,mif1] * self.yquPhi[2,mif4] * self.yquPhibar[mif2,mif3] + -1/288 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,2] * self.ydqPhibar[1,mif1] * self.yquPhi[2,mif4] * self.yquPhibar[mif2,mif3] + -1/192 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,2] * self.ydqPhibar[1,mif1] * self.yquPhi[2,mif4] * self.yquPhibar[mif2,mif3] + 1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[1,2] * self.ydqPhibar[1,mif1] * self.yquPhi[2,mif4] * self.yquPhibar[mif2,mif3] + -1/288 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[2,mif4] * self.yquPhibar[mif2,mif3] + -1/192 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[2,mif4] * self.yquPhibar[mif2,mif3] + 1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[2,mif4] * self.yquPhibar[mif2,mif3] + 1/6 * (self.MPhi)**(-2) * self.yquPhi[mif1,mif4] * self.yquPhibar[mif2,mif3] + 25/6912 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,mif4] * self.yquPhibar[mif2,mif3] + 25/2304 * self.epsilonbar * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,mif4] * self.yquPhibar[mif2,mif3] + 1/256 * (self.g2)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,mif4] * self.yquPhibar[mif2,mif3] + 3/256 * self.epsilonbar * (self.g2)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,mif4] * self.yquPhibar[mif2,mif3] + -11/576 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,mif4] * self.yquPhibar[mif2,mif3] + -11/192 * self.epsilonbar * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,mif4] * self.yquPhibar[mif2,mif3] + 25/3456 * self.epsilonbar * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,mif4] * self.yquPhibar[mif2,mif3] + 1/128 * self.epsilonbar * (self.g2)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,mif4] * self.yquPhibar[mif2,mif3] + -11/288 * self.epsilonbar * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,mif4] * self.yquPhibar[mif2,mif3] + -25/3456 * self.epsilonbar * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,mif4] * self.yquPhibar[mif2,mif3] + -1/128 * self.epsilonbar * (self.g2)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,mif4] * self.yquPhibar[mif2,mif3] + 11/288 * self.epsilonbar * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,mif4] * self.yquPhibar[mif2,mif3] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif4] * self.yquPhi[mif1,0] * self.yquPhibar[0,0] * self.yquPhibar[mif2,mif3] + -1/96 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif4] * self.yquPhi[mif1,0] * self.yquPhibar[0,0] * self.yquPhibar[mif2,mif3] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[0,mif4] * self.yquPhi[mif1,0] * self.yquPhibar[0,0] * self.yquPhibar[mif2,mif3] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif4] * self.yquPhi[mif1,1] * self.yquPhibar[0,1] * self.yquPhibar[mif2,mif3] + -1/96 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif4] * self.yquPhi[mif1,1] * self.yquPhibar[0,1] * self.yquPhibar[mif2,mif3] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[0,mif4] * self.yquPhi[mif1,1] * self.yquPhibar[0,1] * self.yquPhibar[mif2,mif3] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif4] * self.yquPhi[mif1,2] * self.yquPhibar[0,2] * self.yquPhibar[mif2,mif3] + -1/96 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif4] * self.yquPhi[mif1,2] * self.yquPhibar[0,2] * self.yquPhibar[mif2,mif3] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[0,mif4] * self.yquPhi[mif1,2] * self.yquPhibar[0,2] * self.yquPhibar[mif2,mif3] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif4] * self.yquPhi[mif1,0] * self.yquPhibar[1,0] * self.yquPhibar[mif2,mif3] + -1/96 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif4] * self.yquPhi[mif1,0] * self.yquPhibar[1,0] * self.yquPhibar[mif2,mif3] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[1,mif4] * self.yquPhi[mif1,0] * self.yquPhibar[1,0] * self.yquPhibar[mif2,mif3] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif4] * self.yquPhi[mif1,1] * self.yquPhibar[1,1] * self.yquPhibar[mif2,mif3] + -1/96 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif4] * self.yquPhi[mif1,1] * self.yquPhibar[1,1] * self.yquPhibar[mif2,mif3] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[1,mif4] * self.yquPhi[mif1,1] * self.yquPhibar[1,1] * self.yquPhibar[mif2,mif3] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif4] * self.yquPhi[mif1,2] * self.yquPhibar[1,2] * self.yquPhibar[mif2,mif3] + -1/96 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif4] * self.yquPhi[mif1,2] * self.yquPhibar[1,2] * self.yquPhibar[mif2,mif3] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[1,mif4] * self.yquPhi[mif1,2] * self.yquPhibar[1,2] * self.yquPhibar[mif2,mif3] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif4] * self.yquPhi[mif1,0] * self.yquPhibar[2,0] * self.yquPhibar[mif2,mif3] + -1/96 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif4] * self.yquPhi[mif1,0] * self.yquPhibar[2,0] * self.yquPhibar[mif2,mif3] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[2,mif4] * self.yquPhi[mif1,0] * self.yquPhibar[2,0] * self.yquPhibar[mif2,mif3] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif4] * self.yquPhi[mif1,1] * self.yquPhibar[2,1] * self.yquPhibar[mif2,mif3] + -1/96 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif4] * self.yquPhi[mif1,1] * self.yquPhibar[2,1] * self.yquPhibar[mif2,mif3] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[2,mif4] * self.yquPhi[mif1,1] * self.yquPhibar[2,1] * self.yquPhibar[mif2,mif3] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif4] * self.yquPhi[mif1,2] * self.yquPhibar[2,2] * self.yquPhibar[mif2,mif3] + -1/96 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif4] * self.yquPhi[mif1,2] * self.yquPhibar[2,2] * self.yquPhibar[mif2,mif3] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[2,mif4] * self.yquPhi[mif1,2] * self.yquPhibar[2,2] * self.yquPhibar[mif2,mif3] + -3/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,mif2] * self.yquPhibar[0,mif3] * self.yu[0,mif4] + -1/64 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,mif2] * self.yquPhibar[0,mif3] * self.yu[0,mif4] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] * self.ydqPhi[0,mif2] * self.yquPhibar[0,mif3] * self.yu[0,mif4] + -3/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,mif2] * self.yquPhibar[0,mif3] * self.yu[0,mif4] + -1/64 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,mif2] * self.yquPhibar[0,mif3] * self.yu[0,mif4] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] * self.ydqPhi[1,mif2] * self.yquPhibar[0,mif3] * self.yu[0,mif4] + -3/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,mif2] * self.yquPhibar[0,mif3] * self.yu[0,mif4] + -1/64 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,mif2] * self.yquPhibar[0,mif3] * self.yu[0,mif4] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] * self.ydqPhi[2,mif2] * self.yquPhibar[0,mif3] * self.yu[0,mif4] + -3/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,mif2] * self.yquPhibar[1,mif3] * self.yu[1,mif4] + -1/64 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,mif2] * self.yquPhibar[1,mif3] * self.yu[1,mif4] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] * self.ydqPhi[0,mif2] * self.yquPhibar[1,mif3] * self.yu[1,mif4] + -3/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,mif2] * self.yquPhibar[1,mif3] * self.yu[1,mif4] + -1/64 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,mif2] * self.yquPhibar[1,mif3] * self.yu[1,mif4] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] * self.ydqPhi[1,mif2] * self.yquPhibar[1,mif3] * self.yu[1,mif4] + -3/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,mif2] * self.yquPhibar[1,mif3] * self.yu[1,mif4] + -1/64 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,mif2] * self.yquPhibar[1,mif3] * self.yu[1,mif4] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] * self.ydqPhi[2,mif2] * self.yquPhibar[1,mif3] * self.yu[1,mif4] + -3/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,mif2] * self.yquPhibar[2,mif3] * self.yu[2,mif4] + -1/64 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,mif2] * self.yquPhibar[2,mif3] * self.yu[2,mif4] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,0] * self.ydqPhi[0,mif2] * self.yquPhibar[2,mif3] * self.yu[2,mif4] + -3/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,mif2] * self.yquPhibar[2,mif3] * self.yu[2,mif4] + -1/64 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,mif2] * self.yquPhibar[2,mif3] * self.yu[2,mif4] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,1] * self.ydqPhi[1,mif2] * self.yquPhibar[2,mif3] * self.yu[2,mif4] + -3/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,mif2] * self.yquPhibar[2,mif3] * self.yu[2,mif4] + -1/64 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,mif2] * self.yquPhibar[2,mif3] * self.yu[2,mif4] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif1,2] * self.ydqPhi[2,mif2] * self.yquPhibar[2,mif3] * self.yu[2,mif4] + 1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydqPhi[0,mif2] * self.yquPhibar[0,mif3] * self.yu[mif1,mif4] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydqPhi[0,mif2] * self.yquPhibar[0,mif3] * self.yu[mif1,mif4] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydqPhi[0,mif2] * self.yquPhibar[0,mif3] * self.yu[mif1,mif4] + 1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydqPhi[1,mif2] * self.yquPhibar[0,mif3] * self.yu[mif1,mif4] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydqPhi[1,mif2] * self.yquPhibar[0,mif3] * self.yu[mif1,mif4] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydqPhi[1,mif2] * self.yquPhibar[0,mif3] * self.yu[mif1,mif4] + 1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydqPhi[2,mif2] * self.yquPhibar[0,mif3] * self.yu[mif1,mif4] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydqPhi[2,mif2] * self.yquPhibar[0,mif3] * self.yu[mif1,mif4] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydqPhi[2,mif2] * self.yquPhibar[0,mif3] * self.yu[mif1,mif4] + 1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydqPhi[0,mif2] * self.yquPhibar[1,mif3] * self.yu[mif1,mif4] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydqPhi[0,mif2] * self.yquPhibar[1,mif3] * self.yu[mif1,mif4] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydqPhi[0,mif2] * self.yquPhibar[1,mif3] * self.yu[mif1,mif4] + 1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydqPhi[1,mif2] * self.yquPhibar[1,mif3] * self.yu[mif1,mif4] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydqPhi[1,mif2] * self.yquPhibar[1,mif3] * self.yu[mif1,mif4] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydqPhi[1,mif2] * self.yquPhibar[1,mif3] * self.yu[mif1,mif4] + 1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydqPhi[2,mif2] * self.yquPhibar[1,mif3] * self.yu[mif1,mif4] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydqPhi[2,mif2] * self.yquPhibar[1,mif3] * self.yu[mif1,mif4] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydqPhi[2,mif2] * self.yquPhibar[1,mif3] * self.yu[mif1,mif4] + 1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydqPhi[0,mif2] * self.yquPhibar[2,mif3] * self.yu[mif1,mif4] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydqPhi[0,mif2] * self.yquPhibar[2,mif3] * self.yu[mif1,mif4] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydqPhi[0,mif2] * self.yquPhibar[2,mif3] * self.yu[mif1,mif4] + 1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydqPhi[1,mif2] * self.yquPhibar[2,mif3] * self.yu[mif1,mif4] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydqPhi[1,mif2] * self.yquPhibar[2,mif3] * self.yu[mif1,mif4] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydqPhi[1,mif2] * self.yquPhibar[2,mif3] * self.yu[mif1,mif4] + 1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydqPhi[2,mif2] * self.yquPhibar[2,mif3] * self.yu[mif1,mif4] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydqPhi[2,mif2] * self.yquPhibar[2,mif3] * self.yu[mif1,mif4] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydqPhi[2,mif2] * self.yquPhibar[2,mif3] * self.yu[mif1,mif4] + -3/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[0,mif4] * self.yubar[0,mif3] + -1/64 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[0,mif4] * self.yubar[0,mif3] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[0,mif4] * self.yubar[0,mif3] + -3/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[0,mif4] * self.yubar[0,mif3] + -1/64 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[0,mif4] * self.yubar[0,mif3] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[0,mif4] * self.yubar[0,mif3] + -3/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[0,mif4] * self.yubar[0,mif3] + -1/64 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[0,mif4] * self.yubar[0,mif3] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[0,mif4] * self.yubar[0,mif3] + -5/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif4] * self.yquPhibar[mif2,0] * self.yu[mif1,0] * self.yubar[0,mif3] + -1/64 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif4] * self.yquPhibar[mif2,0] * self.yu[mif1,0] * self.yubar[0,mif3] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[0,mif4] * self.yquPhibar[mif2,0] * self.yu[mif1,0] * self.yubar[0,mif3] + -5/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif4] * self.yquPhibar[mif2,1] * self.yu[mif1,1] * self.yubar[0,mif3] + -1/64 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif4] * self.yquPhibar[mif2,1] * self.yu[mif1,1] * self.yubar[0,mif3] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[0,mif4] * self.yquPhibar[mif2,1] * self.yu[mif1,1] * self.yubar[0,mif3] + -5/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif4] * self.yquPhibar[mif2,2] * self.yu[mif1,2] * self.yubar[0,mif3] + -1/64 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif4] * self.yquPhibar[mif2,2] * self.yu[mif1,2] * self.yubar[0,mif3] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[0,mif4] * self.yquPhibar[mif2,2] * self.yu[mif1,2] * self.yubar[0,mif3] + -3/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[1,mif4] * self.yubar[1,mif3] + -1/64 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[1,mif4] * self.yubar[1,mif3] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[1,mif4] * self.yubar[1,mif3] + -3/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[1,mif4] * self.yubar[1,mif3] + -1/64 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[1,mif4] * self.yubar[1,mif3] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[1,mif4] * self.yubar[1,mif3] + -3/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[1,mif4] * self.yubar[1,mif3] + -1/64 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[1,mif4] * self.yubar[1,mif3] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[1,mif4] * self.yubar[1,mif3] + -5/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif4] * self.yquPhibar[mif2,0] * self.yu[mif1,0] * self.yubar[1,mif3] + -1/64 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif4] * self.yquPhibar[mif2,0] * self.yu[mif1,0] * self.yubar[1,mif3] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[1,mif4] * self.yquPhibar[mif2,0] * self.yu[mif1,0] * self.yubar[1,mif3] + -5/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif4] * self.yquPhibar[mif2,1] * self.yu[mif1,1] * self.yubar[1,mif3] + -1/64 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif4] * self.yquPhibar[mif2,1] * self.yu[mif1,1] * self.yubar[1,mif3] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[1,mif4] * self.yquPhibar[mif2,1] * self.yu[mif1,1] * self.yubar[1,mif3] + -5/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif4] * self.yquPhibar[mif2,2] * self.yu[mif1,2] * self.yubar[1,mif3] + -1/64 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif4] * self.yquPhibar[mif2,2] * self.yu[mif1,2] * self.yubar[1,mif3] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[1,mif4] * self.yquPhibar[mif2,2] * self.yu[mif1,2] * self.yubar[1,mif3] + -3/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[2,mif4] * self.yubar[2,mif3] + -1/64 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[2,mif4] * self.yubar[2,mif3] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[2,mif4] * self.yubar[2,mif3] + -3/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[2,mif4] * self.yubar[2,mif3] + -1/64 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[2,mif4] * self.yubar[2,mif3] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[2,mif4] * self.yubar[2,mif3] + -3/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[2,mif4] * self.yubar[2,mif3] + -1/64 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[mif2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[2,mif4] * self.yubar[2,mif3] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[mif2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[2,mif4] * self.yubar[2,mif3] + -5/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif4] * self.yquPhibar[mif2,0] * self.yu[mif1,0] * self.yubar[2,mif3] + -1/64 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif4] * self.yquPhibar[mif2,0] * self.yu[mif1,0] * self.yubar[2,mif3] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[2,mif4] * self.yquPhibar[mif2,0] * self.yu[mif1,0] * self.yubar[2,mif3] + -5/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif4] * self.yquPhibar[mif2,1] * self.yu[mif1,1] * self.yubar[2,mif3] + -1/64 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif4] * self.yquPhibar[mif2,1] * self.yu[mif1,1] * self.yubar[2,mif3] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[2,mif4] * self.yquPhibar[mif2,1] * self.yu[mif1,1] * self.yubar[2,mif3] + -5/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif4] * self.yquPhibar[mif2,2] * self.yu[mif1,2] * self.yubar[2,mif3] + -1/64 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif4] * self.yquPhibar[mif2,2] * self.yu[mif1,2] * self.yubar[2,mif3] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[2,mif4] * self.yquPhibar[mif2,2] * self.yu[mif1,2] * self.yubar[2,mif3] + -5/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[0,mif3] * self.yu[0,mif4] * self.yubar[mif2,0] + -1/64 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[0,mif3] * self.yu[0,mif4] * self.yubar[mif2,0] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,0] * self.yquPhibar[0,mif3] * self.yu[0,mif4] * self.yubar[mif2,0] + -5/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[1,mif3] * self.yu[1,mif4] * self.yubar[mif2,0] + -1/64 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[1,mif3] * self.yu[1,mif4] * self.yubar[mif2,0] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,0] * self.yquPhibar[1,mif3] * self.yu[1,mif4] * self.yubar[mif2,0] + -5/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[2,mif3] * self.yu[2,mif4] * self.yubar[mif2,0] + -1/64 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[2,mif3] * self.yu[2,mif4] * self.yubar[mif2,0] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,0] * self.yquPhibar[2,mif3] * self.yu[2,mif4] * self.yubar[mif2,0] + -5/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[0,mif3] * self.yu[0,mif4] * self.yubar[mif2,1] + -1/64 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[0,mif3] * self.yu[0,mif4] * self.yubar[mif2,1] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,1] * self.yquPhibar[0,mif3] * self.yu[0,mif4] * self.yubar[mif2,1] + -5/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[1,mif3] * self.yu[1,mif4] * self.yubar[mif2,1] + -1/64 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[1,mif3] * self.yu[1,mif4] * self.yubar[mif2,1] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,1] * self.yquPhibar[1,mif3] * self.yu[1,mif4] * self.yubar[mif2,1] + -5/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[2,mif3] * self.yu[2,mif4] * self.yubar[mif2,1] + -1/64 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[2,mif3] * self.yu[2,mif4] * self.yubar[mif2,1] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,1] * self.yquPhibar[2,mif3] * self.yu[2,mif4] * self.yubar[mif2,1] + -5/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[0,mif3] * self.yu[0,mif4] * self.yubar[mif2,2] + -1/64 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[0,mif3] * self.yu[0,mif4] * self.yubar[mif2,2] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,2] * self.yquPhibar[0,mif3] * self.yu[0,mif4] * self.yubar[mif2,2] + -5/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[1,mif3] * self.yu[1,mif4] * self.yubar[mif2,2] + -1/64 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[1,mif3] * self.yu[1,mif4] * self.yubar[mif2,2] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,2] * self.yquPhibar[1,mif3] * self.yu[1,mif4] * self.yubar[mif2,2] + -5/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[2,mif3] * self.yu[2,mif4] * self.yubar[mif2,2] + -1/64 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[2,mif3] * self.yu[2,mif4] * self.yubar[mif2,2] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[mif1,2] * self.yquPhibar[2,mif3] * self.yu[2,mif4] * self.yubar[mif2,2] + 1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.ydqPhibar[0,mif1] * self.yquPhi[0,mif4] * self.yubar[mif2,mif3] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.ydqPhibar[0,mif1] * self.yquPhi[0,mif4] * self.yubar[mif2,mif3] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[0,0] * self.ydqPhibar[0,mif1] * self.yquPhi[0,mif4] * self.yubar[mif2,mif3] + 1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.ydqPhibar[1,mif1] * self.yquPhi[0,mif4] * self.yubar[mif2,mif3] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.ydqPhibar[1,mif1] * self.yquPhi[0,mif4] * self.yubar[mif2,mif3] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[0,1] * self.ydqPhibar[1,mif1] * self.yquPhi[0,mif4] * self.yubar[mif2,mif3] + 1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.ydqPhibar[2,mif1] * self.yquPhi[0,mif4] * self.yubar[mif2,mif3] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.ydqPhibar[2,mif1] * self.yquPhi[0,mif4] * self.yubar[mif2,mif3] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[0,2] * self.ydqPhibar[2,mif1] * self.yquPhi[0,mif4] * self.yubar[mif2,mif3] + 1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.ydqPhibar[0,mif1] * self.yquPhi[1,mif4] * self.yubar[mif2,mif3] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.ydqPhibar[0,mif1] * self.yquPhi[1,mif4] * self.yubar[mif2,mif3] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[1,0] * self.ydqPhibar[0,mif1] * self.yquPhi[1,mif4] * self.yubar[mif2,mif3] + 1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.ydqPhibar[1,mif1] * self.yquPhi[1,mif4] * self.yubar[mif2,mif3] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.ydqPhibar[1,mif1] * self.yquPhi[1,mif4] * self.yubar[mif2,mif3] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[1,1] * self.ydqPhibar[1,mif1] * self.yquPhi[1,mif4] * self.yubar[mif2,mif3] + 1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.ydqPhibar[2,mif1] * self.yquPhi[1,mif4] * self.yubar[mif2,mif3] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.ydqPhibar[2,mif1] * self.yquPhi[1,mif4] * self.yubar[mif2,mif3] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[1,2] * self.ydqPhibar[2,mif1] * self.yquPhi[1,mif4] * self.yubar[mif2,mif3] + 1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[2,mif4] * self.yubar[mif2,mif3] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[2,mif4] * self.yubar[mif2,mif3] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[2,mif4] * self.yubar[mif2,mif3] + 1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[2,mif4] * self.yubar[mif2,mif3] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[2,mif4] * self.yubar[mif2,mif3] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[2,mif4] * self.yubar[mif2,mif3] + 1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[2,mif4] * self.yubar[mif2,mif3] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[2,mif4] * self.yubar[mif2,mif3] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[2,mif4] * self.yubar[mif2,mif3])

    def alphaOquqd1(self, mif1,mif2,mif3,mif4):
        return (-1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,mif4] * self.ydbar[0,0] * self.ydqPhibar[0,mif1] * self.yquPhi[0,mif2] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,mif4] * self.ydbar[0,0] * self.ydqPhibar[0,mif1] * self.yquPhi[0,mif2] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif3,mif4] * self.ydbar[0,0] * self.ydqPhibar[0,mif1] * self.yquPhi[0,mif2] + -1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,mif4] * self.ydbar[0,1] * self.ydqPhibar[1,mif1] * self.yquPhi[0,mif2] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,mif4] * self.ydbar[0,1] * self.ydqPhibar[1,mif1] * self.yquPhi[0,mif2] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif3,mif4] * self.ydbar[0,1] * self.ydqPhibar[1,mif1] * self.yquPhi[0,mif2] + -1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,mif4] * self.ydbar[0,2] * self.ydqPhibar[2,mif1] * self.yquPhi[0,mif2] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,mif4] * self.ydbar[0,2] * self.ydqPhibar[2,mif1] * self.yquPhi[0,mif2] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif3,mif4] * self.ydbar[0,2] * self.ydqPhibar[2,mif1] * self.yquPhi[0,mif2] + -1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,mif4] * self.ydbar[1,0] * self.ydqPhibar[0,mif1] * self.yquPhi[1,mif2] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,mif4] * self.ydbar[1,0] * self.ydqPhibar[0,mif1] * self.yquPhi[1,mif2] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif3,mif4] * self.ydbar[1,0] * self.ydqPhibar[0,mif1] * self.yquPhi[1,mif2] + -1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,mif4] * self.ydbar[1,1] * self.ydqPhibar[1,mif1] * self.yquPhi[1,mif2] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,mif4] * self.ydbar[1,1] * self.ydqPhibar[1,mif1] * self.yquPhi[1,mif2] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif3,mif4] * self.ydbar[1,1] * self.ydqPhibar[1,mif1] * self.yquPhi[1,mif2] + -1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,mif4] * self.ydbar[1,2] * self.ydqPhibar[2,mif1] * self.yquPhi[1,mif2] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,mif4] * self.ydbar[1,2] * self.ydqPhibar[2,mif1] * self.yquPhi[1,mif2] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif3,mif4] * self.ydbar[1,2] * self.ydqPhibar[2,mif1] * self.yquPhi[1,mif2] + -1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,mif4] * self.ydbar[2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[2,mif2] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,mif4] * self.ydbar[2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[2,mif2] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif3,mif4] * self.ydbar[2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[2,mif2] + -1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,mif4] * self.ydbar[2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[2,mif2] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,mif4] * self.ydbar[2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[2,mif2] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif3,mif4] * self.ydbar[2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[2,mif2] + -1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,mif4] * self.ydbar[2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[2,mif2] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,mif4] * self.ydbar[2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[2,mif2] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[mif3,mif4] * self.ydbar[2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[2,mif2] + -1/9 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,mif3] * self.yquPhi[mif1,mif2] + 1/24 * self.epsilonbar * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,mif3] * self.yquPhi[mif1,mif2] + -1/18 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,mif3] * self.yquPhi[mif1,mif2] + 1/36 * self.epsilonbar * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,mif3] * self.yquPhi[mif1,mif2] + 1/18 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif4,mif3] * self.yquPhi[mif1,mif2] + -1/36 * self.epsilonbar * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif4,mif3] * self.yquPhi[mif1,mif2] + -5/432 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,mif1] * self.yquPhi[mif3,mif2] + -1/16 * (self.g2)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,mif1] * self.yquPhi[mif3,mif2] + 7/36 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,mif1] * self.yquPhi[mif3,mif2] + -5/648 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,mif1] * self.yquPhi[mif3,mif2] + -1/24 * (self.g2)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,mif1] * self.yquPhi[mif3,mif2] + 7/54 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,mif1] * self.yquPhi[mif3,mif2] + 5/648 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif4,mif1] * self.yquPhi[mif3,mif2] + 1/24 * (self.g2)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif4,mif1] * self.yquPhi[mif3,mif2] + -7/54 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif4,mif1] * self.yquPhi[mif3,mif2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,0] * self.ydqPhi[0,0] * self.ydqPhibar[mif4,mif1] * self.yu[0,mif2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,1] * self.ydqPhi[1,0] * self.ydqPhibar[mif4,mif1] * self.yu[0,mif2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,2] * self.ydqPhi[2,0] * self.ydqPhibar[mif4,mif1] * self.yu[0,mif2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,0] * self.ydqPhi[0,1] * self.ydqPhibar[mif4,mif1] * self.yu[1,mif2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,1] * self.ydqPhi[1,1] * self.ydqPhibar[mif4,mif1] * self.yu[1,mif2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,2] * self.ydqPhi[2,1] * self.ydqPhibar[mif4,mif1] * self.yu[1,mif2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,0] * self.ydqPhi[0,2] * self.ydqPhibar[mif4,mif1] * self.yu[2,mif2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,1] * self.ydqPhi[1,2] * self.ydqPhibar[mif4,mif1] * self.yu[2,mif2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,2] * self.ydqPhi[2,2] * self.ydqPhibar[mif4,mif1] * self.yu[2,mif2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.yquPhi[mif3,mif2] * self.yquPhibar[0,0] * self.yu[mif1,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.yquPhi[mif3,mif2] * self.yquPhibar[1,0] * self.yu[mif1,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.yquPhi[mif3,mif2] * self.yquPhibar[2,0] * self.yu[mif1,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.yquPhi[mif3,mif2] * self.yquPhibar[0,1] * self.yu[mif1,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.yquPhi[mif3,mif2] * self.yquPhibar[1,1] * self.yu[mif1,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.yquPhi[mif3,mif2] * self.yquPhibar[2,1] * self.yu[mif1,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.yquPhi[mif3,mif2] * self.yquPhibar[0,2] * self.yu[mif1,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.yquPhi[mif3,mif2] * self.yquPhibar[1,2] * self.yu[mif1,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.yquPhi[mif3,mif2] * self.yquPhibar[2,2] * self.yu[mif1,2] + -1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,0] * self.yquPhi[mif3,0] * self.yu[mif1,mif2] * self.yubar[0,0] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,0] * self.yquPhi[mif3,0] * self.yu[mif1,mif2] * self.yubar[0,0] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif4,0] * self.yquPhi[mif3,0] * self.yu[mif1,mif2] * self.yubar[0,0] + -1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,0] * self.yquPhi[mif3,1] * self.yu[mif1,mif2] * self.yubar[0,1] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,0] * self.yquPhi[mif3,1] * self.yu[mif1,mif2] * self.yubar[0,1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif4,0] * self.yquPhi[mif3,1] * self.yu[mif1,mif2] * self.yubar[0,1] + -1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,0] * self.yquPhi[mif3,2] * self.yu[mif1,mif2] * self.yubar[0,2] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,0] * self.yquPhi[mif3,2] * self.yu[mif1,mif2] * self.yubar[0,2] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif4,0] * self.yquPhi[mif3,2] * self.yu[mif1,mif2] * self.yubar[0,2] + -1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,1] * self.yquPhi[mif3,0] * self.yu[mif1,mif2] * self.yubar[1,0] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,1] * self.yquPhi[mif3,0] * self.yu[mif1,mif2] * self.yubar[1,0] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif4,1] * self.yquPhi[mif3,0] * self.yu[mif1,mif2] * self.yubar[1,0] + -1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,1] * self.yquPhi[mif3,1] * self.yu[mif1,mif2] * self.yubar[1,1] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,1] * self.yquPhi[mif3,1] * self.yu[mif1,mif2] * self.yubar[1,1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif4,1] * self.yquPhi[mif3,1] * self.yu[mif1,mif2] * self.yubar[1,1] + -1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,1] * self.yquPhi[mif3,2] * self.yu[mif1,mif2] * self.yubar[1,2] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,1] * self.yquPhi[mif3,2] * self.yu[mif1,mif2] * self.yubar[1,2] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif4,1] * self.yquPhi[mif3,2] * self.yu[mif1,mif2] * self.yubar[1,2] + -1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,2] * self.yquPhi[mif3,0] * self.yu[mif1,mif2] * self.yubar[2,0] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,2] * self.yquPhi[mif3,0] * self.yu[mif1,mif2] * self.yubar[2,0] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif4,2] * self.yquPhi[mif3,0] * self.yu[mif1,mif2] * self.yubar[2,0] + -1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,2] * self.yquPhi[mif3,1] * self.yu[mif1,mif2] * self.yubar[2,1] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,2] * self.yquPhi[mif3,1] * self.yu[mif1,mif2] * self.yubar[2,1] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif4,2] * self.yquPhi[mif3,1] * self.yu[mif1,mif2] * self.yubar[2,1] + -1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,2] * self.yquPhi[mif3,2] * self.yu[mif1,mif2] * self.yubar[2,2] + -1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,2] * self.yquPhi[mif3,2] * self.yu[mif1,mif2] * self.yubar[2,2] + 1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif4,2] * self.yquPhi[mif3,2] * self.yu[mif1,mif2] * self.yubar[2,2])

    def alphaOquqd8(self, mif1,mif2,mif3,mif4):
        return (1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,0] * self.ydqPhibar[0,mif1] * self.ydqPhibar[mif4,mif3] * self.yquPhi[0,mif2] + 1/32 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,0] * self.ydqPhibar[0,mif1] * self.ydqPhibar[mif4,mif3] * self.yquPhi[0,mif2] + -1/32 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[0,0] * self.ydqPhibar[0,mif1] * self.ydqPhibar[mif4,mif3] * self.yquPhi[0,mif2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,0] * self.ydqPhibar[1,mif1] * self.ydqPhibar[mif4,mif3] * self.yquPhi[0,mif2] + 1/32 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,0] * self.ydqPhibar[1,mif1] * self.ydqPhibar[mif4,mif3] * self.yquPhi[0,mif2] + -1/32 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[1,0] * self.ydqPhibar[1,mif1] * self.ydqPhibar[mif4,mif3] * self.yquPhi[0,mif2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,0] * self.ydqPhibar[2,mif1] * self.ydqPhibar[mif4,mif3] * self.yquPhi[0,mif2] + 1/32 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,0] * self.ydqPhibar[2,mif1] * self.ydqPhibar[mif4,mif3] * self.yquPhi[0,mif2] + -1/32 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[2,0] * self.ydqPhibar[2,mif1] * self.ydqPhibar[mif4,mif3] * self.yquPhi[0,mif2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,1] * self.ydqPhibar[0,mif1] * self.ydqPhibar[mif4,mif3] * self.yquPhi[1,mif2] + 1/32 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,1] * self.ydqPhibar[0,mif1] * self.ydqPhibar[mif4,mif3] * self.yquPhi[1,mif2] + -1/32 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[0,1] * self.ydqPhibar[0,mif1] * self.ydqPhibar[mif4,mif3] * self.yquPhi[1,mif2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,1] * self.ydqPhibar[1,mif1] * self.ydqPhibar[mif4,mif3] * self.yquPhi[1,mif2] + 1/32 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,1] * self.ydqPhibar[1,mif1] * self.ydqPhibar[mif4,mif3] * self.yquPhi[1,mif2] + -1/32 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[1,1] * self.ydqPhibar[1,mif1] * self.ydqPhibar[mif4,mif3] * self.yquPhi[1,mif2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,1] * self.ydqPhibar[2,mif1] * self.ydqPhibar[mif4,mif3] * self.yquPhi[1,mif2] + 1/32 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,1] * self.ydqPhibar[2,mif1] * self.ydqPhibar[mif4,mif3] * self.yquPhi[1,mif2] + -1/32 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[2,1] * self.ydqPhibar[2,mif1] * self.ydqPhibar[mif4,mif3] * self.yquPhi[1,mif2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,2] * self.ydqPhibar[0,mif1] * self.ydqPhibar[mif4,mif3] * self.yquPhi[2,mif2] + 1/32 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,2] * self.ydqPhibar[0,mif1] * self.ydqPhibar[mif4,mif3] * self.yquPhi[2,mif2] + -1/32 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[0,2] * self.ydqPhibar[0,mif1] * self.ydqPhibar[mif4,mif3] * self.yquPhi[2,mif2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,2] * self.ydqPhibar[1,mif1] * self.ydqPhibar[mif4,mif3] * self.yquPhi[2,mif2] + 1/32 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,2] * self.ydqPhibar[1,mif1] * self.ydqPhibar[mif4,mif3] * self.yquPhi[2,mif2] + -1/32 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[1,2] * self.ydqPhibar[1,mif1] * self.ydqPhibar[mif4,mif3] * self.yquPhi[2,mif2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,2] * self.ydqPhibar[2,mif1] * self.ydqPhibar[mif4,mif3] * self.yquPhi[2,mif2] + 1/32 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,2] * self.ydqPhibar[2,mif1] * self.ydqPhibar[mif4,mif3] * self.yquPhi[2,mif2] + -1/32 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[2,2] * self.ydqPhibar[2,mif1] * self.ydqPhibar[mif4,mif3] * self.yquPhi[2,mif2] + 1/32 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,0] * self.ydqPhibar[0,mif3] * self.ydqPhibar[mif4,0] * self.yquPhi[mif1,mif2] + 1/16 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,0] * self.ydqPhibar[0,mif3] * self.ydqPhibar[mif4,0] * self.yquPhi[mif1,mif2] + -1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[0,0] * self.ydqPhibar[0,mif3] * self.ydqPhibar[mif4,0] * self.yquPhi[mif1,mif2] + 1/32 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,0] * self.ydqPhibar[1,mif3] * self.ydqPhibar[mif4,0] * self.yquPhi[mif1,mif2] + 1/16 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,0] * self.ydqPhibar[1,mif3] * self.ydqPhibar[mif4,0] * self.yquPhi[mif1,mif2] + -1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[1,0] * self.ydqPhibar[1,mif3] * self.ydqPhibar[mif4,0] * self.yquPhi[mif1,mif2] + 1/32 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,0] * self.ydqPhibar[2,mif3] * self.ydqPhibar[mif4,0] * self.yquPhi[mif1,mif2] + 1/16 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,0] * self.ydqPhibar[2,mif3] * self.ydqPhibar[mif4,0] * self.yquPhi[mif1,mif2] + -1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[2,0] * self.ydqPhibar[2,mif3] * self.ydqPhibar[mif4,0] * self.yquPhi[mif1,mif2] + 1/32 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,1] * self.ydqPhibar[0,mif3] * self.ydqPhibar[mif4,1] * self.yquPhi[mif1,mif2] + 1/16 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,1] * self.ydqPhibar[0,mif3] * self.ydqPhibar[mif4,1] * self.yquPhi[mif1,mif2] + -1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[0,1] * self.ydqPhibar[0,mif3] * self.ydqPhibar[mif4,1] * self.yquPhi[mif1,mif2] + 1/32 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,1] * self.ydqPhibar[1,mif3] * self.ydqPhibar[mif4,1] * self.yquPhi[mif1,mif2] + 1/16 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,1] * self.ydqPhibar[1,mif3] * self.ydqPhibar[mif4,1] * self.yquPhi[mif1,mif2] + -1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[1,1] * self.ydqPhibar[1,mif3] * self.ydqPhibar[mif4,1] * self.yquPhi[mif1,mif2] + 1/32 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,1] * self.ydqPhibar[2,mif3] * self.ydqPhibar[mif4,1] * self.yquPhi[mif1,mif2] + 1/16 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,1] * self.ydqPhibar[2,mif3] * self.ydqPhibar[mif4,1] * self.yquPhi[mif1,mif2] + -1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[2,1] * self.ydqPhibar[2,mif3] * self.ydqPhibar[mif4,1] * self.yquPhi[mif1,mif2] + 1/32 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,2] * self.ydqPhibar[0,mif3] * self.ydqPhibar[mif4,2] * self.yquPhi[mif1,mif2] + 1/16 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,2] * self.ydqPhibar[0,mif3] * self.ydqPhibar[mif4,2] * self.yquPhi[mif1,mif2] + -1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[0,2] * self.ydqPhibar[0,mif3] * self.ydqPhibar[mif4,2] * self.yquPhi[mif1,mif2] + 1/32 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,2] * self.ydqPhibar[1,mif3] * self.ydqPhibar[mif4,2] * self.yquPhi[mif1,mif2] + 1/16 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,2] * self.ydqPhibar[1,mif3] * self.ydqPhibar[mif4,2] * self.yquPhi[mif1,mif2] + -1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[1,2] * self.ydqPhibar[1,mif3] * self.ydqPhibar[mif4,2] * self.yquPhi[mif1,mif2] + 1/32 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,2] * self.ydqPhibar[2,mif3] * self.ydqPhibar[mif4,2] * self.yquPhi[mif1,mif2] + 1/16 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,2] * self.ydqPhibar[2,mif3] * self.ydqPhibar[mif4,2] * self.yquPhi[mif1,mif2] + -1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[2,2] * self.ydqPhibar[2,mif3] * self.ydqPhibar[mif4,2] * self.yquPhi[mif1,mif2] + -1 * (self.MPhi)**(-2) * self.ydqPhibar[mif4,mif3] * self.yquPhi[mif1,mif2] + 5/288 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,mif3] * self.yquPhi[mif1,mif2] + -5/768 * self.epsilonbar * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,mif3] * self.yquPhi[mif1,mif2] + 3/32 * (self.g2)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,mif3] * self.yquPhi[mif1,mif2] + -9/256 * self.epsilonbar * (self.g2)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,mif3] * self.yquPhi[mif1,mif2] + -5/24 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,mif3] * self.yquPhi[mif1,mif2] + 5/64 * self.epsilonbar * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,mif3] * self.yquPhi[mif1,mif2] + 5/576 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,mif3] * self.yquPhi[mif1,mif2] + -5/1152 * self.epsilonbar * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,mif3] * self.yquPhi[mif1,mif2] + 3/64 * (self.g2)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,mif3] * self.yquPhi[mif1,mif2] + -3/128 * self.epsilonbar * (self.g2)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,mif3] * self.yquPhi[mif1,mif2] + -5/48 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,mif3] * self.yquPhi[mif1,mif2] + 5/96 * self.epsilonbar * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,mif3] * self.yquPhi[mif1,mif2] + -5/576 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif4,mif3] * self.yquPhi[mif1,mif2] + 5/1152 * self.epsilonbar * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif4,mif3] * self.yquPhi[mif1,mif2] + -3/64 * (self.g2)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif4,mif3] * self.yquPhi[mif1,mif2] + 3/128 * self.epsilonbar * (self.g2)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif4,mif3] * self.yquPhi[mif1,mif2] + 5/48 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif4,mif3] * self.yquPhi[mif1,mif2] + -5/96 * self.epsilonbar * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif4,mif3] * self.yquPhi[mif1,mif2] + 5/576 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,mif1] * self.yquPhi[mif3,mif2] + 3/64 * (self.g2)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,mif1] * self.yquPhi[mif3,mif2] + 11/48 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,mif1] * self.yquPhi[mif3,mif2] + 5/864 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,mif1] * self.yquPhi[mif3,mif2] + 1/32 * (self.g2)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,mif1] * self.yquPhi[mif3,mif2] + 11/72 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,mif1] * self.yquPhi[mif3,mif2] + -5/864 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif4,mif1] * self.yquPhi[mif3,mif2] + -1/32 * (self.g2)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif4,mif1] * self.yquPhi[mif3,mif2] + -11/72 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif4,mif1] * self.yquPhi[mif3,mif2] + 1/32 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,mif3] * self.yquPhi[0,mif2] * self.yquPhi[mif1,0] * self.yquPhibar[0,0] + 1/16 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,mif3] * self.yquPhi[0,mif2] * self.yquPhi[mif1,0] * self.yquPhibar[0,0] + -1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif4,mif3] * self.yquPhi[0,mif2] * self.yquPhi[mif1,0] * self.yquPhibar[0,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,0] * self.yquPhi[mif1,mif2] * self.yquPhi[mif3,0] * self.yquPhibar[0,0] + 1/32 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,0] * self.yquPhi[mif1,mif2] * self.yquPhi[mif3,0] * self.yquPhibar[0,0] + -1/32 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif4,0] * self.yquPhi[mif1,mif2] * self.yquPhi[mif3,0] * self.yquPhibar[0,0] + 1/32 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,mif3] * self.yquPhi[0,mif2] * self.yquPhi[mif1,1] * self.yquPhibar[0,1] + 1/16 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,mif3] * self.yquPhi[0,mif2] * self.yquPhi[mif1,1] * self.yquPhibar[0,1] + -1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif4,mif3] * self.yquPhi[0,mif2] * self.yquPhi[mif1,1] * self.yquPhibar[0,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,0] * self.yquPhi[mif1,mif2] * self.yquPhi[mif3,1] * self.yquPhibar[0,1] + 1/32 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,0] * self.yquPhi[mif1,mif2] * self.yquPhi[mif3,1] * self.yquPhibar[0,1] + -1/32 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif4,0] * self.yquPhi[mif1,mif2] * self.yquPhi[mif3,1] * self.yquPhibar[0,1] + 1/32 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,mif3] * self.yquPhi[0,mif2] * self.yquPhi[mif1,2] * self.yquPhibar[0,2] + 1/16 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,mif3] * self.yquPhi[0,mif2] * self.yquPhi[mif1,2] * self.yquPhibar[0,2] + -1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif4,mif3] * self.yquPhi[0,mif2] * self.yquPhi[mif1,2] * self.yquPhibar[0,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,0] * self.yquPhi[mif1,mif2] * self.yquPhi[mif3,2] * self.yquPhibar[0,2] + 1/32 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,0] * self.yquPhi[mif1,mif2] * self.yquPhi[mif3,2] * self.yquPhibar[0,2] + -1/32 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif4,0] * self.yquPhi[mif1,mif2] * self.yquPhi[mif3,2] * self.yquPhibar[0,2] + 1/32 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,mif3] * self.yquPhi[1,mif2] * self.yquPhi[mif1,0] * self.yquPhibar[1,0] + 1/16 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,mif3] * self.yquPhi[1,mif2] * self.yquPhi[mif1,0] * self.yquPhibar[1,0] + -1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif4,mif3] * self.yquPhi[1,mif2] * self.yquPhi[mif1,0] * self.yquPhibar[1,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,1] * self.yquPhi[mif1,mif2] * self.yquPhi[mif3,0] * self.yquPhibar[1,0] + 1/32 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,1] * self.yquPhi[mif1,mif2] * self.yquPhi[mif3,0] * self.yquPhibar[1,0] + -1/32 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif4,1] * self.yquPhi[mif1,mif2] * self.yquPhi[mif3,0] * self.yquPhibar[1,0] + 1/32 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,mif3] * self.yquPhi[1,mif2] * self.yquPhi[mif1,1] * self.yquPhibar[1,1] + 1/16 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,mif3] * self.yquPhi[1,mif2] * self.yquPhi[mif1,1] * self.yquPhibar[1,1] + -1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif4,mif3] * self.yquPhi[1,mif2] * self.yquPhi[mif1,1] * self.yquPhibar[1,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,1] * self.yquPhi[mif1,mif2] * self.yquPhi[mif3,1] * self.yquPhibar[1,1] + 1/32 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,1] * self.yquPhi[mif1,mif2] * self.yquPhi[mif3,1] * self.yquPhibar[1,1] + -1/32 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif4,1] * self.yquPhi[mif1,mif2] * self.yquPhi[mif3,1] * self.yquPhibar[1,1] + 1/32 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,mif3] * self.yquPhi[1,mif2] * self.yquPhi[mif1,2] * self.yquPhibar[1,2] + 1/16 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,mif3] * self.yquPhi[1,mif2] * self.yquPhi[mif1,2] * self.yquPhibar[1,2] + -1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif4,mif3] * self.yquPhi[1,mif2] * self.yquPhi[mif1,2] * self.yquPhibar[1,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,1] * self.yquPhi[mif1,mif2] * self.yquPhi[mif3,2] * self.yquPhibar[1,2] + 1/32 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,1] * self.yquPhi[mif1,mif2] * self.yquPhi[mif3,2] * self.yquPhibar[1,2] + -1/32 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif4,1] * self.yquPhi[mif1,mif2] * self.yquPhi[mif3,2] * self.yquPhibar[1,2] + 1/32 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,mif3] * self.yquPhi[2,mif2] * self.yquPhi[mif1,0] * self.yquPhibar[2,0] + 1/16 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,mif3] * self.yquPhi[2,mif2] * self.yquPhi[mif1,0] * self.yquPhibar[2,0] + -1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif4,mif3] * self.yquPhi[2,mif2] * self.yquPhi[mif1,0] * self.yquPhibar[2,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,2] * self.yquPhi[mif1,mif2] * self.yquPhi[mif3,0] * self.yquPhibar[2,0] + 1/32 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,2] * self.yquPhi[mif1,mif2] * self.yquPhi[mif3,0] * self.yquPhibar[2,0] + -1/32 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif4,2] * self.yquPhi[mif1,mif2] * self.yquPhi[mif3,0] * self.yquPhibar[2,0] + 1/32 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,mif3] * self.yquPhi[2,mif2] * self.yquPhi[mif1,1] * self.yquPhibar[2,1] + 1/16 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,mif3] * self.yquPhi[2,mif2] * self.yquPhi[mif1,1] * self.yquPhibar[2,1] + -1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif4,mif3] * self.yquPhi[2,mif2] * self.yquPhi[mif1,1] * self.yquPhibar[2,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,2] * self.yquPhi[mif1,mif2] * self.yquPhi[mif3,1] * self.yquPhibar[2,1] + 1/32 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,2] * self.yquPhi[mif1,mif2] * self.yquPhi[mif3,1] * self.yquPhibar[2,1] + -1/32 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif4,2] * self.yquPhi[mif1,mif2] * self.yquPhi[mif3,1] * self.yquPhibar[2,1] + 1/32 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,mif3] * self.yquPhi[2,mif2] * self.yquPhi[mif1,2] * self.yquPhibar[2,2] + 1/16 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,mif3] * self.yquPhi[2,mif2] * self.yquPhi[mif1,2] * self.yquPhibar[2,2] + -1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif4,mif3] * self.yquPhi[2,mif2] * self.yquPhi[mif1,2] * self.yquPhibar[2,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,2] * self.yquPhi[mif1,mif2] * self.yquPhi[mif3,2] * self.yquPhibar[2,2] + 1/32 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhibar[mif4,2] * self.yquPhi[mif1,mif2] * self.yquPhi[mif3,2] * self.yquPhibar[2,2] + -1/32 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhibar[mif4,2] * self.yquPhi[mif1,mif2] * self.yquPhi[mif3,2] * self.yquPhibar[2,2] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,0] * self.ydqPhi[0,0] * self.ydqPhibar[mif4,mif1] * self.yu[0,mif2] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,1] * self.ydqPhi[1,0] * self.ydqPhibar[mif4,mif1] * self.yu[0,mif2] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,2] * self.ydqPhi[2,0] * self.ydqPhibar[mif4,mif1] * self.yu[0,mif2] + -1/32 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,0] * self.ydqPhibar[mif4,mif3] * self.yu[0,mif2] + -1/32 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,0] * self.ydqPhibar[mif4,mif3] * self.yu[0,mif2] + -1/32 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,0] * self.ydqPhibar[mif4,mif3] * self.yu[0,mif2] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,0] * self.ydqPhi[0,1] * self.ydqPhibar[mif4,mif1] * self.yu[1,mif2] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,1] * self.ydqPhi[1,1] * self.ydqPhibar[mif4,mif1] * self.yu[1,mif2] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,2] * self.ydqPhi[2,1] * self.ydqPhibar[mif4,mif1] * self.yu[1,mif2] + -1/32 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,1] * self.ydqPhibar[mif4,mif3] * self.yu[1,mif2] + -1/32 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,1] * self.ydqPhibar[mif4,mif3] * self.yu[1,mif2] + -1/32 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,1] * self.ydqPhibar[mif4,mif3] * self.yu[1,mif2] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,0] * self.ydqPhi[0,2] * self.ydqPhibar[mif4,mif1] * self.yu[2,mif2] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,1] * self.ydqPhi[1,2] * self.ydqPhibar[mif4,mif1] * self.yu[2,mif2] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif3,2] * self.ydqPhi[2,2] * self.ydqPhibar[mif4,mif1] * self.yu[2,mif2] + -1/32 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,0] * self.ydqPhi[0,2] * self.ydqPhibar[mif4,mif3] * self.yu[2,mif2] + -1/32 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,1] * self.ydqPhi[1,2] * self.ydqPhibar[mif4,mif3] * self.yu[2,mif2] + -1/32 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,2] * self.ydqPhi[2,2] * self.ydqPhibar[mif4,mif3] * self.yu[2,mif2] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.yquPhi[mif3,mif2] * self.yquPhibar[0,0] * self.yu[mif1,0] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.yquPhi[mif3,mif2] * self.yquPhibar[1,0] * self.yu[mif1,0] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.yquPhi[mif3,mif2] * self.yquPhibar[2,0] * self.yu[mif1,0] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.yquPhi[mif3,mif2] * self.yquPhibar[0,1] * self.yu[mif1,1] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.yquPhi[mif3,mif2] * self.yquPhibar[1,1] * self.yu[mif1,1] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.yquPhi[mif3,mif2] * self.yquPhibar[2,1] * self.yu[mif1,1] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.yquPhi[mif3,mif2] * self.yquPhibar[0,2] * self.yu[mif1,2] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.yquPhi[mif3,mif2] * self.yquPhibar[1,2] * self.yu[mif1,2] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.yquPhi[mif3,mif2] * self.yquPhibar[2,2] * self.yu[mif1,2] + -1/32 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.yquPhi[mif1,mif2] * self.yquPhibar[0,0] * self.yu[mif3,0] + -1/32 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.yquPhi[mif1,mif2] * self.yquPhibar[1,0] * self.yu[mif3,0] + -1/32 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.yquPhi[mif1,mif2] * self.yquPhibar[2,0] * self.yu[mif3,0] + -1/32 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.yquPhi[mif1,mif2] * self.yquPhibar[0,1] * self.yu[mif3,1] + -1/32 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.yquPhi[mif1,mif2] * self.yquPhibar[1,1] * self.yu[mif3,1] + -1/32 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.yquPhi[mif1,mif2] * self.yquPhibar[2,1] * self.yu[mif3,1] + -1/32 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.yquPhi[mif1,mif2] * self.yquPhibar[0,2] * self.yu[mif3,2] + -1/32 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.yquPhi[mif1,mif2] * self.yquPhibar[1,2] * self.yu[mif3,2] + -1/32 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.yquPhi[mif1,mif2] * self.yquPhibar[2,2] * self.yu[mif3,2])

    def alphaOuB(self, mif1,mif2):
        return (-1/192 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.ydqPhibar[0,mif1] * self.yquPhi[0,mif2] + 1/288 * self.g1 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.ydqPhibar[0,mif1] * self.yquPhi[0,mif2] + -1/288 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[0,0] * self.ydqPhibar[0,mif1] * self.yquPhi[0,mif2] + -1/192 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.ydqPhibar[1,mif1] * self.yquPhi[0,mif2] + 1/288 * self.g1 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.ydqPhibar[1,mif1] * self.yquPhi[0,mif2] + -1/288 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[0,1] * self.ydqPhibar[1,mif1] * self.yquPhi[0,mif2] + -1/192 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.ydqPhibar[2,mif1] * self.yquPhi[0,mif2] + 1/288 * self.g1 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.ydqPhibar[2,mif1] * self.yquPhi[0,mif2] + -1/288 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[0,2] * self.ydqPhibar[2,mif1] * self.yquPhi[0,mif2] + -1/192 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.ydqPhibar[0,mif1] * self.yquPhi[1,mif2] + 1/288 * self.g1 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.ydqPhibar[0,mif1] * self.yquPhi[1,mif2] + -1/288 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[1,0] * self.ydqPhibar[0,mif1] * self.yquPhi[1,mif2] + -1/192 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.ydqPhibar[1,mif1] * self.yquPhi[1,mif2] + 1/288 * self.g1 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.ydqPhibar[1,mif1] * self.yquPhi[1,mif2] + -1/288 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[1,1] * self.ydqPhibar[1,mif1] * self.yquPhi[1,mif2] + -1/192 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.ydqPhibar[2,mif1] * self.yquPhi[1,mif2] + 1/288 * self.g1 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.ydqPhibar[2,mif1] * self.yquPhi[1,mif2] + -1/288 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[1,2] * self.ydqPhibar[2,mif1] * self.yquPhi[1,mif2] + -1/192 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[2,mif2] + 1/288 * self.g1 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[2,mif2] + -1/288 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[2,mif2] + -1/192 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[2,mif2] + 1/288 * self.g1 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[2,mif2] + -1/288 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[2,mif2] + -1/192 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[2,mif2] + 1/288 * self.g1 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[2,mif2] + -1/288 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[2,mif2] + -7/1728 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,0] * self.ydqPhibar[0,mif1] * self.yu[0,mif2] + -7/1728 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,0] * self.ydqPhibar[1,mif1] * self.yu[0,mif2] + -7/1728 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,0] * self.ydqPhibar[2,mif1] * self.yu[0,mif2] + 11/1728 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[0,0] * self.yu[0,mif2] + 11/1728 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[0,1] * self.yu[0,mif2] + 11/1728 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[0,2] * self.yu[0,mif2] + -7/1728 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,1] * self.ydqPhibar[0,mif1] * self.yu[1,mif2] + -7/1728 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,1] * self.ydqPhibar[1,mif1] * self.yu[1,mif2] + -7/1728 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,1] * self.ydqPhibar[2,mif1] * self.yu[1,mif2] + 11/1728 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[1,0] * self.yu[1,mif2] + 11/1728 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[1,1] * self.yu[1,mif2] + 11/1728 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[1,2] * self.yu[1,mif2] + -7/1728 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,2] * self.ydqPhibar[0,mif1] * self.yu[2,mif2] + -7/1728 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,2] * self.ydqPhibar[1,mif1] * self.yu[2,mif2] + -7/1728 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,2] * self.ydqPhibar[2,mif1] * self.yu[2,mif2] + 11/1728 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[2,0] * self.yu[2,mif2] + 11/1728 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[2,1] * self.yu[2,mif2] + 11/1728 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[2,2] * self.yu[2,mif2] + -1/864 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhibar[0,0] * self.yu[mif1,0] + -1/864 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhibar[1,0] * self.yu[mif1,0] + -1/864 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhibar[2,0] * self.yu[mif1,0] + -1/864 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhibar[0,1] * self.yu[mif1,1] + -1/864 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhibar[1,1] * self.yu[mif1,1] + -1/864 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhibar[2,1] * self.yu[mif1,1] + -1/864 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhibar[0,2] * self.yu[mif1,2] + -1/864 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhibar[1,2] * self.yu[mif1,2] + -1/864 * self.g1 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhibar[2,2] * self.yu[mif1,2])

    def alphaOud1(self, mif1,mif2,mif3,mif4):
        return (1/540 * (self.g1)**(4) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -11/972 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,0] + -1/162 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,0] + 1/162 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,0] + -11/972 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,1] + -1/162 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,1] + 1/162 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,1] + -11/972 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,2] + -1/162 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,2] + 1/162 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,2] + 5/1944 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yquPhi[0,mif2] * self.yquPhibar[0,mif1] + 1/324 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yquPhi[0,mif2] * self.yquPhibar[0,mif1] + -1/324 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[0,mif2] * self.yquPhibar[0,mif1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[0,mif3] * self.yquPhi[0,mif2] * self.yquPhibar[0,mif1] + 1/72 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[0,mif3] * self.yquPhi[0,mif2] * self.yquPhibar[0,mif1] + -1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,mif4] * self.ydbar[0,mif3] * self.yquPhi[0,mif2] * self.yquPhibar[0,mif1] + -1/108 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,0] * self.yquPhi[0,mif2] * self.yquPhibar[0,mif1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,1] * self.yquPhi[0,mif2] * self.yquPhibar[0,mif1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,2] * self.yquPhi[0,mif2] * self.yquPhibar[0,mif1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[1,mif3] * self.yquPhi[1,mif2] * self.yquPhibar[0,mif1] + 1/72 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[1,mif3] * self.yquPhi[1,mif2] * self.yquPhibar[0,mif1] + -1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,mif4] * self.ydbar[1,mif3] * self.yquPhi[1,mif2] * self.yquPhibar[0,mif1] + -7/432 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,0] * self.yquPhi[1,mif2] * self.yquPhibar[0,mif1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[2,mif3] * self.yquPhi[2,mif2] * self.yquPhibar[0,mif1] + 1/72 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[2,mif3] * self.yquPhi[2,mif2] * self.yquPhibar[0,mif1] + -1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,mif4] * self.ydbar[2,mif3] * self.yquPhi[2,mif2] * self.yquPhibar[0,mif1] + -7/432 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,0] * self.yquPhi[2,mif2] * self.yquPhibar[0,mif1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[0,mif3] * self.yquPhi[0,mif2] * self.yquPhibar[1,mif1] + 1/72 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[0,mif3] * self.yquPhi[0,mif2] * self.yquPhibar[1,mif1] + -1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,mif4] * self.ydbar[0,mif3] * self.yquPhi[0,mif2] * self.yquPhibar[1,mif1] + -7/432 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,1] * self.yquPhi[0,mif2] * self.yquPhibar[1,mif1] + 5/1944 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yquPhi[1,mif2] * self.yquPhibar[1,mif1] + 1/324 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yquPhi[1,mif2] * self.yquPhibar[1,mif1] + -1/324 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[1,mif2] * self.yquPhibar[1,mif1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[1,mif3] * self.yquPhi[1,mif2] * self.yquPhibar[1,mif1] + 1/72 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[1,mif3] * self.yquPhi[1,mif2] * self.yquPhibar[1,mif1] + -1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,mif4] * self.ydbar[1,mif3] * self.yquPhi[1,mif2] * self.yquPhibar[1,mif1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,0] * self.yquPhi[1,mif2] * self.yquPhibar[1,mif1] + -1/108 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,1] * self.yquPhi[1,mif2] * self.yquPhibar[1,mif1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,2] * self.yquPhi[1,mif2] * self.yquPhibar[1,mif1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[2,mif3] * self.yquPhi[2,mif2] * self.yquPhibar[1,mif1] + 1/72 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[2,mif3] * self.yquPhi[2,mif2] * self.yquPhibar[1,mif1] + -1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,mif4] * self.ydbar[2,mif3] * self.yquPhi[2,mif2] * self.yquPhibar[1,mif1] + -7/432 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,1] * self.yquPhi[2,mif2] * self.yquPhibar[1,mif1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[0,mif3] * self.yquPhi[0,mif2] * self.yquPhibar[2,mif1] + 1/72 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[0,mif3] * self.yquPhi[0,mif2] * self.yquPhibar[2,mif1] + -1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,mif4] * self.ydbar[0,mif3] * self.yquPhi[0,mif2] * self.yquPhibar[2,mif1] + -7/432 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,2] * self.yquPhi[0,mif2] * self.yquPhibar[2,mif1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[1,mif3] * self.yquPhi[1,mif2] * self.yquPhibar[2,mif1] + 1/72 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[1,mif3] * self.yquPhi[1,mif2] * self.yquPhibar[2,mif1] + -1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,mif4] * self.ydbar[1,mif3] * self.yquPhi[1,mif2] * self.yquPhibar[2,mif1] + -7/432 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,2] * self.yquPhi[1,mif2] * self.yquPhibar[2,mif1] + 5/1944 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yquPhi[2,mif2] * self.yquPhibar[2,mif1] + 1/324 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yquPhi[2,mif2] * self.yquPhibar[2,mif1] + -1/324 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[2,mif2] * self.yquPhibar[2,mif1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[2,mif3] * self.yquPhi[2,mif2] * self.yquPhibar[2,mif1] + 1/72 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[2,mif3] * self.yquPhi[2,mif2] * self.yquPhibar[2,mif1] + -1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,mif4] * self.ydbar[2,mif3] * self.yquPhi[2,mif2] * self.yquPhibar[2,mif1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,0] * self.yquPhi[2,mif2] * self.yquPhibar[2,mif1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,1] * self.yquPhi[2,mif2] * self.yquPhibar[2,mif1] + -1/108 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,2] * self.yquPhi[2,mif2] * self.yquPhibar[2,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydqPhi[mif3,0] * self.yquPhibar[0,mif1] * self.yu[0,mif2] + -1/72 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydqPhi[mif3,0] * self.yquPhibar[0,mif1] * self.yu[0,mif2] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,mif4] * self.ydqPhi[mif3,0] * self.yquPhibar[0,mif1] * self.yu[0,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydqPhi[mif3,0] * self.yquPhibar[1,mif1] * self.yu[0,mif2] + -1/72 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydqPhi[mif3,0] * self.yquPhibar[1,mif1] * self.yu[0,mif2] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,mif4] * self.ydqPhi[mif3,0] * self.yquPhibar[1,mif1] * self.yu[0,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydqPhi[mif3,0] * self.yquPhibar[2,mif1] * self.yu[0,mif2] + -1/72 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydqPhi[mif3,0] * self.yquPhibar[2,mif1] * self.yu[0,mif2] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,mif4] * self.ydqPhi[mif3,0] * self.yquPhibar[2,mif1] * self.yu[0,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydqPhi[mif3,1] * self.yquPhibar[0,mif1] * self.yu[1,mif2] + -1/72 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydqPhi[mif3,1] * self.yquPhibar[0,mif1] * self.yu[1,mif2] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,mif4] * self.ydqPhi[mif3,1] * self.yquPhibar[0,mif1] * self.yu[1,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydqPhi[mif3,1] * self.yquPhibar[1,mif1] * self.yu[1,mif2] + -1/72 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydqPhi[mif3,1] * self.yquPhibar[1,mif1] * self.yu[1,mif2] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,mif4] * self.ydqPhi[mif3,1] * self.yquPhibar[1,mif1] * self.yu[1,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydqPhi[mif3,1] * self.yquPhibar[2,mif1] * self.yu[1,mif2] + -1/72 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydqPhi[mif3,1] * self.yquPhibar[2,mif1] * self.yu[1,mif2] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,mif4] * self.ydqPhi[mif3,1] * self.yquPhibar[2,mif1] * self.yu[1,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydqPhi[mif3,2] * self.yquPhibar[0,mif1] * self.yu[2,mif2] + -1/72 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydqPhi[mif3,2] * self.yquPhibar[0,mif1] * self.yu[2,mif2] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,mif4] * self.ydqPhi[mif3,2] * self.yquPhibar[0,mif1] * self.yu[2,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydqPhi[mif3,2] * self.yquPhibar[1,mif1] * self.yu[2,mif2] + -1/72 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydqPhi[mif3,2] * self.yquPhibar[1,mif1] * self.yu[2,mif2] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,mif4] * self.ydqPhi[mif3,2] * self.yquPhibar[1,mif1] * self.yu[2,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydqPhi[mif3,2] * self.yquPhibar[2,mif1] * self.yu[2,mif2] + -1/72 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydqPhi[mif3,2] * self.yquPhibar[2,mif1] * self.yu[2,mif2] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,mif4] * self.ydqPhi[mif3,2] * self.yquPhibar[2,mif1] * self.yu[2,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif3] * self.ydqPhibar[mif4,0] * self.yquPhi[0,mif2] * self.yubar[0,mif1] + -1/72 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif3] * self.ydqPhibar[mif4,0] * self.yquPhi[0,mif2] * self.yubar[0,mif1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[0,mif3] * self.ydqPhibar[mif4,0] * self.yquPhi[0,mif2] * self.yubar[0,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif3] * self.ydqPhibar[mif4,0] * self.yquPhi[1,mif2] * self.yubar[0,mif1] + -1/72 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif3] * self.ydqPhibar[mif4,0] * self.yquPhi[1,mif2] * self.yubar[0,mif1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[1,mif3] * self.ydqPhibar[mif4,0] * self.yquPhi[1,mif2] * self.yubar[0,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif3] * self.ydqPhibar[mif4,0] * self.yquPhi[2,mif2] * self.yubar[0,mif1] + -1/72 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif3] * self.ydqPhibar[mif4,0] * self.yquPhi[2,mif2] * self.yubar[0,mif1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[2,mif3] * self.ydqPhibar[mif4,0] * self.yquPhi[2,mif2] * self.yubar[0,mif1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,0] * self.yu[0,mif2] * self.yubar[0,mif1] + 1/72 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,0] * self.yu[0,mif2] * self.yubar[0,mif1] + -1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,0] * self.yu[0,mif2] * self.yubar[0,mif1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,0] * self.yu[1,mif2] * self.yubar[0,mif1] + 1/72 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,0] * self.yu[1,mif2] * self.yubar[0,mif1] + -1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,0] * self.yu[1,mif2] * self.yubar[0,mif1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,0] * self.yu[2,mif2] * self.yubar[0,mif1] + 1/72 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,0] * self.yu[2,mif2] * self.yubar[0,mif1] + -1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,0] * self.yu[2,mif2] * self.yubar[0,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif3] * self.ydqPhibar[mif4,1] * self.yquPhi[0,mif2] * self.yubar[1,mif1] + -1/72 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif3] * self.ydqPhibar[mif4,1] * self.yquPhi[0,mif2] * self.yubar[1,mif1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[0,mif3] * self.ydqPhibar[mif4,1] * self.yquPhi[0,mif2] * self.yubar[1,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif3] * self.ydqPhibar[mif4,1] * self.yquPhi[1,mif2] * self.yubar[1,mif1] + -1/72 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif3] * self.ydqPhibar[mif4,1] * self.yquPhi[1,mif2] * self.yubar[1,mif1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[1,mif3] * self.ydqPhibar[mif4,1] * self.yquPhi[1,mif2] * self.yubar[1,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif3] * self.ydqPhibar[mif4,1] * self.yquPhi[2,mif2] * self.yubar[1,mif1] + -1/72 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif3] * self.ydqPhibar[mif4,1] * self.yquPhi[2,mif2] * self.yubar[1,mif1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[2,mif3] * self.ydqPhibar[mif4,1] * self.yquPhi[2,mif2] * self.yubar[1,mif1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,1] * self.yu[0,mif2] * self.yubar[1,mif1] + 1/72 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,1] * self.yu[0,mif2] * self.yubar[1,mif1] + -1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,1] * self.yu[0,mif2] * self.yubar[1,mif1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,1] * self.yu[1,mif2] * self.yubar[1,mif1] + 1/72 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,1] * self.yu[1,mif2] * self.yubar[1,mif1] + -1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,1] * self.yu[1,mif2] * self.yubar[1,mif1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,1] * self.yu[2,mif2] * self.yubar[1,mif1] + 1/72 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,1] * self.yu[2,mif2] * self.yubar[1,mif1] + -1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,1] * self.yu[2,mif2] * self.yubar[1,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif3] * self.ydqPhibar[mif4,2] * self.yquPhi[0,mif2] * self.yubar[2,mif1] + -1/72 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif3] * self.ydqPhibar[mif4,2] * self.yquPhi[0,mif2] * self.yubar[2,mif1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[0,mif3] * self.ydqPhibar[mif4,2] * self.yquPhi[0,mif2] * self.yubar[2,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif3] * self.ydqPhibar[mif4,2] * self.yquPhi[1,mif2] * self.yubar[2,mif1] + -1/72 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif3] * self.ydqPhibar[mif4,2] * self.yquPhi[1,mif2] * self.yubar[2,mif1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[1,mif3] * self.ydqPhibar[mif4,2] * self.yquPhi[1,mif2] * self.yubar[2,mif1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif3] * self.ydqPhibar[mif4,2] * self.yquPhi[2,mif2] * self.yubar[2,mif1] + -1/72 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif3] * self.ydqPhibar[mif4,2] * self.yquPhi[2,mif2] * self.yubar[2,mif1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[2,mif3] * self.ydqPhibar[mif4,2] * self.yquPhi[2,mif2] * self.yubar[2,mif1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,2] * self.yu[0,mif2] * self.yubar[2,mif1] + 1/72 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,2] * self.yu[0,mif2] * self.yubar[2,mif1] + -1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,2] * self.yu[0,mif2] * self.yubar[2,mif1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,2] * self.yu[1,mif2] * self.yubar[2,mif1] + 1/72 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,2] * self.yu[1,mif2] * self.yubar[2,mif1] + -1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,2] * self.yu[1,mif2] * self.yubar[2,mif1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,2] * self.yu[2,mif2] * self.yubar[2,mif1] + 1/72 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,2] * self.yu[2,mif2] * self.yubar[2,mif1] + -1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,2] * self.yu[2,mif2] * self.yubar[2,mif1])

    def alphaOud8(self, mif1,mif2,mif3,mif4):
        return (-1/80 * (self.g3)**(4) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 17/864 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,0] + 1/144 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,0] + -1/144 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,0] + 17/864 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,1] + 1/144 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,1] + -1/144 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,1] + 17/864 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,2] + 1/144 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,2] + -1/144 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,2] + 17/864 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yquPhi[0,mif2] * self.yquPhibar[0,mif1] + 1/144 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yquPhi[0,mif2] * self.yquPhibar[0,mif1] + -1/144 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[0,mif2] * self.yquPhibar[0,mif1] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[0,mif3] * self.yquPhi[0,mif2] * self.yquPhibar[0,mif1] + -1/96 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[0,mif3] * self.yquPhi[0,mif2] * self.yquPhibar[0,mif1] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,mif4] * self.ydbar[0,mif3] * self.yquPhi[0,mif2] * self.yquPhibar[0,mif1] + -17/576 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,0] * self.yquPhi[0,mif2] * self.yquPhibar[0,mif1] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,1] * self.yquPhi[0,mif2] * self.yquPhibar[0,mif1] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,2] * self.yquPhi[0,mif2] * self.yquPhibar[0,mif1] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[1,mif3] * self.yquPhi[1,mif2] * self.yquPhibar[0,mif1] + -1/96 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[1,mif3] * self.yquPhi[1,mif2] * self.yquPhibar[0,mif1] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,mif4] * self.ydbar[1,mif3] * self.yquPhi[1,mif2] * self.yquPhibar[0,mif1] + -11/576 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,0] * self.yquPhi[1,mif2] * self.yquPhibar[0,mif1] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[2,mif3] * self.yquPhi[2,mif2] * self.yquPhibar[0,mif1] + -1/96 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[2,mif3] * self.yquPhi[2,mif2] * self.yquPhibar[0,mif1] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,mif4] * self.ydbar[2,mif3] * self.yquPhi[2,mif2] * self.yquPhibar[0,mif1] + -11/576 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,0] * self.yquPhi[2,mif2] * self.yquPhibar[0,mif1] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[0,mif3] * self.yquPhi[0,mif2] * self.yquPhibar[1,mif1] + -1/96 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[0,mif3] * self.yquPhi[0,mif2] * self.yquPhibar[1,mif1] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,mif4] * self.ydbar[0,mif3] * self.yquPhi[0,mif2] * self.yquPhibar[1,mif1] + -11/576 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,1] * self.yquPhi[0,mif2] * self.yquPhibar[1,mif1] + 17/864 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yquPhi[1,mif2] * self.yquPhibar[1,mif1] + 1/144 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yquPhi[1,mif2] * self.yquPhibar[1,mif1] + -1/144 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[1,mif2] * self.yquPhibar[1,mif1] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[1,mif3] * self.yquPhi[1,mif2] * self.yquPhibar[1,mif1] + -1/96 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[1,mif3] * self.yquPhi[1,mif2] * self.yquPhibar[1,mif1] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,mif4] * self.ydbar[1,mif3] * self.yquPhi[1,mif2] * self.yquPhibar[1,mif1] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,0] * self.yquPhi[1,mif2] * self.yquPhibar[1,mif1] + -17/576 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,1] * self.yquPhi[1,mif2] * self.yquPhibar[1,mif1] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,2] * self.yquPhi[1,mif2] * self.yquPhibar[1,mif1] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[2,mif3] * self.yquPhi[2,mif2] * self.yquPhibar[1,mif1] + -1/96 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[2,mif3] * self.yquPhi[2,mif2] * self.yquPhibar[1,mif1] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,mif4] * self.ydbar[2,mif3] * self.yquPhi[2,mif2] * self.yquPhibar[1,mif1] + -11/576 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,1] * self.yquPhi[2,mif2] * self.yquPhibar[1,mif1] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[0,mif3] * self.yquPhi[0,mif2] * self.yquPhibar[2,mif1] + -1/96 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[0,mif3] * self.yquPhi[0,mif2] * self.yquPhibar[2,mif1] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,mif4] * self.ydbar[0,mif3] * self.yquPhi[0,mif2] * self.yquPhibar[2,mif1] + -11/576 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,2] * self.yquPhi[0,mif2] * self.yquPhibar[2,mif1] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[1,mif3] * self.yquPhi[1,mif2] * self.yquPhibar[2,mif1] + -1/96 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[1,mif3] * self.yquPhi[1,mif2] * self.yquPhibar[2,mif1] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,mif4] * self.ydbar[1,mif3] * self.yquPhi[1,mif2] * self.yquPhibar[2,mif1] + -11/576 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,2] * self.yquPhi[1,mif2] * self.yquPhibar[2,mif1] + 17/864 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yquPhi[2,mif2] * self.yquPhibar[2,mif1] + 1/144 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yquPhi[2,mif2] * self.yquPhibar[2,mif1] + -1/144 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[2,mif2] * self.yquPhibar[2,mif1] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[2,mif3] * self.yquPhi[2,mif2] * self.yquPhibar[2,mif1] + -1/96 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[2,mif3] * self.yquPhi[2,mif2] * self.yquPhibar[2,mif1] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,mif4] * self.ydbar[2,mif3] * self.yquPhi[2,mif2] * self.yquPhibar[2,mif1] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,0] * self.yquPhi[2,mif2] * self.yquPhibar[2,mif1] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,1] * self.yquPhi[2,mif2] * self.yquPhibar[2,mif1] + -17/576 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,2] * self.yquPhi[2,mif2] * self.yquPhibar[2,mif1] + 1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydqPhi[mif3,0] * self.yquPhibar[0,mif1] * self.yu[0,mif2] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydqPhi[mif3,0] * self.yquPhibar[0,mif1] * self.yu[0,mif2] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,mif4] * self.ydqPhi[mif3,0] * self.yquPhibar[0,mif1] * self.yu[0,mif2] + 3/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydqPhi[mif3,1] * self.yquPhibar[0,mif1] * self.yu[0,mif2] + 1/32 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydqPhi[mif3,1] * self.yquPhibar[0,mif1] * self.yu[0,mif2] + -1/32 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,mif4] * self.ydqPhi[mif3,1] * self.yquPhibar[0,mif1] * self.yu[0,mif2] + 3/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydqPhi[mif3,2] * self.yquPhibar[0,mif1] * self.yu[0,mif2] + 1/32 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydqPhi[mif3,2] * self.yquPhibar[0,mif1] * self.yu[0,mif2] + -1/32 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,mif4] * self.ydqPhi[mif3,2] * self.yquPhibar[0,mif1] * self.yu[0,mif2] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydqPhi[mif3,0] * self.yquPhibar[1,mif1] * self.yu[0,mif2] + 1/96 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydqPhi[mif3,0] * self.yquPhibar[1,mif1] * self.yu[0,mif2] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,mif4] * self.ydqPhi[mif3,0] * self.yquPhibar[1,mif1] * self.yu[0,mif2] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydqPhi[mif3,0] * self.yquPhibar[2,mif1] * self.yu[0,mif2] + 1/96 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydqPhi[mif3,0] * self.yquPhibar[2,mif1] * self.yu[0,mif2] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,mif4] * self.ydqPhi[mif3,0] * self.yquPhibar[2,mif1] * self.yu[0,mif2] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydqPhi[mif3,1] * self.yquPhibar[0,mif1] * self.yu[1,mif2] + 1/96 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydqPhi[mif3,1] * self.yquPhibar[0,mif1] * self.yu[1,mif2] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,mif4] * self.ydqPhi[mif3,1] * self.yquPhibar[0,mif1] * self.yu[1,mif2] + 3/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydqPhi[mif3,0] * self.yquPhibar[1,mif1] * self.yu[1,mif2] + 1/32 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydqPhi[mif3,0] * self.yquPhibar[1,mif1] * self.yu[1,mif2] + -1/32 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,mif4] * self.ydqPhi[mif3,0] * self.yquPhibar[1,mif1] * self.yu[1,mif2] + 1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydqPhi[mif3,1] * self.yquPhibar[1,mif1] * self.yu[1,mif2] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydqPhi[mif3,1] * self.yquPhibar[1,mif1] * self.yu[1,mif2] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,mif4] * self.ydqPhi[mif3,1] * self.yquPhibar[1,mif1] * self.yu[1,mif2] + 3/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydqPhi[mif3,2] * self.yquPhibar[1,mif1] * self.yu[1,mif2] + 1/32 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydqPhi[mif3,2] * self.yquPhibar[1,mif1] * self.yu[1,mif2] + -1/32 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,mif4] * self.ydqPhi[mif3,2] * self.yquPhibar[1,mif1] * self.yu[1,mif2] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydqPhi[mif3,1] * self.yquPhibar[2,mif1] * self.yu[1,mif2] + 1/96 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydqPhi[mif3,1] * self.yquPhibar[2,mif1] * self.yu[1,mif2] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,mif4] * self.ydqPhi[mif3,1] * self.yquPhibar[2,mif1] * self.yu[1,mif2] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydqPhi[mif3,2] * self.yquPhibar[0,mif1] * self.yu[2,mif2] + 1/96 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydqPhi[mif3,2] * self.yquPhibar[0,mif1] * self.yu[2,mif2] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,mif4] * self.ydqPhi[mif3,2] * self.yquPhibar[0,mif1] * self.yu[2,mif2] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydqPhi[mif3,2] * self.yquPhibar[1,mif1] * self.yu[2,mif2] + 1/96 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydqPhi[mif3,2] * self.yquPhibar[1,mif1] * self.yu[2,mif2] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,mif4] * self.ydqPhi[mif3,2] * self.yquPhibar[1,mif1] * self.yu[2,mif2] + 3/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydqPhi[mif3,0] * self.yquPhibar[2,mif1] * self.yu[2,mif2] + 1/32 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydqPhi[mif3,0] * self.yquPhibar[2,mif1] * self.yu[2,mif2] + -1/32 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,mif4] * self.ydqPhi[mif3,0] * self.yquPhibar[2,mif1] * self.yu[2,mif2] + 3/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydqPhi[mif3,1] * self.yquPhibar[2,mif1] * self.yu[2,mif2] + 1/32 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydqPhi[mif3,1] * self.yquPhibar[2,mif1] * self.yu[2,mif2] + -1/32 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,mif4] * self.ydqPhi[mif3,1] * self.yquPhibar[2,mif1] * self.yu[2,mif2] + 1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydqPhi[mif3,2] * self.yquPhibar[2,mif1] * self.yu[2,mif2] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydqPhi[mif3,2] * self.yquPhibar[2,mif1] * self.yu[2,mif2] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,mif4] * self.ydqPhi[mif3,2] * self.yquPhibar[2,mif1] * self.yu[2,mif2] + 1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif3] * self.ydqPhibar[mif4,0] * self.yquPhi[0,mif2] * self.yubar[0,mif1] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif3] * self.ydqPhibar[mif4,0] * self.yquPhi[0,mif2] * self.yubar[0,mif1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[0,mif3] * self.ydqPhibar[mif4,0] * self.yquPhi[0,mif2] * self.yubar[0,mif1] + 3/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif3] * self.ydqPhibar[mif4,1] * self.yquPhi[0,mif2] * self.yubar[0,mif1] + 1/32 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif3] * self.ydqPhibar[mif4,1] * self.yquPhi[0,mif2] * self.yubar[0,mif1] + -1/32 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[1,mif3] * self.ydqPhibar[mif4,1] * self.yquPhi[0,mif2] * self.yubar[0,mif1] + 3/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif3] * self.ydqPhibar[mif4,2] * self.yquPhi[0,mif2] * self.yubar[0,mif1] + 1/32 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif3] * self.ydqPhibar[mif4,2] * self.yquPhi[0,mif2] * self.yubar[0,mif1] + -1/32 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[2,mif3] * self.ydqPhibar[mif4,2] * self.yquPhi[0,mif2] * self.yubar[0,mif1] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif3] * self.ydqPhibar[mif4,0] * self.yquPhi[1,mif2] * self.yubar[0,mif1] + 1/96 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif3] * self.ydqPhibar[mif4,0] * self.yquPhi[1,mif2] * self.yubar[0,mif1] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[1,mif3] * self.ydqPhibar[mif4,0] * self.yquPhi[1,mif2] * self.yubar[0,mif1] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif3] * self.ydqPhibar[mif4,0] * self.yquPhi[2,mif2] * self.yubar[0,mif1] + 1/96 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif3] * self.ydqPhibar[mif4,0] * self.yquPhi[2,mif2] * self.yubar[0,mif1] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[2,mif3] * self.ydqPhibar[mif4,0] * self.yquPhi[2,mif2] * self.yubar[0,mif1] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,0] * self.yu[0,mif2] * self.yubar[0,mif1] + -1/96 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,0] * self.yu[0,mif2] * self.yubar[0,mif1] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,0] * self.yu[0,mif2] * self.yubar[0,mif1] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,0] * self.yu[1,mif2] * self.yubar[0,mif1] + -1/96 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,0] * self.yu[1,mif2] * self.yubar[0,mif1] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,0] * self.yu[1,mif2] * self.yubar[0,mif1] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,0] * self.yu[2,mif2] * self.yubar[0,mif1] + -1/96 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,0] * self.yu[2,mif2] * self.yubar[0,mif1] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,0] * self.yu[2,mif2] * self.yubar[0,mif1] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif3] * self.ydqPhibar[mif4,1] * self.yquPhi[0,mif2] * self.yubar[1,mif1] + 1/96 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif3] * self.ydqPhibar[mif4,1] * self.yquPhi[0,mif2] * self.yubar[1,mif1] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[0,mif3] * self.ydqPhibar[mif4,1] * self.yquPhi[0,mif2] * self.yubar[1,mif1] + 3/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif3] * self.ydqPhibar[mif4,0] * self.yquPhi[1,mif2] * self.yubar[1,mif1] + 1/32 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif3] * self.ydqPhibar[mif4,0] * self.yquPhi[1,mif2] * self.yubar[1,mif1] + -1/32 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[0,mif3] * self.ydqPhibar[mif4,0] * self.yquPhi[1,mif2] * self.yubar[1,mif1] + 1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif3] * self.ydqPhibar[mif4,1] * self.yquPhi[1,mif2] * self.yubar[1,mif1] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif3] * self.ydqPhibar[mif4,1] * self.yquPhi[1,mif2] * self.yubar[1,mif1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[1,mif3] * self.ydqPhibar[mif4,1] * self.yquPhi[1,mif2] * self.yubar[1,mif1] + 3/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif3] * self.ydqPhibar[mif4,2] * self.yquPhi[1,mif2] * self.yubar[1,mif1] + 1/32 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif3] * self.ydqPhibar[mif4,2] * self.yquPhi[1,mif2] * self.yubar[1,mif1] + -1/32 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[2,mif3] * self.ydqPhibar[mif4,2] * self.yquPhi[1,mif2] * self.yubar[1,mif1] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif3] * self.ydqPhibar[mif4,1] * self.yquPhi[2,mif2] * self.yubar[1,mif1] + 1/96 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif3] * self.ydqPhibar[mif4,1] * self.yquPhi[2,mif2] * self.yubar[1,mif1] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[2,mif3] * self.ydqPhibar[mif4,1] * self.yquPhi[2,mif2] * self.yubar[1,mif1] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,1] * self.yu[0,mif2] * self.yubar[1,mif1] + -1/96 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,1] * self.yu[0,mif2] * self.yubar[1,mif1] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,1] * self.yu[0,mif2] * self.yubar[1,mif1] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,1] * self.yu[1,mif2] * self.yubar[1,mif1] + -1/96 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,1] * self.yu[1,mif2] * self.yubar[1,mif1] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,1] * self.yu[1,mif2] * self.yubar[1,mif1] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,1] * self.yu[2,mif2] * self.yubar[1,mif1] + -1/96 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,1] * self.yu[2,mif2] * self.yubar[1,mif1] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,1] * self.yu[2,mif2] * self.yubar[1,mif1] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif3] * self.ydqPhibar[mif4,2] * self.yquPhi[0,mif2] * self.yubar[2,mif1] + 1/96 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif3] * self.ydqPhibar[mif4,2] * self.yquPhi[0,mif2] * self.yubar[2,mif1] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[0,mif3] * self.ydqPhibar[mif4,2] * self.yquPhi[0,mif2] * self.yubar[2,mif1] + 1/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif3] * self.ydqPhibar[mif4,2] * self.yquPhi[1,mif2] * self.yubar[2,mif1] + 1/96 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif3] * self.ydqPhibar[mif4,2] * self.yquPhi[1,mif2] * self.yubar[2,mif1] + -1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[1,mif3] * self.ydqPhibar[mif4,2] * self.yquPhi[1,mif2] * self.yubar[2,mif1] + 3/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif3] * self.ydqPhibar[mif4,0] * self.yquPhi[2,mif2] * self.yubar[2,mif1] + 1/32 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,mif3] * self.ydqPhibar[mif4,0] * self.yquPhi[2,mif2] * self.yubar[2,mif1] + -1/32 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[0,mif3] * self.ydqPhibar[mif4,0] * self.yquPhi[2,mif2] * self.yubar[2,mif1] + 3/64 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif3] * self.ydqPhibar[mif4,1] * self.yquPhi[2,mif2] * self.yubar[2,mif1] + 1/32 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,mif3] * self.ydqPhibar[mif4,1] * self.yquPhi[2,mif2] * self.yubar[2,mif1] + -1/32 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[1,mif3] * self.ydqPhibar[mif4,1] * self.yquPhi[2,mif2] * self.yubar[2,mif1] + 1/16 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif3] * self.ydqPhibar[mif4,2] * self.yquPhi[2,mif2] * self.yubar[2,mif1] + 1/24 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,mif3] * self.ydqPhibar[mif4,2] * self.yquPhi[2,mif2] * self.yubar[2,mif1] + -1/24 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[2,mif3] * self.ydqPhibar[mif4,2] * self.yquPhi[2,mif2] * self.yubar[2,mif1] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,2] * self.yu[0,mif2] * self.yubar[2,mif1] + -1/96 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,2] * self.yu[0,mif2] * self.yubar[2,mif1] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,0] * self.ydqPhibar[mif4,2] * self.yu[0,mif2] * self.yubar[2,mif1] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,2] * self.yu[1,mif2] * self.yubar[2,mif1] + -1/96 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,2] * self.yu[1,mif2] * self.yubar[2,mif1] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,1] * self.ydqPhibar[mif4,2] * self.yu[1,mif2] * self.yubar[2,mif1] + -1/192 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,2] * self.yu[2,mif2] * self.yubar[2,mif1] + -1/96 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,2] * self.yu[2,mif2] * self.yubar[2,mif1] + 1/96 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydqPhi[mif3,2] * self.ydqPhibar[mif4,2] * self.yu[2,mif2] * self.yubar[2,mif1])

    def alphaOuG(self, mif1,mif2):
        return (-1/64 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.ydqPhibar[0,mif1] * self.yquPhi[0,mif2] + 1/192 * self.g3 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.ydqPhibar[0,mif1] * self.yquPhi[0,mif2] + -1/192 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[0,0] * self.ydqPhibar[0,mif1] * self.yquPhi[0,mif2] + -1/64 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.ydqPhibar[1,mif1] * self.yquPhi[0,mif2] + 1/192 * self.g3 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.ydqPhibar[1,mif1] * self.yquPhi[0,mif2] + -1/192 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[0,1] * self.ydqPhibar[1,mif1] * self.yquPhi[0,mif2] + -1/64 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.ydqPhibar[2,mif1] * self.yquPhi[0,mif2] + 1/192 * self.g3 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.ydqPhibar[2,mif1] * self.yquPhi[0,mif2] + -1/192 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[0,2] * self.ydqPhibar[2,mif1] * self.yquPhi[0,mif2] + -1/64 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.ydqPhibar[0,mif1] * self.yquPhi[1,mif2] + 1/192 * self.g3 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.ydqPhibar[0,mif1] * self.yquPhi[1,mif2] + -1/192 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[1,0] * self.ydqPhibar[0,mif1] * self.yquPhi[1,mif2] + -1/64 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.ydqPhibar[1,mif1] * self.yquPhi[1,mif2] + 1/192 * self.g3 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.ydqPhibar[1,mif1] * self.yquPhi[1,mif2] + -1/192 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[1,1] * self.ydqPhibar[1,mif1] * self.yquPhi[1,mif2] + -1/64 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.ydqPhibar[2,mif1] * self.yquPhi[1,mif2] + 1/192 * self.g3 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.ydqPhibar[2,mif1] * self.yquPhi[1,mif2] + -1/192 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[1,2] * self.ydqPhibar[2,mif1] * self.yquPhi[1,mif2] + -1/64 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[2,mif2] + 1/192 * self.g3 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[2,mif2] + -1/192 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[2,mif2] + -1/64 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[2,mif2] + 1/192 * self.g3 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[2,mif2] + -1/192 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[2,mif2] + -1/64 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[2,mif2] + 1/192 * self.g3 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[2,mif2] + -1/192 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[2,mif2] + -1/64 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,mif2] * self.yquPhibar[0,0] * self.yu[0,0] + -1/64 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,mif2] * self.yquPhibar[0,1] * self.yu[0,1] + -1/64 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,mif2] * self.yquPhibar[0,2] * self.yu[0,2] + -11/2304 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,0] * self.ydqPhibar[0,mif1] * self.yu[0,mif2] + -11/2304 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,0] * self.ydqPhibar[1,mif1] * self.yu[0,mif2] + -11/2304 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,0] * self.ydqPhibar[2,mif1] * self.yu[0,mif2] + -11/2304 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[0,0] * self.yu[0,mif2] + -11/2304 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[0,1] * self.yu[0,mif2] + -11/2304 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[0,2] * self.yu[0,mif2] + -1/64 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,mif2] * self.yquPhibar[1,0] * self.yu[1,0] + -1/64 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,mif2] * self.yquPhibar[1,1] * self.yu[1,1] + -1/64 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,mif2] * self.yquPhibar[1,2] * self.yu[1,2] + -11/2304 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,1] * self.ydqPhibar[0,mif1] * self.yu[1,mif2] + -11/2304 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,1] * self.ydqPhibar[1,mif1] * self.yu[1,mif2] + -11/2304 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,1] * self.ydqPhibar[2,mif1] * self.yu[1,mif2] + -11/2304 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[1,0] * self.yu[1,mif2] + -11/2304 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[1,1] * self.yu[1,mif2] + -11/2304 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[1,2] * self.yu[1,mif2] + -1/64 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,mif2] * self.yquPhibar[2,0] * self.yu[2,0] + -1/64 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,mif2] * self.yquPhibar[2,1] * self.yu[2,1] + -1/64 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,mif2] * self.yquPhibar[2,2] * self.yu[2,2] + -11/2304 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,2] * self.ydqPhibar[0,mif1] * self.yu[2,mif2] + -11/2304 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,2] * self.ydqPhibar[1,mif1] * self.yu[2,mif2] + -11/2304 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,2] * self.ydqPhibar[2,mif1] * self.yu[2,mif2] + -11/2304 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[2,0] * self.yu[2,mif2] + -11/2304 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[2,1] * self.yu[2,mif2] + -11/2304 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[2,2] * self.yu[2,mif2] + -11/1152 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhibar[0,0] * self.yu[mif1,0] + -11/1152 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhibar[1,0] * self.yu[mif1,0] + -11/1152 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhibar[2,0] * self.yu[mif1,0] + -11/1152 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhibar[0,1] * self.yu[mif1,1] + -11/1152 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhibar[1,1] * self.yu[mif1,1] + -11/1152 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhibar[2,1] * self.yu[mif1,1] + -11/1152 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhibar[0,2] * self.yu[mif1,2] + -11/1152 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhibar[1,2] * self.yu[mif1,2] + -11/1152 * self.g3 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhibar[2,2] * self.yu[mif1,2])

    def alphaOuH(self, mif1,mif2):
        return (-1/8 * self.lam * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.ydqPhibar[0,mif1] * self.yquPhi[0,mif2] + -1/12 * self.invepsilonbar * self.lam * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.ydqPhibar[0,mif1] * self.yquPhi[0,mif2] + 1/12 * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.ydqPhibar[0,mif1] * self.yquPhi[0,mif2] + 1/12 * self.lam * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[0,0] * self.ydqPhibar[0,mif1] * self.yquPhi[0,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * (self.ydbar[0,0])**(2) * self.ydqPhibar[0,mif1] * self.yquPhi[0,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * (self.ydbar[0,0])**(2) * self.ydqPhibar[0,mif1] * self.yquPhi[0,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,0] * (self.ydbar[0,0])**(2) * self.ydqPhibar[0,mif1] * self.yquPhi[0,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,0] * self.ydbar[0,1] * self.ydqPhibar[0,mif1] * self.yquPhi[0,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,0] * self.ydbar[0,1] * self.ydqPhibar[0,mif1] * self.yquPhi[0,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[0,0] * self.ydbar[0,1] * self.ydqPhibar[0,mif1] * self.yquPhi[0,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,0] * self.ydbar[0,2] * self.ydqPhibar[0,mif1] * self.yquPhi[0,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,0] * self.ydbar[0,2] * self.ydqPhibar[0,mif1] * self.yquPhi[0,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[0,0] * self.ydbar[0,2] * self.ydqPhibar[0,mif1] * self.yquPhi[0,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[1,0] * self.ydqPhibar[0,mif1] * self.yquPhi[0,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[1,0] * self.ydqPhibar[0,mif1] * self.yquPhi[0,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[1,0] * self.ydqPhibar[0,mif1] * self.yquPhi[0,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[1,0] * self.ydqPhibar[0,mif1] * self.yquPhi[0,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[1,0] * self.ydqPhibar[0,mif1] * self.yquPhi[0,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[1,0] * self.ydqPhibar[0,mif1] * self.yquPhi[0,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,0] * self.ydqPhibar[0,mif1] * self.yquPhi[0,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,0] * self.ydqPhibar[0,mif1] * self.yquPhi[0,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,0] * self.ydqPhibar[0,mif1] * self.yquPhi[0,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[0,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[0,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[0,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[0,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[0,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[0,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[0,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[0,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[0,mif2] + -1/8 * self.lam * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.ydqPhibar[1,mif1] * self.yquPhi[0,mif2] + -1/12 * self.invepsilonbar * self.lam * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.ydqPhibar[1,mif1] * self.yquPhi[0,mif2] + 1/12 * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.ydqPhibar[1,mif1] * self.yquPhi[0,mif2] + 1/12 * self.lam * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[0,1] * self.ydqPhibar[1,mif1] * self.yquPhi[0,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.ydbar[0,1] * self.ydqPhibar[1,mif1] * self.yquPhi[0,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.ydbar[0,1] * self.ydqPhibar[1,mif1] * self.yquPhi[0,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[0,0] * self.ydbar[0,1] * self.ydqPhibar[1,mif1] * self.yquPhi[0,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * (self.ydbar[0,1])**(2) * self.ydqPhibar[1,mif1] * self.yquPhi[0,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * (self.ydbar[0,1])**(2) * self.ydqPhibar[1,mif1] * self.yquPhi[0,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,1] * (self.ydbar[0,1])**(2) * self.ydqPhibar[1,mif1] * self.yquPhi[0,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,1] * self.ydbar[0,2] * self.ydqPhibar[1,mif1] * self.yquPhi[0,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,1] * self.ydbar[0,2] * self.ydqPhibar[1,mif1] * self.yquPhi[0,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[0,1] * self.ydbar[0,2] * self.ydqPhibar[1,mif1] * self.yquPhi[0,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[1,1] * self.ydqPhibar[1,mif1] * self.yquPhi[0,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[1,1] * self.ydqPhibar[1,mif1] * self.yquPhi[0,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[1,1] * self.ydqPhibar[1,mif1] * self.yquPhi[0,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[1,1] * self.ydqPhibar[1,mif1] * self.yquPhi[0,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[1,1] * self.ydqPhibar[1,mif1] * self.yquPhi[0,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[1,1] * self.ydqPhibar[1,mif1] * self.yquPhi[0,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,1] * self.ydqPhibar[1,mif1] * self.yquPhi[0,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,1] * self.ydqPhibar[1,mif1] * self.yquPhi[0,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,1] * self.ydqPhibar[1,mif1] * self.yquPhi[0,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[0,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[0,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[0,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[0,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[0,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[0,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[0,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[0,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[0,mif2] + -1/8 * self.lam * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.ydqPhibar[2,mif1] * self.yquPhi[0,mif2] + -1/12 * self.invepsilonbar * self.lam * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.ydqPhibar[2,mif1] * self.yquPhi[0,mif2] + 1/12 * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.ydqPhibar[2,mif1] * self.yquPhi[0,mif2] + 1/12 * self.lam * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[0,2] * self.ydqPhibar[2,mif1] * self.yquPhi[0,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.ydbar[0,2] * self.ydqPhibar[2,mif1] * self.yquPhi[0,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.ydbar[0,2] * self.ydqPhibar[2,mif1] * self.yquPhi[0,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[0,0] * self.ydbar[0,2] * self.ydqPhibar[2,mif1] * self.yquPhi[0,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.ydbar[0,2] * self.ydqPhibar[2,mif1] * self.yquPhi[0,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.ydbar[0,2] * self.ydqPhibar[2,mif1] * self.yquPhi[0,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[0,1] * self.ydbar[0,2] * self.ydqPhibar[2,mif1] * self.yquPhi[0,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * (self.ydbar[0,2])**(2) * self.ydqPhibar[2,mif1] * self.yquPhi[0,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * (self.ydbar[0,2])**(2) * self.ydqPhibar[2,mif1] * self.yquPhi[0,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,2] * (self.ydbar[0,2])**(2) * self.ydqPhibar[2,mif1] * self.yquPhi[0,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[1,2] * self.ydqPhibar[2,mif1] * self.yquPhi[0,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[1,2] * self.ydqPhibar[2,mif1] * self.yquPhi[0,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[0,0] * self.ydbar[1,2] * self.ydqPhibar[2,mif1] * self.yquPhi[0,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[1,2] * self.ydqPhibar[2,mif1] * self.yquPhi[0,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[1,2] * self.ydqPhibar[2,mif1] * self.yquPhi[0,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[0,1] * self.ydbar[1,2] * self.ydqPhibar[2,mif1] * self.yquPhi[0,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,2] * self.ydqPhibar[2,mif1] * self.yquPhi[0,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,2] * self.ydqPhibar[2,mif1] * self.yquPhi[0,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[0,2] * self.ydbar[1,2] * self.ydqPhibar[2,mif1] * self.yquPhi[0,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[0,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[0,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[0,0] * self.ydbar[2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[0,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[0,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[0,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[0,1] * self.ydbar[2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[0,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[0,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[0,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[0,2] * self.ydbar[2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[0,mif2] + -1/8 * self.lam * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.ydqPhibar[0,mif1] * self.yquPhi[1,mif2] + -1/12 * self.invepsilonbar * self.lam * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.ydqPhibar[0,mif1] * self.yquPhi[1,mif2] + 1/12 * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.ydqPhibar[0,mif1] * self.yquPhi[1,mif2] + 1/12 * self.lam * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[1,0] * self.ydqPhibar[0,mif1] * self.yquPhi[1,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.ydbar[1,0] * self.ydqPhibar[0,mif1] * self.yquPhi[1,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.ydbar[1,0] * self.ydqPhibar[0,mif1] * self.yquPhi[1,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[0,0] * self.ydbar[1,0] * self.ydqPhibar[0,mif1] * self.yquPhi[1,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * (self.ydbar[1,0])**(2) * self.ydqPhibar[0,mif1] * self.yquPhi[1,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * (self.ydbar[1,0])**(2) * self.ydqPhibar[0,mif1] * self.yquPhi[1,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,0] * (self.ydbar[1,0])**(2) * self.ydqPhibar[0,mif1] * self.yquPhi[1,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,0] * self.ydbar[1,1] * self.ydqPhibar[0,mif1] * self.yquPhi[1,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,0] * self.ydbar[1,1] * self.ydqPhibar[0,mif1] * self.yquPhi[1,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[0,0] * self.ydbar[1,1] * self.ydqPhibar[0,mif1] * self.yquPhi[1,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,0] * self.ydbar[1,1] * self.ydqPhibar[0,mif1] * self.yquPhi[1,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,0] * self.ydbar[1,1] * self.ydqPhibar[0,mif1] * self.yquPhi[1,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[1,0] * self.ydbar[1,1] * self.ydqPhibar[0,mif1] * self.yquPhi[1,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,0] * self.ydbar[1,2] * self.ydqPhibar[0,mif1] * self.yquPhi[1,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,0] * self.ydbar[1,2] * self.ydqPhibar[0,mif1] * self.yquPhi[1,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[0,0] * self.ydbar[1,2] * self.ydqPhibar[0,mif1] * self.yquPhi[1,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,0] * self.ydbar[1,2] * self.ydqPhibar[0,mif1] * self.yquPhi[1,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,0] * self.ydbar[1,2] * self.ydqPhibar[0,mif1] * self.yquPhi[1,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[1,0] * self.ydbar[1,2] * self.ydqPhibar[0,mif1] * self.yquPhi[1,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[1,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[1,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[1,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[1,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[1,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[1,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[1,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[1,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[1,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,1] * self.ydbar[1,0] * self.ydqPhibar[1,mif1] * self.yquPhi[1,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,1] * self.ydbar[1,0] * self.ydqPhibar[1,mif1] * self.yquPhi[1,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[0,1] * self.ydbar[1,0] * self.ydqPhibar[1,mif1] * self.yquPhi[1,mif2] + -1/8 * self.lam * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.ydqPhibar[1,mif1] * self.yquPhi[1,mif2] + -1/12 * self.invepsilonbar * self.lam * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.ydqPhibar[1,mif1] * self.yquPhi[1,mif2] + 1/12 * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.ydqPhibar[1,mif1] * self.yquPhi[1,mif2] + 1/12 * self.lam * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[1,1] * self.ydqPhibar[1,mif1] * self.yquPhi[1,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.ydbar[1,1] * self.ydqPhibar[1,mif1] * self.yquPhi[1,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.ydbar[1,1] * self.ydqPhibar[1,mif1] * self.yquPhi[1,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[0,1] * self.ydbar[1,1] * self.ydqPhibar[1,mif1] * self.yquPhi[1,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.ydbar[1,1] * self.ydqPhibar[1,mif1] * self.yquPhi[1,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.ydbar[1,1] * self.ydqPhibar[1,mif1] * self.yquPhi[1,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[1,0] * self.ydbar[1,1] * self.ydqPhibar[1,mif1] * self.yquPhi[1,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * (self.ydbar[1,1])**(2) * self.ydqPhibar[1,mif1] * self.yquPhi[1,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * (self.ydbar[1,1])**(2) * self.ydqPhibar[1,mif1] * self.yquPhi[1,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,1] * (self.ydbar[1,1])**(2) * self.ydqPhibar[1,mif1] * self.yquPhi[1,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,1] * self.ydbar[1,2] * self.ydqPhibar[1,mif1] * self.yquPhi[1,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,1] * self.ydbar[1,2] * self.ydqPhibar[1,mif1] * self.yquPhi[1,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[0,1] * self.ydbar[1,2] * self.ydqPhibar[1,mif1] * self.yquPhi[1,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,1] * self.ydbar[1,2] * self.ydqPhibar[1,mif1] * self.yquPhi[1,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,1] * self.ydbar[1,2] * self.ydqPhibar[1,mif1] * self.yquPhi[1,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[1,1] * self.ydbar[1,2] * self.ydqPhibar[1,mif1] * self.yquPhi[1,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[1,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[1,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[1,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[1,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[1,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[1,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[1,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[1,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[1,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,2] * self.ydbar[1,0] * self.ydqPhibar[2,mif1] * self.yquPhi[1,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,2] * self.ydbar[1,0] * self.ydqPhibar[2,mif1] * self.yquPhi[1,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[0,2] * self.ydbar[1,0] * self.ydqPhibar[2,mif1] * self.yquPhi[1,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,2] * self.ydbar[1,1] * self.ydqPhibar[2,mif1] * self.yquPhi[1,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,2] * self.ydbar[1,1] * self.ydqPhibar[2,mif1] * self.yquPhi[1,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[0,2] * self.ydbar[1,1] * self.ydqPhibar[2,mif1] * self.yquPhi[1,mif2] + -1/8 * self.lam * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.ydqPhibar[2,mif1] * self.yquPhi[1,mif2] + -1/12 * self.invepsilonbar * self.lam * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.ydqPhibar[2,mif1] * self.yquPhi[1,mif2] + 1/12 * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.ydqPhibar[2,mif1] * self.yquPhi[1,mif2] + 1/12 * self.lam * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[1,2] * self.ydqPhibar[2,mif1] * self.yquPhi[1,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,2] * self.ydbar[1,2] * self.ydqPhibar[2,mif1] * self.yquPhi[1,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,2] * self.ydbar[1,2] * self.ydqPhibar[2,mif1] * self.yquPhi[1,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[0,2] * self.ydbar[1,2] * self.ydqPhibar[2,mif1] * self.yquPhi[1,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.ydbar[1,2] * self.ydqPhibar[2,mif1] * self.yquPhi[1,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.ydbar[1,2] * self.ydqPhibar[2,mif1] * self.yquPhi[1,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[1,0] * self.ydbar[1,2] * self.ydqPhibar[2,mif1] * self.yquPhi[1,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,1] * self.ydbar[1,2] * self.ydqPhibar[2,mif1] * self.yquPhi[1,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,1] * self.ydbar[1,2] * self.ydqPhibar[2,mif1] * self.yquPhi[1,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[1,1] * self.ydbar[1,2] * self.ydqPhibar[2,mif1] * self.yquPhi[1,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * (self.ydbar[1,2])**(2) * self.ydqPhibar[2,mif1] * self.yquPhi[1,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * (self.ydbar[1,2])**(2) * self.ydqPhibar[2,mif1] * self.yquPhi[1,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,2] * (self.ydbar[1,2])**(2) * self.ydqPhibar[2,mif1] * self.yquPhi[1,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[1,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[1,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[1,0] * self.ydbar[2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[1,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[1,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[1,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[1,1] * self.ydbar[2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[1,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[1,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[1,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[1,2] * self.ydbar[2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[1,mif2] + -1/8 * self.lam * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[2,mif2] + -1/12 * self.invepsilonbar * self.lam * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[2,mif2] + 1/12 * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[2,mif2] + 1/12 * self.lam * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[2,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.ydbar[2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[2,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.ydbar[2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[2,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[0,0] * self.ydbar[2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[2,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.ydbar[2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[2,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.ydbar[2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[2,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[1,0] * self.ydbar[2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[2,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * (self.ydbar[2,0])**(2) * self.ydqPhibar[0,mif1] * self.yquPhi[2,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * (self.ydbar[2,0])**(2) * self.ydqPhibar[0,mif1] * self.yquPhi[2,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,0] * (self.ydbar[2,0])**(2) * self.ydqPhibar[0,mif1] * self.yquPhi[2,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,0] * self.ydbar[2,1] * self.ydqPhibar[0,mif1] * self.yquPhi[2,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,0] * self.ydbar[2,1] * self.ydqPhibar[0,mif1] * self.yquPhi[2,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[0,0] * self.ydbar[2,1] * self.ydqPhibar[0,mif1] * self.yquPhi[2,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,0] * self.ydbar[2,1] * self.ydqPhibar[0,mif1] * self.yquPhi[2,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,0] * self.ydbar[2,1] * self.ydqPhibar[0,mif1] * self.yquPhi[2,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[1,0] * self.ydbar[2,1] * self.ydqPhibar[0,mif1] * self.yquPhi[2,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,0] * self.ydbar[2,1] * self.ydqPhibar[0,mif1] * self.yquPhi[2,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,0] * self.ydbar[2,1] * self.ydqPhibar[0,mif1] * self.yquPhi[2,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[2,0] * self.ydbar[2,1] * self.ydqPhibar[0,mif1] * self.yquPhi[2,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,0] * self.ydbar[2,2] * self.ydqPhibar[0,mif1] * self.yquPhi[2,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,0] * self.ydbar[2,2] * self.ydqPhibar[0,mif1] * self.yquPhi[2,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[0,0] * self.ydbar[2,2] * self.ydqPhibar[0,mif1] * self.yquPhi[2,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,0] * self.ydbar[2,2] * self.ydqPhibar[0,mif1] * self.yquPhi[2,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,0] * self.ydbar[2,2] * self.ydqPhibar[0,mif1] * self.yquPhi[2,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[1,0] * self.ydbar[2,2] * self.ydqPhibar[0,mif1] * self.yquPhi[2,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,0] * self.ydbar[2,2] * self.ydqPhibar[0,mif1] * self.yquPhi[2,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,0] * self.ydbar[2,2] * self.ydqPhibar[0,mif1] * self.yquPhi[2,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[2,0] * self.ydbar[2,2] * self.ydqPhibar[0,mif1] * self.yquPhi[2,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,1] * self.ydbar[2,0] * self.ydqPhibar[1,mif1] * self.yquPhi[2,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,1] * self.ydbar[2,0] * self.ydqPhibar[1,mif1] * self.yquPhi[2,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[0,1] * self.ydbar[2,0] * self.ydqPhibar[1,mif1] * self.yquPhi[2,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,1] * self.ydbar[2,0] * self.ydqPhibar[1,mif1] * self.yquPhi[2,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,1] * self.ydbar[2,0] * self.ydqPhibar[1,mif1] * self.yquPhi[2,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[1,1] * self.ydbar[2,0] * self.ydqPhibar[1,mif1] * self.yquPhi[2,mif2] + -1/8 * self.lam * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[2,mif2] + -1/12 * self.invepsilonbar * self.lam * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[2,mif2] + 1/12 * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[2,mif2] + 1/12 * self.lam * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[2,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.ydbar[2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[2,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.ydbar[2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[2,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[0,1] * self.ydbar[2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[2,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,1] * self.ydbar[2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[2,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,1] * self.ydbar[2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[2,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[1,1] * self.ydbar[2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[2,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,0] * self.ydbar[2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[2,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,0] * self.ydbar[2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[2,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[2,0] * self.ydbar[2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[2,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * (self.ydbar[2,1])**(2) * self.ydqPhibar[1,mif1] * self.yquPhi[2,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * (self.ydbar[2,1])**(2) * self.ydqPhibar[1,mif1] * self.yquPhi[2,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,1] * (self.ydbar[2,1])**(2) * self.ydqPhibar[1,mif1] * self.yquPhi[2,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,1] * self.ydbar[2,2] * self.ydqPhibar[1,mif1] * self.yquPhi[2,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,1] * self.ydbar[2,2] * self.ydqPhibar[1,mif1] * self.yquPhi[2,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[0,1] * self.ydbar[2,2] * self.ydqPhibar[1,mif1] * self.yquPhi[2,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,1] * self.ydbar[2,2] * self.ydqPhibar[1,mif1] * self.yquPhi[2,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,1] * self.ydbar[2,2] * self.ydqPhibar[1,mif1] * self.yquPhi[2,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[1,1] * self.ydbar[2,2] * self.ydqPhibar[1,mif1] * self.yquPhi[2,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,1] * self.ydbar[2,2] * self.ydqPhibar[1,mif1] * self.yquPhi[2,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,1] * self.ydbar[2,2] * self.ydqPhibar[1,mif1] * self.yquPhi[2,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[2,1] * self.ydbar[2,2] * self.ydqPhibar[1,mif1] * self.yquPhi[2,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,2] * self.ydbar[2,0] * self.ydqPhibar[2,mif1] * self.yquPhi[2,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,2] * self.ydbar[2,0] * self.ydqPhibar[2,mif1] * self.yquPhi[2,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[0,2] * self.ydbar[2,0] * self.ydqPhibar[2,mif1] * self.yquPhi[2,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,2] * self.ydbar[2,0] * self.ydqPhibar[2,mif1] * self.yquPhi[2,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,2] * self.ydbar[2,0] * self.ydqPhibar[2,mif1] * self.yquPhi[2,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[1,2] * self.ydbar[2,0] * self.ydqPhibar[2,mif1] * self.yquPhi[2,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,2] * self.ydbar[2,1] * self.ydqPhibar[2,mif1] * self.yquPhi[2,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,2] * self.ydbar[2,1] * self.ydqPhibar[2,mif1] * self.yquPhi[2,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[0,2] * self.ydbar[2,1] * self.ydqPhibar[2,mif1] * self.yquPhi[2,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,2] * self.ydbar[2,1] * self.ydqPhibar[2,mif1] * self.yquPhi[2,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,2] * self.ydbar[2,1] * self.ydqPhibar[2,mif1] * self.yquPhi[2,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[1,2] * self.ydbar[2,1] * self.ydqPhibar[2,mif1] * self.yquPhi[2,mif2] + -1/8 * self.lam * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[2,mif2] + -1/12 * self.invepsilonbar * self.lam * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[2,mif2] + 1/12 * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[2,mif2] + 1/12 * self.lam * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[2,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,2] * self.ydbar[2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[2,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,2] * self.ydbar[2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[2,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[0,2] * self.ydbar[2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[2,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,2] * self.ydbar[2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[2,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,2] * self.ydbar[2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[2,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[1,2] * self.ydbar[2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[2,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,0] * self.ydbar[2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[2,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,0] * self.ydbar[2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[2,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[2,0] * self.ydbar[2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[2,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,1] * self.ydbar[2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[2,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,1] * self.ydbar[2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[2,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[2,1] * self.ydbar[2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[2,mif2] + 1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * (self.ydbar[2,2])**(2) * self.ydqPhibar[2,mif1] * self.yquPhi[2,mif2] + 1/12 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * (self.ydbar[2,2])**(2) * self.ydqPhibar[2,mif1] * self.yquPhi[2,mif2] + -1/12 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yd[2,2] * (self.ydbar[2,2])**(2) * self.ydqPhibar[2,mif1] * self.yquPhi[2,mif2] + 1/48 * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,0] * self.ydqPhibar[0,mif1] * self.yu[0,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.ydqPhi[0,0] * self.ydqPhibar[0,mif1] * self.yu[0,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.ydqPhi[0,0] * self.ydqPhibar[0,mif1] * self.yu[0,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,0] * self.ydqPhi[0,0] * self.ydqPhibar[0,mif1] * self.yu[0,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,0] * self.ydqPhi[1,0] * self.ydqPhibar[0,mif1] * self.yu[0,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,0] * self.ydqPhi[1,0] * self.ydqPhibar[0,mif1] * self.yu[0,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,0] * self.ydqPhi[1,0] * self.ydqPhibar[0,mif1] * self.yu[0,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,0] * self.ydqPhi[2,0] * self.ydqPhibar[0,mif1] * self.yu[0,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,0] * self.ydqPhi[2,0] * self.ydqPhibar[0,mif1] * self.yu[0,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,0] * self.ydqPhi[2,0] * self.ydqPhibar[0,mif1] * self.yu[0,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,1] * self.ydqPhi[0,0] * self.ydqPhibar[1,mif1] * self.yu[0,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,1] * self.ydqPhi[0,0] * self.ydqPhibar[1,mif1] * self.yu[0,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,1] * self.ydqPhi[0,0] * self.ydqPhibar[1,mif1] * self.yu[0,mif2] + 1/48 * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,0] * self.ydqPhibar[1,mif1] * self.yu[0,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.ydqPhi[1,0] * self.ydqPhibar[1,mif1] * self.yu[0,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,1] * self.ydqPhi[1,0] * self.ydqPhibar[1,mif1] * self.yu[0,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,1] * self.ydqPhi[1,0] * self.ydqPhibar[1,mif1] * self.yu[0,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,1] * self.ydqPhi[2,0] * self.ydqPhibar[1,mif1] * self.yu[0,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,1] * self.ydqPhi[2,0] * self.ydqPhibar[1,mif1] * self.yu[0,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,1] * self.ydqPhi[2,0] * self.ydqPhibar[1,mif1] * self.yu[0,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,2] * self.ydqPhi[0,0] * self.ydqPhibar[2,mif1] * self.yu[0,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,2] * self.ydqPhi[0,0] * self.ydqPhibar[2,mif1] * self.yu[0,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,2] * self.ydqPhi[0,0] * self.ydqPhibar[2,mif1] * self.yu[0,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,2] * self.ydqPhi[1,0] * self.ydqPhibar[2,mif1] * self.yu[0,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,2] * self.ydqPhi[1,0] * self.ydqPhibar[2,mif1] * self.yu[0,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,2] * self.ydqPhi[1,0] * self.ydqPhibar[2,mif1] * self.yu[0,mif2] + 1/48 * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,0] * self.ydqPhibar[2,mif1] * self.yu[0,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,2] * self.ydqPhi[2,0] * self.ydqPhibar[2,mif1] * self.yu[0,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,2] * self.ydqPhi[2,0] * self.ydqPhibar[2,mif1] * self.yu[0,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,2] * self.ydqPhi[2,0] * self.ydqPhibar[2,mif1] * self.yu[0,mif2] + 1/48 * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[0,0] * self.yu[0,mif2] + 1/24 * self.lambdaHatPrimePhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[0,0] * self.yu[0,mif2] + 1/48 * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[0,1] * self.yu[0,mif2] + 1/24 * self.lambdaHatPrimePhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[0,1] * self.yu[0,mif2] + 1/48 * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[0,2] * self.yu[0,mif2] + 1/24 * self.lambdaHatPrimePhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[0,2] * self.yu[0,mif2] + 1/48 * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,1] * self.ydqPhibar[0,mif1] * self.yu[1,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.ydqPhi[0,1] * self.ydqPhibar[0,mif1] * self.yu[1,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.ydqPhi[0,1] * self.ydqPhibar[0,mif1] * self.yu[1,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,0] * self.ydqPhi[0,1] * self.ydqPhibar[0,mif1] * self.yu[1,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,0] * self.ydqPhi[1,1] * self.ydqPhibar[0,mif1] * self.yu[1,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,0] * self.ydqPhi[1,1] * self.ydqPhibar[0,mif1] * self.yu[1,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,0] * self.ydqPhi[1,1] * self.ydqPhibar[0,mif1] * self.yu[1,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,0] * self.ydqPhi[2,1] * self.ydqPhibar[0,mif1] * self.yu[1,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,0] * self.ydqPhi[2,1] * self.ydqPhibar[0,mif1] * self.yu[1,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,0] * self.ydqPhi[2,1] * self.ydqPhibar[0,mif1] * self.yu[1,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,1] * self.ydqPhi[0,1] * self.ydqPhibar[1,mif1] * self.yu[1,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,1] * self.ydqPhi[0,1] * self.ydqPhibar[1,mif1] * self.yu[1,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,1] * self.ydqPhi[0,1] * self.ydqPhibar[1,mif1] * self.yu[1,mif2] + 1/48 * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,1] * self.ydqPhibar[1,mif1] * self.yu[1,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.ydqPhi[1,1] * self.ydqPhibar[1,mif1] * self.yu[1,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,1] * self.ydqPhi[1,1] * self.ydqPhibar[1,mif1] * self.yu[1,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,1] * self.ydqPhi[1,1] * self.ydqPhibar[1,mif1] * self.yu[1,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,1] * self.ydqPhi[2,1] * self.ydqPhibar[1,mif1] * self.yu[1,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,1] * self.ydqPhi[2,1] * self.ydqPhibar[1,mif1] * self.yu[1,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,1] * self.ydqPhi[2,1] * self.ydqPhibar[1,mif1] * self.yu[1,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,2] * self.ydqPhi[0,1] * self.ydqPhibar[2,mif1] * self.yu[1,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,2] * self.ydqPhi[0,1] * self.ydqPhibar[2,mif1] * self.yu[1,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,2] * self.ydqPhi[0,1] * self.ydqPhibar[2,mif1] * self.yu[1,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,2] * self.ydqPhi[1,1] * self.ydqPhibar[2,mif1] * self.yu[1,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,2] * self.ydqPhi[1,1] * self.ydqPhibar[2,mif1] * self.yu[1,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,2] * self.ydqPhi[1,1] * self.ydqPhibar[2,mif1] * self.yu[1,mif2] + 1/48 * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,1] * self.ydqPhibar[2,mif1] * self.yu[1,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,2] * self.ydqPhi[2,1] * self.ydqPhibar[2,mif1] * self.yu[1,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,2] * self.ydqPhi[2,1] * self.ydqPhibar[2,mif1] * self.yu[1,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,2] * self.ydqPhi[2,1] * self.ydqPhibar[2,mif1] * self.yu[1,mif2] + 1/48 * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[1,0] * self.yu[1,mif2] + 1/24 * self.lambdaHatPrimePhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[1,0] * self.yu[1,mif2] + 1/48 * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[1,1] * self.yu[1,mif2] + 1/24 * self.lambdaHatPrimePhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[1,1] * self.yu[1,mif2] + 1/48 * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[1,2] * self.yu[1,mif2] + 1/24 * self.lambdaHatPrimePhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[1,2] * self.yu[1,mif2] + 1/48 * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,2] * self.ydqPhibar[0,mif1] * self.yu[2,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.ydqPhi[0,2] * self.ydqPhibar[0,mif1] * self.yu[2,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.ydqPhi[0,2] * self.ydqPhibar[0,mif1] * self.yu[2,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,0] * self.ydqPhi[0,2] * self.ydqPhibar[0,mif1] * self.yu[2,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,0] * self.ydqPhi[1,2] * self.ydqPhibar[0,mif1] * self.yu[2,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,0] * self.ydqPhi[1,2] * self.ydqPhibar[0,mif1] * self.yu[2,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,0] * self.ydqPhi[1,2] * self.ydqPhibar[0,mif1] * self.yu[2,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,0] * self.ydqPhi[2,2] * self.ydqPhibar[0,mif1] * self.yu[2,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,0] * self.ydqPhi[2,2] * self.ydqPhibar[0,mif1] * self.yu[2,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,0] * self.ydqPhi[2,2] * self.ydqPhibar[0,mif1] * self.yu[2,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,1] * self.ydqPhi[0,2] * self.ydqPhibar[1,mif1] * self.yu[2,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,1] * self.ydqPhi[0,2] * self.ydqPhibar[1,mif1] * self.yu[2,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,1] * self.ydqPhi[0,2] * self.ydqPhibar[1,mif1] * self.yu[2,mif2] + 1/48 * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,2] * self.ydqPhibar[1,mif1] * self.yu[2,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.ydqPhi[1,2] * self.ydqPhibar[1,mif1] * self.yu[2,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,1] * self.ydqPhi[1,2] * self.ydqPhibar[1,mif1] * self.yu[2,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,1] * self.ydqPhi[1,2] * self.ydqPhibar[1,mif1] * self.yu[2,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,1] * self.ydqPhi[2,2] * self.ydqPhibar[1,mif1] * self.yu[2,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,1] * self.ydqPhi[2,2] * self.ydqPhibar[1,mif1] * self.yu[2,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,1] * self.ydqPhi[2,2] * self.ydqPhibar[1,mif1] * self.yu[2,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,2] * self.ydqPhi[0,2] * self.ydqPhibar[2,mif1] * self.yu[2,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,2] * self.ydqPhi[0,2] * self.ydqPhibar[2,mif1] * self.yu[2,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,2] * self.ydqPhi[0,2] * self.ydqPhibar[2,mif1] * self.yu[2,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,2] * self.ydqPhi[1,2] * self.ydqPhibar[2,mif1] * self.yu[2,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,2] * self.ydqPhi[1,2] * self.ydqPhibar[2,mif1] * self.yu[2,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,2] * self.ydqPhi[1,2] * self.ydqPhibar[2,mif1] * self.yu[2,mif2] + 1/48 * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,2] * self.ydqPhibar[2,mif1] * self.yu[2,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,2] * self.ydqPhi[2,2] * self.ydqPhibar[2,mif1] * self.yu[2,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,2] * self.ydqPhi[2,2] * self.ydqPhibar[2,mif1] * self.yu[2,mif2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,2] * self.ydqPhi[2,2] * self.ydqPhibar[2,mif1] * self.yu[2,mif2] + 1/48 * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[2,0] * self.yu[2,mif2] + 1/24 * self.lambdaHatPrimePhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[2,0] * self.yu[2,mif2] + 1/48 * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[2,1] * self.yu[2,mif2] + 1/24 * self.lambdaHatPrimePhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[2,1] * self.yu[2,mif2] + 1/48 * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[2,2] * self.yu[2,mif2] + 1/24 * self.lambdaHatPrimePhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[2,2] * self.yu[2,mif2] + 1/24 * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhibar[0,0] * self.yu[mif1,0] + 1/24 * self.lambdaHatPrimePhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhibar[0,0] * self.yu[mif1,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.yquPhi[0,mif2] * self.yquPhibar[0,0] * self.yu[mif1,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.yquPhi[0,mif2] * self.yquPhibar[0,0] * self.yu[mif1,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,2] * self.yquPhi[0,mif2] * self.yquPhibar[0,0] * self.yu[mif1,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[1,0] * self.yquPhi[1,mif2] * self.yquPhibar[0,0] * self.yu[mif1,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[1,1] * self.yquPhi[1,mif2] * self.yquPhibar[0,0] * self.yu[mif1,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[1,2] * self.yquPhi[1,mif2] * self.yquPhibar[0,0] * self.yu[mif1,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[2,0] * self.yquPhi[2,mif2] * self.yquPhibar[0,0] * self.yu[mif1,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[2,1] * self.yquPhi[2,mif2] * self.yquPhibar[0,0] * self.yu[mif1,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[2,2] * self.yquPhi[2,mif2] * self.yquPhibar[0,0] * self.yu[mif1,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[0,0] * self.yquPhi[0,mif2] * self.yquPhibar[1,0] * self.yu[mif1,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[0,1] * self.yquPhi[0,mif2] * self.yquPhibar[1,0] * self.yu[mif1,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[0,2] * self.yquPhi[0,mif2] * self.yquPhibar[1,0] * self.yu[mif1,0] + 1/24 * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhibar[1,0] * self.yu[mif1,0] + 1/24 * self.lambdaHatPrimePhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhibar[1,0] * self.yu[mif1,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.yquPhi[1,mif2] * self.yquPhibar[1,0] * self.yu[mif1,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,1] * self.yquPhi[1,mif2] * self.yquPhibar[1,0] * self.yu[mif1,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,2] * self.yquPhi[1,mif2] * self.yquPhibar[1,0] * self.yu[mif1,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[2,0] * self.yquPhi[2,mif2] * self.yquPhibar[1,0] * self.yu[mif1,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[2,1] * self.yquPhi[2,mif2] * self.yquPhibar[1,0] * self.yu[mif1,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[2,2] * self.yquPhi[2,mif2] * self.yquPhibar[1,0] * self.yu[mif1,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[0,0] * self.yquPhi[0,mif2] * self.yquPhibar[2,0] * self.yu[mif1,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[0,1] * self.yquPhi[0,mif2] * self.yquPhibar[2,0] * self.yu[mif1,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[0,2] * self.yquPhi[0,mif2] * self.yquPhibar[2,0] * self.yu[mif1,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[1,0] * self.yquPhi[1,mif2] * self.yquPhibar[2,0] * self.yu[mif1,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[1,1] * self.yquPhi[1,mif2] * self.yquPhibar[2,0] * self.yu[mif1,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[1,2] * self.yquPhi[1,mif2] * self.yquPhibar[2,0] * self.yu[mif1,0] + 1/24 * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhibar[2,0] * self.yu[mif1,0] + 1/24 * self.lambdaHatPrimePhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhibar[2,0] * self.yu[mif1,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,0] * self.yquPhi[2,mif2] * self.yquPhibar[2,0] * self.yu[mif1,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,1] * self.yquPhi[2,mif2] * self.yquPhibar[2,0] * self.yu[mif1,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,2] * self.yquPhi[2,mif2] * self.yquPhibar[2,0] * self.yu[mif1,0] + 1/24 * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhibar[0,1] * self.yu[mif1,1] + 1/24 * self.lambdaHatPrimePhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhibar[0,1] * self.yu[mif1,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.yquPhi[0,mif2] * self.yquPhibar[0,1] * self.yu[mif1,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.yquPhi[0,mif2] * self.yquPhibar[0,1] * self.yu[mif1,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,2] * self.yquPhi[0,mif2] * self.yquPhibar[0,1] * self.yu[mif1,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[1,0] * self.yquPhi[1,mif2] * self.yquPhibar[0,1] * self.yu[mif1,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[1,1] * self.yquPhi[1,mif2] * self.yquPhibar[0,1] * self.yu[mif1,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[1,2] * self.yquPhi[1,mif2] * self.yquPhibar[0,1] * self.yu[mif1,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[2,0] * self.yquPhi[2,mif2] * self.yquPhibar[0,1] * self.yu[mif1,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[2,1] * self.yquPhi[2,mif2] * self.yquPhibar[0,1] * self.yu[mif1,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[2,2] * self.yquPhi[2,mif2] * self.yquPhibar[0,1] * self.yu[mif1,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[0,0] * self.yquPhi[0,mif2] * self.yquPhibar[1,1] * self.yu[mif1,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[0,1] * self.yquPhi[0,mif2] * self.yquPhibar[1,1] * self.yu[mif1,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[0,2] * self.yquPhi[0,mif2] * self.yquPhibar[1,1] * self.yu[mif1,1] + 1/24 * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhibar[1,1] * self.yu[mif1,1] + 1/24 * self.lambdaHatPrimePhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhibar[1,1] * self.yu[mif1,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.yquPhi[1,mif2] * self.yquPhibar[1,1] * self.yu[mif1,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,1] * self.yquPhi[1,mif2] * self.yquPhibar[1,1] * self.yu[mif1,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,2] * self.yquPhi[1,mif2] * self.yquPhibar[1,1] * self.yu[mif1,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[2,0] * self.yquPhi[2,mif2] * self.yquPhibar[1,1] * self.yu[mif1,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[2,1] * self.yquPhi[2,mif2] * self.yquPhibar[1,1] * self.yu[mif1,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[2,2] * self.yquPhi[2,mif2] * self.yquPhibar[1,1] * self.yu[mif1,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[0,0] * self.yquPhi[0,mif2] * self.yquPhibar[2,1] * self.yu[mif1,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[0,1] * self.yquPhi[0,mif2] * self.yquPhibar[2,1] * self.yu[mif1,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[0,2] * self.yquPhi[0,mif2] * self.yquPhibar[2,1] * self.yu[mif1,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[1,0] * self.yquPhi[1,mif2] * self.yquPhibar[2,1] * self.yu[mif1,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[1,1] * self.yquPhi[1,mif2] * self.yquPhibar[2,1] * self.yu[mif1,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[1,2] * self.yquPhi[1,mif2] * self.yquPhibar[2,1] * self.yu[mif1,1] + 1/24 * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhibar[2,1] * self.yu[mif1,1] + 1/24 * self.lambdaHatPrimePhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhibar[2,1] * self.yu[mif1,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,0] * self.yquPhi[2,mif2] * self.yquPhibar[2,1] * self.yu[mif1,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,1] * self.yquPhi[2,mif2] * self.yquPhibar[2,1] * self.yu[mif1,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,2] * self.yquPhi[2,mif2] * self.yquPhibar[2,1] * self.yu[mif1,1] + 1/24 * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhibar[0,2] * self.yu[mif1,2] + 1/24 * self.lambdaHatPrimePhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhibar[0,2] * self.yu[mif1,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.yquPhi[0,mif2] * self.yquPhibar[0,2] * self.yu[mif1,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.yquPhi[0,mif2] * self.yquPhibar[0,2] * self.yu[mif1,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,2] * self.yquPhi[0,mif2] * self.yquPhibar[0,2] * self.yu[mif1,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[1,0] * self.yquPhi[1,mif2] * self.yquPhibar[0,2] * self.yu[mif1,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[1,1] * self.yquPhi[1,mif2] * self.yquPhibar[0,2] * self.yu[mif1,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[1,2] * self.yquPhi[1,mif2] * self.yquPhibar[0,2] * self.yu[mif1,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[2,0] * self.yquPhi[2,mif2] * self.yquPhibar[0,2] * self.yu[mif1,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[2,1] * self.yquPhi[2,mif2] * self.yquPhibar[0,2] * self.yu[mif1,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[2,2] * self.yquPhi[2,mif2] * self.yquPhibar[0,2] * self.yu[mif1,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[0,0] * self.yquPhi[0,mif2] * self.yquPhibar[1,2] * self.yu[mif1,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[0,1] * self.yquPhi[0,mif2] * self.yquPhibar[1,2] * self.yu[mif1,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[0,2] * self.yquPhi[0,mif2] * self.yquPhibar[1,2] * self.yu[mif1,2] + 1/24 * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhibar[1,2] * self.yu[mif1,2] + 1/24 * self.lambdaHatPrimePhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhibar[1,2] * self.yu[mif1,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.yquPhi[1,mif2] * self.yquPhibar[1,2] * self.yu[mif1,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,1] * self.yquPhi[1,mif2] * self.yquPhibar[1,2] * self.yu[mif1,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,2] * self.yquPhi[1,mif2] * self.yquPhibar[1,2] * self.yu[mif1,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[2,0] * self.yquPhi[2,mif2] * self.yquPhibar[1,2] * self.yu[mif1,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[2,1] * self.yquPhi[2,mif2] * self.yquPhibar[1,2] * self.yu[mif1,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[2,2] * self.yquPhi[2,mif2] * self.yquPhibar[1,2] * self.yu[mif1,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[0,0] * self.yquPhi[0,mif2] * self.yquPhibar[2,2] * self.yu[mif1,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[0,1] * self.yquPhi[0,mif2] * self.yquPhibar[2,2] * self.yu[mif1,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[0,2] * self.yquPhi[0,mif2] * self.yquPhibar[2,2] * self.yu[mif1,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[1,0] * self.yquPhi[1,mif2] * self.yquPhibar[2,2] * self.yu[mif1,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[1,1] * self.yquPhi[1,mif2] * self.yquPhibar[2,2] * self.yu[mif1,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[1,2] * self.yquPhi[1,mif2] * self.yquPhibar[2,2] * self.yu[mif1,2] + 1/24 * self.lambdaHatPhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhibar[2,2] * self.yu[mif1,2] + 1/24 * self.lambdaHatPrimePhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhibar[2,2] * self.yu[mif1,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,0] * self.yquPhi[2,mif2] * self.yquPhibar[2,2] * self.yu[mif1,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,1] * self.yquPhi[2,mif2] * self.yquPhibar[2,2] * self.yu[mif1,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,2] * self.yquPhi[2,mif2] * self.yquPhibar[2,2] * self.yu[mif1,2] + -1/480 * (self.g2)**(4) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif2] + 1/6 * (self.lambdaHatPrimePhi)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif2] + 2/3 * self.lambdaHatPrimePrimePhi * self.lambdaHatPrimePrimePhibar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif2] + 1/3 * self.lambdaHatPrimePrimePhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhi[mif1,0] * self.yubar[0,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.ydqPhibar[0,mif1] * self.yquPhi[0,0] * self.yu[0,mif2] * self.yubar[0,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.ydqPhibar[1,mif1] * self.yquPhi[0,0] * self.yu[0,mif2] * self.yubar[0,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.ydqPhibar[2,mif1] * self.yquPhi[0,0] * self.yu[0,mif2] * self.yubar[0,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.ydqPhibar[0,mif1] * self.yquPhi[1,0] * self.yu[0,mif2] * self.yubar[0,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.ydqPhibar[1,mif1] * self.yquPhi[1,0] * self.yu[0,mif2] * self.yubar[0,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.ydqPhibar[2,mif1] * self.yquPhi[1,0] * self.yu[0,mif2] * self.yubar[0,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[2,0] * self.yu[0,mif2] * self.yubar[0,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[2,0] * self.yu[0,mif2] * self.yubar[0,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[2,0] * self.yu[0,mif2] * self.yubar[0,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[0,0] * self.yu[0,0] * self.yu[0,mif2] * self.yubar[0,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[0,1] * self.yu[0,1] * self.yu[0,mif2] * self.yubar[0,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[0,2] * self.yu[0,2] * self.yu[0,mif2] * self.yubar[0,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[1,0] * self.yu[0,0] * self.yu[1,mif2] * self.yubar[0,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[1,1] * self.yu[0,1] * self.yu[1,mif2] * self.yubar[0,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[1,2] * self.yu[0,2] * self.yu[1,mif2] * self.yubar[0,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[2,0] * self.yu[0,0] * self.yu[2,mif2] * self.yubar[0,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[2,1] * self.yu[0,1] * self.yu[2,mif2] * self.yubar[0,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[2,2] * self.yu[0,2] * self.yu[2,mif2] * self.yubar[0,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.ydqPhibar[0,0] * self.yquPhi[0,mif2] * self.yu[mif1,0] * self.yubar[0,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.ydqPhibar[1,0] * self.yquPhi[0,mif2] * self.yu[mif1,0] * self.yubar[0,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.ydqPhibar[2,0] * self.yquPhi[0,mif2] * self.yu[mif1,0] * self.yubar[0,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.ydqPhibar[0,0] * self.yquPhi[1,mif2] * self.yu[mif1,0] * self.yubar[0,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.ydqPhibar[1,0] * self.yquPhi[1,mif2] * self.yu[mif1,0] * self.yubar[0,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.ydqPhibar[2,0] * self.yquPhi[1,mif2] * self.yu[mif1,0] * self.yubar[0,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.ydqPhibar[0,0] * self.yquPhi[2,mif2] * self.yu[mif1,0] * self.yubar[0,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.ydqPhibar[1,0] * self.yquPhi[2,mif2] * self.yu[mif1,0] * self.yubar[0,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.ydqPhibar[2,0] * self.yquPhi[2,mif2] * self.yu[mif1,0] * self.yubar[0,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhibar[0,0] * self.yu[0,0] * self.yu[mif1,0] * self.yubar[0,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,0] * self.ydqPhibar[0,0] * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[0,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,0] * self.ydqPhibar[1,0] * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[0,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,0] * self.ydqPhibar[2,0] * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[0,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,0] * self.yquPhibar[0,0] * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[0,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,1] * self.yquPhibar[0,1] * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[0,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,2] * self.yquPhibar[0,2] * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[0,0] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,0] * self.yquPhibar[1,0] * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[0,0] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,0] * self.yquPhibar[2,0] * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[0,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhibar[1,0] * self.yu[1,0] * self.yu[mif1,0] * self.yubar[0,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,1] * self.ydqPhibar[0,0] * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[0,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,1] * self.ydqPhibar[1,0] * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[0,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,1] * self.ydqPhibar[2,0] * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[0,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,0] * self.yquPhibar[1,0] * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[0,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,1] * self.yquPhibar[1,1] * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[0,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,2] * self.yquPhibar[1,2] * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[0,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhibar[2,0] * self.yu[2,0] * self.yu[mif1,0] * self.yubar[0,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,2] * self.ydqPhibar[0,0] * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[0,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,2] * self.ydqPhibar[1,0] * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[0,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,2] * self.ydqPhibar[2,0] * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[0,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,0] * self.yquPhibar[2,0] * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[0,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,1] * self.yquPhibar[2,1] * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[0,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,2] * self.yquPhibar[2,2] * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[0,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhibar[0,1] * self.yu[0,0] * self.yu[mif1,1] * self.yubar[0,0] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,0] * self.yquPhibar[0,1] * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[0,0] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,0] * self.yquPhibar[1,1] * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[0,0] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,0] * self.yquPhibar[2,1] * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[0,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhibar[1,1] * self.yu[1,0] * self.yu[mif1,1] * self.yubar[0,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhibar[2,1] * self.yu[2,0] * self.yu[mif1,1] * self.yubar[0,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhibar[0,2] * self.yu[0,0] * self.yu[mif1,2] * self.yubar[0,0] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,0] * self.yquPhibar[0,2] * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[0,0] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,0] * self.yquPhibar[1,2] * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[0,0] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,0] * self.yquPhibar[2,2] * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[0,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhibar[1,2] * self.yu[1,0] * self.yu[mif1,2] * self.yubar[0,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhibar[2,2] * self.yu[2,0] * self.yu[mif1,2] * self.yubar[0,0] + 1/3 * self.lambdaHatPrimePrimePhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhi[mif1,1] * self.yubar[0,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.ydqPhibar[0,mif1] * self.yquPhi[0,1] * self.yu[0,mif2] * self.yubar[0,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.ydqPhibar[1,mif1] * self.yquPhi[0,1] * self.yu[0,mif2] * self.yubar[0,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.ydqPhibar[2,mif1] * self.yquPhi[0,1] * self.yu[0,mif2] * self.yubar[0,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.ydqPhibar[0,mif1] * self.yquPhi[1,1] * self.yu[0,mif2] * self.yubar[0,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.ydqPhibar[1,mif1] * self.yquPhi[1,1] * self.yu[0,mif2] * self.yubar[0,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.ydqPhibar[2,mif1] * self.yquPhi[1,1] * self.yu[0,mif2] * self.yubar[0,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[2,1] * self.yu[0,mif2] * self.yubar[0,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[2,1] * self.yu[0,mif2] * self.yubar[0,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[2,1] * self.yu[0,mif2] * self.yubar[0,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[0,0] * self.yu[0,0] * self.yu[0,mif2] * self.yubar[0,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[0,1] * self.yu[0,1] * self.yu[0,mif2] * self.yubar[0,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[0,2] * self.yu[0,2] * self.yu[0,mif2] * self.yubar[0,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[1,0] * self.yu[0,0] * self.yu[1,mif2] * self.yubar[0,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[1,1] * self.yu[0,1] * self.yu[1,mif2] * self.yubar[0,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[1,2] * self.yu[0,2] * self.yu[1,mif2] * self.yubar[0,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[2,0] * self.yu[0,0] * self.yu[2,mif2] * self.yubar[0,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[2,1] * self.yu[0,1] * self.yu[2,mif2] * self.yubar[0,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[2,2] * self.yu[0,2] * self.yu[2,mif2] * self.yubar[0,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhibar[0,0] * self.yu[0,1] * self.yu[mif1,0] * self.yubar[0,1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,1] * self.yquPhibar[0,0] * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[0,1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,1] * self.yquPhibar[1,0] * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[0,1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,1] * self.yquPhibar[2,0] * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[0,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhibar[1,0] * self.yu[1,1] * self.yu[mif1,0] * self.yubar[0,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhibar[2,0] * self.yu[2,1] * self.yu[mif1,0] * self.yubar[0,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.ydqPhibar[0,0] * self.yquPhi[0,mif2] * self.yu[mif1,1] * self.yubar[0,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.ydqPhibar[1,0] * self.yquPhi[0,mif2] * self.yu[mif1,1] * self.yubar[0,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.ydqPhibar[2,0] * self.yquPhi[0,mif2] * self.yu[mif1,1] * self.yubar[0,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.ydqPhibar[0,0] * self.yquPhi[1,mif2] * self.yu[mif1,1] * self.yubar[0,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.ydqPhibar[1,0] * self.yquPhi[1,mif2] * self.yu[mif1,1] * self.yubar[0,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.ydqPhibar[2,0] * self.yquPhi[1,mif2] * self.yu[mif1,1] * self.yubar[0,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.ydqPhibar[0,0] * self.yquPhi[2,mif2] * self.yu[mif1,1] * self.yubar[0,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.ydqPhibar[1,0] * self.yquPhi[2,mif2] * self.yu[mif1,1] * self.yubar[0,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.ydqPhibar[2,0] * self.yquPhi[2,mif2] * self.yu[mif1,1] * self.yubar[0,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhibar[0,1] * self.yu[0,1] * self.yu[mif1,1] * self.yubar[0,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,0] * self.ydqPhibar[0,0] * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[0,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,0] * self.ydqPhibar[1,0] * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[0,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,0] * self.ydqPhibar[2,0] * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[0,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,0] * self.yquPhibar[0,0] * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[0,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,1] * self.yquPhibar[0,1] * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[0,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,2] * self.yquPhibar[0,2] * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[0,1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,1] * self.yquPhibar[1,1] * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[0,1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,1] * self.yquPhibar[2,1] * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[0,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhibar[1,1] * self.yu[1,1] * self.yu[mif1,1] * self.yubar[0,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,1] * self.ydqPhibar[0,0] * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[0,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,1] * self.ydqPhibar[1,0] * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[0,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,1] * self.ydqPhibar[2,0] * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[0,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,0] * self.yquPhibar[1,0] * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[0,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,1] * self.yquPhibar[1,1] * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[0,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,2] * self.yquPhibar[1,2] * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[0,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhibar[2,1] * self.yu[2,1] * self.yu[mif1,1] * self.yubar[0,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,2] * self.ydqPhibar[0,0] * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[0,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,2] * self.ydqPhibar[1,0] * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[0,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,2] * self.ydqPhibar[2,0] * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[0,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,0] * self.yquPhibar[2,0] * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[0,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,1] * self.yquPhibar[2,1] * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[0,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,2] * self.yquPhibar[2,2] * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[0,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhibar[0,2] * self.yu[0,1] * self.yu[mif1,2] * self.yubar[0,1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,1] * self.yquPhibar[0,2] * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[0,1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,1] * self.yquPhibar[1,2] * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[0,1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,1] * self.yquPhibar[2,2] * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[0,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhibar[1,2] * self.yu[1,1] * self.yu[mif1,2] * self.yubar[0,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhibar[2,2] * self.yu[2,1] * self.yu[mif1,2] * self.yubar[0,1] + 1/3 * self.lambdaHatPrimePrimePhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhi[mif1,2] * self.yubar[0,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.ydqPhibar[0,mif1] * self.yquPhi[0,2] * self.yu[0,mif2] * self.yubar[0,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.ydqPhibar[1,mif1] * self.yquPhi[0,2] * self.yu[0,mif2] * self.yubar[0,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.ydqPhibar[2,mif1] * self.yquPhi[0,2] * self.yu[0,mif2] * self.yubar[0,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.ydqPhibar[0,mif1] * self.yquPhi[1,2] * self.yu[0,mif2] * self.yubar[0,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.ydqPhibar[1,mif1] * self.yquPhi[1,2] * self.yu[0,mif2] * self.yubar[0,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.ydqPhibar[2,mif1] * self.yquPhi[1,2] * self.yu[0,mif2] * self.yubar[0,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[2,2] * self.yu[0,mif2] * self.yubar[0,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[2,2] * self.yu[0,mif2] * self.yubar[0,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[2,2] * self.yu[0,mif2] * self.yubar[0,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[0,0] * self.yu[0,0] * self.yu[0,mif2] * self.yubar[0,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[0,1] * self.yu[0,1] * self.yu[0,mif2] * self.yubar[0,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[0,2] * self.yu[0,2] * self.yu[0,mif2] * self.yubar[0,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[1,0] * self.yu[0,0] * self.yu[1,mif2] * self.yubar[0,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[1,1] * self.yu[0,1] * self.yu[1,mif2] * self.yubar[0,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[1,2] * self.yu[0,2] * self.yu[1,mif2] * self.yubar[0,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[2,0] * self.yu[0,0] * self.yu[2,mif2] * self.yubar[0,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[2,1] * self.yu[0,1] * self.yu[2,mif2] * self.yubar[0,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[2,2] * self.yu[0,2] * self.yu[2,mif2] * self.yubar[0,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhibar[0,0] * self.yu[0,2] * self.yu[mif1,0] * self.yubar[0,2] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,2] * self.yquPhibar[0,0] * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[0,2] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,2] * self.yquPhibar[1,0] * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[0,2] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,2] * self.yquPhibar[2,0] * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[0,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhibar[1,0] * self.yu[1,2] * self.yu[mif1,0] * self.yubar[0,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhibar[2,0] * self.yu[2,2] * self.yu[mif1,0] * self.yubar[0,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhibar[0,1] * self.yu[0,2] * self.yu[mif1,1] * self.yubar[0,2] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,2] * self.yquPhibar[0,1] * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[0,2] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,2] * self.yquPhibar[1,1] * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[0,2] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,2] * self.yquPhibar[2,1] * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[0,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhibar[1,1] * self.yu[1,2] * self.yu[mif1,1] * self.yubar[0,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhibar[2,1] * self.yu[2,2] * self.yu[mif1,1] * self.yubar[0,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.ydqPhibar[0,0] * self.yquPhi[0,mif2] * self.yu[mif1,2] * self.yubar[0,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.ydqPhibar[1,0] * self.yquPhi[0,mif2] * self.yu[mif1,2] * self.yubar[0,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.ydqPhibar[2,0] * self.yquPhi[0,mif2] * self.yu[mif1,2] * self.yubar[0,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.ydqPhibar[0,0] * self.yquPhi[1,mif2] * self.yu[mif1,2] * self.yubar[0,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.ydqPhibar[1,0] * self.yquPhi[1,mif2] * self.yu[mif1,2] * self.yubar[0,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.ydqPhibar[2,0] * self.yquPhi[1,mif2] * self.yu[mif1,2] * self.yubar[0,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.ydqPhibar[0,0] * self.yquPhi[2,mif2] * self.yu[mif1,2] * self.yubar[0,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.ydqPhibar[1,0] * self.yquPhi[2,mif2] * self.yu[mif1,2] * self.yubar[0,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.ydqPhibar[2,0] * self.yquPhi[2,mif2] * self.yu[mif1,2] * self.yubar[0,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhibar[0,2] * self.yu[0,2] * self.yu[mif1,2] * self.yubar[0,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,0] * self.ydqPhibar[0,0] * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[0,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,0] * self.ydqPhibar[1,0] * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[0,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,0] * self.ydqPhibar[2,0] * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[0,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,0] * self.yquPhibar[0,0] * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[0,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,1] * self.yquPhibar[0,1] * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[0,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,2] * self.yquPhibar[0,2] * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[0,2] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,2] * self.yquPhibar[1,2] * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[0,2] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,2] * self.yquPhibar[2,2] * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[0,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhibar[1,2] * self.yu[1,2] * self.yu[mif1,2] * self.yubar[0,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,1] * self.ydqPhibar[0,0] * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[0,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,1] * self.ydqPhibar[1,0] * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[0,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,1] * self.ydqPhibar[2,0] * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[0,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,0] * self.yquPhibar[1,0] * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[0,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,1] * self.yquPhibar[1,1] * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[0,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,2] * self.yquPhibar[1,2] * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[0,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhibar[2,2] * self.yu[2,2] * self.yu[mif1,2] * self.yubar[0,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,2] * self.ydqPhibar[0,0] * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[0,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,2] * self.ydqPhibar[1,0] * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[0,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,2] * self.ydqPhibar[2,0] * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[0,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,0] * self.yquPhibar[2,0] * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[0,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,1] * self.yquPhibar[2,1] * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[0,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,2] * self.yquPhibar[2,2] * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[0,2] + 1/3 * self.lambdaHatPrimePrimePhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhi[mif1,0] * self.yubar[1,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[0,0] * self.yu[0,mif2] * self.yu[1,0] * self.yubar[1,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[0,1] * self.yu[0,mif2] * self.yu[1,1] * self.yubar[1,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[0,2] * self.yu[0,mif2] * self.yu[1,2] * self.yubar[1,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.ydqPhibar[0,mif1] * self.yquPhi[0,0] * self.yu[1,mif2] * self.yubar[1,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.ydqPhibar[1,mif1] * self.yquPhi[0,0] * self.yu[1,mif2] * self.yubar[1,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.ydqPhibar[2,mif1] * self.yquPhi[0,0] * self.yu[1,mif2] * self.yubar[1,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.ydqPhibar[0,mif1] * self.yquPhi[1,0] * self.yu[1,mif2] * self.yubar[1,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.ydqPhibar[1,mif1] * self.yquPhi[1,0] * self.yu[1,mif2] * self.yubar[1,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.ydqPhibar[2,mif1] * self.yquPhi[1,0] * self.yu[1,mif2] * self.yubar[1,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[2,0] * self.yu[1,mif2] * self.yubar[1,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[2,0] * self.yu[1,mif2] * self.yubar[1,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[2,0] * self.yu[1,mif2] * self.yubar[1,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[1,0] * self.yu[1,0] * self.yu[1,mif2] * self.yubar[1,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[1,1] * self.yu[1,1] * self.yu[1,mif2] * self.yubar[1,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[1,2] * self.yu[1,2] * self.yu[1,mif2] * self.yubar[1,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[2,0] * self.yu[1,0] * self.yu[2,mif2] * self.yubar[1,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[2,1] * self.yu[1,1] * self.yu[2,mif2] * self.yubar[1,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[2,2] * self.yu[1,2] * self.yu[2,mif2] * self.yubar[1,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.ydqPhibar[0,1] * self.yquPhi[0,mif2] * self.yu[mif1,0] * self.yubar[1,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.ydqPhibar[1,1] * self.yquPhi[0,mif2] * self.yu[mif1,0] * self.yubar[1,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.ydqPhibar[2,1] * self.yquPhi[0,mif2] * self.yu[mif1,0] * self.yubar[1,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.ydqPhibar[0,1] * self.yquPhi[1,mif2] * self.yu[mif1,0] * self.yubar[1,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.ydqPhibar[1,1] * self.yquPhi[1,mif2] * self.yu[mif1,0] * self.yubar[1,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.ydqPhibar[2,1] * self.yquPhi[1,mif2] * self.yu[mif1,0] * self.yubar[1,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.ydqPhibar[0,1] * self.yquPhi[2,mif2] * self.yu[mif1,0] * self.yubar[1,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.ydqPhibar[1,1] * self.yquPhi[2,mif2] * self.yu[mif1,0] * self.yubar[1,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.ydqPhibar[2,1] * self.yquPhi[2,mif2] * self.yu[mif1,0] * self.yubar[1,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhibar[0,0] * self.yu[0,0] * self.yu[mif1,0] * self.yubar[1,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,0] * self.ydqPhibar[0,1] * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[1,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,0] * self.ydqPhibar[1,1] * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[1,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,0] * self.ydqPhibar[2,1] * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[1,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,0] * self.yquPhibar[0,0] * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[1,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,1] * self.yquPhibar[0,1] * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[1,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,2] * self.yquPhibar[0,2] * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[1,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhibar[1,0] * self.yu[1,0] * self.yu[mif1,0] * self.yubar[1,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,1] * self.ydqPhibar[0,1] * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[1,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,1] * self.ydqPhibar[1,1] * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[1,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,1] * self.ydqPhibar[2,1] * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[1,0] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,0] * self.yquPhibar[0,0] * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[1,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,0] * self.yquPhibar[1,0] * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[1,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,1] * self.yquPhibar[1,1] * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[1,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,2] * self.yquPhibar[1,2] * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[1,0] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,0] * self.yquPhibar[2,0] * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[1,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhibar[2,0] * self.yu[2,0] * self.yu[mif1,0] * self.yubar[1,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,2] * self.ydqPhibar[0,1] * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[1,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,2] * self.ydqPhibar[1,1] * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[1,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,2] * self.ydqPhibar[2,1] * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[1,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,0] * self.yquPhibar[2,0] * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[1,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,1] * self.yquPhibar[2,1] * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[1,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,2] * self.yquPhibar[2,2] * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[1,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhibar[0,1] * self.yu[0,0] * self.yu[mif1,1] * self.yubar[1,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhibar[1,1] * self.yu[1,0] * self.yu[mif1,1] * self.yubar[1,0] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,0] * self.yquPhibar[0,1] * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[1,0] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,0] * self.yquPhibar[1,1] * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[1,0] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,0] * self.yquPhibar[2,1] * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[1,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhibar[2,1] * self.yu[2,0] * self.yu[mif1,1] * self.yubar[1,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhibar[0,2] * self.yu[0,0] * self.yu[mif1,2] * self.yubar[1,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhibar[1,2] * self.yu[1,0] * self.yu[mif1,2] * self.yubar[1,0] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,0] * self.yquPhibar[0,2] * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[1,0] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,0] * self.yquPhibar[1,2] * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[1,0] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,0] * self.yquPhibar[2,2] * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[1,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhibar[2,2] * self.yu[2,0] * self.yu[mif1,2] * self.yubar[1,0] + 1/3 * self.lambdaHatPrimePrimePhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhi[mif1,1] * self.yubar[1,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[0,0] * self.yu[0,mif2] * self.yu[1,0] * self.yubar[1,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[0,1] * self.yu[0,mif2] * self.yu[1,1] * self.yubar[1,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[0,2] * self.yu[0,mif2] * self.yu[1,2] * self.yubar[1,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.ydqPhibar[0,mif1] * self.yquPhi[0,1] * self.yu[1,mif2] * self.yubar[1,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.ydqPhibar[1,mif1] * self.yquPhi[0,1] * self.yu[1,mif2] * self.yubar[1,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.ydqPhibar[2,mif1] * self.yquPhi[0,1] * self.yu[1,mif2] * self.yubar[1,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.ydqPhibar[0,mif1] * self.yquPhi[1,1] * self.yu[1,mif2] * self.yubar[1,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.ydqPhibar[1,mif1] * self.yquPhi[1,1] * self.yu[1,mif2] * self.yubar[1,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.ydqPhibar[2,mif1] * self.yquPhi[1,1] * self.yu[1,mif2] * self.yubar[1,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[2,1] * self.yu[1,mif2] * self.yubar[1,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[2,1] * self.yu[1,mif2] * self.yubar[1,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[2,1] * self.yu[1,mif2] * self.yubar[1,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[1,0] * self.yu[1,0] * self.yu[1,mif2] * self.yubar[1,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[1,1] * self.yu[1,1] * self.yu[1,mif2] * self.yubar[1,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[1,2] * self.yu[1,2] * self.yu[1,mif2] * self.yubar[1,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[2,0] * self.yu[1,0] * self.yu[2,mif2] * self.yubar[1,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[2,1] * self.yu[1,1] * self.yu[2,mif2] * self.yubar[1,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[2,2] * self.yu[1,2] * self.yu[2,mif2] * self.yubar[1,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhibar[0,0] * self.yu[0,1] * self.yu[mif1,0] * self.yubar[1,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhibar[1,0] * self.yu[1,1] * self.yu[mif1,0] * self.yubar[1,1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,1] * self.yquPhibar[0,0] * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[1,1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,1] * self.yquPhibar[1,0] * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[1,1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,1] * self.yquPhibar[2,0] * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[1,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhibar[2,0] * self.yu[2,1] * self.yu[mif1,0] * self.yubar[1,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.ydqPhibar[0,1] * self.yquPhi[0,mif2] * self.yu[mif1,1] * self.yubar[1,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.ydqPhibar[1,1] * self.yquPhi[0,mif2] * self.yu[mif1,1] * self.yubar[1,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.ydqPhibar[2,1] * self.yquPhi[0,mif2] * self.yu[mif1,1] * self.yubar[1,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.ydqPhibar[0,1] * self.yquPhi[1,mif2] * self.yu[mif1,1] * self.yubar[1,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.ydqPhibar[1,1] * self.yquPhi[1,mif2] * self.yu[mif1,1] * self.yubar[1,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.ydqPhibar[2,1] * self.yquPhi[1,mif2] * self.yu[mif1,1] * self.yubar[1,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.ydqPhibar[0,1] * self.yquPhi[2,mif2] * self.yu[mif1,1] * self.yubar[1,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.ydqPhibar[1,1] * self.yquPhi[2,mif2] * self.yu[mif1,1] * self.yubar[1,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.ydqPhibar[2,1] * self.yquPhi[2,mif2] * self.yu[mif1,1] * self.yubar[1,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhibar[0,1] * self.yu[0,1] * self.yu[mif1,1] * self.yubar[1,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,0] * self.ydqPhibar[0,1] * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[1,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,0] * self.ydqPhibar[1,1] * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[1,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,0] * self.ydqPhibar[2,1] * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[1,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,0] * self.yquPhibar[0,0] * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[1,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,1] * self.yquPhibar[0,1] * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[1,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,2] * self.yquPhibar[0,2] * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[1,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhibar[1,1] * self.yu[1,1] * self.yu[mif1,1] * self.yubar[1,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,1] * self.ydqPhibar[0,1] * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[1,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,1] * self.ydqPhibar[1,1] * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[1,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,1] * self.ydqPhibar[2,1] * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[1,1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,1] * self.yquPhibar[0,1] * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[1,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,0] * self.yquPhibar[1,0] * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[1,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,1] * self.yquPhibar[1,1] * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[1,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,2] * self.yquPhibar[1,2] * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[1,1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,1] * self.yquPhibar[2,1] * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[1,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhibar[2,1] * self.yu[2,1] * self.yu[mif1,1] * self.yubar[1,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,2] * self.ydqPhibar[0,1] * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[1,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,2] * self.ydqPhibar[1,1] * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[1,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,2] * self.ydqPhibar[2,1] * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[1,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,0] * self.yquPhibar[2,0] * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[1,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,1] * self.yquPhibar[2,1] * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[1,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,2] * self.yquPhibar[2,2] * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[1,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhibar[0,2] * self.yu[0,1] * self.yu[mif1,2] * self.yubar[1,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhibar[1,2] * self.yu[1,1] * self.yu[mif1,2] * self.yubar[1,1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,1] * self.yquPhibar[0,2] * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[1,1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,1] * self.yquPhibar[1,2] * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[1,1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,1] * self.yquPhibar[2,2] * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[1,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhibar[2,2] * self.yu[2,1] * self.yu[mif1,2] * self.yubar[1,1] + 1/3 * self.lambdaHatPrimePrimePhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhi[mif1,2] * self.yubar[1,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[0,0] * self.yu[0,mif2] * self.yu[1,0] * self.yubar[1,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[0,1] * self.yu[0,mif2] * self.yu[1,1] * self.yubar[1,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[0,2] * self.yu[0,mif2] * self.yu[1,2] * self.yubar[1,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.ydqPhibar[0,mif1] * self.yquPhi[0,2] * self.yu[1,mif2] * self.yubar[1,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.ydqPhibar[1,mif1] * self.yquPhi[0,2] * self.yu[1,mif2] * self.yubar[1,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.ydqPhibar[2,mif1] * self.yquPhi[0,2] * self.yu[1,mif2] * self.yubar[1,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.ydqPhibar[0,mif1] * self.yquPhi[1,2] * self.yu[1,mif2] * self.yubar[1,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.ydqPhibar[1,mif1] * self.yquPhi[1,2] * self.yu[1,mif2] * self.yubar[1,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.ydqPhibar[2,mif1] * self.yquPhi[1,2] * self.yu[1,mif2] * self.yubar[1,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[2,2] * self.yu[1,mif2] * self.yubar[1,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[2,2] * self.yu[1,mif2] * self.yubar[1,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[2,2] * self.yu[1,mif2] * self.yubar[1,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[1,0] * self.yu[1,0] * self.yu[1,mif2] * self.yubar[1,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[1,1] * self.yu[1,1] * self.yu[1,mif2] * self.yubar[1,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[1,2] * self.yu[1,2] * self.yu[1,mif2] * self.yubar[1,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[2,0] * self.yu[1,0] * self.yu[2,mif2] * self.yubar[1,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[2,1] * self.yu[1,1] * self.yu[2,mif2] * self.yubar[1,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[2,2] * self.yu[1,2] * self.yu[2,mif2] * self.yubar[1,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhibar[0,0] * self.yu[0,2] * self.yu[mif1,0] * self.yubar[1,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhibar[1,0] * self.yu[1,2] * self.yu[mif1,0] * self.yubar[1,2] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,2] * self.yquPhibar[0,0] * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[1,2] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,2] * self.yquPhibar[1,0] * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[1,2] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,2] * self.yquPhibar[2,0] * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[1,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhibar[2,0] * self.yu[2,2] * self.yu[mif1,0] * self.yubar[1,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhibar[0,1] * self.yu[0,2] * self.yu[mif1,1] * self.yubar[1,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhibar[1,1] * self.yu[1,2] * self.yu[mif1,1] * self.yubar[1,2] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,2] * self.yquPhibar[0,1] * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[1,2] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,2] * self.yquPhibar[1,1] * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[1,2] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,2] * self.yquPhibar[2,1] * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[1,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhibar[2,1] * self.yu[2,2] * self.yu[mif1,1] * self.yubar[1,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.ydqPhibar[0,1] * self.yquPhi[0,mif2] * self.yu[mif1,2] * self.yubar[1,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.ydqPhibar[1,1] * self.yquPhi[0,mif2] * self.yu[mif1,2] * self.yubar[1,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.ydqPhibar[2,1] * self.yquPhi[0,mif2] * self.yu[mif1,2] * self.yubar[1,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.ydqPhibar[0,1] * self.yquPhi[1,mif2] * self.yu[mif1,2] * self.yubar[1,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.ydqPhibar[1,1] * self.yquPhi[1,mif2] * self.yu[mif1,2] * self.yubar[1,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.ydqPhibar[2,1] * self.yquPhi[1,mif2] * self.yu[mif1,2] * self.yubar[1,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.ydqPhibar[0,1] * self.yquPhi[2,mif2] * self.yu[mif1,2] * self.yubar[1,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.ydqPhibar[1,1] * self.yquPhi[2,mif2] * self.yu[mif1,2] * self.yubar[1,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.ydqPhibar[2,1] * self.yquPhi[2,mif2] * self.yu[mif1,2] * self.yubar[1,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhibar[0,2] * self.yu[0,2] * self.yu[mif1,2] * self.yubar[1,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,0] * self.ydqPhibar[0,1] * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[1,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,0] * self.ydqPhibar[1,1] * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[1,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,0] * self.ydqPhibar[2,1] * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[1,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,0] * self.yquPhibar[0,0] * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[1,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,1] * self.yquPhibar[0,1] * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[1,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,2] * self.yquPhibar[0,2] * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[1,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhibar[1,2] * self.yu[1,2] * self.yu[mif1,2] * self.yubar[1,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,1] * self.ydqPhibar[0,1] * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[1,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,1] * self.ydqPhibar[1,1] * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[1,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,1] * self.ydqPhibar[2,1] * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[1,2] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,2] * self.yquPhibar[0,2] * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[1,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,0] * self.yquPhibar[1,0] * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[1,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,1] * self.yquPhibar[1,1] * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[1,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,2] * self.yquPhibar[1,2] * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[1,2] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,2] * self.yquPhibar[2,2] * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[1,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhibar[2,2] * self.yu[2,2] * self.yu[mif1,2] * self.yubar[1,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,2] * self.ydqPhibar[0,1] * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[1,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,2] * self.ydqPhibar[1,1] * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[1,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,2] * self.ydqPhibar[2,1] * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[1,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,0] * self.yquPhibar[2,0] * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[1,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,1] * self.yquPhibar[2,1] * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[1,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,2] * self.yquPhibar[2,2] * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[1,2] + 1/3 * self.lambdaHatPrimePrimePhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhi[mif1,0] * self.yubar[2,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[0,0] * self.yu[0,mif2] * self.yu[2,0] * self.yubar[2,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[1,0] * self.yu[1,mif2] * self.yu[2,0] * self.yubar[2,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[0,1] * self.yu[0,mif2] * self.yu[2,1] * self.yubar[2,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[1,1] * self.yu[1,mif2] * self.yu[2,1] * self.yubar[2,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[0,2] * self.yu[0,mif2] * self.yu[2,2] * self.yubar[2,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[1,2] * self.yu[1,mif2] * self.yu[2,2] * self.yubar[2,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.ydqPhibar[0,mif1] * self.yquPhi[0,0] * self.yu[2,mif2] * self.yubar[2,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.ydqPhibar[1,mif1] * self.yquPhi[0,0] * self.yu[2,mif2] * self.yubar[2,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.ydqPhibar[2,mif1] * self.yquPhi[0,0] * self.yu[2,mif2] * self.yubar[2,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.ydqPhibar[0,mif1] * self.yquPhi[1,0] * self.yu[2,mif2] * self.yubar[2,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.ydqPhibar[1,mif1] * self.yquPhi[1,0] * self.yu[2,mif2] * self.yubar[2,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.ydqPhibar[2,mif1] * self.yquPhi[1,0] * self.yu[2,mif2] * self.yubar[2,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[2,0] * self.yu[2,mif2] * self.yubar[2,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[2,0] * self.yu[2,mif2] * self.yubar[2,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[2,0] * self.yu[2,mif2] * self.yubar[2,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[2,0] * self.yu[2,0] * self.yu[2,mif2] * self.yubar[2,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[2,1] * self.yu[2,1] * self.yu[2,mif2] * self.yubar[2,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[2,2] * self.yu[2,2] * self.yu[2,mif2] * self.yubar[2,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.ydqPhibar[0,2] * self.yquPhi[0,mif2] * self.yu[mif1,0] * self.yubar[2,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.ydqPhibar[1,2] * self.yquPhi[0,mif2] * self.yu[mif1,0] * self.yubar[2,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.ydqPhibar[2,2] * self.yquPhi[0,mif2] * self.yu[mif1,0] * self.yubar[2,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.ydqPhibar[0,2] * self.yquPhi[1,mif2] * self.yu[mif1,0] * self.yubar[2,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.ydqPhibar[1,2] * self.yquPhi[1,mif2] * self.yu[mif1,0] * self.yubar[2,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.ydqPhibar[2,2] * self.yquPhi[1,mif2] * self.yu[mif1,0] * self.yubar[2,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.ydqPhibar[0,2] * self.yquPhi[2,mif2] * self.yu[mif1,0] * self.yubar[2,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.ydqPhibar[1,2] * self.yquPhi[2,mif2] * self.yu[mif1,0] * self.yubar[2,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.ydqPhibar[2,2] * self.yquPhi[2,mif2] * self.yu[mif1,0] * self.yubar[2,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhibar[0,0] * self.yu[0,0] * self.yu[mif1,0] * self.yubar[2,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,0] * self.ydqPhibar[0,2] * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[2,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,0] * self.ydqPhibar[1,2] * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[2,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,0] * self.ydqPhibar[2,2] * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[2,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,0] * self.yquPhibar[0,0] * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[2,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,1] * self.yquPhibar[0,1] * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[2,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,2] * self.yquPhibar[0,2] * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[2,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhibar[1,0] * self.yu[1,0] * self.yu[mif1,0] * self.yubar[2,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,1] * self.ydqPhibar[0,2] * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[2,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,1] * self.ydqPhibar[1,2] * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[2,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,1] * self.ydqPhibar[2,2] * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[2,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,0] * self.yquPhibar[1,0] * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[2,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,1] * self.yquPhibar[1,1] * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[2,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,2] * self.yquPhibar[1,2] * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[2,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhibar[2,0] * self.yu[2,0] * self.yu[mif1,0] * self.yubar[2,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,2] * self.ydqPhibar[0,2] * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[2,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,2] * self.ydqPhibar[1,2] * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[2,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,2] * self.ydqPhibar[2,2] * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[2,0] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,0] * self.yquPhibar[0,0] * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[2,0] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,0] * self.yquPhibar[1,0] * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[2,0] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,0] * self.yquPhibar[2,0] * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[2,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,1] * self.yquPhibar[2,1] * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[2,0] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,2] * self.yquPhibar[2,2] * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[2,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhibar[0,1] * self.yu[0,0] * self.yu[mif1,1] * self.yubar[2,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhibar[1,1] * self.yu[1,0] * self.yu[mif1,1] * self.yubar[2,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhibar[2,1] * self.yu[2,0] * self.yu[mif1,1] * self.yubar[2,0] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,0] * self.yquPhibar[0,1] * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[2,0] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,0] * self.yquPhibar[1,1] * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[2,0] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,0] * self.yquPhibar[2,1] * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[2,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhibar[0,2] * self.yu[0,0] * self.yu[mif1,2] * self.yubar[2,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhibar[1,2] * self.yu[1,0] * self.yu[mif1,2] * self.yubar[2,0] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhibar[2,2] * self.yu[2,0] * self.yu[mif1,2] * self.yubar[2,0] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,0] * self.yquPhibar[0,2] * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[2,0] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,0] * self.yquPhibar[1,2] * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[2,0] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,0] * self.yquPhibar[2,2] * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[2,0] + 1/3 * self.lambdaHatPrimePrimePhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhi[mif1,1] * self.yubar[2,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[0,0] * self.yu[0,mif2] * self.yu[2,0] * self.yubar[2,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[1,0] * self.yu[1,mif2] * self.yu[2,0] * self.yubar[2,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[0,1] * self.yu[0,mif2] * self.yu[2,1] * self.yubar[2,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[1,1] * self.yu[1,mif2] * self.yu[2,1] * self.yubar[2,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[0,2] * self.yu[0,mif2] * self.yu[2,2] * self.yubar[2,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[1,2] * self.yu[1,mif2] * self.yu[2,2] * self.yubar[2,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.ydqPhibar[0,mif1] * self.yquPhi[0,1] * self.yu[2,mif2] * self.yubar[2,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.ydqPhibar[1,mif1] * self.yquPhi[0,1] * self.yu[2,mif2] * self.yubar[2,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.ydqPhibar[2,mif1] * self.yquPhi[0,1] * self.yu[2,mif2] * self.yubar[2,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.ydqPhibar[0,mif1] * self.yquPhi[1,1] * self.yu[2,mif2] * self.yubar[2,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.ydqPhibar[1,mif1] * self.yquPhi[1,1] * self.yu[2,mif2] * self.yubar[2,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.ydqPhibar[2,mif1] * self.yquPhi[1,1] * self.yu[2,mif2] * self.yubar[2,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[2,1] * self.yu[2,mif2] * self.yubar[2,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[2,1] * self.yu[2,mif2] * self.yubar[2,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[2,1] * self.yu[2,mif2] * self.yubar[2,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[2,0] * self.yu[2,0] * self.yu[2,mif2] * self.yubar[2,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[2,1] * self.yu[2,1] * self.yu[2,mif2] * self.yubar[2,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[2,2] * self.yu[2,2] * self.yu[2,mif2] * self.yubar[2,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhibar[0,0] * self.yu[0,1] * self.yu[mif1,0] * self.yubar[2,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhibar[1,0] * self.yu[1,1] * self.yu[mif1,0] * self.yubar[2,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhibar[2,0] * self.yu[2,1] * self.yu[mif1,0] * self.yubar[2,1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,1] * self.yquPhibar[0,0] * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[2,1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,1] * self.yquPhibar[1,0] * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[2,1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,1] * self.yquPhibar[2,0] * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[2,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.ydqPhibar[0,2] * self.yquPhi[0,mif2] * self.yu[mif1,1] * self.yubar[2,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.ydqPhibar[1,2] * self.yquPhi[0,mif2] * self.yu[mif1,1] * self.yubar[2,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.ydqPhibar[2,2] * self.yquPhi[0,mif2] * self.yu[mif1,1] * self.yubar[2,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.ydqPhibar[0,2] * self.yquPhi[1,mif2] * self.yu[mif1,1] * self.yubar[2,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.ydqPhibar[1,2] * self.yquPhi[1,mif2] * self.yu[mif1,1] * self.yubar[2,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.ydqPhibar[2,2] * self.yquPhi[1,mif2] * self.yu[mif1,1] * self.yubar[2,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.ydqPhibar[0,2] * self.yquPhi[2,mif2] * self.yu[mif1,1] * self.yubar[2,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.ydqPhibar[1,2] * self.yquPhi[2,mif2] * self.yu[mif1,1] * self.yubar[2,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.ydqPhibar[2,2] * self.yquPhi[2,mif2] * self.yu[mif1,1] * self.yubar[2,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhibar[0,1] * self.yu[0,1] * self.yu[mif1,1] * self.yubar[2,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,0] * self.ydqPhibar[0,2] * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[2,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,0] * self.ydqPhibar[1,2] * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[2,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,0] * self.ydqPhibar[2,2] * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[2,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,0] * self.yquPhibar[0,0] * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[2,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,1] * self.yquPhibar[0,1] * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[2,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,2] * self.yquPhibar[0,2] * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[2,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhibar[1,1] * self.yu[1,1] * self.yu[mif1,1] * self.yubar[2,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,1] * self.ydqPhibar[0,2] * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[2,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,1] * self.ydqPhibar[1,2] * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[2,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,1] * self.ydqPhibar[2,2] * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[2,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,0] * self.yquPhibar[1,0] * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[2,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,1] * self.yquPhibar[1,1] * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[2,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,2] * self.yquPhibar[1,2] * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[2,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhibar[2,1] * self.yu[2,1] * self.yu[mif1,1] * self.yubar[2,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,2] * self.ydqPhibar[0,2] * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[2,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,2] * self.ydqPhibar[1,2] * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[2,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,2] * self.ydqPhibar[2,2] * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[2,1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,1] * self.yquPhibar[0,1] * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[2,1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,1] * self.yquPhibar[1,1] * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[2,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,0] * self.yquPhibar[2,0] * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[2,1] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,1] * self.yquPhibar[2,1] * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[2,1] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,2] * self.yquPhibar[2,2] * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[2,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhibar[0,2] * self.yu[0,1] * self.yu[mif1,2] * self.yubar[2,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhibar[1,2] * self.yu[1,1] * self.yu[mif1,2] * self.yubar[2,1] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhibar[2,2] * self.yu[2,1] * self.yu[mif1,2] * self.yubar[2,1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,1] * self.yquPhibar[0,2] * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[2,1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,1] * self.yquPhibar[1,2] * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[2,1] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,1] * self.yquPhibar[2,2] * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[2,1] + 1/3 * self.lambdaHatPrimePrimePhi * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhi[mif1,2] * self.yubar[2,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[0,0] * self.yu[0,mif2] * self.yu[2,0] * self.yubar[2,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[1,0] * self.yu[1,mif2] * self.yu[2,0] * self.yubar[2,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[0,1] * self.yu[0,mif2] * self.yu[2,1] * self.yubar[2,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[1,1] * self.yu[1,mif2] * self.yu[2,1] * self.yubar[2,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[0,2] * self.yu[0,mif2] * self.yu[2,2] * self.yubar[2,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[1,2] * self.yu[1,mif2] * self.yu[2,2] * self.yubar[2,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.ydqPhibar[0,mif1] * self.yquPhi[0,2] * self.yu[2,mif2] * self.yubar[2,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.ydqPhibar[1,mif1] * self.yquPhi[0,2] * self.yu[2,mif2] * self.yubar[2,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.ydqPhibar[2,mif1] * self.yquPhi[0,2] * self.yu[2,mif2] * self.yubar[2,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.ydqPhibar[0,mif1] * self.yquPhi[1,2] * self.yu[2,mif2] * self.yubar[2,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.ydqPhibar[1,mif1] * self.yquPhi[1,2] * self.yu[2,mif2] * self.yubar[2,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.ydqPhibar[2,mif1] * self.yquPhi[1,2] * self.yu[2,mif2] * self.yubar[2,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[2,2] * self.yu[2,mif2] * self.yubar[2,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[2,2] * self.yu[2,mif2] * self.yubar[2,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[2,2] * self.yu[2,mif2] * self.yubar[2,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[2,0] * self.yu[2,0] * self.yu[2,mif2] * self.yubar[2,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[2,1] * self.yu[2,1] * self.yu[2,mif2] * self.yubar[2,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[2,2] * self.yu[2,2] * self.yu[2,mif2] * self.yubar[2,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhibar[0,0] * self.yu[0,2] * self.yu[mif1,0] * self.yubar[2,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhibar[1,0] * self.yu[1,2] * self.yu[mif1,0] * self.yubar[2,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhibar[2,0] * self.yu[2,2] * self.yu[mif1,0] * self.yubar[2,2] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,2] * self.yquPhibar[0,0] * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[2,2] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,2] * self.yquPhibar[1,0] * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[2,2] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,2] * self.yquPhibar[2,0] * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[2,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhibar[0,1] * self.yu[0,2] * self.yu[mif1,1] * self.yubar[2,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhibar[1,1] * self.yu[1,2] * self.yu[mif1,1] * self.yubar[2,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhibar[2,1] * self.yu[2,2] * self.yu[mif1,1] * self.yubar[2,2] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,2] * self.yquPhibar[0,1] * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[2,2] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,2] * self.yquPhibar[1,1] * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[2,2] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,2] * self.yquPhibar[2,1] * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[2,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.ydqPhibar[0,2] * self.yquPhi[0,mif2] * self.yu[mif1,2] * self.yubar[2,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.ydqPhibar[1,2] * self.yquPhi[0,mif2] * self.yu[mif1,2] * self.yubar[2,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.ydqPhibar[2,2] * self.yquPhi[0,mif2] * self.yu[mif1,2] * self.yubar[2,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.ydqPhibar[0,2] * self.yquPhi[1,mif2] * self.yu[mif1,2] * self.yubar[2,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.ydqPhibar[1,2] * self.yquPhi[1,mif2] * self.yu[mif1,2] * self.yubar[2,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.ydqPhibar[2,2] * self.yquPhi[1,mif2] * self.yu[mif1,2] * self.yubar[2,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.ydqPhibar[0,2] * self.yquPhi[2,mif2] * self.yu[mif1,2] * self.yubar[2,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.ydqPhibar[1,2] * self.yquPhi[2,mif2] * self.yu[mif1,2] * self.yubar[2,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.ydqPhibar[2,2] * self.yquPhi[2,mif2] * self.yu[mif1,2] * self.yubar[2,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhibar[0,2] * self.yu[0,2] * self.yu[mif1,2] * self.yubar[2,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,0] * self.ydqPhibar[0,2] * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[2,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,0] * self.ydqPhibar[1,2] * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[2,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,0] * self.ydqPhibar[2,2] * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[2,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,0] * self.yquPhibar[0,0] * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[2,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,1] * self.yquPhibar[0,1] * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[2,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,2] * self.yquPhibar[0,2] * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[2,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhibar[1,2] * self.yu[1,2] * self.yu[mif1,2] * self.yubar[2,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,1] * self.ydqPhibar[0,2] * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[2,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,1] * self.ydqPhibar[1,2] * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[2,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,1] * self.ydqPhibar[2,2] * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[2,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,0] * self.yquPhibar[1,0] * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[2,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,1] * self.yquPhibar[1,1] * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[2,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,2] * self.yquPhibar[1,2] * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[2,2] + -1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhibar[2,2] * self.yu[2,2] * self.yu[mif1,2] * self.yubar[2,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,2] * self.ydqPhibar[0,2] * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[2,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,2] * self.ydqPhibar[1,2] * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[2,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,2] * self.ydqPhibar[2,2] * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[2,2] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,2] * self.yquPhibar[0,2] * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[2,2] + 1/72 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,2] * self.yquPhibar[1,2] * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[2,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,0] * self.yquPhibar[2,0] * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[2,2] + 1/144 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,1] * self.yquPhibar[2,1] * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[2,2] + 1/48 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,2] * self.yquPhibar[2,2] * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[2,2])

    def alphaOuu(self, mif1,mif2,mif3,mif4):
        return (-1/320 * (self.g3)**(4) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.kronecker_delta(mif2,mif3) + -1/540 * (self.g1)**(4) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 1/960 * (self.g3)**(4) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -5/1944 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yquPhi[0,mif2] * self.yquPhibar[0,mif1] + -17/10368 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yquPhi[0,mif2] * self.yquPhibar[0,mif1] + -1/324 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yquPhi[0,mif2] * self.yquPhibar[0,mif1] + -1/1728 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yquPhi[0,mif2] * self.yquPhibar[0,mif1] + 1/324 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[0,mif2] * self.yquPhibar[0,mif1] + 1/1728 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[0,mif2] * self.yquPhibar[0,mif1] + 17/3456 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yquPhi[0,mif4] * self.yquPhibar[0,mif1] + 1/576 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yquPhi[0,mif4] * self.yquPhibar[0,mif1] + -1/576 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[0,mif4] * self.yquPhibar[0,mif1] + 17/3456 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yquPhi[0,mif2] * self.yquPhibar[0,mif3] + 1/576 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yquPhi[0,mif2] * self.yquPhibar[0,mif3] + -1/576 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[0,mif2] * self.yquPhibar[0,mif3] + -5/1944 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yquPhi[0,mif4] * self.yquPhibar[0,mif3] + -17/10368 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yquPhi[0,mif4] * self.yquPhibar[0,mif3] + -1/324 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yquPhi[0,mif4] * self.yquPhibar[0,mif3] + -1/1728 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yquPhi[0,mif4] * self.yquPhibar[0,mif3] + 1/324 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[0,mif4] * self.yquPhibar[0,mif3] + 1/1728 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[0,mif4] * self.yquPhibar[0,mif3] + -11/1152 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhi[0,mif4] * self.yquPhibar[0,mif1] * self.yquPhibar[0,mif3] + -5/1944 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yquPhi[1,mif2] * self.yquPhibar[1,mif1] + -17/10368 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yquPhi[1,mif2] * self.yquPhibar[1,mif1] + -1/324 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yquPhi[1,mif2] * self.yquPhibar[1,mif1] + -1/1728 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yquPhi[1,mif2] * self.yquPhibar[1,mif1] + 1/324 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[1,mif2] * self.yquPhibar[1,mif1] + 1/1728 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[1,mif2] * self.yquPhibar[1,mif1] + 17/3456 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yquPhi[1,mif4] * self.yquPhibar[1,mif1] + 1/576 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yquPhi[1,mif4] * self.yquPhibar[1,mif1] + -1/576 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[1,mif4] * self.yquPhibar[1,mif1] + -1/2304 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif4] * self.yquPhi[1,mif2] * self.yquPhibar[0,mif3] * self.yquPhibar[1,mif1] + -7/768 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhi[1,mif4] * self.yquPhibar[0,mif3] * self.yquPhibar[1,mif1] + 17/3456 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yquPhi[1,mif2] * self.yquPhibar[1,mif3] + 1/576 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yquPhi[1,mif2] * self.yquPhibar[1,mif3] + -1/576 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[1,mif2] * self.yquPhibar[1,mif3] + -5/1944 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yquPhi[1,mif4] * self.yquPhibar[1,mif3] + -17/10368 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yquPhi[1,mif4] * self.yquPhibar[1,mif3] + -1/324 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yquPhi[1,mif4] * self.yquPhibar[1,mif3] + -1/1728 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yquPhi[1,mif4] * self.yquPhibar[1,mif3] + 1/324 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[1,mif4] * self.yquPhibar[1,mif3] + 1/1728 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[1,mif4] * self.yquPhibar[1,mif3] + -7/768 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif4] * self.yquPhi[1,mif2] * self.yquPhibar[0,mif1] * self.yquPhibar[1,mif3] + -1/2304 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhi[1,mif4] * self.yquPhibar[0,mif1] * self.yquPhibar[1,mif3] + -11/1152 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhi[1,mif4] * self.yquPhibar[1,mif1] * self.yquPhibar[1,mif3] + -5/1944 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yquPhi[2,mif2] * self.yquPhibar[2,mif1] + -17/10368 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yquPhi[2,mif2] * self.yquPhibar[2,mif1] + -1/324 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yquPhi[2,mif2] * self.yquPhibar[2,mif1] + -1/1728 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yquPhi[2,mif2] * self.yquPhibar[2,mif1] + 1/324 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[2,mif2] * self.yquPhibar[2,mif1] + 1/1728 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[2,mif2] * self.yquPhibar[2,mif1] + 17/3456 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yquPhi[2,mif4] * self.yquPhibar[2,mif1] + 1/576 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yquPhi[2,mif4] * self.yquPhibar[2,mif1] + -1/576 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[2,mif4] * self.yquPhibar[2,mif1] + -1/2304 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif4] * self.yquPhi[2,mif2] * self.yquPhibar[0,mif3] * self.yquPhibar[2,mif1] + -7/768 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhi[2,mif4] * self.yquPhibar[0,mif3] * self.yquPhibar[2,mif1] + -1/2304 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif4] * self.yquPhi[2,mif2] * self.yquPhibar[1,mif3] * self.yquPhibar[2,mif1] + -7/768 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhi[2,mif4] * self.yquPhibar[1,mif3] * self.yquPhibar[2,mif1] + 17/3456 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yquPhi[2,mif2] * self.yquPhibar[2,mif3] + 1/576 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yquPhi[2,mif2] * self.yquPhibar[2,mif3] + -1/576 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[2,mif2] * self.yquPhibar[2,mif3] + -5/1944 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yquPhi[2,mif4] * self.yquPhibar[2,mif3] + -17/10368 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yquPhi[2,mif4] * self.yquPhibar[2,mif3] + -1/324 * (self.g1)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yquPhi[2,mif4] * self.yquPhibar[2,mif3] + -1/1728 * (self.g3)**(2) * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yquPhi[2,mif4] * self.yquPhibar[2,mif3] + 1/324 * (self.g1)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[2,mif4] * self.yquPhibar[2,mif3] + 1/1728 * (self.g3)**(2) * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[2,mif4] * self.yquPhibar[2,mif3] + -7/768 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif4] * self.yquPhi[2,mif2] * self.yquPhibar[0,mif1] * self.yquPhibar[2,mif3] + -1/2304 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhi[2,mif4] * self.yquPhibar[0,mif1] * self.yquPhibar[2,mif3] + -7/768 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif4] * self.yquPhi[2,mif2] * self.yquPhibar[1,mif1] * self.yquPhibar[2,mif3] + -1/2304 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhi[2,mif4] * self.yquPhibar[1,mif1] * self.yquPhibar[2,mif3] + -11/1152 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhi[2,mif4] * self.yquPhibar[2,mif1] * self.yquPhibar[2,mif3] + -1/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif4] * self.yquPhibar[0,mif3] * self.yu[0,mif2] * self.yubar[0,mif1] + 1/128 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif4] * self.yquPhibar[0,mif3] * self.yu[0,mif2] * self.yubar[0,mif1] + -1/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[0,mif4] * self.yquPhibar[0,mif3] * self.yu[0,mif2] * self.yubar[0,mif1] + 1/768 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhibar[0,mif3] * self.yu[0,mif4] * self.yubar[0,mif1] + -1/384 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhibar[0,mif3] * self.yu[0,mif4] * self.yubar[0,mif1] + 1/384 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[0,mif2] * self.yquPhibar[0,mif3] * self.yu[0,mif4] * self.yubar[0,mif1] + -1/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif4] * self.yquPhibar[1,mif3] * self.yu[1,mif2] * self.yubar[0,mif1] + 1/128 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif4] * self.yquPhibar[1,mif3] * self.yu[1,mif2] * self.yubar[0,mif1] + -1/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[0,mif4] * self.yquPhibar[1,mif3] * self.yu[1,mif2] * self.yubar[0,mif1] + 1/768 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhibar[1,mif3] * self.yu[1,mif4] * self.yubar[0,mif1] + -1/384 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhibar[1,mif3] * self.yu[1,mif4] * self.yubar[0,mif1] + 1/384 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[0,mif2] * self.yquPhibar[1,mif3] * self.yu[1,mif4] * self.yubar[0,mif1] + -1/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif4] * self.yquPhibar[2,mif3] * self.yu[2,mif2] * self.yubar[0,mif1] + 1/128 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif4] * self.yquPhibar[2,mif3] * self.yu[2,mif2] * self.yubar[0,mif1] + -1/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[0,mif4] * self.yquPhibar[2,mif3] * self.yu[2,mif2] * self.yubar[0,mif1] + 1/768 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhibar[2,mif3] * self.yu[2,mif4] * self.yubar[0,mif1] + -1/384 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhibar[2,mif3] * self.yu[2,mif4] * self.yubar[0,mif1] + 1/384 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[0,mif2] * self.yquPhibar[2,mif3] * self.yu[2,mif4] * self.yubar[0,mif1] + -1/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif4] * self.yquPhibar[0,mif1] * self.yu[0,mif2] * self.yubar[0,mif3] + -1/384 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif4] * self.yquPhibar[0,mif1] * self.yu[0,mif2] * self.yubar[0,mif3] + 1/384 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[0,mif4] * self.yquPhibar[0,mif1] * self.yu[0,mif2] * self.yubar[0,mif3] + 3/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhibar[0,mif1] * self.yu[0,mif4] * self.yubar[0,mif3] + 1/128 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhibar[0,mif1] * self.yu[0,mif4] * self.yubar[0,mif3] + -1/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[0,mif2] * self.yquPhibar[0,mif1] * self.yu[0,mif4] * self.yubar[0,mif3] + -1/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif4] * self.yquPhibar[1,mif1] * self.yu[1,mif2] * self.yubar[0,mif3] + -1/384 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif4] * self.yquPhibar[1,mif1] * self.yu[1,mif2] * self.yubar[0,mif3] + 1/384 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[0,mif4] * self.yquPhibar[1,mif1] * self.yu[1,mif2] * self.yubar[0,mif3] + 3/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhibar[1,mif1] * self.yu[1,mif4] * self.yubar[0,mif3] + 1/128 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhibar[1,mif1] * self.yu[1,mif4] * self.yubar[0,mif3] + -1/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[0,mif2] * self.yquPhibar[1,mif1] * self.yu[1,mif4] * self.yubar[0,mif3] + -1/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif4] * self.yquPhibar[2,mif1] * self.yu[2,mif2] * self.yubar[0,mif3] + -1/384 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif4] * self.yquPhibar[2,mif1] * self.yu[2,mif2] * self.yubar[0,mif3] + 1/384 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[0,mif4] * self.yquPhibar[2,mif1] * self.yu[2,mif2] * self.yubar[0,mif3] + 3/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhibar[2,mif1] * self.yu[2,mif4] * self.yubar[0,mif3] + 1/128 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[0,mif2] * self.yquPhibar[2,mif1] * self.yu[2,mif4] * self.yubar[0,mif3] + -1/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[0,mif2] * self.yquPhibar[2,mif1] * self.yu[2,mif4] * self.yubar[0,mif3] + -1/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif4] * self.yquPhibar[0,mif3] * self.yu[0,mif2] * self.yubar[1,mif1] + 1/128 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif4] * self.yquPhibar[0,mif3] * self.yu[0,mif2] * self.yubar[1,mif1] + -1/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[1,mif4] * self.yquPhibar[0,mif3] * self.yu[0,mif2] * self.yubar[1,mif1] + 1/768 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhibar[0,mif3] * self.yu[0,mif4] * self.yubar[1,mif1] + -1/384 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhibar[0,mif3] * self.yu[0,mif4] * self.yubar[1,mif1] + 1/384 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[1,mif2] * self.yquPhibar[0,mif3] * self.yu[0,mif4] * self.yubar[1,mif1] + -1/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif4] * self.yquPhibar[1,mif3] * self.yu[1,mif2] * self.yubar[1,mif1] + 1/128 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif4] * self.yquPhibar[1,mif3] * self.yu[1,mif2] * self.yubar[1,mif1] + -1/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[1,mif4] * self.yquPhibar[1,mif3] * self.yu[1,mif2] * self.yubar[1,mif1] + 1/768 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhibar[1,mif3] * self.yu[1,mif4] * self.yubar[1,mif1] + -1/384 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhibar[1,mif3] * self.yu[1,mif4] * self.yubar[1,mif1] + 1/384 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[1,mif2] * self.yquPhibar[1,mif3] * self.yu[1,mif4] * self.yubar[1,mif1] + -1/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif4] * self.yquPhibar[2,mif3] * self.yu[2,mif2] * self.yubar[1,mif1] + 1/128 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif4] * self.yquPhibar[2,mif3] * self.yu[2,mif2] * self.yubar[1,mif1] + -1/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[1,mif4] * self.yquPhibar[2,mif3] * self.yu[2,mif2] * self.yubar[1,mif1] + 1/768 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhibar[2,mif3] * self.yu[2,mif4] * self.yubar[1,mif1] + -1/384 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhibar[2,mif3] * self.yu[2,mif4] * self.yubar[1,mif1] + 1/384 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[1,mif2] * self.yquPhibar[2,mif3] * self.yu[2,mif4] * self.yubar[1,mif1] + -1/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif4] * self.yquPhibar[0,mif1] * self.yu[0,mif2] * self.yubar[1,mif3] + -1/384 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif4] * self.yquPhibar[0,mif1] * self.yu[0,mif2] * self.yubar[1,mif3] + 1/384 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[1,mif4] * self.yquPhibar[0,mif1] * self.yu[0,mif2] * self.yubar[1,mif3] + 3/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhibar[0,mif1] * self.yu[0,mif4] * self.yubar[1,mif3] + 1/128 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhibar[0,mif1] * self.yu[0,mif4] * self.yubar[1,mif3] + -1/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[1,mif2] * self.yquPhibar[0,mif1] * self.yu[0,mif4] * self.yubar[1,mif3] + -1/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif4] * self.yquPhibar[1,mif1] * self.yu[1,mif2] * self.yubar[1,mif3] + -1/384 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif4] * self.yquPhibar[1,mif1] * self.yu[1,mif2] * self.yubar[1,mif3] + 1/384 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[1,mif4] * self.yquPhibar[1,mif1] * self.yu[1,mif2] * self.yubar[1,mif3] + 3/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhibar[1,mif1] * self.yu[1,mif4] * self.yubar[1,mif3] + 1/128 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhibar[1,mif1] * self.yu[1,mif4] * self.yubar[1,mif3] + -1/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[1,mif2] * self.yquPhibar[1,mif1] * self.yu[1,mif4] * self.yubar[1,mif3] + -1/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif4] * self.yquPhibar[2,mif1] * self.yu[2,mif2] * self.yubar[1,mif3] + -1/384 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif4] * self.yquPhibar[2,mif1] * self.yu[2,mif2] * self.yubar[1,mif3] + 1/384 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[1,mif4] * self.yquPhibar[2,mif1] * self.yu[2,mif2] * self.yubar[1,mif3] + 3/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhibar[2,mif1] * self.yu[2,mif4] * self.yubar[1,mif3] + 1/128 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[1,mif2] * self.yquPhibar[2,mif1] * self.yu[2,mif4] * self.yubar[1,mif3] + -1/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[1,mif2] * self.yquPhibar[2,mif1] * self.yu[2,mif4] * self.yubar[1,mif3] + -1/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif4] * self.yquPhibar[0,mif3] * self.yu[0,mif2] * self.yubar[2,mif1] + 1/128 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif4] * self.yquPhibar[0,mif3] * self.yu[0,mif2] * self.yubar[2,mif1] + -1/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[2,mif4] * self.yquPhibar[0,mif3] * self.yu[0,mif2] * self.yubar[2,mif1] + 1/768 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhibar[0,mif3] * self.yu[0,mif4] * self.yubar[2,mif1] + -1/384 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhibar[0,mif3] * self.yu[0,mif4] * self.yubar[2,mif1] + 1/384 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[2,mif2] * self.yquPhibar[0,mif3] * self.yu[0,mif4] * self.yubar[2,mif1] + -1/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif4] * self.yquPhibar[1,mif3] * self.yu[1,mif2] * self.yubar[2,mif1] + 1/128 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif4] * self.yquPhibar[1,mif3] * self.yu[1,mif2] * self.yubar[2,mif1] + -1/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[2,mif4] * self.yquPhibar[1,mif3] * self.yu[1,mif2] * self.yubar[2,mif1] + 1/768 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhibar[1,mif3] * self.yu[1,mif4] * self.yubar[2,mif1] + -1/384 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhibar[1,mif3] * self.yu[1,mif4] * self.yubar[2,mif1] + 1/384 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[2,mif2] * self.yquPhibar[1,mif3] * self.yu[1,mif4] * self.yubar[2,mif1] + -1/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif4] * self.yquPhibar[2,mif3] * self.yu[2,mif2] * self.yubar[2,mif1] + 1/128 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif4] * self.yquPhibar[2,mif3] * self.yu[2,mif2] * self.yubar[2,mif1] + -1/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[2,mif4] * self.yquPhibar[2,mif3] * self.yu[2,mif2] * self.yubar[2,mif1] + 1/768 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhibar[2,mif3] * self.yu[2,mif4] * self.yubar[2,mif1] + -1/384 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhibar[2,mif3] * self.yu[2,mif4] * self.yubar[2,mif1] + 1/384 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[2,mif2] * self.yquPhibar[2,mif3] * self.yu[2,mif4] * self.yubar[2,mif1] + -1/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif4] * self.yquPhibar[0,mif1] * self.yu[0,mif2] * self.yubar[2,mif3] + -1/384 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif4] * self.yquPhibar[0,mif1] * self.yu[0,mif2] * self.yubar[2,mif3] + 1/384 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[2,mif4] * self.yquPhibar[0,mif1] * self.yu[0,mif2] * self.yubar[2,mif3] + 3/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhibar[0,mif1] * self.yu[0,mif4] * self.yubar[2,mif3] + 1/128 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhibar[0,mif1] * self.yu[0,mif4] * self.yubar[2,mif3] + -1/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[2,mif2] * self.yquPhibar[0,mif1] * self.yu[0,mif4] * self.yubar[2,mif3] + -1/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif4] * self.yquPhibar[1,mif1] * self.yu[1,mif2] * self.yubar[2,mif3] + -1/384 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif4] * self.yquPhibar[1,mif1] * self.yu[1,mif2] * self.yubar[2,mif3] + 1/384 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[2,mif4] * self.yquPhibar[1,mif1] * self.yu[1,mif2] * self.yubar[2,mif3] + 3/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhibar[1,mif1] * self.yu[1,mif4] * self.yubar[2,mif3] + 1/128 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhibar[1,mif1] * self.yu[1,mif4] * self.yubar[2,mif3] + -1/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[2,mif2] * self.yquPhibar[1,mif1] * self.yu[1,mif4] * self.yubar[2,mif3] + -1/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif4] * self.yquPhibar[2,mif1] * self.yu[2,mif2] * self.yubar[2,mif3] + -1/384 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif4] * self.yquPhibar[2,mif1] * self.yu[2,mif2] * self.yubar[2,mif3] + 1/384 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[2,mif4] * self.yquPhibar[2,mif1] * self.yu[2,mif2] * self.yubar[2,mif3] + 3/256 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhibar[2,mif1] * self.yu[2,mif4] * self.yubar[2,mif3] + 1/128 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[2,mif2] * self.yquPhibar[2,mif1] * self.yu[2,mif4] * self.yubar[2,mif3] + -1/128 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.yquPhi[2,mif2] * self.yquPhibar[2,mif1] * self.yu[2,mif4] * self.yubar[2,mif3])

    def alphaOuW(self, mif1,mif2):
        return (1/192 * self.g2 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.ydqPhibar[0,mif1] * self.yquPhi[0,mif2] + 1/96 * self.g2 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,0] * self.ydqPhibar[0,mif1] * self.yquPhi[0,mif2] + -1/96 * self.g2 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[0,0] * self.ydqPhibar[0,mif1] * self.yquPhi[0,mif2] + 1/192 * self.g2 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.ydqPhibar[1,mif1] * self.yquPhi[0,mif2] + 1/96 * self.g2 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,1] * self.ydqPhibar[1,mif1] * self.yquPhi[0,mif2] + -1/96 * self.g2 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[0,1] * self.ydqPhibar[1,mif1] * self.yquPhi[0,mif2] + 1/192 * self.g2 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.ydqPhibar[2,mif1] * self.yquPhi[0,mif2] + 1/96 * self.g2 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[0,2] * self.ydqPhibar[2,mif1] * self.yquPhi[0,mif2] + -1/96 * self.g2 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[0,2] * self.ydqPhibar[2,mif1] * self.yquPhi[0,mif2] + 1/192 * self.g2 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.ydqPhibar[0,mif1] * self.yquPhi[1,mif2] + 1/96 * self.g2 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,0] * self.ydqPhibar[0,mif1] * self.yquPhi[1,mif2] + -1/96 * self.g2 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[1,0] * self.ydqPhibar[0,mif1] * self.yquPhi[1,mif2] + 1/192 * self.g2 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.ydqPhibar[1,mif1] * self.yquPhi[1,mif2] + 1/96 * self.g2 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,1] * self.ydqPhibar[1,mif1] * self.yquPhi[1,mif2] + -1/96 * self.g2 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[1,1] * self.ydqPhibar[1,mif1] * self.yquPhi[1,mif2] + 1/192 * self.g2 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.ydqPhibar[2,mif1] * self.yquPhi[1,mif2] + 1/96 * self.g2 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[1,2] * self.ydqPhibar[2,mif1] * self.yquPhi[1,mif2] + -1/96 * self.g2 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[1,2] * self.ydqPhibar[2,mif1] * self.yquPhi[1,mif2] + 1/192 * self.g2 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[2,mif2] + 1/96 * self.g2 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[2,mif2] + -1/96 * self.g2 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[2,0] * self.ydqPhibar[0,mif1] * self.yquPhi[2,mif2] + 1/192 * self.g2 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[2,mif2] + 1/96 * self.g2 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[2,mif2] + -1/96 * self.g2 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[2,1] * self.ydqPhibar[1,mif1] * self.yquPhi[2,mif2] + 1/192 * self.g2 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[2,mif2] + 1/96 * self.g2 * self.invepsilonbar * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydbar[2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[2,mif2] + -1/96 * self.g2 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MPhi)**(2) * (self.mu)**(-2)) * self.ydbar[2,2] * self.ydqPhibar[2,mif1] * self.yquPhi[2,mif2] + -1/576 * self.g2 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,0] * self.ydqPhibar[0,mif1] * self.yu[0,mif2] + -1/576 * self.g2 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,0] * self.ydqPhibar[1,mif1] * self.yu[0,mif2] + -1/576 * self.g2 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,0] * self.ydqPhibar[2,mif1] * self.yu[0,mif2] + -1/576 * self.g2 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[0,0] * self.yu[0,mif2] + -1/576 * self.g2 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[0,1] * self.yu[0,mif2] + -1/576 * self.g2 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[0,2] * self.yu[0,mif2] + -1/576 * self.g2 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,1] * self.ydqPhibar[0,mif1] * self.yu[1,mif2] + -1/576 * self.g2 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,1] * self.ydqPhibar[1,mif1] * self.yu[1,mif2] + -1/576 * self.g2 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,1] * self.ydqPhibar[2,mif1] * self.yu[1,mif2] + -1/576 * self.g2 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[1,0] * self.yu[1,mif2] + -1/576 * self.g2 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[1,1] * self.yu[1,mif2] + -1/576 * self.g2 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[1,2] * self.yu[1,mif2] + -1/576 * self.g2 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[0,2] * self.ydqPhibar[0,mif1] * self.yu[2,mif2] + -1/576 * self.g2 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[1,2] * self.ydqPhibar[1,mif1] * self.yu[2,mif2] + -1/576 * self.g2 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.ydqPhi[2,2] * self.ydqPhibar[2,mif1] * self.yu[2,mif2] + -1/576 * self.g2 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,0] * self.yquPhibar[2,0] * self.yu[2,mif2] + -1/576 * self.g2 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,1] * self.yquPhibar[2,1] * self.yu[2,mif2] + -1/576 * self.g2 * (self.MPhi)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yquPhi[mif1,2] * self.yquPhibar[2,2] * self.yu[2,mif2])

## Symbols used:
# ydbar
# yUpsilon
# yd
# MUpsilon
# yl
# ylbar
# muH
# g1
# g2
# epsilonbar
# yUpsilonbar
# invepsilonbar
# lambdaHatPrimeUpsilon
# mu
# lambdaHatUpsilon
# lam
# yubar
# onelooporder
# g3
# yu

import sys
import os
import numpy as np

import lsme.numeric.matchingresult as matchingresult

class GranadaUpsilonMatchingResult(matchingresult.GenericMatchingResult):
    def __init__(self, name='Upsilon'):
        super().__init__(name)
        self.MUpsilon = 1
        self.yUpsilon = np.ones((3, 3))
        self.yUpsilonbar = np.ones((3, 3))
        self.lambdaHatUpsilon = 1
        self.lambdaHatUpsilonbar = 1
        self.lambdaHatPrimeUpsilon = 1
        self.lambdaHatPrimeUpsilonbar = 1
        self.nonvanishing = ['alphaO3G', 'alphaO3W', 'alphaOH', 'alphaOHB', 'alphaOHBox', 'alphaOHD', 'alphaOHG', 'alphaOHW', 'alphaOHWB', 'alphaOdB', 'alphaOdd', 'alphaOdG', 'alphaOdH', 'alphaOdW', 'alphaOed', 'alphaOee', 'alphaOeH', 'alphaOeu', 'alphaOHd', 'alphaOHe', 'alphaOHl1', 'alphaOHl3', 'alphaOHq1', 'alphaOHq3', 'alphaOHu', 'alphaOHud', 'alphaOld', 'alphaOle', 'alphaOll', 'alphaOlq1', 'alphaOlq3', 'alphaOlu', 'alphaOqd1', 'alphaOqd8', 'alphaOqe', 'alphaOqq1', 'alphaOqq3', 'alphaOqu1', 'alphaOqu8', 'alphaOuB', 'alphaOud1', 'alphaOud8', 'alphaOuG', 'alphaOuH', 'alphaOuu', 'alphaOuW']

    def alphaO3G(self, ):
        return 1/384 * (self.g3)**(3) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2)

    def alphaO3Gt(self, ):
        return 0

    def alphaO3W(self, ):
        return 1/240 * (self.g2)**(3) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2)

    def alphaO3Wt(self, ):
        return 0

    def alphaOH(self, ):
        return (-1/40 * (self.g2)**(4) * self.lam * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) + 1/4 * self.lam * (self.lambdaHatPrimeUpsilon)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) + 3/16 * (self.lambdaHatPrimeUpsilon)**(2) * self.lambdaHatUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) + 3/16 * (self.lambdaHatUpsilon)**(3) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2))

    def alphaOHB(self, ):
        return -1/96 * (self.g1)**(2) * self.lambdaHatUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2)

    def alphaOHBox(self, ):
        return (-1/1920 * (self.g1)**(4) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) + -3/320 * (self.g2)**(4) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) + 1/32 * (self.lambdaHatPrimeUpsilon)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) + -3/32 * (self.lambdaHatUpsilon)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2))

    def alphaOHBt(self, ):
        return 0

    def alphaOHD(self, ):
        return (-1/480 * (self.g1)**(4) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) + -1/8 * (self.lambdaHatPrimeUpsilon)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2))

    def alphaOHG(self, ):
        return -5/128 * (self.g3)**(2) * self.lambdaHatUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2)

    def alphaOHGt(self, ):
        return 0

    def alphaOHW(self, ):
        return -1/16 * (self.g2)**(2) * self.lambdaHatUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2)

    def alphaOHWB(self, ):
        return 1/24 * (2)**(-1/2) * self.g1 * self.g2 * self.lambdaHatPrimeUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2)

    def alphaOHWBt(self, ):
        return 0

    def alphaOHWt(self, ):
        return 0

    def alphaWeinberg(self, mif1,mif2):
        return 0

    def alphaOdB(self, mif1,mif2):
        return (-1/48 * self.g1 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yUpsilon[0,0] * self.yUpsilonbar[0,mif1] + -1/96 * self.g1 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[0,mif1] + -1/96 * self.g1 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[0,mif1] + -1/96 * self.g1 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[0,mif1] + -1/96 * self.g1 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[0,mif1] + -1/96 * self.g1 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[1,mif1] + -1/96 * self.g1 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[1,mif1] + -1/48 * self.g1 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yUpsilon[1,1] * self.yUpsilonbar[1,mif1] + -1/96 * self.g1 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[1,mif1] + -1/96 * self.g1 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[1,mif1] + -1/96 * self.g1 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[2,mif1] + -1/96 * self.g1 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[2,mif1] + -1/96 * self.g1 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[2,mif1] + -1/96 * self.g1 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[2,mif1] + -1/48 * self.g1 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yUpsilon[2,2] * self.yUpsilonbar[2,mif1] + -1/48 * self.g1 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yUpsilon[0,0] * self.yUpsilonbar[mif1,0] + -1/96 * self.g1 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,0] + -1/96 * self.g1 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,0] + -1/96 * self.g1 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,0] + -1/96 * self.g1 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,0] + -1/96 * self.g1 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,1] + -1/96 * self.g1 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,1] + -1/48 * self.g1 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yUpsilon[1,1] * self.yUpsilonbar[mif1,1] + -1/96 * self.g1 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,1] + -1/96 * self.g1 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,1] + -1/96 * self.g1 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,2] + -1/96 * self.g1 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,2] + -1/96 * self.g1 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,2] + -1/96 * self.g1 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,2] + -1/48 * self.g1 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yUpsilon[2,2] * self.yUpsilonbar[mif1,2])

    def alphaOdd(self, mif1,mif2,mif3,mif4):
        return (-1/256 * (self.g3)**(4) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.kronecker_delta(mif2,mif3) + -1/4320 * (self.g1)**(4) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 1/768 * (self.g3)**(4) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4))

    def alphaOdG(self, mif1,mif2):
        return (-7/128 * self.g3 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yUpsilon[0,0] * self.yUpsilonbar[0,mif1] + -7/256 * self.g3 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[0,mif1] + -7/256 * self.g3 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[0,mif1] + -7/256 * self.g3 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[0,mif1] + -7/256 * self.g3 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[0,mif1] + -7/256 * self.g3 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[1,mif1] + -7/256 * self.g3 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[1,mif1] + -7/128 * self.g3 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yUpsilon[1,1] * self.yUpsilonbar[1,mif1] + -7/256 * self.g3 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[1,mif1] + -7/256 * self.g3 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[1,mif1] + -7/256 * self.g3 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[2,mif1] + -7/256 * self.g3 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[2,mif1] + -7/256 * self.g3 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[2,mif1] + -7/256 * self.g3 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[2,mif1] + -7/128 * self.g3 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yUpsilon[2,2] * self.yUpsilonbar[2,mif1] + -7/128 * self.g3 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yUpsilon[0,0] * self.yUpsilonbar[mif1,0] + -7/256 * self.g3 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,0] + -7/256 * self.g3 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,0] + -7/256 * self.g3 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,0] + -7/256 * self.g3 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,0] + -7/256 * self.g3 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,1] + -7/256 * self.g3 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,1] + -7/128 * self.g3 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yUpsilon[1,1] * self.yUpsilonbar[mif1,1] + -7/256 * self.g3 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,1] + -7/256 * self.g3 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,1] + -7/256 * self.g3 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,2] + -7/256 * self.g3 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,2] + -7/256 * self.g3 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,2] + -7/256 * self.g3 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,2] + -7/128 * self.g3 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yUpsilon[2,2] * self.yUpsilonbar[mif1,2])

    def alphaOdH(self, mif1,mif2):
        return (-1/160 * (self.g2)**(4) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif2] + 1/16 * (self.lambdaHatPrimeUpsilon)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[mif1,mif2] + 1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[0,0] * self.yUpsilon[0,0] * self.yUpsilonbar[0,0] + 1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[0,1] * self.yUpsilon[0,0] * self.yUpsilonbar[0,0] + 1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[0,2] * self.yUpsilon[0,0] * self.yUpsilonbar[0,0] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[0,0] * self.yUpsilon[0,1] * self.yUpsilonbar[0,0] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[0,1] * self.yUpsilon[0,1] * self.yUpsilonbar[0,0] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[0,2] * self.yUpsilon[0,1] * self.yUpsilonbar[0,0] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[0,0] * self.yUpsilon[0,2] * self.yUpsilonbar[0,0] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[0,1] * self.yUpsilon[0,2] * self.yUpsilonbar[0,0] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[0,2] * self.yUpsilon[0,2] * self.yUpsilonbar[0,0] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[0,0] * self.yUpsilon[1,0] * self.yUpsilonbar[0,0] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[0,1] * self.yUpsilon[1,0] * self.yUpsilonbar[0,0] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[0,2] * self.yUpsilon[1,0] * self.yUpsilonbar[0,0] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[0,0] * self.yUpsilon[2,0] * self.yUpsilonbar[0,0] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[0,1] * self.yUpsilon[2,0] * self.yUpsilonbar[0,0] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[0,2] * self.yUpsilon[2,0] * self.yUpsilonbar[0,0] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[1,0] * self.yUpsilon[0,0] * self.yUpsilonbar[0,1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[1,1] * self.yUpsilon[0,0] * self.yUpsilonbar[0,1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[1,2] * self.yUpsilon[0,0] * self.yUpsilonbar[0,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[0,0] * self.yUpsilon[0,1] * self.yUpsilonbar[0,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[0,1] * self.yUpsilon[0,1] * self.yUpsilonbar[0,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[0,2] * self.yUpsilon[0,1] * self.yUpsilonbar[0,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[1,0] * self.yUpsilon[0,1] * self.yUpsilonbar[0,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[1,1] * self.yUpsilon[0,1] * self.yUpsilonbar[0,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[1,2] * self.yUpsilon[0,1] * self.yUpsilonbar[0,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[1,0] * self.yUpsilon[0,2] * self.yUpsilonbar[0,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[1,1] * self.yUpsilon[0,2] * self.yUpsilonbar[0,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[1,2] * self.yUpsilon[0,2] * self.yUpsilonbar[0,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[0,0] * self.yUpsilon[1,0] * self.yUpsilonbar[0,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[0,1] * self.yUpsilon[1,0] * self.yUpsilonbar[0,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[0,2] * self.yUpsilon[1,0] * self.yUpsilonbar[0,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[1,0] * self.yUpsilon[1,0] * self.yUpsilonbar[0,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[1,1] * self.yUpsilon[1,0] * self.yUpsilonbar[0,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[1,2] * self.yUpsilon[1,0] * self.yUpsilonbar[0,1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[0,0] * self.yUpsilon[1,1] * self.yUpsilonbar[0,1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[0,1] * self.yUpsilon[1,1] * self.yUpsilonbar[0,1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[0,2] * self.yUpsilon[1,1] * self.yUpsilonbar[0,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[0,0] * self.yUpsilon[1,2] * self.yUpsilonbar[0,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[0,1] * self.yUpsilon[1,2] * self.yUpsilonbar[0,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[0,2] * self.yUpsilon[1,2] * self.yUpsilonbar[0,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[1,0] * self.yUpsilon[2,0] * self.yUpsilonbar[0,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[1,1] * self.yUpsilon[2,0] * self.yUpsilonbar[0,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[1,2] * self.yUpsilon[2,0] * self.yUpsilonbar[0,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[0,0] * self.yUpsilon[2,1] * self.yUpsilonbar[0,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[0,1] * self.yUpsilon[2,1] * self.yUpsilonbar[0,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[0,2] * self.yUpsilon[2,1] * self.yUpsilonbar[0,1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[2,0] * self.yUpsilon[0,0] * self.yUpsilonbar[0,2] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[2,1] * self.yUpsilon[0,0] * self.yUpsilonbar[0,2] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[2,2] * self.yUpsilon[0,0] * self.yUpsilonbar[0,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[2,0] * self.yUpsilon[0,1] * self.yUpsilonbar[0,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[2,1] * self.yUpsilon[0,1] * self.yUpsilonbar[0,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[2,2] * self.yUpsilon[0,1] * self.yUpsilonbar[0,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[0,0] * self.yUpsilon[0,2] * self.yUpsilonbar[0,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[0,1] * self.yUpsilon[0,2] * self.yUpsilonbar[0,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[0,2] * self.yUpsilon[0,2] * self.yUpsilonbar[0,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[2,0] * self.yUpsilon[0,2] * self.yUpsilonbar[0,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[2,1] * self.yUpsilon[0,2] * self.yUpsilonbar[0,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[2,2] * self.yUpsilon[0,2] * self.yUpsilonbar[0,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[2,0] * self.yUpsilon[1,0] * self.yUpsilonbar[0,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[2,1] * self.yUpsilon[1,0] * self.yUpsilonbar[0,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[2,2] * self.yUpsilon[1,0] * self.yUpsilonbar[0,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[0,0] * self.yUpsilon[1,2] * self.yUpsilonbar[0,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[0,1] * self.yUpsilon[1,2] * self.yUpsilonbar[0,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[0,2] * self.yUpsilon[1,2] * self.yUpsilonbar[0,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[0,0] * self.yUpsilon[2,0] * self.yUpsilonbar[0,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[0,1] * self.yUpsilon[2,0] * self.yUpsilonbar[0,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[0,2] * self.yUpsilon[2,0] * self.yUpsilonbar[0,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[2,0] * self.yUpsilon[2,0] * self.yUpsilonbar[0,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[2,1] * self.yUpsilon[2,0] * self.yUpsilonbar[0,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[2,2] * self.yUpsilon[2,0] * self.yUpsilonbar[0,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[0,0] * self.yUpsilon[2,1] * self.yUpsilonbar[0,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[0,1] * self.yUpsilon[2,1] * self.yUpsilonbar[0,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[0,2] * self.yUpsilon[2,1] * self.yUpsilonbar[0,2] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[0,0] * self.yUpsilon[2,2] * self.yUpsilonbar[0,2] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[0,1] * self.yUpsilon[2,2] * self.yUpsilonbar[0,2] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[0,2] * self.yUpsilon[2,2] * self.yUpsilonbar[0,2] + -1/8 * (2)**(-1/2) * self.lambdaHatPrimeUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yUpsilon[0,0] * self.yUpsilonbar[0,mif1] + 3/16 * self.lambdaHatUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yUpsilon[0,0] * self.yUpsilonbar[0,mif1] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.yd[0,mif2] * self.ydbar[0,0] * self.yUpsilon[0,0] * self.yUpsilonbar[0,mif1] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.yd[0,mif2] * self.ydbar[0,1] * self.yUpsilon[0,0] * self.yUpsilonbar[0,mif1] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.yd[0,mif2] * self.ydbar[0,2] * self.yUpsilon[0,0] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[0,0] * self.yubar[0,0] * self.yUpsilon[0,0] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[0,1] * self.yubar[0,1] * self.yUpsilon[0,0] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[0,2] * self.yubar[0,2] * self.yUpsilon[0,0] * self.yUpsilonbar[0,mif1] + -1/16 * (2)**(-1/2) * self.lambdaHatPrimeUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[0,mif1] + 3/32 * self.lambdaHatUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[1,0] * self.ydbar[0,0] * self.yUpsilon[0,1] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.yd[1,mif2] * self.ydbar[0,0] * self.yUpsilon[0,1] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[1,1] * self.ydbar[0,1] * self.yUpsilon[0,1] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.yd[1,mif2] * self.ydbar[0,1] * self.yUpsilon[0,1] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[1,2] * self.ydbar[0,2] * self.yUpsilon[0,1] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.yd[1,mif2] * self.ydbar[0,2] * self.yUpsilon[0,1] * self.yUpsilonbar[0,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[0,0] * self.yubar[0,0] * self.yUpsilon[0,1] * self.yUpsilonbar[0,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[1,0] * self.yubar[0,0] * self.yUpsilon[0,1] * self.yUpsilonbar[0,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[0,1] * self.yubar[0,1] * self.yUpsilon[0,1] * self.yUpsilonbar[0,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[1,1] * self.yubar[0,1] * self.yUpsilon[0,1] * self.yUpsilonbar[0,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[0,2] * self.yubar[0,2] * self.yUpsilon[0,1] * self.yUpsilonbar[0,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[1,2] * self.yubar[0,2] * self.yUpsilon[0,1] * self.yUpsilonbar[0,mif1] + -1/16 * (2)**(-1/2) * self.lambdaHatPrimeUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[0,mif1] + 3/32 * self.lambdaHatUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[2,0] * self.ydbar[0,0] * self.yUpsilon[0,2] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.yd[2,mif2] * self.ydbar[0,0] * self.yUpsilon[0,2] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[2,1] * self.ydbar[0,1] * self.yUpsilon[0,2] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.yd[2,mif2] * self.ydbar[0,1] * self.yUpsilon[0,2] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[2,2] * self.ydbar[0,2] * self.yUpsilon[0,2] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.yd[2,mif2] * self.ydbar[0,2] * self.yUpsilon[0,2] * self.yUpsilonbar[0,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[0,0] * self.yubar[0,0] * self.yUpsilon[0,2] * self.yUpsilonbar[0,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[2,0] * self.yubar[0,0] * self.yUpsilon[0,2] * self.yUpsilonbar[0,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[0,1] * self.yubar[0,1] * self.yUpsilon[0,2] * self.yUpsilonbar[0,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[2,1] * self.yubar[0,1] * self.yUpsilon[0,2] * self.yUpsilonbar[0,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[0,2] * self.yubar[0,2] * self.yUpsilon[0,2] * self.yUpsilonbar[0,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[2,2] * self.yubar[0,2] * self.yUpsilon[0,2] * self.yUpsilonbar[0,mif1] + -1/16 * (2)**(-1/2) * self.lambdaHatPrimeUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[0,mif1] + 3/32 * self.lambdaHatUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[1,0] * self.ydbar[0,0] * self.yUpsilon[1,0] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.yd[1,mif2] * self.ydbar[0,0] * self.yUpsilon[1,0] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[1,1] * self.ydbar[0,1] * self.yUpsilon[1,0] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.yd[1,mif2] * self.ydbar[0,1] * self.yUpsilon[1,0] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[1,2] * self.ydbar[0,2] * self.yUpsilon[1,0] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.yd[1,mif2] * self.ydbar[0,2] * self.yUpsilon[1,0] * self.yUpsilonbar[0,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[0,0] * self.yubar[0,0] * self.yUpsilon[1,0] * self.yUpsilonbar[0,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[1,0] * self.yubar[0,0] * self.yUpsilon[1,0] * self.yUpsilonbar[0,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[0,1] * self.yubar[0,1] * self.yUpsilon[1,0] * self.yUpsilonbar[0,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[1,1] * self.yubar[0,1] * self.yUpsilon[1,0] * self.yUpsilonbar[0,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[0,2] * self.yubar[0,2] * self.yUpsilon[1,0] * self.yUpsilonbar[0,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[1,2] * self.yubar[0,2] * self.yUpsilon[1,0] * self.yUpsilonbar[0,mif1] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.yd[1,mif2] * self.ydbar[0,0] * self.yUpsilon[1,1] * self.yUpsilonbar[0,mif1] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.yd[1,mif2] * self.ydbar[0,1] * self.yUpsilon[1,1] * self.yUpsilonbar[0,mif1] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.yd[1,mif2] * self.ydbar[0,2] * self.yUpsilon[1,1] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[1,0] * self.yubar[0,0] * self.yUpsilon[1,1] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[1,1] * self.yubar[0,1] * self.yUpsilon[1,1] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[1,2] * self.yubar[0,2] * self.yUpsilon[1,1] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[2,0] * self.ydbar[0,0] * self.yUpsilon[1,2] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.yd[2,mif2] * self.ydbar[0,0] * self.yUpsilon[1,2] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[2,1] * self.ydbar[0,1] * self.yUpsilon[1,2] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.yd[2,mif2] * self.ydbar[0,1] * self.yUpsilon[1,2] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[2,2] * self.ydbar[0,2] * self.yUpsilon[1,2] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.yd[2,mif2] * self.ydbar[0,2] * self.yUpsilon[1,2] * self.yUpsilonbar[0,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[1,0] * self.yubar[0,0] * self.yUpsilon[1,2] * self.yUpsilonbar[0,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[2,0] * self.yubar[0,0] * self.yUpsilon[1,2] * self.yUpsilonbar[0,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[1,1] * self.yubar[0,1] * self.yUpsilon[1,2] * self.yUpsilonbar[0,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[2,1] * self.yubar[0,1] * self.yUpsilon[1,2] * self.yUpsilonbar[0,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[1,2] * self.yubar[0,2] * self.yUpsilon[1,2] * self.yUpsilonbar[0,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[2,2] * self.yubar[0,2] * self.yUpsilon[1,2] * self.yUpsilonbar[0,mif1] + -1/16 * (2)**(-1/2) * self.lambdaHatPrimeUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[0,mif1] + 3/32 * self.lambdaHatUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[2,0] * self.ydbar[0,0] * self.yUpsilon[2,0] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.yd[2,mif2] * self.ydbar[0,0] * self.yUpsilon[2,0] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[2,1] * self.ydbar[0,1] * self.yUpsilon[2,0] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.yd[2,mif2] * self.ydbar[0,1] * self.yUpsilon[2,0] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[2,2] * self.ydbar[0,2] * self.yUpsilon[2,0] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.yd[2,mif2] * self.ydbar[0,2] * self.yUpsilon[2,0] * self.yUpsilonbar[0,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[0,0] * self.yubar[0,0] * self.yUpsilon[2,0] * self.yUpsilonbar[0,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[2,0] * self.yubar[0,0] * self.yUpsilon[2,0] * self.yUpsilonbar[0,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[0,1] * self.yubar[0,1] * self.yUpsilon[2,0] * self.yUpsilonbar[0,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[2,1] * self.yubar[0,1] * self.yUpsilon[2,0] * self.yUpsilonbar[0,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[0,2] * self.yubar[0,2] * self.yUpsilon[2,0] * self.yUpsilonbar[0,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[2,2] * self.yubar[0,2] * self.yUpsilon[2,0] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[2,0] * self.ydbar[0,0] * self.yUpsilon[2,1] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.yd[2,mif2] * self.ydbar[0,0] * self.yUpsilon[2,1] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[2,1] * self.ydbar[0,1] * self.yUpsilon[2,1] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.yd[2,mif2] * self.ydbar[0,1] * self.yUpsilon[2,1] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[2,2] * self.ydbar[0,2] * self.yUpsilon[2,1] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.yd[2,mif2] * self.ydbar[0,2] * self.yUpsilon[2,1] * self.yUpsilonbar[0,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[1,0] * self.yubar[0,0] * self.yUpsilon[2,1] * self.yUpsilonbar[0,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[2,0] * self.yubar[0,0] * self.yUpsilon[2,1] * self.yUpsilonbar[0,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[1,1] * self.yubar[0,1] * self.yUpsilon[2,1] * self.yUpsilonbar[0,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[2,1] * self.yubar[0,1] * self.yUpsilon[2,1] * self.yUpsilonbar[0,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[1,2] * self.yubar[0,2] * self.yUpsilon[2,1] * self.yUpsilonbar[0,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[2,2] * self.yubar[0,2] * self.yUpsilon[2,1] * self.yUpsilonbar[0,mif1] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.yd[2,mif2] * self.ydbar[0,0] * self.yUpsilon[2,2] * self.yUpsilonbar[0,mif1] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.yd[2,mif2] * self.ydbar[0,1] * self.yUpsilon[2,2] * self.yUpsilonbar[0,mif1] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.yd[2,mif2] * self.ydbar[0,2] * self.yUpsilon[2,2] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[2,0] * self.yubar[0,0] * self.yUpsilon[2,2] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[2,1] * self.yubar[0,1] * self.yUpsilon[2,2] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[2,2] * self.yubar[0,2] * self.yUpsilon[2,2] * self.yUpsilonbar[0,mif1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[1,0] * self.yUpsilon[0,0] * self.yUpsilonbar[1,0] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[1,1] * self.yUpsilon[0,0] * self.yUpsilonbar[1,0] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[1,2] * self.yUpsilon[0,0] * self.yUpsilonbar[1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[0,0] * self.yUpsilon[0,1] * self.yUpsilonbar[1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[0,1] * self.yUpsilon[0,1] * self.yUpsilonbar[1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[0,2] * self.yUpsilon[0,1] * self.yUpsilonbar[1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[1,0] * self.yUpsilon[0,1] * self.yUpsilonbar[1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[1,1] * self.yUpsilon[0,1] * self.yUpsilonbar[1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[1,2] * self.yUpsilon[0,1] * self.yUpsilonbar[1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[1,0] * self.yUpsilon[0,2] * self.yUpsilonbar[1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[1,1] * self.yUpsilon[0,2] * self.yUpsilonbar[1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[1,2] * self.yUpsilon[0,2] * self.yUpsilonbar[1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[0,0] * self.yUpsilon[1,0] * self.yUpsilonbar[1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[0,1] * self.yUpsilon[1,0] * self.yUpsilonbar[1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[0,2] * self.yUpsilon[1,0] * self.yUpsilonbar[1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[1,0] * self.yUpsilon[1,0] * self.yUpsilonbar[1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[1,1] * self.yUpsilon[1,0] * self.yUpsilonbar[1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[1,2] * self.yUpsilon[1,0] * self.yUpsilonbar[1,0] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[0,0] * self.yUpsilon[1,1] * self.yUpsilonbar[1,0] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[0,1] * self.yUpsilon[1,1] * self.yUpsilonbar[1,0] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[0,2] * self.yUpsilon[1,1] * self.yUpsilonbar[1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[0,0] * self.yUpsilon[1,2] * self.yUpsilonbar[1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[0,1] * self.yUpsilon[1,2] * self.yUpsilonbar[1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[0,2] * self.yUpsilon[1,2] * self.yUpsilonbar[1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[1,0] * self.yUpsilon[2,0] * self.yUpsilonbar[1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[1,1] * self.yUpsilon[2,0] * self.yUpsilonbar[1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[1,2] * self.yUpsilon[2,0] * self.yUpsilonbar[1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[0,0] * self.yUpsilon[2,1] * self.yUpsilonbar[1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[0,1] * self.yUpsilon[2,1] * self.yUpsilonbar[1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[0,2] * self.yUpsilon[2,1] * self.yUpsilonbar[1,0] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[1,0] * self.yUpsilon[0,1] * self.yUpsilonbar[1,1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[1,1] * self.yUpsilon[0,1] * self.yUpsilonbar[1,1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[1,2] * self.yUpsilon[0,1] * self.yUpsilonbar[1,1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[1,0] * self.yUpsilon[1,0] * self.yUpsilonbar[1,1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[1,1] * self.yUpsilon[1,0] * self.yUpsilonbar[1,1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[1,2] * self.yUpsilon[1,0] * self.yUpsilonbar[1,1] + 1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[1,0] * self.yUpsilon[1,1] * self.yUpsilonbar[1,1] + 1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[1,1] * self.yUpsilon[1,1] * self.yUpsilonbar[1,1] + 1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[1,2] * self.yUpsilon[1,1] * self.yUpsilonbar[1,1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[1,0] * self.yUpsilon[1,2] * self.yUpsilonbar[1,1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[1,1] * self.yUpsilon[1,2] * self.yUpsilonbar[1,1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[1,2] * self.yUpsilon[1,2] * self.yUpsilonbar[1,1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[1,0] * self.yUpsilon[2,1] * self.yUpsilonbar[1,1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[1,1] * self.yUpsilon[2,1] * self.yUpsilonbar[1,1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[1,2] * self.yUpsilon[2,1] * self.yUpsilonbar[1,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[2,0] * self.yUpsilon[0,1] * self.yUpsilonbar[1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[2,1] * self.yUpsilon[0,1] * self.yUpsilonbar[1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[2,2] * self.yUpsilon[0,1] * self.yUpsilonbar[1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[1,0] * self.yUpsilon[0,2] * self.yUpsilonbar[1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[1,1] * self.yUpsilon[0,2] * self.yUpsilonbar[1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[1,2] * self.yUpsilon[0,2] * self.yUpsilonbar[1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[2,0] * self.yUpsilon[1,0] * self.yUpsilonbar[1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[2,1] * self.yUpsilon[1,0] * self.yUpsilonbar[1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[2,2] * self.yUpsilon[1,0] * self.yUpsilonbar[1,2] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[2,0] * self.yUpsilon[1,1] * self.yUpsilonbar[1,2] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[2,1] * self.yUpsilon[1,1] * self.yUpsilonbar[1,2] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[2,2] * self.yUpsilon[1,1] * self.yUpsilonbar[1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[1,0] * self.yUpsilon[1,2] * self.yUpsilonbar[1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[1,1] * self.yUpsilon[1,2] * self.yUpsilonbar[1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[1,2] * self.yUpsilon[1,2] * self.yUpsilonbar[1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[2,0] * self.yUpsilon[1,2] * self.yUpsilonbar[1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[2,1] * self.yUpsilon[1,2] * self.yUpsilonbar[1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[2,2] * self.yUpsilon[1,2] * self.yUpsilonbar[1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[1,0] * self.yUpsilon[2,0] * self.yUpsilonbar[1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[1,1] * self.yUpsilon[2,0] * self.yUpsilonbar[1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[1,2] * self.yUpsilon[2,0] * self.yUpsilonbar[1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[1,0] * self.yUpsilon[2,1] * self.yUpsilonbar[1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[1,1] * self.yUpsilon[2,1] * self.yUpsilonbar[1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[1,2] * self.yUpsilon[2,1] * self.yUpsilonbar[1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[2,0] * self.yUpsilon[2,1] * self.yUpsilonbar[1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[2,1] * self.yUpsilon[2,1] * self.yUpsilonbar[1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[2,2] * self.yUpsilon[2,1] * self.yUpsilonbar[1,2] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[1,0] * self.yUpsilon[2,2] * self.yUpsilonbar[1,2] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[1,1] * self.yUpsilon[2,2] * self.yUpsilonbar[1,2] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[1,2] * self.yUpsilon[2,2] * self.yUpsilonbar[1,2] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.yd[0,mif2] * self.ydbar[1,0] * self.yUpsilon[0,0] * self.yUpsilonbar[1,mif1] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.yd[0,mif2] * self.ydbar[1,1] * self.yUpsilon[0,0] * self.yUpsilonbar[1,mif1] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.yd[0,mif2] * self.ydbar[1,2] * self.yUpsilon[0,0] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[0,0] * self.yubar[1,0] * self.yUpsilon[0,0] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[0,1] * self.yubar[1,1] * self.yUpsilon[0,0] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[0,2] * self.yubar[1,2] * self.yUpsilon[0,0] * self.yUpsilonbar[1,mif1] + -1/16 * (2)**(-1/2) * self.lambdaHatPrimeUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[1,mif1] + 3/32 * self.lambdaHatUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[1,0] * self.ydbar[1,0] * self.yUpsilon[0,1] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.yd[1,mif2] * self.ydbar[1,0] * self.yUpsilon[0,1] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[1,1] * self.ydbar[1,1] * self.yUpsilon[0,1] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.yd[1,mif2] * self.ydbar[1,1] * self.yUpsilon[0,1] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[1,2] * self.ydbar[1,2] * self.yUpsilon[0,1] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.yd[1,mif2] * self.ydbar[1,2] * self.yUpsilon[0,1] * self.yUpsilonbar[1,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[0,0] * self.yubar[1,0] * self.yUpsilon[0,1] * self.yUpsilonbar[1,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[1,0] * self.yubar[1,0] * self.yUpsilon[0,1] * self.yUpsilonbar[1,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[0,1] * self.yubar[1,1] * self.yUpsilon[0,1] * self.yUpsilonbar[1,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[1,1] * self.yubar[1,1] * self.yUpsilon[0,1] * self.yUpsilonbar[1,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[0,2] * self.yubar[1,2] * self.yUpsilon[0,1] * self.yUpsilonbar[1,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[1,2] * self.yubar[1,2] * self.yUpsilon[0,1] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[2,0] * self.ydbar[1,0] * self.yUpsilon[0,2] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.yd[2,mif2] * self.ydbar[1,0] * self.yUpsilon[0,2] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[2,1] * self.ydbar[1,1] * self.yUpsilon[0,2] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.yd[2,mif2] * self.ydbar[1,1] * self.yUpsilon[0,2] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[2,2] * self.ydbar[1,2] * self.yUpsilon[0,2] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.yd[2,mif2] * self.ydbar[1,2] * self.yUpsilon[0,2] * self.yUpsilonbar[1,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[0,0] * self.yubar[1,0] * self.yUpsilon[0,2] * self.yUpsilonbar[1,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[2,0] * self.yubar[1,0] * self.yUpsilon[0,2] * self.yUpsilonbar[1,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[0,1] * self.yubar[1,1] * self.yUpsilon[0,2] * self.yUpsilonbar[1,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[2,1] * self.yubar[1,1] * self.yUpsilon[0,2] * self.yUpsilonbar[1,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[0,2] * self.yubar[1,2] * self.yUpsilon[0,2] * self.yUpsilonbar[1,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[2,2] * self.yubar[1,2] * self.yUpsilon[0,2] * self.yUpsilonbar[1,mif1] + -1/16 * (2)**(-1/2) * self.lambdaHatPrimeUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[1,mif1] + 3/32 * self.lambdaHatUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[1,0] * self.ydbar[1,0] * self.yUpsilon[1,0] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.yd[1,mif2] * self.ydbar[1,0] * self.yUpsilon[1,0] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[1,1] * self.ydbar[1,1] * self.yUpsilon[1,0] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.yd[1,mif2] * self.ydbar[1,1] * self.yUpsilon[1,0] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[1,2] * self.ydbar[1,2] * self.yUpsilon[1,0] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.yd[1,mif2] * self.ydbar[1,2] * self.yUpsilon[1,0] * self.yUpsilonbar[1,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[0,0] * self.yubar[1,0] * self.yUpsilon[1,0] * self.yUpsilonbar[1,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[1,0] * self.yubar[1,0] * self.yUpsilon[1,0] * self.yUpsilonbar[1,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[0,1] * self.yubar[1,1] * self.yUpsilon[1,0] * self.yUpsilonbar[1,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[1,1] * self.yubar[1,1] * self.yUpsilon[1,0] * self.yUpsilonbar[1,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[0,2] * self.yubar[1,2] * self.yUpsilon[1,0] * self.yUpsilonbar[1,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[1,2] * self.yubar[1,2] * self.yUpsilon[1,0] * self.yUpsilonbar[1,mif1] + -1/8 * (2)**(-1/2) * self.lambdaHatPrimeUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yUpsilon[1,1] * self.yUpsilonbar[1,mif1] + 3/16 * self.lambdaHatUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yUpsilon[1,1] * self.yUpsilonbar[1,mif1] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.yd[1,mif2] * self.ydbar[1,0] * self.yUpsilon[1,1] * self.yUpsilonbar[1,mif1] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.yd[1,mif2] * self.ydbar[1,1] * self.yUpsilon[1,1] * self.yUpsilonbar[1,mif1] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.yd[1,mif2] * self.ydbar[1,2] * self.yUpsilon[1,1] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[1,0] * self.yubar[1,0] * self.yUpsilon[1,1] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[1,1] * self.yubar[1,1] * self.yUpsilon[1,1] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[1,2] * self.yubar[1,2] * self.yUpsilon[1,1] * self.yUpsilonbar[1,mif1] + -1/16 * (2)**(-1/2) * self.lambdaHatPrimeUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[1,mif1] + 3/32 * self.lambdaHatUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[2,0] * self.ydbar[1,0] * self.yUpsilon[1,2] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.yd[2,mif2] * self.ydbar[1,0] * self.yUpsilon[1,2] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[2,1] * self.ydbar[1,1] * self.yUpsilon[1,2] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.yd[2,mif2] * self.ydbar[1,1] * self.yUpsilon[1,2] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[2,2] * self.ydbar[1,2] * self.yUpsilon[1,2] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.yd[2,mif2] * self.ydbar[1,2] * self.yUpsilon[1,2] * self.yUpsilonbar[1,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[1,0] * self.yubar[1,0] * self.yUpsilon[1,2] * self.yUpsilonbar[1,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[2,0] * self.yubar[1,0] * self.yUpsilon[1,2] * self.yUpsilonbar[1,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[1,1] * self.yubar[1,1] * self.yUpsilon[1,2] * self.yUpsilonbar[1,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[2,1] * self.yubar[1,1] * self.yUpsilon[1,2] * self.yUpsilonbar[1,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[1,2] * self.yubar[1,2] * self.yUpsilon[1,2] * self.yUpsilonbar[1,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[2,2] * self.yubar[1,2] * self.yUpsilon[1,2] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[2,0] * self.ydbar[1,0] * self.yUpsilon[2,0] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.yd[2,mif2] * self.ydbar[1,0] * self.yUpsilon[2,0] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[2,1] * self.ydbar[1,1] * self.yUpsilon[2,0] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.yd[2,mif2] * self.ydbar[1,1] * self.yUpsilon[2,0] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[2,2] * self.ydbar[1,2] * self.yUpsilon[2,0] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.yd[2,mif2] * self.ydbar[1,2] * self.yUpsilon[2,0] * self.yUpsilonbar[1,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[0,0] * self.yubar[1,0] * self.yUpsilon[2,0] * self.yUpsilonbar[1,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[2,0] * self.yubar[1,0] * self.yUpsilon[2,0] * self.yUpsilonbar[1,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[0,1] * self.yubar[1,1] * self.yUpsilon[2,0] * self.yUpsilonbar[1,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[2,1] * self.yubar[1,1] * self.yUpsilon[2,0] * self.yUpsilonbar[1,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[0,2] * self.yubar[1,2] * self.yUpsilon[2,0] * self.yUpsilonbar[1,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[2,2] * self.yubar[1,2] * self.yUpsilon[2,0] * self.yUpsilonbar[1,mif1] + -1/16 * (2)**(-1/2) * self.lambdaHatPrimeUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[1,mif1] + 3/32 * self.lambdaHatUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[2,0] * self.ydbar[1,0] * self.yUpsilon[2,1] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.yd[2,mif2] * self.ydbar[1,0] * self.yUpsilon[2,1] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[2,1] * self.ydbar[1,1] * self.yUpsilon[2,1] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.yd[2,mif2] * self.ydbar[1,1] * self.yUpsilon[2,1] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[2,2] * self.ydbar[1,2] * self.yUpsilon[2,1] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.yd[2,mif2] * self.ydbar[1,2] * self.yUpsilon[2,1] * self.yUpsilonbar[1,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[1,0] * self.yubar[1,0] * self.yUpsilon[2,1] * self.yUpsilonbar[1,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[2,0] * self.yubar[1,0] * self.yUpsilon[2,1] * self.yUpsilonbar[1,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[1,1] * self.yubar[1,1] * self.yUpsilon[2,1] * self.yUpsilonbar[1,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[2,1] * self.yubar[1,1] * self.yUpsilon[2,1] * self.yUpsilonbar[1,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[1,2] * self.yubar[1,2] * self.yUpsilon[2,1] * self.yUpsilonbar[1,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[2,2] * self.yubar[1,2] * self.yUpsilon[2,1] * self.yUpsilonbar[1,mif1] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.yd[2,mif2] * self.ydbar[1,0] * self.yUpsilon[2,2] * self.yUpsilonbar[1,mif1] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.yd[2,mif2] * self.ydbar[1,1] * self.yUpsilon[2,2] * self.yUpsilonbar[1,mif1] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.yd[2,mif2] * self.ydbar[1,2] * self.yUpsilon[2,2] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[2,0] * self.yubar[1,0] * self.yUpsilon[2,2] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[2,1] * self.yubar[1,1] * self.yUpsilon[2,2] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[2,2] * self.yubar[1,2] * self.yUpsilon[2,2] * self.yUpsilonbar[1,mif1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[2,0] * self.yUpsilon[0,0] * self.yUpsilonbar[2,0] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[2,1] * self.yUpsilon[0,0] * self.yUpsilonbar[2,0] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[2,2] * self.yUpsilon[0,0] * self.yUpsilonbar[2,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[2,0] * self.yUpsilon[0,1] * self.yUpsilonbar[2,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[2,1] * self.yUpsilon[0,1] * self.yUpsilonbar[2,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[2,2] * self.yUpsilon[0,1] * self.yUpsilonbar[2,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[0,0] * self.yUpsilon[0,2] * self.yUpsilonbar[2,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[0,1] * self.yUpsilon[0,2] * self.yUpsilonbar[2,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[0,2] * self.yUpsilon[0,2] * self.yUpsilonbar[2,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[2,0] * self.yUpsilon[0,2] * self.yUpsilonbar[2,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[2,1] * self.yUpsilon[0,2] * self.yUpsilonbar[2,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[2,2] * self.yUpsilon[0,2] * self.yUpsilonbar[2,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[2,0] * self.yUpsilon[1,0] * self.yUpsilonbar[2,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[2,1] * self.yUpsilon[1,0] * self.yUpsilonbar[2,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[2,2] * self.yUpsilon[1,0] * self.yUpsilonbar[2,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[0,0] * self.yUpsilon[1,2] * self.yUpsilonbar[2,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[0,1] * self.yUpsilon[1,2] * self.yUpsilonbar[2,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[0,2] * self.yUpsilon[1,2] * self.yUpsilonbar[2,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[0,0] * self.yUpsilon[2,0] * self.yUpsilonbar[2,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[0,1] * self.yUpsilon[2,0] * self.yUpsilonbar[2,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[0,2] * self.yUpsilon[2,0] * self.yUpsilonbar[2,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[2,0] * self.yUpsilon[2,0] * self.yUpsilonbar[2,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[2,1] * self.yUpsilon[2,0] * self.yUpsilonbar[2,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[2,2] * self.yUpsilon[2,0] * self.yUpsilonbar[2,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[0,0] * self.yUpsilon[2,1] * self.yUpsilonbar[2,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[0,1] * self.yUpsilon[2,1] * self.yUpsilonbar[2,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[0,2] * self.yUpsilon[2,1] * self.yUpsilonbar[2,0] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[0,0] * self.yUpsilon[2,2] * self.yUpsilonbar[2,0] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[0,1] * self.yUpsilon[2,2] * self.yUpsilonbar[2,0] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[0,2] * self.yUpsilon[2,2] * self.yUpsilonbar[2,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[2,0] * self.yUpsilon[0,1] * self.yUpsilonbar[2,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[2,1] * self.yUpsilon[0,1] * self.yUpsilonbar[2,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[2,2] * self.yUpsilon[0,1] * self.yUpsilonbar[2,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[1,0] * self.yUpsilon[0,2] * self.yUpsilonbar[2,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[1,1] * self.yUpsilon[0,2] * self.yUpsilonbar[2,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[1,2] * self.yUpsilon[0,2] * self.yUpsilonbar[2,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[2,0] * self.yUpsilon[1,0] * self.yUpsilonbar[2,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[2,1] * self.yUpsilon[1,0] * self.yUpsilonbar[2,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[2,2] * self.yUpsilon[1,0] * self.yUpsilonbar[2,1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[2,0] * self.yUpsilon[1,1] * self.yUpsilonbar[2,1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[2,1] * self.yUpsilon[1,1] * self.yUpsilonbar[2,1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[2,2] * self.yUpsilon[1,1] * self.yUpsilonbar[2,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[1,0] * self.yUpsilon[1,2] * self.yUpsilonbar[2,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[1,1] * self.yUpsilon[1,2] * self.yUpsilonbar[2,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[1,2] * self.yUpsilon[1,2] * self.yUpsilonbar[2,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[2,0] * self.yUpsilon[1,2] * self.yUpsilonbar[2,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[2,1] * self.yUpsilon[1,2] * self.yUpsilonbar[2,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[2,2] * self.yUpsilon[1,2] * self.yUpsilonbar[2,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[1,0] * self.yUpsilon[2,0] * self.yUpsilonbar[2,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[1,1] * self.yUpsilon[2,0] * self.yUpsilonbar[2,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[1,2] * self.yUpsilon[2,0] * self.yUpsilonbar[2,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[1,0] * self.yUpsilon[2,1] * self.yUpsilonbar[2,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[1,1] * self.yUpsilon[2,1] * self.yUpsilonbar[2,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[1,2] * self.yUpsilon[2,1] * self.yUpsilonbar[2,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[2,0] * self.yUpsilon[2,1] * self.yUpsilonbar[2,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[2,1] * self.yUpsilon[2,1] * self.yUpsilonbar[2,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[2,2] * self.yUpsilon[2,1] * self.yUpsilonbar[2,1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[1,0] * self.yUpsilon[2,2] * self.yUpsilonbar[2,1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[1,1] * self.yUpsilon[2,2] * self.yUpsilonbar[2,1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[1,2] * self.yUpsilon[2,2] * self.yUpsilonbar[2,1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[2,0] * self.yUpsilon[0,2] * self.yUpsilonbar[2,2] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[2,1] * self.yUpsilon[0,2] * self.yUpsilonbar[2,2] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[2,2] * self.yUpsilon[0,2] * self.yUpsilonbar[2,2] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[2,0] * self.yUpsilon[1,2] * self.yUpsilonbar[2,2] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[2,1] * self.yUpsilon[1,2] * self.yUpsilonbar[2,2] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[2,2] * self.yUpsilon[1,2] * self.yUpsilonbar[2,2] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,0] * self.ydbar[2,0] * self.yUpsilon[2,0] * self.yUpsilonbar[2,2] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,1] * self.ydbar[2,1] * self.yUpsilon[2,0] * self.yUpsilonbar[2,2] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[mif1,2] * self.ydbar[2,2] * self.yUpsilon[2,0] * self.yUpsilonbar[2,2] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,0] * self.ydbar[2,0] * self.yUpsilon[2,1] * self.yUpsilonbar[2,2] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,1] * self.ydbar[2,1] * self.yUpsilon[2,1] * self.yUpsilonbar[2,2] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[mif1,2] * self.ydbar[2,2] * self.yUpsilon[2,1] * self.yUpsilonbar[2,2] + 1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,0] * self.ydbar[2,0] * self.yUpsilon[2,2] * self.yUpsilonbar[2,2] + 1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,1] * self.ydbar[2,1] * self.yUpsilon[2,2] * self.yUpsilonbar[2,2] + 1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yd[mif1,2] * self.ydbar[2,2] * self.yUpsilon[2,2] * self.yUpsilonbar[2,2] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.yd[0,mif2] * self.ydbar[2,0] * self.yUpsilon[0,0] * self.yUpsilonbar[2,mif1] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.yd[0,mif2] * self.ydbar[2,1] * self.yUpsilon[0,0] * self.yUpsilonbar[2,mif1] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.yd[0,mif2] * self.ydbar[2,2] * self.yUpsilon[0,0] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[0,0] * self.yubar[2,0] * self.yUpsilon[0,0] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[0,1] * self.yubar[2,1] * self.yUpsilon[0,0] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[0,2] * self.yubar[2,2] * self.yUpsilon[0,0] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[1,0] * self.ydbar[2,0] * self.yUpsilon[0,1] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.yd[1,mif2] * self.ydbar[2,0] * self.yUpsilon[0,1] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[1,1] * self.ydbar[2,1] * self.yUpsilon[0,1] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.yd[1,mif2] * self.ydbar[2,1] * self.yUpsilon[0,1] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[1,2] * self.ydbar[2,2] * self.yUpsilon[0,1] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.yd[1,mif2] * self.ydbar[2,2] * self.yUpsilon[0,1] * self.yUpsilonbar[2,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[0,0] * self.yubar[2,0] * self.yUpsilon[0,1] * self.yUpsilonbar[2,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[1,0] * self.yubar[2,0] * self.yUpsilon[0,1] * self.yUpsilonbar[2,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[0,1] * self.yubar[2,1] * self.yUpsilon[0,1] * self.yUpsilonbar[2,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[1,1] * self.yubar[2,1] * self.yUpsilon[0,1] * self.yUpsilonbar[2,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[0,2] * self.yubar[2,2] * self.yUpsilon[0,1] * self.yUpsilonbar[2,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[1,2] * self.yubar[2,2] * self.yUpsilon[0,1] * self.yUpsilonbar[2,mif1] + -1/16 * (2)**(-1/2) * self.lambdaHatPrimeUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[2,mif1] + 3/32 * self.lambdaHatUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[2,0] * self.ydbar[2,0] * self.yUpsilon[0,2] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.yd[2,mif2] * self.ydbar[2,0] * self.yUpsilon[0,2] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[2,1] * self.ydbar[2,1] * self.yUpsilon[0,2] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.yd[2,mif2] * self.ydbar[2,1] * self.yUpsilon[0,2] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[2,2] * self.ydbar[2,2] * self.yUpsilon[0,2] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.yd[2,mif2] * self.ydbar[2,2] * self.yUpsilon[0,2] * self.yUpsilonbar[2,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[0,0] * self.yubar[2,0] * self.yUpsilon[0,2] * self.yUpsilonbar[2,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[2,0] * self.yubar[2,0] * self.yUpsilon[0,2] * self.yUpsilonbar[2,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[0,1] * self.yubar[2,1] * self.yUpsilon[0,2] * self.yUpsilonbar[2,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[2,1] * self.yubar[2,1] * self.yUpsilon[0,2] * self.yUpsilonbar[2,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[0,2] * self.yubar[2,2] * self.yUpsilon[0,2] * self.yUpsilonbar[2,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[2,2] * self.yubar[2,2] * self.yUpsilon[0,2] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[1,0] * self.ydbar[2,0] * self.yUpsilon[1,0] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.yd[1,mif2] * self.ydbar[2,0] * self.yUpsilon[1,0] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[1,1] * self.ydbar[2,1] * self.yUpsilon[1,0] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.yd[1,mif2] * self.ydbar[2,1] * self.yUpsilon[1,0] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[1,2] * self.ydbar[2,2] * self.yUpsilon[1,0] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.yd[1,mif2] * self.ydbar[2,2] * self.yUpsilon[1,0] * self.yUpsilonbar[2,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[0,0] * self.yubar[2,0] * self.yUpsilon[1,0] * self.yUpsilonbar[2,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[1,0] * self.yubar[2,0] * self.yUpsilon[1,0] * self.yUpsilonbar[2,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[0,1] * self.yubar[2,1] * self.yUpsilon[1,0] * self.yUpsilonbar[2,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[1,1] * self.yubar[2,1] * self.yUpsilon[1,0] * self.yUpsilonbar[2,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[0,2] * self.yubar[2,2] * self.yUpsilon[1,0] * self.yUpsilonbar[2,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[1,2] * self.yubar[2,2] * self.yUpsilon[1,0] * self.yUpsilonbar[2,mif1] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.yd[1,mif2] * self.ydbar[2,0] * self.yUpsilon[1,1] * self.yUpsilonbar[2,mif1] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.yd[1,mif2] * self.ydbar[2,1] * self.yUpsilon[1,1] * self.yUpsilonbar[2,mif1] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.yd[1,mif2] * self.ydbar[2,2] * self.yUpsilon[1,1] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[1,0] * self.yubar[2,0] * self.yUpsilon[1,1] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[1,1] * self.yubar[2,1] * self.yUpsilon[1,1] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[1,2] * self.yubar[2,2] * self.yUpsilon[1,1] * self.yUpsilonbar[2,mif1] + -1/16 * (2)**(-1/2) * self.lambdaHatPrimeUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[2,mif1] + 3/32 * self.lambdaHatUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[2,0] * self.ydbar[2,0] * self.yUpsilon[1,2] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.yd[2,mif2] * self.ydbar[2,0] * self.yUpsilon[1,2] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[2,1] * self.ydbar[2,1] * self.yUpsilon[1,2] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.yd[2,mif2] * self.ydbar[2,1] * self.yUpsilon[1,2] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[2,2] * self.ydbar[2,2] * self.yUpsilon[1,2] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.yd[2,mif2] * self.ydbar[2,2] * self.yUpsilon[1,2] * self.yUpsilonbar[2,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[1,0] * self.yubar[2,0] * self.yUpsilon[1,2] * self.yUpsilonbar[2,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[2,0] * self.yubar[2,0] * self.yUpsilon[1,2] * self.yUpsilonbar[2,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[1,1] * self.yubar[2,1] * self.yUpsilon[1,2] * self.yUpsilonbar[2,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[2,1] * self.yubar[2,1] * self.yUpsilon[1,2] * self.yUpsilonbar[2,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[1,2] * self.yubar[2,2] * self.yUpsilon[1,2] * self.yUpsilonbar[2,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[2,2] * self.yubar[2,2] * self.yUpsilon[1,2] * self.yUpsilonbar[2,mif1] + -1/16 * (2)**(-1/2) * self.lambdaHatPrimeUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[2,mif1] + 3/32 * self.lambdaHatUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[2,0] * self.ydbar[2,0] * self.yUpsilon[2,0] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.yd[2,mif2] * self.ydbar[2,0] * self.yUpsilon[2,0] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[2,1] * self.ydbar[2,1] * self.yUpsilon[2,0] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.yd[2,mif2] * self.ydbar[2,1] * self.yUpsilon[2,0] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[2,2] * self.ydbar[2,2] * self.yUpsilon[2,0] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.yd[2,mif2] * self.ydbar[2,2] * self.yUpsilon[2,0] * self.yUpsilonbar[2,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[0,0] * self.yubar[2,0] * self.yUpsilon[2,0] * self.yUpsilonbar[2,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[2,0] * self.yubar[2,0] * self.yUpsilon[2,0] * self.yUpsilonbar[2,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[0,1] * self.yubar[2,1] * self.yUpsilon[2,0] * self.yUpsilonbar[2,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[2,1] * self.yubar[2,1] * self.yUpsilon[2,0] * self.yUpsilonbar[2,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[0,2] * self.yubar[2,2] * self.yUpsilon[2,0] * self.yUpsilonbar[2,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[2,2] * self.yubar[2,2] * self.yUpsilon[2,0] * self.yUpsilonbar[2,mif1] + -1/16 * (2)**(-1/2) * self.lambdaHatPrimeUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[2,mif1] + 3/32 * self.lambdaHatUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[2,0] * self.ydbar[2,0] * self.yUpsilon[2,1] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.yd[2,mif2] * self.ydbar[2,0] * self.yUpsilon[2,1] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[2,1] * self.ydbar[2,1] * self.yUpsilon[2,1] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.yd[2,mif2] * self.ydbar[2,1] * self.yUpsilon[2,1] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[2,2] * self.ydbar[2,2] * self.yUpsilon[2,1] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.yd[2,mif2] * self.ydbar[2,2] * self.yUpsilon[2,1] * self.yUpsilonbar[2,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[1,0] * self.yubar[2,0] * self.yUpsilon[2,1] * self.yUpsilonbar[2,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[2,0] * self.yubar[2,0] * self.yUpsilon[2,1] * self.yUpsilonbar[2,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[1,1] * self.yubar[2,1] * self.yUpsilon[2,1] * self.yUpsilonbar[2,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[2,1] * self.yubar[2,1] * self.yUpsilon[2,1] * self.yUpsilonbar[2,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[1,2] * self.yubar[2,2] * self.yUpsilon[2,1] * self.yUpsilonbar[2,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[2,2] * self.yubar[2,2] * self.yUpsilon[2,1] * self.yUpsilonbar[2,mif1] + -1/8 * (2)**(-1/2) * self.lambdaHatPrimeUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yUpsilon[2,2] * self.yUpsilonbar[2,mif1] + 3/16 * self.lambdaHatUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yUpsilon[2,2] * self.yUpsilonbar[2,mif1] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.yd[2,mif2] * self.ydbar[2,0] * self.yUpsilon[2,2] * self.yUpsilonbar[2,mif1] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.yd[2,mif2] * self.ydbar[2,1] * self.yUpsilon[2,2] * self.yUpsilonbar[2,mif1] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.yd[2,mif2] * self.ydbar[2,2] * self.yUpsilon[2,2] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[2,0] * self.yubar[2,0] * self.yUpsilon[2,2] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[2,1] * self.yubar[2,1] * self.yUpsilon[2,2] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[2,2] * self.yubar[2,2] * self.yUpsilon[2,2] * self.yUpsilonbar[2,mif1] + -1/8 * (2)**(-1/2) * self.lambdaHatPrimeUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yUpsilon[0,0] * self.yUpsilonbar[mif1,0] + 3/16 * self.lambdaHatUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yUpsilon[0,0] * self.yUpsilonbar[mif1,0] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.yd[0,mif2] * self.ydbar[0,0] * self.yUpsilon[0,0] * self.yUpsilonbar[mif1,0] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.yd[0,mif2] * self.ydbar[0,1] * self.yUpsilon[0,0] * self.yUpsilonbar[mif1,0] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.yd[0,mif2] * self.ydbar[0,2] * self.yUpsilon[0,0] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[0,0] * self.yubar[0,0] * self.yUpsilon[0,0] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[0,1] * self.yubar[0,1] * self.yUpsilon[0,0] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[0,2] * self.yubar[0,2] * self.yUpsilon[0,0] * self.yUpsilonbar[mif1,0] + -1/16 * (2)**(-1/2) * self.lambdaHatPrimeUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,0] + 3/32 * self.lambdaHatUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[1,0] * self.ydbar[0,0] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.yd[1,mif2] * self.ydbar[0,0] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[1,1] * self.ydbar[0,1] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.yd[1,mif2] * self.ydbar[0,1] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[1,2] * self.ydbar[0,2] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.yd[1,mif2] * self.ydbar[0,2] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[0,0] * self.yubar[0,0] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[1,0] * self.yubar[0,0] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[0,1] * self.yubar[0,1] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[1,1] * self.yubar[0,1] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[0,2] * self.yubar[0,2] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[1,2] * self.yubar[0,2] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,0] + -1/16 * (2)**(-1/2) * self.lambdaHatPrimeUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,0] + 3/32 * self.lambdaHatUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[2,0] * self.ydbar[0,0] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.yd[2,mif2] * self.ydbar[0,0] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[2,1] * self.ydbar[0,1] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.yd[2,mif2] * self.ydbar[0,1] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[2,2] * self.ydbar[0,2] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.yd[2,mif2] * self.ydbar[0,2] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[0,0] * self.yubar[0,0] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[2,0] * self.yubar[0,0] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[0,1] * self.yubar[0,1] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[2,1] * self.yubar[0,1] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[0,2] * self.yubar[0,2] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[2,2] * self.yubar[0,2] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,0] + -1/16 * (2)**(-1/2) * self.lambdaHatPrimeUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,0] + 3/32 * self.lambdaHatUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[1,0] * self.ydbar[0,0] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.yd[1,mif2] * self.ydbar[0,0] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[1,1] * self.ydbar[0,1] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.yd[1,mif2] * self.ydbar[0,1] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[1,2] * self.ydbar[0,2] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.yd[1,mif2] * self.ydbar[0,2] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[0,0] * self.yubar[0,0] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[1,0] * self.yubar[0,0] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[0,1] * self.yubar[0,1] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[1,1] * self.yubar[0,1] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[0,2] * self.yubar[0,2] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[1,2] * self.yubar[0,2] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,0] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.yd[1,mif2] * self.ydbar[0,0] * self.yUpsilon[1,1] * self.yUpsilonbar[mif1,0] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.yd[1,mif2] * self.ydbar[0,1] * self.yUpsilon[1,1] * self.yUpsilonbar[mif1,0] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.yd[1,mif2] * self.ydbar[0,2] * self.yUpsilon[1,1] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[1,0] * self.yubar[0,0] * self.yUpsilon[1,1] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[1,1] * self.yubar[0,1] * self.yUpsilon[1,1] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[1,2] * self.yubar[0,2] * self.yUpsilon[1,1] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[2,0] * self.ydbar[0,0] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.yd[2,mif2] * self.ydbar[0,0] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[2,1] * self.ydbar[0,1] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.yd[2,mif2] * self.ydbar[0,1] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[2,2] * self.ydbar[0,2] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.yd[2,mif2] * self.ydbar[0,2] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[1,0] * self.yubar[0,0] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[2,0] * self.yubar[0,0] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[1,1] * self.yubar[0,1] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[2,1] * self.yubar[0,1] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[1,2] * self.yubar[0,2] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[2,2] * self.yubar[0,2] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,0] + -1/16 * (2)**(-1/2) * self.lambdaHatPrimeUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,0] + 3/32 * self.lambdaHatUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[2,0] * self.ydbar[0,0] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.yd[2,mif2] * self.ydbar[0,0] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[2,1] * self.ydbar[0,1] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.yd[2,mif2] * self.ydbar[0,1] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[2,2] * self.ydbar[0,2] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.yd[2,mif2] * self.ydbar[0,2] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[0,0] * self.yubar[0,0] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[2,0] * self.yubar[0,0] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[0,1] * self.yubar[0,1] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[2,1] * self.yubar[0,1] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[0,2] * self.yubar[0,2] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[2,2] * self.yubar[0,2] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[2,0] * self.ydbar[0,0] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.yd[2,mif2] * self.ydbar[0,0] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[2,1] * self.ydbar[0,1] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.yd[2,mif2] * self.ydbar[0,1] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[2,2] * self.ydbar[0,2] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.yd[2,mif2] * self.ydbar[0,2] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[1,0] * self.yubar[0,0] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[2,0] * self.yubar[0,0] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[1,1] * self.yubar[0,1] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[2,1] * self.yubar[0,1] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[1,2] * self.yubar[0,2] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[2,2] * self.yubar[0,2] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,0] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.yd[2,mif2] * self.ydbar[0,0] * self.yUpsilon[2,2] * self.yUpsilonbar[mif1,0] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.yd[2,mif2] * self.ydbar[0,1] * self.yUpsilon[2,2] * self.yUpsilonbar[mif1,0] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.yd[2,mif2] * self.ydbar[0,2] * self.yUpsilon[2,2] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[2,0] * self.yubar[0,0] * self.yUpsilon[2,2] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[2,1] * self.yubar[0,1] * self.yUpsilon[2,2] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[2,2] * self.yubar[0,2] * self.yUpsilon[2,2] * self.yUpsilonbar[mif1,0] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.yd[0,mif2] * self.ydbar[1,0] * self.yUpsilon[0,0] * self.yUpsilonbar[mif1,1] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.yd[0,mif2] * self.ydbar[1,1] * self.yUpsilon[0,0] * self.yUpsilonbar[mif1,1] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.yd[0,mif2] * self.ydbar[1,2] * self.yUpsilon[0,0] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[0,0] * self.yubar[1,0] * self.yUpsilon[0,0] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[0,1] * self.yubar[1,1] * self.yUpsilon[0,0] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[0,2] * self.yubar[1,2] * self.yUpsilon[0,0] * self.yUpsilonbar[mif1,1] + -1/16 * (2)**(-1/2) * self.lambdaHatPrimeUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,1] + 3/32 * self.lambdaHatUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[1,0] * self.ydbar[1,0] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.yd[1,mif2] * self.ydbar[1,0] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[1,1] * self.ydbar[1,1] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.yd[1,mif2] * self.ydbar[1,1] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[1,2] * self.ydbar[1,2] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.yd[1,mif2] * self.ydbar[1,2] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[0,0] * self.yubar[1,0] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[1,0] * self.yubar[1,0] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[0,1] * self.yubar[1,1] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[1,1] * self.yubar[1,1] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[0,2] * self.yubar[1,2] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[1,2] * self.yubar[1,2] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[2,0] * self.ydbar[1,0] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.yd[2,mif2] * self.ydbar[1,0] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[2,1] * self.ydbar[1,1] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.yd[2,mif2] * self.ydbar[1,1] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[2,2] * self.ydbar[1,2] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.yd[2,mif2] * self.ydbar[1,2] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[0,0] * self.yubar[1,0] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[2,0] * self.yubar[1,0] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[0,1] * self.yubar[1,1] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[2,1] * self.yubar[1,1] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[0,2] * self.yubar[1,2] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[2,2] * self.yubar[1,2] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,1] + -1/16 * (2)**(-1/2) * self.lambdaHatPrimeUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,1] + 3/32 * self.lambdaHatUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[1,0] * self.ydbar[1,0] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.yd[1,mif2] * self.ydbar[1,0] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[1,1] * self.ydbar[1,1] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.yd[1,mif2] * self.ydbar[1,1] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[1,2] * self.ydbar[1,2] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.yd[1,mif2] * self.ydbar[1,2] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[0,0] * self.yubar[1,0] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[1,0] * self.yubar[1,0] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[0,1] * self.yubar[1,1] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[1,1] * self.yubar[1,1] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[0,2] * self.yubar[1,2] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[1,2] * self.yubar[1,2] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,1] + -1/8 * (2)**(-1/2) * self.lambdaHatPrimeUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yUpsilon[1,1] * self.yUpsilonbar[mif1,1] + 3/16 * self.lambdaHatUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yUpsilon[1,1] * self.yUpsilonbar[mif1,1] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.yd[1,mif2] * self.ydbar[1,0] * self.yUpsilon[1,1] * self.yUpsilonbar[mif1,1] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.yd[1,mif2] * self.ydbar[1,1] * self.yUpsilon[1,1] * self.yUpsilonbar[mif1,1] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.yd[1,mif2] * self.ydbar[1,2] * self.yUpsilon[1,1] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[1,0] * self.yubar[1,0] * self.yUpsilon[1,1] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[1,1] * self.yubar[1,1] * self.yUpsilon[1,1] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[1,2] * self.yubar[1,2] * self.yUpsilon[1,1] * self.yUpsilonbar[mif1,1] + -1/16 * (2)**(-1/2) * self.lambdaHatPrimeUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,1] + 3/32 * self.lambdaHatUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[2,0] * self.ydbar[1,0] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.yd[2,mif2] * self.ydbar[1,0] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[2,1] * self.ydbar[1,1] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.yd[2,mif2] * self.ydbar[1,1] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[2,2] * self.ydbar[1,2] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.yd[2,mif2] * self.ydbar[1,2] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[1,0] * self.yubar[1,0] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[2,0] * self.yubar[1,0] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[1,1] * self.yubar[1,1] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[2,1] * self.yubar[1,1] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[1,2] * self.yubar[1,2] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[2,2] * self.yubar[1,2] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[2,0] * self.ydbar[1,0] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.yd[2,mif2] * self.ydbar[1,0] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[2,1] * self.ydbar[1,1] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.yd[2,mif2] * self.ydbar[1,1] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[2,2] * self.ydbar[1,2] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.yd[2,mif2] * self.ydbar[1,2] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[0,0] * self.yubar[1,0] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[2,0] * self.yubar[1,0] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[0,1] * self.yubar[1,1] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[2,1] * self.yubar[1,1] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[0,2] * self.yubar[1,2] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[2,2] * self.yubar[1,2] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,1] + -1/16 * (2)**(-1/2) * self.lambdaHatPrimeUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,1] + 3/32 * self.lambdaHatUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[2,0] * self.ydbar[1,0] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.yd[2,mif2] * self.ydbar[1,0] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[2,1] * self.ydbar[1,1] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.yd[2,mif2] * self.ydbar[1,1] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[2,2] * self.ydbar[1,2] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.yd[2,mif2] * self.ydbar[1,2] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[1,0] * self.yubar[1,0] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[2,0] * self.yubar[1,0] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[1,1] * self.yubar[1,1] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[2,1] * self.yubar[1,1] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[1,2] * self.yubar[1,2] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[2,2] * self.yubar[1,2] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,1] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.yd[2,mif2] * self.ydbar[1,0] * self.yUpsilon[2,2] * self.yUpsilonbar[mif1,1] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.yd[2,mif2] * self.ydbar[1,1] * self.yUpsilon[2,2] * self.yUpsilonbar[mif1,1] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.yd[2,mif2] * self.ydbar[1,2] * self.yUpsilon[2,2] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[2,0] * self.yubar[1,0] * self.yUpsilon[2,2] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[2,1] * self.yubar[1,1] * self.yUpsilon[2,2] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[2,2] * self.yubar[1,2] * self.yUpsilon[2,2] * self.yUpsilonbar[mif1,1] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.yd[0,mif2] * self.ydbar[2,0] * self.yUpsilon[0,0] * self.yUpsilonbar[mif1,2] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.yd[0,mif2] * self.ydbar[2,1] * self.yUpsilon[0,0] * self.yUpsilonbar[mif1,2] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.yd[0,mif2] * self.ydbar[2,2] * self.yUpsilon[0,0] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[0,0] * self.yubar[2,0] * self.yUpsilon[0,0] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[0,1] * self.yubar[2,1] * self.yUpsilon[0,0] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[0,2] * self.yubar[2,2] * self.yUpsilon[0,0] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[1,0] * self.ydbar[2,0] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.yd[1,mif2] * self.ydbar[2,0] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[1,1] * self.ydbar[2,1] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.yd[1,mif2] * self.ydbar[2,1] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[1,2] * self.ydbar[2,2] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.yd[1,mif2] * self.ydbar[2,2] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[0,0] * self.yubar[2,0] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[1,0] * self.yubar[2,0] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[0,1] * self.yubar[2,1] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[1,1] * self.yubar[2,1] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[0,2] * self.yubar[2,2] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[1,2] * self.yubar[2,2] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,2] + -1/16 * (2)**(-1/2) * self.lambdaHatPrimeUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,2] + 3/32 * self.lambdaHatUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[2,0] * self.ydbar[2,0] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.yd[2,mif2] * self.ydbar[2,0] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[2,1] * self.ydbar[2,1] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.yd[2,mif2] * self.ydbar[2,1] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[2,2] * self.ydbar[2,2] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.yd[2,mif2] * self.ydbar[2,2] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[0,0] * self.yubar[2,0] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[2,0] * self.yubar[2,0] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[0,1] * self.yubar[2,1] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[2,1] * self.yubar[2,1] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[0,2] * self.yubar[2,2] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[2,2] * self.yubar[2,2] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[1,0] * self.ydbar[2,0] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.yd[1,mif2] * self.ydbar[2,0] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[1,1] * self.ydbar[2,1] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.yd[1,mif2] * self.ydbar[2,1] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[1,2] * self.ydbar[2,2] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.yd[1,mif2] * self.ydbar[2,2] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[0,0] * self.yubar[2,0] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[1,0] * self.yubar[2,0] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[0,1] * self.yubar[2,1] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[1,1] * self.yubar[2,1] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[0,2] * self.yubar[2,2] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[1,2] * self.yubar[2,2] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,2] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.yd[1,mif2] * self.ydbar[2,0] * self.yUpsilon[1,1] * self.yUpsilonbar[mif1,2] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.yd[1,mif2] * self.ydbar[2,1] * self.yUpsilon[1,1] * self.yUpsilonbar[mif1,2] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.yd[1,mif2] * self.ydbar[2,2] * self.yUpsilon[1,1] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[1,0] * self.yubar[2,0] * self.yUpsilon[1,1] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[1,1] * self.yubar[2,1] * self.yUpsilon[1,1] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[1,2] * self.yubar[2,2] * self.yUpsilon[1,1] * self.yUpsilonbar[mif1,2] + -1/16 * (2)**(-1/2) * self.lambdaHatPrimeUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,2] + 3/32 * self.lambdaHatUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[2,0] * self.ydbar[2,0] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.yd[2,mif2] * self.ydbar[2,0] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[2,1] * self.ydbar[2,1] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.yd[2,mif2] * self.ydbar[2,1] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[2,2] * self.ydbar[2,2] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.yd[2,mif2] * self.ydbar[2,2] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[1,0] * self.yubar[2,0] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[2,0] * self.yubar[2,0] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[1,1] * self.yubar[2,1] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[2,1] * self.yubar[2,1] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[1,2] * self.yubar[2,2] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[2,2] * self.yubar[2,2] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,2] + -1/16 * (2)**(-1/2) * self.lambdaHatPrimeUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,2] + 3/32 * self.lambdaHatUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[2,0] * self.ydbar[2,0] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.yd[2,mif2] * self.ydbar[2,0] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[2,1] * self.ydbar[2,1] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.yd[2,mif2] * self.ydbar[2,1] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yd[2,2] * self.ydbar[2,2] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.yd[2,mif2] * self.ydbar[2,2] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[0,0] * self.yubar[2,0] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[2,0] * self.yubar[2,0] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[0,1] * self.yubar[2,1] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[2,1] * self.yubar[2,1] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[0,2] * self.yubar[2,2] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yu[2,2] * self.yubar[2,2] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,2] + -1/16 * (2)**(-1/2) * self.lambdaHatPrimeUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,2] + 3/32 * self.lambdaHatUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[2,0] * self.ydbar[2,0] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.yd[2,mif2] * self.ydbar[2,0] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[2,1] * self.ydbar[2,1] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.yd[2,mif2] * self.ydbar[2,1] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yd[2,2] * self.ydbar[2,2] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.yd[2,mif2] * self.ydbar[2,2] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[1,0] * self.yubar[2,0] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[2,0] * self.yubar[2,0] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[1,1] * self.yubar[2,1] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[2,1] * self.yubar[2,1] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[1,2] * self.yubar[2,2] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yu[2,2] * self.yubar[2,2] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,2] + -1/8 * (2)**(-1/2) * self.lambdaHatPrimeUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yUpsilon[2,2] * self.yUpsilonbar[mif1,2] + 3/16 * self.lambdaHatUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yUpsilon[2,2] * self.yUpsilonbar[mif1,2] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.yd[2,mif2] * self.ydbar[2,0] * self.yUpsilon[2,2] * self.yUpsilonbar[mif1,2] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.yd[2,mif2] * self.ydbar[2,1] * self.yUpsilon[2,2] * self.yUpsilonbar[mif1,2] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.yd[2,mif2] * self.ydbar[2,2] * self.yUpsilon[2,2] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[2,0] * self.yubar[2,0] * self.yUpsilon[2,2] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[2,1] * self.yubar[2,1] * self.yUpsilon[2,2] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yu[2,2] * self.yubar[2,2] * self.yUpsilon[2,2] * self.yUpsilonbar[mif1,2])

    def alphaOdW(self, mif1,mif2):
        return (-1/32 * self.g2 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yUpsilon[0,0] * self.yUpsilonbar[0,mif1] + -1/64 * self.g2 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[0,mif1] + -1/64 * self.g2 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[0,mif1] + -1/64 * self.g2 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[0,mif1] + -1/64 * self.g2 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[0,mif1] + -1/64 * self.g2 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[1,mif1] + -1/64 * self.g2 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[1,mif1] + -1/32 * self.g2 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yUpsilon[1,1] * self.yUpsilonbar[1,mif1] + -1/64 * self.g2 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[1,mif1] + -1/64 * self.g2 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[1,mif1] + -1/64 * self.g2 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[2,mif1] + -1/64 * self.g2 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[2,mif1] + -1/64 * self.g2 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[2,mif1] + -1/64 * self.g2 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[2,mif1] + -1/32 * self.g2 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yUpsilon[2,2] * self.yUpsilonbar[2,mif1] + -1/32 * self.g2 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yUpsilon[0,0] * self.yUpsilonbar[mif1,0] + -1/64 * self.g2 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,0] + -1/64 * self.g2 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,0] + -1/64 * self.g2 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,0] + -1/64 * self.g2 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,0] + -1/64 * self.g2 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,1] + -1/64 * self.g2 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,1] + -1/32 * self.g2 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yUpsilon[1,1] * self.yUpsilonbar[mif1,1] + -1/64 * self.g2 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,1] + -1/64 * self.g2 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,1] + -1/64 * self.g2 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,2] + -1/64 * self.g2 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,2] + -1/64 * self.g2 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,2] + -1/64 * self.g2 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,2] + -1/32 * self.g2 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yUpsilon[2,2] * self.yUpsilonbar[mif1,2])

    def alphaOeB(self, mif1,mif2):
        return 0

    def alphaOed(self, mif1,mif2,mif3,mif4):
        return -1/720 * (self.g1)**(4) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4)

    def alphaOee(self, mif1,mif2,mif3,mif4):
        return -1/480 * (self.g1)**(4) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4)

    def alphaOeH(self, mif1,mif2):
        return (-1/160 * (self.g2)**(4) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2] + 1/16 * (self.lambdaHatPrimeUpsilon)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yl[mif1,mif2])

    def alphaOeu(self, mif1,mif2,mif3,mif4):
        return 1/360 * (self.g1)**(4) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4)

    def alphaOeW(self, mif1,mif2):
        return 0

    def alphaOHd(self, mif1,mif2):
        return (1/1440 * (self.g1)**(4) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,mif1] * self.yUpsilon[0,0] * self.yUpsilonbar[0,0] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[0,mif1] * self.yUpsilon[0,1] * self.yUpsilonbar[0,0] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[0,mif1] * self.yUpsilon[0,2] * self.yUpsilonbar[0,0] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[0,mif1] * self.yUpsilon[1,0] * self.yUpsilonbar[0,0] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[0,mif1] * self.yUpsilon[2,0] * self.yUpsilonbar[0,0] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[1,mif1] * self.yUpsilon[0,0] * self.yUpsilonbar[0,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,mif1] * self.yUpsilon[0,1] * self.yUpsilonbar[0,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,mif1] * self.yUpsilon[0,1] * self.yUpsilonbar[0,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[1,mif1] * self.yUpsilon[0,2] * self.yUpsilonbar[0,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,mif1] * self.yUpsilon[1,0] * self.yUpsilonbar[0,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,mif1] * self.yUpsilon[1,0] * self.yUpsilonbar[0,1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[0,mif1] * self.yUpsilon[1,1] * self.yUpsilonbar[0,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[0,mif1] * self.yUpsilon[1,2] * self.yUpsilonbar[0,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[1,mif1] * self.yUpsilon[2,0] * self.yUpsilonbar[0,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[0,mif1] * self.yUpsilon[2,1] * self.yUpsilonbar[0,1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[2,mif1] * self.yUpsilon[0,0] * self.yUpsilonbar[0,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[2,mif1] * self.yUpsilon[0,1] * self.yUpsilonbar[0,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,mif1] * self.yUpsilon[0,2] * self.yUpsilonbar[0,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,mif1] * self.yUpsilon[0,2] * self.yUpsilonbar[0,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[2,mif1] * self.yUpsilon[1,0] * self.yUpsilonbar[0,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[0,mif1] * self.yUpsilon[1,2] * self.yUpsilonbar[0,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,mif1] * self.yUpsilon[2,0] * self.yUpsilonbar[0,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,mif1] * self.yUpsilon[2,0] * self.yUpsilonbar[0,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[0,mif1] * self.yUpsilon[2,1] * self.yUpsilonbar[0,2] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[0,mif1] * self.yUpsilon[2,2] * self.yUpsilonbar[0,2] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[1,mif1] * self.yUpsilon[0,0] * self.yUpsilonbar[1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,mif1] * self.yUpsilon[0,1] * self.yUpsilonbar[1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,mif1] * self.yUpsilon[0,1] * self.yUpsilonbar[1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[1,mif1] * self.yUpsilon[0,2] * self.yUpsilonbar[1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,mif1] * self.yUpsilon[1,0] * self.yUpsilonbar[1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,mif1] * self.yUpsilon[1,0] * self.yUpsilonbar[1,0] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[0,mif1] * self.yUpsilon[1,1] * self.yUpsilonbar[1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[0,mif1] * self.yUpsilon[1,2] * self.yUpsilonbar[1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[1,mif1] * self.yUpsilon[2,0] * self.yUpsilonbar[1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[0,mif1] * self.yUpsilon[2,1] * self.yUpsilonbar[1,0] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[1,mif1] * self.yUpsilon[0,1] * self.yUpsilonbar[1,1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[1,mif1] * self.yUpsilon[1,0] * self.yUpsilonbar[1,1] + 1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,mif1] * self.yUpsilon[1,1] * self.yUpsilonbar[1,1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[1,mif1] * self.yUpsilon[1,2] * self.yUpsilonbar[1,1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[1,mif1] * self.yUpsilon[2,1] * self.yUpsilonbar[1,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[2,mif1] * self.yUpsilon[0,1] * self.yUpsilonbar[1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[1,mif1] * self.yUpsilon[0,2] * self.yUpsilonbar[1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[2,mif1] * self.yUpsilon[1,0] * self.yUpsilonbar[1,2] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[2,mif1] * self.yUpsilon[1,1] * self.yUpsilonbar[1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,mif1] * self.yUpsilon[1,2] * self.yUpsilonbar[1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,mif1] * self.yUpsilon[1,2] * self.yUpsilonbar[1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[1,mif1] * self.yUpsilon[2,0] * self.yUpsilonbar[1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,mif1] * self.yUpsilon[2,1] * self.yUpsilonbar[1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,mif1] * self.yUpsilon[2,1] * self.yUpsilonbar[1,2] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[1,mif1] * self.yUpsilon[2,2] * self.yUpsilonbar[1,2] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[2,mif1] * self.yUpsilon[0,0] * self.yUpsilonbar[2,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[2,mif1] * self.yUpsilon[0,1] * self.yUpsilonbar[2,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,mif1] * self.yUpsilon[0,2] * self.yUpsilonbar[2,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,mif1] * self.yUpsilon[0,2] * self.yUpsilonbar[2,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[2,mif1] * self.yUpsilon[1,0] * self.yUpsilonbar[2,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[0,mif1] * self.yUpsilon[1,2] * self.yUpsilonbar[2,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[0,mif1] * self.yUpsilon[2,0] * self.yUpsilonbar[2,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,mif1] * self.yUpsilon[2,0] * self.yUpsilonbar[2,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[0,mif1] * self.yUpsilon[2,1] * self.yUpsilonbar[2,0] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[0,mif1] * self.yUpsilon[2,2] * self.yUpsilonbar[2,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[2,mif1] * self.yUpsilon[0,1] * self.yUpsilonbar[2,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[1,mif1] * self.yUpsilon[0,2] * self.yUpsilonbar[2,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[2,mif1] * self.yUpsilon[1,0] * self.yUpsilonbar[2,1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[2,mif1] * self.yUpsilon[1,1] * self.yUpsilonbar[2,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,mif1] * self.yUpsilon[1,2] * self.yUpsilonbar[2,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,mif1] * self.yUpsilon[1,2] * self.yUpsilonbar[2,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[1,mif1] * self.yUpsilon[2,0] * self.yUpsilonbar[2,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[1,mif1] * self.yUpsilon[2,1] * self.yUpsilonbar[2,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,mif1] * self.yUpsilon[2,1] * self.yUpsilonbar[2,1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[1,mif1] * self.yUpsilon[2,2] * self.yUpsilonbar[2,1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[2,mif1] * self.yUpsilon[0,2] * self.yUpsilonbar[2,2] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[2,mif1] * self.yUpsilon[1,2] * self.yUpsilonbar[2,2] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.ydbar[2,mif1] * self.yUpsilon[2,0] * self.yUpsilonbar[2,2] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.ydbar[2,mif1] * self.yUpsilon[2,1] * self.yUpsilonbar[2,2] + 1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.ydbar[2,mif1] * self.yUpsilon[2,2] * self.yUpsilonbar[2,2])

    def alphaOHe(self, mif1,mif2):
        return 1/480 * (self.g1)**(4) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2)

    def alphaOHl1(self, mif1,mif2):
        return 1/960 * (self.g1)**(4) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2)

    def alphaOHl3(self, mif1,mif2):
        return -1/160 * (self.g2)**(4) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2)

    def alphaOHq1(self, mif1,mif2):
        return (-1/2880 * (self.g1)**(4) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 17/1152 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + 1/96 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + -1/96 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[0,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[0,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[0,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yubar[0,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yubar[0,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,0] * self.yubar[0,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yubar[0,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yubar[0,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,1] * self.yubar[0,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yubar[0,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yubar[0,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,2] * self.yubar[0,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[0,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif1] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[0,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif1] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[0,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif1] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[0,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif1] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[0,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif1] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[0,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif1] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[0,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif1] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[0,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif1] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[0,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif1] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yubar[0,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif1] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yubar[0,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif1] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,0] * self.yubar[0,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif1] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yubar[0,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif1] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yubar[0,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif1] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,1] * self.yubar[0,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif1] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yubar[0,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif1] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yubar[0,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif1] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,2] * self.yubar[0,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif1] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[0,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif1] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[0,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif1] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[0,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif1] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[0,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif1] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[0,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif1] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[0,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif1] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[0,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif1] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[0,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif1] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[0,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif1] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yubar[0,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif1] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yubar[0,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif1] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,0] * self.yubar[0,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif1] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yubar[0,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif1] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yubar[0,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif1] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,1] * self.yubar[0,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif1] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yubar[0,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif1] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yubar[0,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif1] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,2] * self.yubar[0,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif1] + 17/1152 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + 1/96 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + -1/96 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[0,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[0,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[0,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yubar[0,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yubar[0,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,0] * self.yubar[0,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yubar[0,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yubar[0,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,1] * self.yubar[0,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yubar[0,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yubar[0,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,2] * self.yubar[0,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[0,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif1] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[0,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif1] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[0,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif1] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[0,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif1] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[0,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif1] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[0,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif1] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[0,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif1] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[0,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif1] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[0,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif1] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yubar[0,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif1] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yubar[0,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif1] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,0] * self.yubar[0,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif1] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yubar[0,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif1] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yubar[0,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif1] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,1] * self.yubar[0,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif1] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yubar[0,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif1] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yubar[0,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif1] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,2] * self.yubar[0,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif1] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[0,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif1] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[0,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif1] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[0,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif1] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[0,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif1] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[0,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif1] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[0,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif1] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[0,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif1] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[0,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif1] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[0,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif1] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yubar[0,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif1] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yubar[0,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif1] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,0] * self.yubar[0,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif1] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yubar[0,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif1] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yubar[0,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif1] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,1] * self.yubar[0,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif1] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yubar[0,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif1] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yubar[0,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif1] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,2] * self.yubar[0,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif1] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[1,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[1,mif1] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[1,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[1,mif1] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[1,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[1,mif1] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[1,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[1,mif1] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[1,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[1,mif1] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[1,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[1,mif1] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[1,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[1,mif1] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[1,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[1,mif1] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[1,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[1,mif1] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yubar[1,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[1,mif1] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yubar[1,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[1,mif1] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,0] * self.yubar[1,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[1,mif1] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yubar[1,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[1,mif1] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yubar[1,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[1,mif1] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,1] * self.yubar[1,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[1,mif1] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yubar[1,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[1,mif1] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yubar[1,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[1,mif1] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,2] * self.yubar[1,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[1,mif1] + 17/1152 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + 1/96 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + -1/96 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[1,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[1,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[1,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yubar[1,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yubar[1,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,0] * self.yubar[1,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yubar[1,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yubar[1,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,1] * self.yubar[1,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yubar[1,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yubar[1,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,2] * self.yubar[1,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[1,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif1] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[1,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif1] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[1,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif1] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[1,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif1] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[1,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif1] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[1,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif1] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[1,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif1] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[1,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif1] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[1,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif1] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yubar[1,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif1] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yubar[1,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif1] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,0] * self.yubar[1,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif1] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yubar[1,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif1] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yubar[1,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif1] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,1] * self.yubar[1,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif1] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yubar[1,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif1] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yubar[1,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif1] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,2] * self.yubar[1,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif1] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[1,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif1] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[1,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif1] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[1,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif1] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[1,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif1] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[1,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif1] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[1,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif1] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[1,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif1] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[1,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif1] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[1,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif1] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yubar[1,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif1] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yubar[1,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif1] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,0] * self.yubar[1,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif1] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yubar[1,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif1] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yubar[1,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif1] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,1] * self.yubar[1,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif1] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yubar[1,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif1] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yubar[1,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif1] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,2] * self.yubar[1,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif1] + 17/1152 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + 1/96 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + -1/96 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[1,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[1,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[1,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yubar[1,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yubar[1,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,0] * self.yubar[1,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yubar[1,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yubar[1,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,1] * self.yubar[1,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yubar[1,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yubar[1,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,2] * self.yubar[1,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[1,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif1] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[1,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif1] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[1,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif1] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[1,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif1] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[1,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif1] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[1,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif1] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[1,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif1] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[1,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif1] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[1,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif1] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yubar[1,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif1] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yubar[1,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif1] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,0] * self.yubar[1,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif1] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yubar[1,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif1] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yubar[1,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif1] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,1] * self.yubar[1,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif1] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yubar[1,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif1] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yubar[1,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif1] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,2] * self.yubar[1,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif1] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[2,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[2,mif1] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[2,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[2,mif1] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[2,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[2,mif1] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[2,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[2,mif1] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[2,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[2,mif1] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[2,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[2,mif1] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[2,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[2,mif1] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[2,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[2,mif1] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[2,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[2,mif1] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yubar[2,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[2,mif1] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yubar[2,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[2,mif1] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,0] * self.yubar[2,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[2,mif1] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yubar[2,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[2,mif1] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yubar[2,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[2,mif1] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,1] * self.yubar[2,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[2,mif1] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yubar[2,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[2,mif1] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yubar[2,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[2,mif1] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,2] * self.yubar[2,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[2,mif1] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[2,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[2,mif1] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[2,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[2,mif1] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[2,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[2,mif1] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[2,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[2,mif1] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[2,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[2,mif1] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[2,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[2,mif1] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[2,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[2,mif1] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[2,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[2,mif1] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[2,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[2,mif1] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yubar[2,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[2,mif1] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yubar[2,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[2,mif1] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,0] * self.yubar[2,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[2,mif1] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yubar[2,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[2,mif1] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yubar[2,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[2,mif1] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,1] * self.yubar[2,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[2,mif1] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yubar[2,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[2,mif1] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yubar[2,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[2,mif1] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,2] * self.yubar[2,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[2,mif1] + 17/1152 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + 1/96 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + -1/96 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[2,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[2,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[2,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yubar[2,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yubar[2,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,0] * self.yubar[2,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yubar[2,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yubar[2,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,1] * self.yubar[2,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yubar[2,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yubar[2,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,2] * self.yubar[2,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[2,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif1] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[2,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif1] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[2,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif1] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[2,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif1] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[2,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif1] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[2,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif1] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[2,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif1] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[2,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif1] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[2,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif1] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yubar[2,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif1] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yubar[2,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif1] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,0] * self.yubar[2,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif1] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yubar[2,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif1] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yubar[2,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif1] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,1] * self.yubar[2,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif1] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yubar[2,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif1] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yubar[2,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif1] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,2] * self.yubar[2,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif1] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[2,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif1] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[2,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif1] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[2,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif1] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[2,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif1] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[2,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif1] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[2,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif1] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[2,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif1] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[2,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif1] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[2,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif1] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yubar[2,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif1] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yubar[2,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif1] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,0] * self.yubar[2,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif1] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yubar[2,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif1] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yubar[2,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif1] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,1] * self.yubar[2,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif1] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yubar[2,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif1] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yubar[2,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif1] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,2] * self.yubar[2,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif1] + 17/1152 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + 1/96 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + -1/96 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[2,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[2,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[2,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yubar[2,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yubar[2,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,0] * self.yubar[2,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yubar[2,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yubar[2,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,1] * self.yubar[2,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yubar[2,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yubar[2,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,2] * self.yubar[2,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + 17/1152 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + 1/96 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + -1/96 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[0,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[0,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[0,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yubar[0,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yubar[0,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,0] * self.yubar[0,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yubar[0,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yubar[0,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,1] * self.yubar[0,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yubar[0,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yubar[0,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,2] * self.yubar[0,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[0,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,0] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[0,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,0] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[0,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,0] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[0,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,0] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[0,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,0] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[0,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,0] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[0,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,0] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[0,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,0] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[0,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,0] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yubar[0,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,0] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yubar[0,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,0] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,0] * self.yubar[0,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,0] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yubar[0,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,0] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yubar[0,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,0] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,1] * self.yubar[0,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,0] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yubar[0,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,0] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yubar[0,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,0] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,2] * self.yubar[0,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,0] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[0,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,0] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[0,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,0] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[0,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,0] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[0,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,0] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[0,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,0] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[0,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,0] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[0,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,0] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[0,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,0] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[0,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,0] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yubar[0,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,0] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yubar[0,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,0] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,0] * self.yubar[0,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,0] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yubar[0,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,0] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yubar[0,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,0] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,1] * self.yubar[0,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,0] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yubar[0,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,0] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yubar[0,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,0] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,2] * self.yubar[0,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,0] + 17/1152 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + 1/96 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + -1/96 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[0,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[0,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[0,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yubar[0,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yubar[0,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,0] * self.yubar[0,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yubar[0,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yubar[0,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,1] * self.yubar[0,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yubar[0,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yubar[0,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,2] * self.yubar[0,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[0,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,0] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[0,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,0] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[0,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,0] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[0,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,0] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[0,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,0] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[0,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,0] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[0,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,0] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[0,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,0] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[0,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,0] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yubar[0,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,0] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yubar[0,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,0] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,0] * self.yubar[0,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,0] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yubar[0,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,0] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yubar[0,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,0] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,1] * self.yubar[0,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,0] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yubar[0,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,0] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yubar[0,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,0] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,2] * self.yubar[0,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,0] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[0,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,0] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[0,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,0] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[0,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,0] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[0,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,0] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[0,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,0] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[0,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,0] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[0,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,0] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[0,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,0] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[0,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,0] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yubar[0,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,0] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yubar[0,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,0] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,0] * self.yubar[0,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,0] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yubar[0,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,0] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yubar[0,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,0] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,1] * self.yubar[0,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,0] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yubar[0,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,0] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yubar[0,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,0] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,2] * self.yubar[0,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,0] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[1,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,1] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[1,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,1] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[1,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,1] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[1,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,1] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[1,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,1] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[1,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,1] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[1,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,1] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[1,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,1] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[1,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,1] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yubar[1,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,1] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yubar[1,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,1] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,0] * self.yubar[1,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,1] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yubar[1,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,1] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yubar[1,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,1] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,1] * self.yubar[1,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,1] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yubar[1,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,1] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yubar[1,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,1] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,2] * self.yubar[1,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,1] + 17/1152 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + 1/96 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + -1/96 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[1,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[1,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[1,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yubar[1,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yubar[1,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,0] * self.yubar[1,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yubar[1,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yubar[1,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,1] * self.yubar[1,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yubar[1,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yubar[1,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,2] * self.yubar[1,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[1,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,1] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[1,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,1] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[1,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,1] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[1,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,1] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[1,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,1] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[1,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,1] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[1,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,1] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[1,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,1] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[1,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,1] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yubar[1,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,1] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yubar[1,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,1] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,0] * self.yubar[1,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,1] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yubar[1,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,1] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yubar[1,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,1] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,1] * self.yubar[1,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,1] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yubar[1,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,1] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yubar[1,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,1] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,2] * self.yubar[1,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,1] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[1,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,1] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[1,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,1] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[1,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,1] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[1,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,1] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[1,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,1] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[1,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,1] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[1,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,1] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[1,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,1] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[1,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,1] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yubar[1,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,1] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yubar[1,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,1] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,0] * self.yubar[1,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,1] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yubar[1,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,1] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yubar[1,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,1] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,1] * self.yubar[1,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,1] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yubar[1,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,1] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yubar[1,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,1] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,2] * self.yubar[1,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,1] + 17/1152 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + 1/96 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + -1/96 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[1,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[1,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[1,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yubar[1,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yubar[1,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,0] * self.yubar[1,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yubar[1,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yubar[1,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,1] * self.yubar[1,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yubar[1,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yubar[1,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,2] * self.yubar[1,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[1,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,1] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[1,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,1] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[1,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,1] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[1,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,1] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[1,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,1] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[1,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,1] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[1,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,1] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[1,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,1] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[1,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,1] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yubar[1,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,1] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yubar[1,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,1] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,0] * self.yubar[1,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,1] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yubar[1,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,1] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yubar[1,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,1] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,1] * self.yubar[1,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,1] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yubar[1,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,1] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yubar[1,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,1] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,2] * self.yubar[1,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,1] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[2,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,2] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[2,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,2] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[2,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,2] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[2,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,2] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[2,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,2] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[2,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,2] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[2,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,2] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[2,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,2] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[2,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,2] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yubar[2,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,2] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yubar[2,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,2] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,0] * self.yubar[2,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,2] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yubar[2,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,2] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yubar[2,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,2] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,1] * self.yubar[2,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,2] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yubar[2,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,2] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yubar[2,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,2] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,2] * self.yubar[2,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,2] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[2,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,2] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[2,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,2] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[2,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,2] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[2,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,2] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[2,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,2] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[2,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,2] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[2,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,2] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[2,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,2] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[2,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,2] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yubar[2,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,2] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yubar[2,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,2] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,0] * self.yubar[2,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,2] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yubar[2,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,2] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yubar[2,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,2] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,1] * self.yubar[2,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,2] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yubar[2,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,2] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yubar[2,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,2] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,2] * self.yubar[2,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,2] + 17/1152 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + 1/96 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + -1/96 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[2,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[2,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[2,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yubar[2,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yubar[2,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,0] * self.yubar[2,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yubar[2,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yubar[2,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,1] * self.yubar[2,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yubar[2,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yubar[2,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,2] * self.yubar[2,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[2,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,2] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[2,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,2] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[2,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,2] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[2,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,2] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[2,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,2] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[2,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,2] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[2,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,2] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[2,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,2] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[2,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,2] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yubar[2,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,2] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yubar[2,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,2] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,0] * self.yubar[2,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,2] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yubar[2,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,2] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yubar[2,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,2] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,1] * self.yubar[2,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,2] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yubar[2,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,2] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yubar[2,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,2] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,2] * self.yubar[2,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,2] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[2,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,2] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[2,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,2] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[2,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,2] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[2,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,2] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[2,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,2] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[2,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,2] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[2,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,2] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[2,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,2] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[2,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,2] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yubar[2,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,2] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yubar[2,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,2] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,0] * self.yubar[2,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,2] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yubar[2,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,2] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yubar[2,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,2] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,1] * self.yubar[2,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,2] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yubar[2,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,2] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yubar[2,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,2] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,2] * self.yubar[2,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,2] + 17/1152 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] + 1/96 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] + -1/96 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[2,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[2,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] + -9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] + -3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] + 3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[2,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yubar[2,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yubar[2,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,0] * self.yubar[2,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yubar[2,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yubar[2,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,1] * self.yubar[2,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] + 9/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yubar[2,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] + 3/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yubar[2,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] + -3/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,2] * self.yubar[2,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2])

    def alphaOHq3(self, mif1,mif2):
        return (-1/160 * (self.g2)**(4) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + 7/384 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + 1/96 * (self.g2)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + -1/96 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[0,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[0,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[0,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yubar[0,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yubar[0,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,0] * self.yubar[0,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yubar[0,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yubar[0,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,1] * self.yubar[0,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yubar[0,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yubar[0,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,2] * self.yubar[0,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[0,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[0,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[0,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[0,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[0,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[0,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[0,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[0,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[0,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yubar[0,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yubar[0,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,0] * self.yubar[0,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yubar[0,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yubar[0,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,1] * self.yubar[0,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yubar[0,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yubar[0,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,2] * self.yubar[0,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[0,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[0,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[0,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[0,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[0,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[0,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[0,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[0,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[0,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yubar[0,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yubar[0,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,0] * self.yubar[0,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yubar[0,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yubar[0,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,1] * self.yubar[0,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yubar[0,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yubar[0,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,2] * self.yubar[0,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif1] + 7/384 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + 1/96 * (self.g2)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + -1/96 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[0,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[0,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[0,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yubar[0,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yubar[0,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,0] * self.yubar[0,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yubar[0,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yubar[0,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,1] * self.yubar[0,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yubar[0,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yubar[0,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,2] * self.yubar[0,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[0,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[0,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[0,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[0,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[0,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[0,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[0,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[0,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[0,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yubar[0,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yubar[0,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,0] * self.yubar[0,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yubar[0,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yubar[0,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,1] * self.yubar[0,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yubar[0,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yubar[0,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,2] * self.yubar[0,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[0,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[0,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[0,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[0,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[0,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[0,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[0,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[0,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[0,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yubar[0,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yubar[0,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,0] * self.yubar[0,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yubar[0,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yubar[0,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,1] * self.yubar[0,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yubar[0,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yubar[0,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,2] * self.yubar[0,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[1,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[1,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[1,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[1,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[1,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[1,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[1,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[1,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[1,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[1,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[1,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[1,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[1,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[1,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[1,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[1,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[1,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[1,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yubar[1,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[1,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yubar[1,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[1,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,0] * self.yubar[1,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[1,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yubar[1,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[1,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yubar[1,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[1,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,1] * self.yubar[1,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[1,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yubar[1,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[1,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yubar[1,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[1,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,2] * self.yubar[1,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[1,mif1] + 7/384 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + 1/96 * (self.g2)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + -1/96 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[1,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[1,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[1,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yubar[1,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yubar[1,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,0] * self.yubar[1,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yubar[1,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yubar[1,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,1] * self.yubar[1,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yubar[1,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yubar[1,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,2] * self.yubar[1,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[1,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[1,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[1,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[1,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[1,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[1,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[1,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[1,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[1,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yubar[1,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yubar[1,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,0] * self.yubar[1,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yubar[1,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yubar[1,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,1] * self.yubar[1,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yubar[1,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yubar[1,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,2] * self.yubar[1,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[1,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[1,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[1,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[1,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[1,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[1,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[1,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[1,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[1,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yubar[1,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yubar[1,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,0] * self.yubar[1,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yubar[1,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yubar[1,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,1] * self.yubar[1,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yubar[1,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yubar[1,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,2] * self.yubar[1,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif1] + 7/384 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + 1/96 * (self.g2)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + -1/96 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[1,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[1,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[1,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yubar[1,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yubar[1,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,0] * self.yubar[1,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yubar[1,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yubar[1,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,1] * self.yubar[1,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yubar[1,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yubar[1,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,2] * self.yubar[1,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[1,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[1,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[1,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[1,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[1,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[1,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[1,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[1,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[1,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yubar[1,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yubar[1,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,0] * self.yubar[1,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yubar[1,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yubar[1,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,1] * self.yubar[1,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yubar[1,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yubar[1,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,2] * self.yubar[1,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[2,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[2,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[2,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[2,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[2,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[2,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[2,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[2,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[2,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[2,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[2,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[2,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[2,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[2,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[2,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[2,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[2,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[2,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yubar[2,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[2,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yubar[2,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[2,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,0] * self.yubar[2,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[2,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yubar[2,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[2,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yubar[2,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[2,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,1] * self.yubar[2,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[2,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yubar[2,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[2,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yubar[2,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[2,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,2] * self.yubar[2,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[2,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[2,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[2,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[2,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[2,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[2,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[2,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[2,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[2,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[2,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[2,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[2,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[2,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[2,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[2,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[2,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[2,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[2,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[2,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yubar[2,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[2,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yubar[2,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[2,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,0] * self.yubar[2,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[2,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yubar[2,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[2,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yubar[2,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[2,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,1] * self.yubar[2,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[2,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yubar[2,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[2,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yubar[2,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[2,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,2] * self.yubar[2,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[2,mif1] + 7/384 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + 1/96 * (self.g2)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + -1/96 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[2,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[2,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[2,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yubar[2,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yubar[2,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,0] * self.yubar[2,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yubar[2,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yubar[2,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,1] * self.yubar[2,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yubar[2,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yubar[2,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,2] * self.yubar[2,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[2,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[2,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[2,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[2,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[2,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[2,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[2,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[2,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[2,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yubar[2,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yubar[2,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,0] * self.yubar[2,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yubar[2,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yubar[2,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,1] * self.yubar[2,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yubar[2,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yubar[2,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,2] * self.yubar[2,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[2,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[2,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[2,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[2,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[2,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[2,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[2,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[2,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[2,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yubar[2,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yubar[2,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,0] * self.yubar[2,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yubar[2,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yubar[2,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,1] * self.yubar[2,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yubar[2,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yubar[2,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,2] * self.yubar[2,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif1] + 7/384 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + 1/96 * (self.g2)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + -1/96 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[2,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[2,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[2,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yubar[2,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yubar[2,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,0] * self.yubar[2,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yubar[2,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yubar[2,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,1] * self.yubar[2,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yubar[2,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yubar[2,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,2] * self.yubar[2,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + 7/384 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + 1/96 * (self.g2)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + -1/96 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[0,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[0,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[0,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yubar[0,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yubar[0,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,0] * self.yubar[0,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yubar[0,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yubar[0,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,1] * self.yubar[0,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yubar[0,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yubar[0,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,2] * self.yubar[0,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[0,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,0] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[0,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[0,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,0] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[0,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,0] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[0,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[0,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,0] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[0,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,0] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[0,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[0,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,0] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yubar[0,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,0] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yubar[0,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,0] * self.yubar[0,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,0] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yubar[0,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,0] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yubar[0,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,1] * self.yubar[0,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,0] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yubar[0,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,0] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yubar[0,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,2] * self.yubar[0,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,0] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[0,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,0] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[0,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[0,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,0] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[0,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,0] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[0,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[0,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,0] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[0,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,0] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[0,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[0,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,0] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yubar[0,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,0] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yubar[0,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,0] * self.yubar[0,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,0] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yubar[0,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,0] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yubar[0,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,1] * self.yubar[0,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,0] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yubar[0,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,0] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yubar[0,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,2] * self.yubar[0,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,0] + 7/384 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + 1/96 * (self.g2)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + -1/96 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[0,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[0,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[0,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yubar[0,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yubar[0,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,0] * self.yubar[0,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yubar[0,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yubar[0,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,1] * self.yubar[0,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yubar[0,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yubar[0,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,2] * self.yubar[0,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[0,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,0] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[0,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[0,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,0] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[0,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,0] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[0,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[0,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,0] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[0,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,0] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[0,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[0,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,0] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yubar[0,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,0] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yubar[0,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,0] * self.yubar[0,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,0] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yubar[0,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,0] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yubar[0,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,1] * self.yubar[0,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,0] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yubar[0,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,0] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yubar[0,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,2] * self.yubar[0,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,0] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[0,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,0] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[0,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[0,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,0] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[0,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,0] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[0,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[0,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,0] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[0,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,0] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[0,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[0,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,0] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yubar[0,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,0] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yubar[0,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,0] * self.yubar[0,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,0] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yubar[0,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,0] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yubar[0,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,1] * self.yubar[0,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,0] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yubar[0,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,0] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yubar[0,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,2] * self.yubar[0,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,0] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[1,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[1,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[1,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[1,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[1,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[1,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[1,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[1,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[1,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yubar[1,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yubar[1,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,0] * self.yubar[1,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yubar[1,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yubar[1,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,1] * self.yubar[1,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yubar[1,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yubar[1,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,2] * self.yubar[1,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,1] + 7/384 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + 1/96 * (self.g2)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + -1/96 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[1,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[1,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[1,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yubar[1,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yubar[1,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,0] * self.yubar[1,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yubar[1,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yubar[1,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,1] * self.yubar[1,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yubar[1,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yubar[1,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,2] * self.yubar[1,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[1,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[1,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[1,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[1,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[1,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[1,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[1,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[1,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[1,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yubar[1,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yubar[1,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,0] * self.yubar[1,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yubar[1,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yubar[1,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,1] * self.yubar[1,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yubar[1,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yubar[1,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,2] * self.yubar[1,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[1,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[1,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[1,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[1,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[1,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[1,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[1,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[1,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[1,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yubar[1,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yubar[1,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,0] * self.yubar[1,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yubar[1,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yubar[1,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,1] * self.yubar[1,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yubar[1,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yubar[1,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,2] * self.yubar[1,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,1] + 7/384 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + 1/96 * (self.g2)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + -1/96 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[1,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[1,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[1,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yubar[1,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yubar[1,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,0] * self.yubar[1,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yubar[1,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yubar[1,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,1] * self.yubar[1,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yubar[1,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yubar[1,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,2] * self.yubar[1,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[1,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[1,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[1,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[1,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[1,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[1,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[1,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[1,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[1,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yubar[1,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yubar[1,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,0] * self.yubar[1,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yubar[1,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yubar[1,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,1] * self.yubar[1,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yubar[1,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yubar[1,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,2] * self.yubar[1,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,1] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[2,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,2] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[2,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[2,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,2] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[2,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,2] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[2,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[2,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,2] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[2,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,2] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[2,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[2,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,2] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yubar[2,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,2] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yubar[2,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,0] * self.yubar[2,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,2] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yubar[2,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,2] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yubar[2,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,1] * self.yubar[2,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,2] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yubar[2,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,2] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yubar[2,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,2] * self.yubar[2,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,2] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[2,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,2] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[2,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[2,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,2] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[2,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,2] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[2,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[2,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,2] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[2,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,2] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[2,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[2,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,2] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yubar[2,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,2] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yubar[2,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,0] * self.yubar[2,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,2] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yubar[2,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,2] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yubar[2,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,1] * self.yubar[2,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,2] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yubar[2,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,2] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yubar[2,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,2] * self.yubar[2,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,2] + 7/384 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + 1/96 * (self.g2)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + -1/96 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[2,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[2,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[2,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yubar[2,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yubar[2,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,0] * self.yubar[2,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yubar[2,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yubar[2,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,1] * self.yubar[2,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yubar[2,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yubar[2,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,2] * self.yubar[2,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[2,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,2] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[2,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,0] * self.ydbar[2,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,2] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[2,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,2] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[2,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,1] * self.ydbar[2,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,2] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[2,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,2] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[2,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,2] * self.ydbar[2,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,2] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yubar[2,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,2] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yubar[2,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,0] * self.yubar[2,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,2] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yubar[2,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,2] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yubar[2,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,1] * self.yubar[2,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,2] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yubar[2,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,2] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yubar[2,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,2] * self.yubar[2,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,2] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[2,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,2] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[2,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,0] * self.ydbar[2,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,2] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[2,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,2] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[2,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,1] * self.ydbar[2,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,2] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[2,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,2] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[2,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,2] * self.ydbar[2,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,2] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yubar[2,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,2] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yubar[2,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,0] * self.yubar[2,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,2] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yubar[2,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,2] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yubar[2,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,1] * self.yubar[2,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,2] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yubar[2,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,2] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yubar[2,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,2] * self.yubar[2,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,2] + 7/384 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] + 1/96 * (self.g2)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] + -1/96 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,0] * self.ydbar[2,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,1] * self.ydbar[2,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,2] * self.ydbar[2,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yubar[2,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yubar[2,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,0] * self.yubar[2,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yubar[2,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yubar[2,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,1] * self.yubar[2,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] + -3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yubar[2,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yubar[2,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,2] * self.yubar[2,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2])

    def alphaOHu(self, mif1,mif2):
        return (-1/720 * (self.g1)**(4) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yubar[0,mif1] * self.yUpsilon[0,0] * self.yUpsilonbar[0,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yubar[0,mif1] * self.yUpsilon[0,1] * self.yUpsilonbar[0,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yubar[0,mif1] * self.yUpsilon[0,2] * self.yUpsilonbar[0,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yubar[0,mif1] * self.yUpsilon[1,0] * self.yUpsilonbar[0,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yubar[0,mif1] * self.yUpsilon[2,0] * self.yUpsilonbar[0,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yubar[1,mif1] * self.yUpsilon[0,0] * self.yUpsilonbar[0,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yubar[0,mif1] * self.yUpsilon[0,1] * self.yUpsilonbar[0,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yubar[1,mif1] * self.yUpsilon[0,1] * self.yUpsilonbar[0,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yubar[1,mif1] * self.yUpsilon[0,2] * self.yUpsilonbar[0,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yubar[0,mif1] * self.yUpsilon[1,0] * self.yUpsilonbar[0,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yubar[1,mif1] * self.yUpsilon[1,0] * self.yUpsilonbar[0,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yubar[0,mif1] * self.yUpsilon[1,1] * self.yUpsilonbar[0,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yubar[0,mif1] * self.yUpsilon[1,2] * self.yUpsilonbar[0,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yubar[1,mif1] * self.yUpsilon[2,0] * self.yUpsilonbar[0,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yubar[0,mif1] * self.yUpsilon[2,1] * self.yUpsilonbar[0,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yubar[2,mif1] * self.yUpsilon[0,0] * self.yUpsilonbar[0,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yubar[2,mif1] * self.yUpsilon[0,1] * self.yUpsilonbar[0,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yubar[0,mif1] * self.yUpsilon[0,2] * self.yUpsilonbar[0,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yubar[2,mif1] * self.yUpsilon[0,2] * self.yUpsilonbar[0,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yubar[2,mif1] * self.yUpsilon[1,0] * self.yUpsilonbar[0,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yubar[0,mif1] * self.yUpsilon[1,2] * self.yUpsilonbar[0,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yubar[0,mif1] * self.yUpsilon[2,0] * self.yUpsilonbar[0,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yubar[2,mif1] * self.yUpsilon[2,0] * self.yUpsilonbar[0,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yubar[0,mif1] * self.yUpsilon[2,1] * self.yUpsilonbar[0,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yubar[0,mif1] * self.yUpsilon[2,2] * self.yUpsilonbar[0,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yubar[1,mif1] * self.yUpsilon[0,0] * self.yUpsilonbar[1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yubar[0,mif1] * self.yUpsilon[0,1] * self.yUpsilonbar[1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yubar[1,mif1] * self.yUpsilon[0,1] * self.yUpsilonbar[1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yubar[1,mif1] * self.yUpsilon[0,2] * self.yUpsilonbar[1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yubar[0,mif1] * self.yUpsilon[1,0] * self.yUpsilonbar[1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yubar[1,mif1] * self.yUpsilon[1,0] * self.yUpsilonbar[1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yubar[0,mif1] * self.yUpsilon[1,1] * self.yUpsilonbar[1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yubar[0,mif1] * self.yUpsilon[1,2] * self.yUpsilonbar[1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yubar[1,mif1] * self.yUpsilon[2,0] * self.yUpsilonbar[1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yubar[0,mif1] * self.yUpsilon[2,1] * self.yUpsilonbar[1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yubar[1,mif1] * self.yUpsilon[0,1] * self.yUpsilonbar[1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yubar[1,mif1] * self.yUpsilon[1,0] * self.yUpsilonbar[1,1] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yubar[1,mif1] * self.yUpsilon[1,1] * self.yUpsilonbar[1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yubar[1,mif1] * self.yUpsilon[1,2] * self.yUpsilonbar[1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yubar[1,mif1] * self.yUpsilon[2,1] * self.yUpsilonbar[1,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yubar[2,mif1] * self.yUpsilon[0,1] * self.yUpsilonbar[1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yubar[1,mif1] * self.yUpsilon[0,2] * self.yUpsilonbar[1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yubar[2,mif1] * self.yUpsilon[1,0] * self.yUpsilonbar[1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yubar[2,mif1] * self.yUpsilon[1,1] * self.yUpsilonbar[1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yubar[1,mif1] * self.yUpsilon[1,2] * self.yUpsilonbar[1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yubar[2,mif1] * self.yUpsilon[1,2] * self.yUpsilonbar[1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yubar[1,mif1] * self.yUpsilon[2,0] * self.yUpsilonbar[1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yubar[1,mif1] * self.yUpsilon[2,1] * self.yUpsilonbar[1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yubar[2,mif1] * self.yUpsilon[2,1] * self.yUpsilonbar[1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yubar[1,mif1] * self.yUpsilon[2,2] * self.yUpsilonbar[1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yubar[2,mif1] * self.yUpsilon[0,0] * self.yUpsilonbar[2,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yubar[2,mif1] * self.yUpsilon[0,1] * self.yUpsilonbar[2,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yubar[0,mif1] * self.yUpsilon[0,2] * self.yUpsilonbar[2,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yubar[2,mif1] * self.yUpsilon[0,2] * self.yUpsilonbar[2,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yubar[2,mif1] * self.yUpsilon[1,0] * self.yUpsilonbar[2,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yubar[0,mif1] * self.yUpsilon[1,2] * self.yUpsilonbar[2,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yubar[0,mif1] * self.yUpsilon[2,0] * self.yUpsilonbar[2,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yubar[2,mif1] * self.yUpsilon[2,0] * self.yUpsilonbar[2,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yubar[0,mif1] * self.yUpsilon[2,1] * self.yUpsilonbar[2,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yubar[0,mif1] * self.yUpsilon[2,2] * self.yUpsilonbar[2,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yubar[2,mif1] * self.yUpsilon[0,1] * self.yUpsilonbar[2,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yubar[1,mif1] * self.yUpsilon[0,2] * self.yUpsilonbar[2,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yubar[2,mif1] * self.yUpsilon[1,0] * self.yUpsilonbar[2,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yubar[2,mif1] * self.yUpsilon[1,1] * self.yUpsilonbar[2,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yubar[1,mif1] * self.yUpsilon[1,2] * self.yUpsilonbar[2,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yubar[2,mif1] * self.yUpsilon[1,2] * self.yUpsilonbar[2,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yubar[1,mif1] * self.yUpsilon[2,0] * self.yUpsilonbar[2,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yubar[1,mif1] * self.yUpsilon[2,1] * self.yUpsilonbar[2,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yubar[2,mif1] * self.yUpsilon[2,1] * self.yUpsilonbar[2,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yubar[1,mif1] * self.yUpsilon[2,2] * self.yUpsilonbar[2,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yubar[2,mif1] * self.yUpsilon[0,2] * self.yUpsilonbar[2,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yubar[2,mif1] * self.yUpsilon[1,2] * self.yUpsilonbar[2,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yubar[2,mif1] * self.yUpsilon[2,0] * self.yUpsilonbar[2,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yubar[2,mif1] * self.yUpsilon[2,1] * self.yUpsilonbar[2,2] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yubar[2,mif1] * self.yUpsilon[2,2] * self.yUpsilonbar[2,2])

    def alphaOHud(self, mif1,mif2):
        return (1/4 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yubar[0,mif1] * self.yUpsilon[0,0] * self.yUpsilonbar[0,0] + 1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yubar[0,mif1] * self.yUpsilon[0,1] * self.yUpsilonbar[0,0] + 1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yubar[0,mif1] * self.yUpsilon[0,2] * self.yUpsilonbar[0,0] + 1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yubar[0,mif1] * self.yUpsilon[1,0] * self.yUpsilonbar[0,0] + 1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yubar[0,mif1] * self.yUpsilon[2,0] * self.yUpsilonbar[0,0] + 1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yubar[1,mif1] * self.yUpsilon[0,0] * self.yUpsilonbar[0,1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yubar[0,mif1] * self.yUpsilon[0,1] * self.yUpsilonbar[0,1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yubar[1,mif1] * self.yUpsilon[0,1] * self.yUpsilonbar[0,1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yubar[1,mif1] * self.yUpsilon[0,2] * self.yUpsilonbar[0,1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yubar[0,mif1] * self.yUpsilon[1,0] * self.yUpsilonbar[0,1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yubar[1,mif1] * self.yUpsilon[1,0] * self.yUpsilonbar[0,1] + 1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yubar[0,mif1] * self.yUpsilon[1,1] * self.yUpsilonbar[0,1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yubar[0,mif1] * self.yUpsilon[1,2] * self.yUpsilonbar[0,1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yubar[1,mif1] * self.yUpsilon[2,0] * self.yUpsilonbar[0,1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yubar[0,mif1] * self.yUpsilon[2,1] * self.yUpsilonbar[0,1] + 1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yubar[2,mif1] * self.yUpsilon[0,0] * self.yUpsilonbar[0,2] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yubar[2,mif1] * self.yUpsilon[0,1] * self.yUpsilonbar[0,2] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yubar[0,mif1] * self.yUpsilon[0,2] * self.yUpsilonbar[0,2] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yubar[2,mif1] * self.yUpsilon[0,2] * self.yUpsilonbar[0,2] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yubar[2,mif1] * self.yUpsilon[1,0] * self.yUpsilonbar[0,2] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yubar[0,mif1] * self.yUpsilon[1,2] * self.yUpsilonbar[0,2] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yubar[0,mif1] * self.yUpsilon[2,0] * self.yUpsilonbar[0,2] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yubar[2,mif1] * self.yUpsilon[2,0] * self.yUpsilonbar[0,2] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yubar[0,mif1] * self.yUpsilon[2,1] * self.yUpsilonbar[0,2] + 1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yubar[0,mif1] * self.yUpsilon[2,2] * self.yUpsilonbar[0,2] + 1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yubar[1,mif1] * self.yUpsilon[0,0] * self.yUpsilonbar[1,0] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yubar[0,mif1] * self.yUpsilon[0,1] * self.yUpsilonbar[1,0] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yubar[1,mif1] * self.yUpsilon[0,1] * self.yUpsilonbar[1,0] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yubar[1,mif1] * self.yUpsilon[0,2] * self.yUpsilonbar[1,0] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yubar[0,mif1] * self.yUpsilon[1,0] * self.yUpsilonbar[1,0] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yubar[1,mif1] * self.yUpsilon[1,0] * self.yUpsilonbar[1,0] + 1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yubar[0,mif1] * self.yUpsilon[1,1] * self.yUpsilonbar[1,0] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yubar[0,mif1] * self.yUpsilon[1,2] * self.yUpsilonbar[1,0] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yubar[1,mif1] * self.yUpsilon[2,0] * self.yUpsilonbar[1,0] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yubar[0,mif1] * self.yUpsilon[2,1] * self.yUpsilonbar[1,0] + 1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yubar[1,mif1] * self.yUpsilon[0,1] * self.yUpsilonbar[1,1] + 1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yubar[1,mif1] * self.yUpsilon[1,0] * self.yUpsilonbar[1,1] + 1/4 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yubar[1,mif1] * self.yUpsilon[1,1] * self.yUpsilonbar[1,1] + 1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yubar[1,mif1] * self.yUpsilon[1,2] * self.yUpsilonbar[1,1] + 1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yubar[1,mif1] * self.yUpsilon[2,1] * self.yUpsilonbar[1,1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yubar[2,mif1] * self.yUpsilon[0,1] * self.yUpsilonbar[1,2] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yubar[1,mif1] * self.yUpsilon[0,2] * self.yUpsilonbar[1,2] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yubar[2,mif1] * self.yUpsilon[1,0] * self.yUpsilonbar[1,2] + 1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yubar[2,mif1] * self.yUpsilon[1,1] * self.yUpsilonbar[1,2] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yubar[1,mif1] * self.yUpsilon[1,2] * self.yUpsilonbar[1,2] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yubar[2,mif1] * self.yUpsilon[1,2] * self.yUpsilonbar[1,2] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yubar[1,mif1] * self.yUpsilon[2,0] * self.yUpsilonbar[1,2] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yubar[1,mif1] * self.yUpsilon[2,1] * self.yUpsilonbar[1,2] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yubar[2,mif1] * self.yUpsilon[2,1] * self.yUpsilonbar[1,2] + 1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yubar[1,mif1] * self.yUpsilon[2,2] * self.yUpsilonbar[1,2] + 1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yubar[2,mif1] * self.yUpsilon[0,0] * self.yUpsilonbar[2,0] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yubar[2,mif1] * self.yUpsilon[0,1] * self.yUpsilonbar[2,0] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yubar[0,mif1] * self.yUpsilon[0,2] * self.yUpsilonbar[2,0] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yubar[2,mif1] * self.yUpsilon[0,2] * self.yUpsilonbar[2,0] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yubar[2,mif1] * self.yUpsilon[1,0] * self.yUpsilonbar[2,0] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yubar[0,mif1] * self.yUpsilon[1,2] * self.yUpsilonbar[2,0] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yubar[0,mif1] * self.yUpsilon[2,0] * self.yUpsilonbar[2,0] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yubar[2,mif1] * self.yUpsilon[2,0] * self.yUpsilonbar[2,0] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yubar[0,mif1] * self.yUpsilon[2,1] * self.yUpsilonbar[2,0] + 1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yubar[0,mif1] * self.yUpsilon[2,2] * self.yUpsilonbar[2,0] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yubar[2,mif1] * self.yUpsilon[0,1] * self.yUpsilonbar[2,1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yubar[1,mif1] * self.yUpsilon[0,2] * self.yUpsilonbar[2,1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yubar[2,mif1] * self.yUpsilon[1,0] * self.yUpsilonbar[2,1] + 1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yubar[2,mif1] * self.yUpsilon[1,1] * self.yUpsilonbar[2,1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yubar[1,mif1] * self.yUpsilon[1,2] * self.yUpsilonbar[2,1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yubar[2,mif1] * self.yUpsilon[1,2] * self.yUpsilonbar[2,1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yubar[1,mif1] * self.yUpsilon[2,0] * self.yUpsilonbar[2,1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yubar[1,mif1] * self.yUpsilon[2,1] * self.yUpsilonbar[2,1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yubar[2,mif1] * self.yUpsilon[2,1] * self.yUpsilonbar[2,1] + 1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yubar[1,mif1] * self.yUpsilon[2,2] * self.yUpsilonbar[2,1] + 1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yubar[2,mif1] * self.yUpsilon[0,2] * self.yUpsilonbar[2,2] + 1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yubar[2,mif1] * self.yUpsilon[1,2] * self.yUpsilonbar[2,2] + 1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif2] * self.yubar[2,mif1] * self.yUpsilon[2,0] * self.yUpsilonbar[2,2] + 1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif2] * self.yubar[2,mif1] * self.yUpsilon[2,1] * self.yUpsilonbar[2,2] + 1/4 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif2] * self.yubar[2,mif1] * self.yUpsilon[2,2] * self.yUpsilonbar[2,2])

    def alphaOld(self, mif1,mif2,mif3,mif4):
        return -1/1440 * (self.g1)**(4) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4)

    def alphaOle(self, mif1,mif2,mif3,mif4):
        return -1/480 * (self.g1)**(4) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4)

    def alphaOledq(self, mif1,mif2,mif3,mif4):
        return 0

    def alphaOlequ1(self, mif1,mif2,mif3,mif4):
        return 0

    def alphaOlequ3(self, mif1,mif2,mif3,mif4):
        return 0

    def alphaOll(self, mif1,mif2,mif3,mif4):
        return (-1/160 * (self.g2)**(4) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.kronecker_delta(mif2,mif3) + -1/1920 * (self.g1)**(4) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 1/320 * (self.g2)**(4) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4))

    def alphaOlq1(self, mif1,mif2,mif3,mif4):
        return (1/2880 * (self.g1)**(4) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -17/1152 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[0,mif4] * self.yUpsilonbar[0,mif3] + -1/96 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[0,mif4] * self.yUpsilonbar[0,mif3] + 1/96 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif4] * self.yUpsilonbar[0,mif3] + -17/1152 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif3] + -1/96 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif3] + 1/96 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif3] + -17/1152 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[1,mif4] * self.yUpsilonbar[1,mif3] + -1/96 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[1,mif4] * self.yUpsilonbar[1,mif3] + 1/96 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif4] * self.yUpsilonbar[1,mif3] + -17/1152 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,mif3] + -1/96 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,mif3] + 1/96 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,mif3] + -17/1152 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,mif3] + -1/96 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,mif3] + 1/96 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,mif3] + -17/1152 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,mif3] + -1/96 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,mif3] + 1/96 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,mif3] + -17/1152 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[0,mif4] * self.yUpsilonbar[mif3,0] + -1/96 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[0,mif4] * self.yUpsilonbar[mif3,0] + 1/96 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif4] * self.yUpsilonbar[mif3,0] + -17/1152 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif3,0] + -1/96 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif3,0] + 1/96 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif3,0] + -17/1152 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif3,1] + -1/96 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif3,1] + 1/96 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif3,1] + -17/1152 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif3,1] + -1/96 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif3,1] + 1/96 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif3,1] + -17/1152 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif3,2] + -1/96 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif3,2] + 1/96 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif3,2] + -17/1152 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif3,2] + -1/96 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif3,2] + 1/96 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif3,2])

    def alphaOlq3(self, mif1,mif2,mif3,mif4):
        return (-1/160 * (self.g2)**(4) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 7/384 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[0,mif4] * self.yUpsilonbar[0,mif3] + 1/96 * (self.g2)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[0,mif4] * self.yUpsilonbar[0,mif3] + -1/96 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif4] * self.yUpsilonbar[0,mif3] + 7/384 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif3] + 1/96 * (self.g2)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif3] + -1/96 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif3] + 7/384 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[1,mif4] * self.yUpsilonbar[1,mif3] + 1/96 * (self.g2)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[1,mif4] * self.yUpsilonbar[1,mif3] + -1/96 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif4] * self.yUpsilonbar[1,mif3] + 7/384 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,mif3] + 1/96 * (self.g2)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,mif3] + -1/96 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,mif3] + 7/384 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,mif3] + 1/96 * (self.g2)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,mif3] + -1/96 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,mif3] + 7/384 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,mif3] + 1/96 * (self.g2)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,mif3] + -1/96 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,mif3] + 7/384 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[0,mif4] * self.yUpsilonbar[mif3,0] + 1/96 * (self.g2)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[0,mif4] * self.yUpsilonbar[mif3,0] + -1/96 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif4] * self.yUpsilonbar[mif3,0] + 7/384 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif3,0] + 1/96 * (self.g2)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif3,0] + -1/96 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif3,0] + 7/384 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif3,1] + 1/96 * (self.g2)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif3,1] + -1/96 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif3,1] + 7/384 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif3,1] + 1/96 * (self.g2)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif3,1] + -1/96 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif3,1] + 7/384 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif3,2] + 1/96 * (self.g2)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif3,2] + -1/96 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif3,2] + 7/384 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif3,2] + 1/96 * (self.g2)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif3,2] + -1/96 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif3,2])

    def alphaOlu(self, mif1,mif2,mif3,mif4):
        return 1/720 * (self.g1)**(4) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4)

    def alphaOqd1(self, mif1,mif2,mif3,mif4):
        return (1/4320 * (self.g1)**(4) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -17/1728 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + -1/144 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + 1/144 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + -1/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[0,mif3] * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[0,mif3] * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,mif4] * self.ydbar[0,mif3] * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + -1/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[0,mif3] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[0,mif3] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,mif4] * self.ydbar[0,mif3] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif1] + -1/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[0,mif3] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[0,mif3] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,mif4] * self.ydbar[0,mif3] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif1] + -17/1728 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + -1/144 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + 1/144 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + -1/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[0,mif3] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[0,mif3] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,mif4] * self.ydbar[0,mif3] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + -1/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[0,mif3] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[0,mif3] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,mif4] * self.ydbar[0,mif3] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif1] + -1/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[0,mif3] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[0,mif3] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,mif4] * self.ydbar[0,mif3] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif1] + -1/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[1,mif3] * self.yUpsilon[0,mif2] * self.yUpsilonbar[1,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[1,mif3] * self.yUpsilon[0,mif2] * self.yUpsilonbar[1,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,mif4] * self.ydbar[1,mif3] * self.yUpsilon[0,mif2] * self.yUpsilonbar[1,mif1] + -17/1728 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + -1/144 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + 1/144 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + -1/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[1,mif3] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[1,mif3] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,mif4] * self.ydbar[1,mif3] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + -1/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[1,mif3] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[1,mif3] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,mif4] * self.ydbar[1,mif3] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif1] + -1/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[1,mif3] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[1,mif3] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,mif4] * self.ydbar[1,mif3] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif1] + -17/1728 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + -1/144 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + 1/144 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + -1/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[1,mif3] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[1,mif3] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,mif4] * self.ydbar[1,mif3] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + -1/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[1,mif3] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[1,mif3] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,mif4] * self.ydbar[1,mif3] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif1] + -1/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[2,mif3] * self.yUpsilon[0,mif2] * self.yUpsilonbar[2,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[2,mif3] * self.yUpsilon[0,mif2] * self.yUpsilonbar[2,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,mif4] * self.ydbar[2,mif3] * self.yUpsilon[0,mif2] * self.yUpsilonbar[2,mif1] + -1/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[2,mif3] * self.yUpsilon[1,mif2] * self.yUpsilonbar[2,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[2,mif3] * self.yUpsilon[1,mif2] * self.yUpsilonbar[2,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,mif4] * self.ydbar[2,mif3] * self.yUpsilon[1,mif2] * self.yUpsilonbar[2,mif1] + -17/1728 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + -1/144 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + 1/144 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + -1/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[2,mif3] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[2,mif3] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,mif4] * self.ydbar[2,mif3] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + -1/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[2,mif3] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[2,mif3] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,mif4] * self.ydbar[2,mif3] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif1] + -1/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[2,mif3] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[2,mif3] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,mif4] * self.ydbar[2,mif3] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif1] + -17/1728 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + -1/144 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + 1/144 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + -1/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[2,mif3] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[2,mif3] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,mif4] * self.ydbar[2,mif3] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + -17/1728 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + -1/144 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + 1/144 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + -1/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[0,mif3] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[0,mif3] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,mif4] * self.ydbar[0,mif3] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + -1/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[0,mif3] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,0] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[0,mif3] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,mif4] * self.ydbar[0,mif3] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,0] + -1/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[0,mif3] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,0] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[0,mif3] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,mif4] * self.ydbar[0,mif3] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,0] + -17/1728 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + -1/144 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + 1/144 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + -1/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[0,mif3] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[0,mif3] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,mif4] * self.ydbar[0,mif3] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + -1/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[0,mif3] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,0] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[0,mif3] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,mif4] * self.ydbar[0,mif3] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,0] + -1/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[0,mif3] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,0] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[0,mif3] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,mif4] * self.ydbar[0,mif3] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,0] + -1/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[1,mif3] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[1,mif3] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,mif4] * self.ydbar[1,mif3] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,1] + -17/1728 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + -1/144 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + 1/144 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + -1/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[1,mif3] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[1,mif3] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,mif4] * self.ydbar[1,mif3] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + -1/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[1,mif3] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[1,mif3] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,mif4] * self.ydbar[1,mif3] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,1] + -1/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[1,mif3] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[1,mif3] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,mif4] * self.ydbar[1,mif3] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,1] + -17/1728 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + -1/144 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + 1/144 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + -1/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[1,mif3] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[1,mif3] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,mif4] * self.ydbar[1,mif3] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + -1/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[1,mif3] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[1,mif3] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,mif4] * self.ydbar[1,mif3] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,1] + -1/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[2,mif3] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,2] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[2,mif3] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,mif4] * self.ydbar[2,mif3] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,2] + -1/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[2,mif3] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,2] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[2,mif3] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,mif4] * self.ydbar[2,mif3] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,2] + -17/1728 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + -1/144 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + 1/144 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + -1/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[2,mif3] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[2,mif3] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,mif4] * self.ydbar[2,mif3] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + -1/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[2,mif3] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,2] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[2,mif3] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,mif4] * self.ydbar[2,mif3] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,2] + -1/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[2,mif3] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,2] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[2,mif3] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,mif4] * self.ydbar[2,mif3] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,2] + -17/1728 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] + -1/144 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] + 1/144 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] + -1/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[2,mif3] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[2,mif3] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,mif4] * self.ydbar[2,mif3] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2])

    def alphaOqd8(self, mif1,mif2,mif3,mif4):
        return (-1/64 * (self.g3)**(4) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 7/192 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + 1/32 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + -1/32 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + 3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[0,mif3] * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + -3/64 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[0,mif3] * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + 3/64 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,mif4] * self.ydbar[0,mif3] * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + 3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[0,mif3] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif1] + -3/64 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[0,mif3] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif1] + 3/64 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,mif4] * self.ydbar[0,mif3] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif1] + 3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[0,mif3] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif1] + -3/64 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[0,mif3] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif1] + 3/64 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,mif4] * self.ydbar[0,mif3] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif1] + 7/192 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + 1/32 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + -1/32 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + 3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[0,mif3] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + -3/64 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[0,mif3] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + 3/64 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,mif4] * self.ydbar[0,mif3] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + 3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[0,mif3] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif1] + -3/64 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[0,mif3] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif1] + 3/64 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,mif4] * self.ydbar[0,mif3] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif1] + 3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[0,mif3] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif1] + -3/64 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[0,mif3] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif1] + 3/64 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,mif4] * self.ydbar[0,mif3] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif1] + 3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[1,mif3] * self.yUpsilon[0,mif2] * self.yUpsilonbar[1,mif1] + -3/64 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[1,mif3] * self.yUpsilon[0,mif2] * self.yUpsilonbar[1,mif1] + 3/64 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,mif4] * self.ydbar[1,mif3] * self.yUpsilon[0,mif2] * self.yUpsilonbar[1,mif1] + 7/192 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + 1/32 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + -1/32 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + 3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[1,mif3] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + -3/64 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[1,mif3] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + 3/64 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,mif4] * self.ydbar[1,mif3] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + 3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[1,mif3] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif1] + -3/64 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[1,mif3] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif1] + 3/64 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,mif4] * self.ydbar[1,mif3] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif1] + 3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[1,mif3] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif1] + -3/64 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[1,mif3] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif1] + 3/64 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,mif4] * self.ydbar[1,mif3] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif1] + 7/192 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + 1/32 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + -1/32 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + 3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[1,mif3] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + -3/64 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[1,mif3] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + 3/64 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,mif4] * self.ydbar[1,mif3] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + 3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[1,mif3] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif1] + -3/64 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[1,mif3] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif1] + 3/64 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,mif4] * self.ydbar[1,mif3] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif1] + 3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[2,mif3] * self.yUpsilon[0,mif2] * self.yUpsilonbar[2,mif1] + -3/64 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[2,mif3] * self.yUpsilon[0,mif2] * self.yUpsilonbar[2,mif1] + 3/64 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,mif4] * self.ydbar[2,mif3] * self.yUpsilon[0,mif2] * self.yUpsilonbar[2,mif1] + 3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[2,mif3] * self.yUpsilon[1,mif2] * self.yUpsilonbar[2,mif1] + -3/64 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[2,mif3] * self.yUpsilon[1,mif2] * self.yUpsilonbar[2,mif1] + 3/64 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,mif4] * self.ydbar[2,mif3] * self.yUpsilon[1,mif2] * self.yUpsilonbar[2,mif1] + 7/192 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + 1/32 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + -1/32 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + 3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[2,mif3] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + -3/64 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[2,mif3] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + 3/64 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,mif4] * self.ydbar[2,mif3] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + 3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[2,mif3] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif1] + -3/64 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[2,mif3] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif1] + 3/64 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,mif4] * self.ydbar[2,mif3] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif1] + 3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[2,mif3] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif1] + -3/64 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[2,mif3] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif1] + 3/64 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,mif4] * self.ydbar[2,mif3] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif1] + 7/192 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + 1/32 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + -1/32 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + 3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[2,mif3] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + -3/64 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[2,mif3] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + 3/64 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,mif4] * self.ydbar[2,mif3] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + 7/192 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + 1/32 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + -1/32 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + 3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[0,mif3] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + -3/64 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[0,mif3] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + 3/64 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,mif4] * self.ydbar[0,mif3] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + 3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[0,mif3] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,0] + -3/64 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[0,mif3] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,0] + 3/64 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,mif4] * self.ydbar[0,mif3] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,0] + 3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[0,mif3] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,0] + -3/64 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[0,mif3] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,0] + 3/64 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,mif4] * self.ydbar[0,mif3] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,0] + 7/192 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + 1/32 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + -1/32 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + 3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[0,mif3] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + -3/64 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[0,mif3] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + 3/64 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,mif4] * self.ydbar[0,mif3] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + 3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[0,mif3] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,0] + -3/64 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[0,mif3] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,0] + 3/64 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,mif4] * self.ydbar[0,mif3] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,0] + 3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[0,mif3] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,0] + -3/64 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[0,mif3] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,0] + 3/64 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,mif4] * self.ydbar[0,mif3] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,0] + 3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[1,mif3] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,1] + -3/64 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[1,mif3] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,1] + 3/64 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,mif4] * self.ydbar[1,mif3] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,1] + 7/192 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + 1/32 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + -1/32 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + 3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[1,mif3] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + -3/64 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[1,mif3] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + 3/64 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,mif4] * self.ydbar[1,mif3] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + 3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[1,mif3] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,1] + -3/64 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[1,mif3] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,1] + 3/64 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,mif4] * self.ydbar[1,mif3] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,1] + 3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[1,mif3] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,1] + -3/64 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[1,mif3] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,1] + 3/64 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,mif4] * self.ydbar[1,mif3] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,1] + 7/192 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + 1/32 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + -1/32 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + 3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[1,mif3] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + -3/64 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[1,mif3] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + 3/64 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,mif4] * self.ydbar[1,mif3] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + 3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[1,mif3] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,1] + -3/64 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[1,mif3] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,1] + 3/64 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,mif4] * self.ydbar[1,mif3] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,1] + 3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[2,mif3] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,2] + -3/64 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[2,mif3] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,2] + 3/64 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,mif4] * self.ydbar[2,mif3] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,2] + 3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[2,mif3] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,2] + -3/64 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[2,mif3] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,2] + 3/64 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,mif4] * self.ydbar[2,mif3] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,2] + 7/192 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + 1/32 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + -1/32 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + 3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[2,mif3] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + -3/64 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[2,mif3] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + 3/64 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,mif4] * self.ydbar[2,mif3] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + 3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[2,mif3] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,2] + -3/64 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,mif4] * self.ydbar[2,mif3] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,2] + 3/64 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[0,mif4] * self.ydbar[2,mif3] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,2] + 3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[2,mif3] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,2] + -3/64 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,mif4] * self.ydbar[2,mif3] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,2] + 3/64 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[1,mif4] * self.ydbar[2,mif3] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,2] + 7/192 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] + 1/32 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] + -1/32 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] + 3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[2,mif3] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] + -3/64 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,mif4] * self.ydbar[2,mif3] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] + 3/64 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yd[2,mif4] * self.ydbar[2,mif3] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2])

    def alphaOqe(self, mif1,mif2,mif3,mif4):
        return (1/1440 * (self.g1)**(4) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + -17/576 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + -1/48 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + 1/48 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + -17/576 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + -1/48 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + 1/48 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + -17/576 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + -1/48 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + 1/48 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + -17/576 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + -1/48 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + 1/48 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + -17/576 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + -1/48 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + 1/48 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + -17/576 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + -1/48 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + 1/48 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + -17/576 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + -1/48 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + 1/48 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + -17/576 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + -1/48 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + 1/48 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + -17/576 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + -1/48 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + 1/48 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + -17/576 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + -1/48 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + 1/48 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + -17/576 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + -1/48 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + 1/48 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + -17/576 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] + -1/48 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] + 1/48 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2])

    def alphaOqq1(self, mif1,mif2,mif3,mif4):
        return (-1/512 * (self.g3)**(4) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.kronecker_delta(mif2,mif3) + -1/17280 * (self.g1)**(4) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 1/768 * (self.g3)**(4) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 5/1728 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + -13/2304 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + 1/576 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + -1/384 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + -1/576 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + 1/384 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + 13/1536 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yUpsilon[0,mif4] * self.yUpsilonbar[0,mif1] + 1/256 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yUpsilon[0,mif4] * self.yUpsilonbar[0,mif1] + -1/256 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif4] * self.yUpsilonbar[0,mif1] + 5/1728 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + -13/2304 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + 1/576 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + -1/384 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + -1/576 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + 1/384 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + 13/1536 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif1] + 1/256 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif1] + -1/256 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif1] + -15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,0] * self.yUpsilonbar[0,mif1] + -15/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,0] * self.yUpsilonbar[0,mif1] + 15/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,0] * self.yUpsilonbar[0,mif1] + -15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,0] * self.yUpsilonbar[0,0] * self.yUpsilonbar[0,mif1] + -15/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,0] * self.yUpsilonbar[0,0] * self.yUpsilonbar[0,mif1] + 15/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,0] * self.yUpsilonbar[0,0] * self.yUpsilonbar[0,mif1] + -15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,0] * self.yUpsilonbar[0,mif1] + -15/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,0] * self.yUpsilonbar[0,mif1] + 15/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,0] * self.yUpsilonbar[0,mif1] + -15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,0] * self.yUpsilonbar[0,mif1] + -15/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,0] * self.yUpsilonbar[0,mif1] + 15/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif3,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,0] * self.yUpsilonbar[0,mif1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[0,mif1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[0,mif1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[0,mif1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,1] * self.yUpsilonbar[0,1] * self.yUpsilonbar[0,mif1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,1] * self.yUpsilonbar[0,1] * self.yUpsilonbar[0,mif1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,1] * self.yUpsilonbar[0,1] * self.yUpsilonbar[0,mif1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[0,mif1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[0,mif1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[0,mif1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[0,mif1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[0,mif1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif3,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[0,mif1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[0,mif1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[0,mif1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[0,mif1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[0,mif1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[0,mif1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[0,mif1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[0,mif1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[0,mif1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[0,mif1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[0,mif1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[0,mif1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif3,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[0,mif1] + 1/1536 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif3] + 1/256 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif3] + -1/256 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif3] + 7/3456 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[0,mif4] * self.yUpsilonbar[0,mif3] + -1/2304 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[0,mif4] * self.yUpsilonbar[0,mif3] + 1/576 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[0,mif4] * self.yUpsilonbar[0,mif3] + -1/384 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[0,mif4] * self.yUpsilonbar[0,mif3] + -1/576 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif4] * self.yUpsilonbar[0,mif3] + 1/384 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif4] * self.yUpsilonbar[0,mif3] + 1/1536 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif3] + 1/256 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif3] + -1/256 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif3] + 7/3456 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif3] + -1/2304 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif3] + 1/576 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif3] + -1/384 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif3] + -1/576 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif3] + 1/384 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,0] * self.yUpsilonbar[0,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,0] * self.yUpsilonbar[0,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,0] * self.yUpsilonbar[0,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,0] * self.yUpsilonbar[0,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,0] * self.yUpsilonbar[0,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,0] * self.yUpsilonbar[0,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,0] * self.yUpsilonbar[0,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,0] * self.yUpsilonbar[0,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,0] * self.yUpsilonbar[0,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,0] * self.yUpsilonbar[0,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,0] * self.yUpsilonbar[0,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,0] * self.yUpsilonbar[0,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[0,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[0,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[0,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[0,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[0,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[0,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[0,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[0,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[0,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[0,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[0,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[0,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[0,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[0,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[0,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[0,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[0,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[0,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[0,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[0,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[0,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[0,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[0,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[0,mif3] + -51/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[0,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[0,mif3] + -51/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[0,mif3] + -9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[0,mif3] + -9/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[0,mif3] + 9/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[0,mif3] + -51/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[0,mif3] + -51/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[0,mif3] + -9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[0,mif3] + -9/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[0,mif3] + 9/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[0,mif3] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[1,0] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[1,0] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[1,0] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,1] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[1,0] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,1] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[1,0] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,1] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[1,0] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[1,0] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[1,0] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[1,0] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[1,0] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[1,0] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif3,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[1,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[1,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[1,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[1,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[1,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[1,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[1,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[1,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[1,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[1,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[1,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[1,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[1,0] + 5/1728 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + -13/2304 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + 1/576 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + -1/384 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + -1/576 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + 1/384 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + 13/1536 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yUpsilon[1,mif4] * self.yUpsilonbar[1,mif1] + 1/256 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yUpsilon[1,mif4] * self.yUpsilonbar[1,mif1] + -1/256 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif4] * self.yUpsilonbar[1,mif1] + 5/1728 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + -13/2304 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + 1/576 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + -1/384 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + -1/576 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + 1/384 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + 13/1536 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,mif1] + 1/256 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,mif1] + -1/256 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,mif1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[1,mif1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[1,mif1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[1,mif1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,0] * self.yUpsilonbar[0,1] * self.yUpsilonbar[1,mif1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,0] * self.yUpsilonbar[0,1] * self.yUpsilonbar[1,mif1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,0] * self.yUpsilonbar[0,1] * self.yUpsilonbar[1,mif1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[1,mif1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[1,mif1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[1,mif1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[1,mif1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[1,mif1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif3,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[1,mif1] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[1,mif1] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[1,mif1] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[1,mif1] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[1,mif1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[1,mif1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[1,mif1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[1,mif1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[1,mif1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[1,mif1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[1,mif1] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[1,mif1] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[1,mif1] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[1,mif1] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,1] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[1,mif1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[1,mif1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[1,mif1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[1,mif1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[1,mif1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[1,mif1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[1,mif1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,0] * self.yUpsilonbar[1,mif1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,0] * self.yUpsilonbar[1,mif1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,0] * self.yUpsilonbar[1,mif1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,0] * self.yUpsilonbar[1,0] * self.yUpsilonbar[1,mif1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,0] * self.yUpsilonbar[1,0] * self.yUpsilonbar[1,mif1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,0] * self.yUpsilonbar[1,0] * self.yUpsilonbar[1,mif1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[1,mif1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[1,mif1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[1,mif1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[1,mif1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[1,mif1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif3,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[1,mif1] + -15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,1] * self.yUpsilonbar[1,mif1] + -15/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,1] * self.yUpsilonbar[1,mif1] + 15/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,1] * self.yUpsilonbar[1,mif1] + -15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,1] * self.yUpsilonbar[1,1] * self.yUpsilonbar[1,mif1] + -15/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,1] * self.yUpsilonbar[1,1] * self.yUpsilonbar[1,mif1] + 15/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,1] * self.yUpsilonbar[1,1] * self.yUpsilonbar[1,mif1] + -15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,1] * self.yUpsilonbar[1,mif1] + -15/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,1] * self.yUpsilonbar[1,mif1] + 15/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,1] * self.yUpsilonbar[1,mif1] + -15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,1] * self.yUpsilonbar[1,mif1] + -15/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,1] * self.yUpsilonbar[1,mif1] + 15/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif3,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,1] * self.yUpsilonbar[1,mif1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[1,mif1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[1,mif1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[1,mif1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[1,mif1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[1,mif1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[1,mif1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[1,mif1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[1,mif1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[1,mif1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[1,mif1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[1,mif1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif3,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[1,mif1] + 1/1536 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif3] + 1/256 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif3] + -1/256 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif3] + 7/3456 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[1,mif4] * self.yUpsilonbar[1,mif3] + -1/2304 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[1,mif4] * self.yUpsilonbar[1,mif3] + 1/576 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[1,mif4] * self.yUpsilonbar[1,mif3] + -1/384 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[1,mif4] * self.yUpsilonbar[1,mif3] + -1/576 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif4] * self.yUpsilonbar[1,mif3] + 1/384 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif4] * self.yUpsilonbar[1,mif3] + 1/1536 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif3] + 1/256 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif3] + -1/256 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif3] + 7/3456 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,mif3] + -1/2304 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,mif3] + 1/576 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,mif3] + -1/384 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,mif3] + -1/576 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,mif3] + 1/384 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[1,mif3] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[1,mif3] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[1,mif3] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[1,mif3] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[1,mif3] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[1,mif3] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[1,mif3] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[1,mif3] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[1,mif3] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[1,mif3] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[1,mif3] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[1,mif3] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[1,mif3] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[1,mif3] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,1] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[1,mif3] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[1,mif3] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[1,mif3] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[1,mif3] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[1,mif3] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[1,mif3] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,0] * self.yUpsilonbar[1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,0] * self.yUpsilonbar[1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,0] * self.yUpsilonbar[1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,0] * self.yUpsilonbar[1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,0] * self.yUpsilonbar[1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,0] * self.yUpsilonbar[1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,1] * self.yUpsilonbar[1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,1] * self.yUpsilonbar[1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,1] * self.yUpsilonbar[1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,1] * self.yUpsilonbar[1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,1] * self.yUpsilonbar[1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,1] * self.yUpsilonbar[1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,1] * self.yUpsilonbar[1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,1] * self.yUpsilonbar[1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,1] * self.yUpsilonbar[1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,1] * self.yUpsilonbar[1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,1] * self.yUpsilonbar[1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,1] * self.yUpsilonbar[1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[1,mif3] + -51/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[1,mif3] + -51/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[1,mif3] + -9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[1,mif3] + -9/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[1,mif3] + 9/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[1,mif3] + -51/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[1,mif3] + -51/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[1,mif3] + -9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[1,mif3] + -9/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[1,mif3] + 9/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[1,mif3] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[2,0] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[2,0] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[2,0] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[2,0] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[2,0] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[2,0] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[2,0] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[2,0] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[2,0] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[2,0] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[2,0] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif3,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[2,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[2,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[2,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[2,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[2,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[2,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[2,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[2,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[2,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[2,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[2,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[2,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[2,0] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[2,1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[2,1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[2,1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[2,1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[2,1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[2,1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[2,1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[2,1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[2,1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[2,1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[2,1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif3,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[2,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[2,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[2,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[2,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[2,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[2,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[2,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[2,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[2,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[2,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[2,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[2,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[2,1] + 5/1728 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + -13/2304 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + 1/576 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + -1/384 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + -1/576 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + 1/384 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + 13/1536 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,mif1] + 1/256 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,mif1] + -1/256 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,mif1] + 5/1728 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + -13/2304 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + 1/576 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + -1/384 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + -1/576 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + 1/384 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + 13/1536 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,mif1] + 1/256 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,mif1] + -1/256 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,mif1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[2,mif1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[2,mif1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[2,mif1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,0] * self.yUpsilonbar[0,2] * self.yUpsilonbar[2,mif1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,0] * self.yUpsilonbar[0,2] * self.yUpsilonbar[2,mif1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,0] * self.yUpsilonbar[0,2] * self.yUpsilonbar[2,mif1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[2,mif1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[2,mif1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[2,mif1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[2,mif1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[2,mif1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif3,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[2,mif1] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[2,mif1] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[2,mif1] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[2,mif1] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[2,mif1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[2,mif1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[2,mif1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[2,mif1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[2,mif1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[2,mif1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[2,mif1] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[2,mif1] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[2,mif1] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[2,mif1] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[2,mif1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[2,mif1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[2,mif1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[2,mif1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[2,mif1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[2,mif1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[2,mif1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[2,mif1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[2,mif1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[2,mif1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,1] * self.yUpsilonbar[1,2] * self.yUpsilonbar[2,mif1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,1] * self.yUpsilonbar[1,2] * self.yUpsilonbar[2,mif1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,1] * self.yUpsilonbar[1,2] * self.yUpsilonbar[2,mif1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[2,mif1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[2,mif1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[2,mif1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[2,mif1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[2,mif1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif3,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[2,mif1] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[2,mif1] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[2,mif1] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[2,mif1] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[2,mif1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[2,mif1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[2,mif1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[2,mif1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[2,mif1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[2,mif1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[2,mif1] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[2,mif1] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[2,mif1] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[2,mif1] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,2] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[2,mif1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[2,mif1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[2,mif1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[2,mif1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[2,mif1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[2,mif1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[2,mif1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,0] * self.yUpsilonbar[2,mif1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,0] * self.yUpsilonbar[2,mif1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,0] * self.yUpsilonbar[2,mif1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,0] * self.yUpsilonbar[2,0] * self.yUpsilonbar[2,mif1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,0] * self.yUpsilonbar[2,0] * self.yUpsilonbar[2,mif1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,0] * self.yUpsilonbar[2,0] * self.yUpsilonbar[2,mif1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[2,mif1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[2,mif1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[2,mif1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[2,mif1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[2,mif1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif3,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[2,mif1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,1] * self.yUpsilonbar[2,mif1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,1] * self.yUpsilonbar[2,mif1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,1] * self.yUpsilonbar[2,mif1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,1] * self.yUpsilonbar[2,1] * self.yUpsilonbar[2,mif1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,1] * self.yUpsilonbar[2,1] * self.yUpsilonbar[2,mif1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,1] * self.yUpsilonbar[2,1] * self.yUpsilonbar[2,mif1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[2,mif1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[2,mif1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[2,mif1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[2,mif1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[2,mif1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif3,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[2,mif1] + -15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,2] * self.yUpsilonbar[2,mif1] + -15/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,2] * self.yUpsilonbar[2,mif1] + 15/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,2] * self.yUpsilonbar[2,mif1] + -15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[2,mif1] + -15/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[2,mif1] + 15/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[2,mif1] + -15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[2,mif1] + -15/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[2,mif1] + 15/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[2,mif1] + -15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[2,mif1] + -15/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[2,mif1] + 15/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif3,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[2,mif1] + 1/1536 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif3] + 1/256 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif3] + -1/256 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif3] + 7/3456 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,mif3] + -1/2304 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,mif3] + 1/576 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,mif3] + -1/384 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,mif3] + -1/576 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,mif3] + 1/384 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,mif3] + 1/1536 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif3] + 1/256 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif3] + -1/256 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif3] + 7/3456 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,mif3] + -1/2304 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,mif3] + 1/576 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,mif3] + -1/384 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,mif3] + -1/576 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,mif3] + 1/384 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[2,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[2,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[2,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[2,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[2,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[2,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[2,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[2,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[2,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[2,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[2,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[2,mif3] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[2,mif3] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[2,mif3] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[2,mif3] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[2,mif3] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[2,mif3] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[2,mif3] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[2,mif3] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[2,mif3] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[2,mif3] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[2,mif3] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[2,mif3] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[2,mif3] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[2,mif3] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[2,mif3] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[2,mif3] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[2,mif3] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[2,mif3] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[2,mif3] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[2,mif3] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[2,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[2,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[2,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[2,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[2,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[2,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[2,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[2,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[2,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[2,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[2,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[2,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[2,mif3] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[2,mif3] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[2,mif3] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[2,mif3] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[2,mif3] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[2,mif3] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[2,mif3] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[2,mif3] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[2,mif3] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[2,mif3] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[2,mif3] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[2,mif3] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[2,mif3] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[2,mif3] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[2,mif3] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[2,mif3] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[2,mif3] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[2,mif3] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[2,mif3] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[2,mif3] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[2,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,0] * self.yUpsilonbar[2,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,0] * self.yUpsilonbar[2,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,0] * self.yUpsilonbar[2,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,0] * self.yUpsilonbar[2,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,0] * self.yUpsilonbar[2,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,0] * self.yUpsilonbar[2,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[2,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[2,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[2,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[2,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[2,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[2,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,1] * self.yUpsilonbar[2,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,1] * self.yUpsilonbar[2,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,1] * self.yUpsilonbar[2,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,1] * self.yUpsilonbar[2,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,1] * self.yUpsilonbar[2,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,1] * self.yUpsilonbar[2,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[2,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[2,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[2,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[2,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[2,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[2,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,2] * self.yUpsilonbar[2,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,2] * self.yUpsilonbar[2,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,2] * self.yUpsilonbar[2,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,2] * self.yUpsilonbar[2,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,2] * self.yUpsilonbar[2,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,2] * self.yUpsilonbar[2,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[2,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[2,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[2,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[2,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[2,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[2,mif3] + -51/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[2,mif3] + -51/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[2,mif3] + -9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[2,mif3] + -9/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[2,mif3] + 9/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[2,mif3] + -51/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[2,mif3] + -51/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[2,mif3] + -9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[2,mif3] + -9/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[2,mif3] + 9/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[2,mif3] + 5/1728 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + -13/2304 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + 1/576 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + -1/384 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + -1/576 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + 1/384 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + 13/1536 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yUpsilon[0,mif4] * self.yUpsilonbar[mif1,0] + 1/256 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yUpsilon[0,mif4] * self.yUpsilonbar[mif1,0] + -1/256 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif4] * self.yUpsilonbar[mif1,0] + 5/1728 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + -13/2304 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + 1/576 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + -1/384 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + -1/576 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + 1/384 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + 13/1536 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif1,0] + 1/256 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif1,0] + -1/256 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif1,0] + -15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif1,0] + -15/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif1,0] + 15/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif1,0] + -15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,0] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif1,0] + -15/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,0] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif1,0] + 15/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,0] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif1,0] + -15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif1,0] + -15/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif1,0] + 15/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif1,0] + -15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif1,0] + -15/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif1,0] + 15/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif3,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif1,0] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,0] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,0] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,0] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,1] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,0] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,1] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,0] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,1] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,0] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,0] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,0] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,0] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,0] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,0] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif3,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,0] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,0] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,0] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,0] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,0] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,0] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,0] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,0] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,0] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,0] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,0] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,0] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif3,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,0] + -51/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[0,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,0] + -51/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,0] + -9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,0] + -9/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,0] + 9/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,0] + -51/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,0] + -51/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,0] + -9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,0] + -9/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,0] + 9/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,0] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,0] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,0] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,0] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,1] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,0] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,1] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,0] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,1] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,0] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,0] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,0] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,0] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,0] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,0] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif3,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,0] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,0] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,0] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,0] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,0] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,0] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,0] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,0] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,0] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,0] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,0] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,0] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,0] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,0] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,0] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,0] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,0] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,0] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,0] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,0] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,0] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,0] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,0] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,0] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,0] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,0] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,0] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,0] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,0] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,0] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,0] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,0] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,0] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif3,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,0] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,0] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,0] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,0] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,0] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,0] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,0] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,0] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,0] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,0] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,0] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,0] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,0] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,0] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,0] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,0] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,0] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,0] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,0] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,0] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,0] + 5/1728 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + -13/2304 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + 1/576 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + -1/384 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + -1/576 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + 1/384 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + 13/1536 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif1,1] + 1/256 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif1,1] + -1/256 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif1,1] + 5/1728 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + -13/2304 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + 1/576 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + -1/384 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + -1/576 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + 1/384 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + 13/1536 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif1,1] + 1/256 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif1,1] + -1/256 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif1,1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,0] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,0] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,0] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif3,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,1] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,1] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,1] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,1] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,1] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,1] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,1] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,1] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,1] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,0] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,0] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,0] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif3,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,1] + -15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif1,1] + -15/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif1,1] + 15/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif1,1] + -15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,1] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif1,1] + -15/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,1] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif1,1] + 15/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,1] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif1,1] + -15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif1,1] + -15/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif1,1] + 15/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif1,1] + -15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif1,1] + -15/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif1,1] + 15/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif3,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif1,1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif3,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,1] + -51/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,1] + -51/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,1] + -9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,1] + -9/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,1] + 9/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,1] + -51/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,1] + -51/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,1] + -9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,1] + -9/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,1] + 9/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif3,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,1] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,1] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,1] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,1] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,1] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,1] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,1] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,1] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,1] + 5/1728 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + -13/2304 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + 1/576 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + -1/384 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + -1/576 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + 1/384 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + 13/1536 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif1,2] + 1/256 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif1,2] + -1/256 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif1,2] + 5/1728 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] + -13/2304 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] + 1/576 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] + -1/384 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] + -1/576 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] + 1/384 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] + 13/1536 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif1,2] + 1/256 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif1,2] + -1/256 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif1,2] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,2] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,2] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,2] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,0] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,2] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,0] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,2] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,0] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,2] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,2] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,2] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,2] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,2] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,2] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif3,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,2] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,2] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,2] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,2] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,2] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,2] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,2] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,2] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,2] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,2] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,2] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,2] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,2] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,2] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,2] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,2] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,2] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,2] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,2] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,2] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,2] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,2] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,2] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,2] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,1] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,2] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,1] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,2] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,1] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,2] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,2] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,2] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,2] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,2] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,2] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif3,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,2] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,2] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,2] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,2] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,2] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,2] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,2] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,2] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,2] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,2] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,2] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,2] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,2] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,2] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,2] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,2] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,2] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,2] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,2] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,2] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,2] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,2] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,2] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,2] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,2] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,0] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,2] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,0] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,2] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,0] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,2] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,2] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,2] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,2] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,2] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,2] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif3,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,2] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,2] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,2] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,2] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,1] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,2] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,1] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,2] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,1] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,2] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,2] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,2] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,2] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,2] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,2] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif3,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,2] + -15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif1,2] + -15/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif1,2] + 15/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif1,2] + -15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif1,2] + -15/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif1,2] + 15/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif1,2] + -15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif1,2] + -15/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif1,2] + 15/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif1,2] + -15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif1,2] + -15/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif1,2] + 15/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif3,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif1,2] + -51/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,2] + -51/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,2] + -9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,2] + -9/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,2] + 9/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,2] + -51/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,2] + -51/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,2] + -9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,2] + -9/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,2] + 9/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,2] + 3/16 * (self.MUpsilon)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,mif3] + 1/512 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,mif3] + 9/256 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,mif3] + 27/512 * self.epsilonbar * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,mif3] + 1/32 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,mif3] + 3/128 * self.epsilonbar * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,mif3] + 9/256 * self.epsilonbar * (self.g2)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,mif3] + 1/64 * self.epsilonbar * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,mif3] + -9/256 * self.epsilonbar * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,mif3] + -1/64 * self.epsilonbar * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,mif3] + 3/16 * (self.MUpsilon)**(-2) * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,mif3] + 1/512 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,mif3] + 9/256 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,mif3] + 27/512 * self.epsilonbar * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,mif3] + 1/32 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,mif3] + 3/128 * self.epsilonbar * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,mif3] + 9/256 * self.epsilonbar * (self.g2)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,mif3] + 1/64 * self.epsilonbar * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,mif3] + -9/256 * self.epsilonbar * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,mif3] + -1/64 * self.epsilonbar * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,mif3] + -9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[0,mif4] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif1,mif3] + -9/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[0,mif4] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif1,mif3] + 9/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilon[0,mif4] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif1,mif3] + -9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif1,mif3] + -9/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif1,mif3] + 9/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif1,mif3] + -9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif1,mif3] + -9/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif1,mif3] + 9/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif1,mif3] + -9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif1,mif3] + -9/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif1,mif3] + 9/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif1,mif3] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,mif3] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,mif3] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif4] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,mif3] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,mif3] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,mif3] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,mif3] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,mif3] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,mif3] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,mif3] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,mif3] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,mif3] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,mif3] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,mif3] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,mif3] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,mif3] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,mif3] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,mif3] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,mif3] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,mif3] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,mif3] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,mif3] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,1] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,mif3] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,1] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,mif3] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,1] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,mif3] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,mif3] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,mif3] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,mif3] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,mif3] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,mif3] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,mif3] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,mif3] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,mif3] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,mif3] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,mif3] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,mif3] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,mif3] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,mif3] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,mif3] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,mif3] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,mif3] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,mif3] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,mif3] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,mif3] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,mif3] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,mif3] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,mif3] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,mif3] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[0,mif4] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[0,mif4] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,0] * self.yUpsilon[0,mif4] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[1,mif4] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[1,mif4] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[1,mif4] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[1,mif4] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[1,mif4] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[1,mif4] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[2,mif4] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[2,mif4] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[2,mif4] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif4,1] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif4,1] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[mif4,1] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif4,2] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif4,2] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[mif4,2] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif1,mif3] + -15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif1,mif3] + -15/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif1,mif3] + 15/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif1,mif3] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif1,mif3] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif1,mif3] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif1,mif3] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif1,mif3] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif1,mif3] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif1,mif3] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif1,mif3] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif1,mif3] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif1,mif3] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif1,mif3] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif1,mif3] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif1,mif3] + -15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif1,mif3] + -15/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif1,mif3] + 15/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif1,mif3] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif1,mif3] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif1,mif3] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif1,mif3] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif1,mif3] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif1,mif3] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif1,mif3] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif1,mif3] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif1,mif3] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif1,mif3] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif1,mif3] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif1,mif3] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif1,mif3] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,mif3] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,mif3] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif4] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,mif3] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,mif3] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,mif3] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,mif3] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,mif3] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,mif3] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,mif3] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,mif3] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,mif3] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,mif3] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,mif3] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,mif3] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,mif3] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,0] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,mif3] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,0] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,mif3] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,0] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,mif3] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,mif3] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,mif3] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,mif3] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,mif3] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,mif3] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,mif3] + -9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif1,mif3] + -9/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif1,mif3] + 9/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif1,mif3] + -9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif1,mif3] + -9/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif1,mif3] + 9/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif1,mif3] + -9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif1,mif3] + -9/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif1,mif3] + 9/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif1,mif3] + -9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif1,mif3] + -9/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif1,mif3] + 9/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif1,mif3] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,mif3] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,mif3] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,mif3] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,mif3] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,mif3] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,mif3] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,mif3] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,mif3] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,mif3] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,mif3] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,mif3] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,mif3] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,mif3] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,mif3] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,mif3] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,mif3] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,mif3] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,mif3] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,mif3] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,mif3] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,mif3] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,mif3] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,mif3] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[0,mif4] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[0,mif4] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[0,mif4] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[1,0] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[1,0] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif4] * self.yUpsilon[1,0] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[1,mif4] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[1,mif4] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,1] * self.yUpsilon[1,mif4] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[2,mif4] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[2,mif4] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[2,mif4] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif4,0] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif4,0] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[mif4,0] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif4,2] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif4,2] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[mif4,2] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif1,mif3] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif1,mif3] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif1,mif3] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif1,mif3] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif1,mif3] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif1,mif3] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif1,mif3] + -15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif1,mif3] + -15/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif1,mif3] + 15/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif1,mif3] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif1,mif3] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif1,mif3] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif1,mif3] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif1,mif3] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif1,mif3] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif1,mif3] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif1,mif3] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif1,mif3] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif1,mif3] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif1,mif3] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif1,mif3] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif1,mif3] + -15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif1,mif3] + -15/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif1,mif3] + 15/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif1,mif3] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif1,mif3] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif1,mif3] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif1,mif3] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif1,mif3] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif1,mif3] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif1,mif3] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,mif3] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,mif3] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,mif3] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,mif3] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,mif3] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,mif3] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,mif3] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,mif3] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,mif3] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,mif3] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,mif3] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,mif3] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,mif3] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,mif3] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,mif3] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,mif3] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,mif3] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,mif3] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,mif3] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,mif3] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,mif3] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,mif3] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,mif3] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,mif3] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,mif3] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,mif3] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,mif3] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,mif3] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,mif3] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,mif3] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,mif3] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,mif3] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,mif3] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,mif3] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,mif3] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,mif3] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,mif3] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,mif3] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,mif3] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,mif3] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,mif3] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,mif3] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,mif3] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,mif3] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,mif3] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,mif3] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,mif3] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,mif3] + -9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif1,mif3] + -9/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif1,mif3] + 9/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif1,mif3] + -9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif1,mif3] + -9/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif1,mif3] + 9/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif1,mif3] + -9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif1,mif3] + -9/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif1,mif3] + 9/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif1,mif3] + -9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif1,mif3] + -9/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif1,mif3] + 9/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[0,mif4] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[0,mif4] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[0,mif4] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[2,0] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[2,0] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif4] * self.yUpsilon[2,0] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[2,1] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[2,1] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif4] * self.yUpsilon[2,1] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif1,mif3] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif1,mif3] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif1,mif3] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif1,mif3] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif1,mif3] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif1,mif3] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif1,mif3] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif1,mif3] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif1,mif3] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif1,mif3] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif1,mif3] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif1,mif3] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif1,mif3] + -15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif1,mif3] + -15/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif1,mif3] + 15/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif1,mif3] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif1,mif3] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif1,mif3] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif1,mif3] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif1,mif3] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif1,mif3] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif1,mif3] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif1,mif3] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif1,mif3] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif1,mif3] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif1,mif3] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif1,mif3] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif1,mif3] + -15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif1,mif3] + -15/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif1,mif3] + 15/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[0,mif4] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,0] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[0,mif4] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,0] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,0] * self.yUpsilon[0,mif4] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,0] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,0] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,0] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[0,mif4] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[0,mif4] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[0,mif4] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif4] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,1] * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[0,mif4] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[0,mif4] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[0,mif4] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif4] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif4] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,2] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,2] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,2] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,2] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,2] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,2] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,2] + 1/1536 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif3,0] + 1/256 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif3,0] + -1/256 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif3,0] + 7/3456 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[0,mif4] * self.yUpsilonbar[mif3,0] + -1/2304 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[0,mif4] * self.yUpsilonbar[mif3,0] + 1/576 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[0,mif4] * self.yUpsilonbar[mif3,0] + -1/384 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[0,mif4] * self.yUpsilonbar[mif3,0] + -1/576 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif4] * self.yUpsilonbar[mif3,0] + 1/384 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif4] * self.yUpsilonbar[mif3,0] + 1/1536 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif3,0] + 1/256 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif3,0] + -1/256 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif3,0] + 7/3456 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif3,0] + -1/2304 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif3,0] + 1/576 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif3,0] + -1/384 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif3,0] + -1/576 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif3,0] + 1/384 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif3,0] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif3,0] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif3,0] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif3,0] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif3,0] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif3,0] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif3,0] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif3,0] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif3,0] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif3,0] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif3,0] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif3,0] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif3,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,0] + -51/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[0,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,0] + -51/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,0] + -9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,0] + -9/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,0] + 9/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,0] + -51/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,0] + -51/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,0] + -9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,0] + -9/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,0] + 9/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,0] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,0] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,0] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,0] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,0] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,0] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,0] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,0] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,0] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,0] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,0] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,0] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,0] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,0] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,0] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,0] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,0] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,0] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,0] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,0] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,0] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,0] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,0] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,0] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,0] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,0] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,0] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,0] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,0] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,0] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,0] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,0] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,0] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,0] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,0] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,0] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,0] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,0] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,0] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,0] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,0] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,0] + -51/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[0,mif4] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,0] + -51/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,0] + -9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,0] + -9/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,0] + 9/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,0] + -51/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,0] + -51/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,0] + -9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,0] + -9/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,0] + 9/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,0] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,0] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,0] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,0] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,0] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,0] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,0] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,0] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,0] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,0] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,0] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,0] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,0] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,0] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,0] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,0] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,0] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,0] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,0] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,0] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,0] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,0] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,0] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,0] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,0] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,0] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,0] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,0] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,0] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,0] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,0] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,0] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,0] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,0] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,0] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,0] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,0] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,0] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,0] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,0] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,0] + 1/1536 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif3,1] + 1/256 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif3,1] + -1/256 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif3,1] + 7/3456 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif3,1] + -1/2304 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif3,1] + 1/576 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif3,1] + -1/384 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif3,1] + -1/576 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif3,1] + 1/384 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif3,1] + 1/1536 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif3,1] + 1/256 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif3,1] + -1/256 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif3,1] + 7/3456 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif3,1] + -1/2304 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif3,1] + 1/576 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif3,1] + -1/384 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif3,1] + -1/576 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif3,1] + 1/384 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif3,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,1] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,1] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,1] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,1] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,1] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,1] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,1] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,1] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,1] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif3,1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif3,1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif3,1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif3,1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif3,1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif3,1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif3,1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif3,1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif3,1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif3,1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif3,1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif3,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,1] + -51/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,1] + -51/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,1] + -9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,1] + -9/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,1] + 9/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,1] + -51/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,1] + -51/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,1] + -9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,1] + -9/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,1] + 9/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,1] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,1] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,1] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,1] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,1] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,1] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,1] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,1] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,1] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,1] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,1] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,1] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,1] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,1] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,1] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,1] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,1] + -51/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,1] + -51/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,1] + -9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,1] + -9/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,1] + 9/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,1] + -51/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,1] + -51/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,1] + -9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,1] + -9/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,1] + 9/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,1] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,1] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,1] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,1] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,1] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,1] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,1] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,1] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,1] + 1/1536 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif3,2] + 1/256 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif3,2] + -1/256 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif3,2] + 7/3456 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif3,2] + -1/2304 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif3,2] + 1/576 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif3,2] + -1/384 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif3,2] + -1/576 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif3,2] + 1/384 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif3,2] + 1/1536 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif3,2] + 1/256 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif3,2] + -1/256 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif3,2] + 7/3456 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif3,2] + -1/2304 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif3,2] + 1/576 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif3,2] + -1/384 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif3,2] + -1/576 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif3,2] + 1/384 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif3,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,2] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,2] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,2] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,2] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,2] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,2] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,2] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,2] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,2] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,2] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,2] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,2] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,2] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,2] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,2] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,2] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,2] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,2] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,2] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,2] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,2] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,2] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,2] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,2] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,2] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,2] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,2] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,2] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,2] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,2] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,2] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,2] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,2] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,2] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,2] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,2] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,2] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,2] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,2] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,2] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,2] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif3,2] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif3,2] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif3,2] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif3,2] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif3,2] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif3,2] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif3,2] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif3,2] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif3,2] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif3,2] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif3,2] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif3,2] + -51/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,2] + -51/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,2] + -9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,2] + -9/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,2] + 9/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,2] + -51/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,2] + -51/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,2] + -9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,2] + -9/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,2] + 9/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,2] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,2] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,2] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,2] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,2] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,2] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,2] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,2] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,2] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,2] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,2] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,2] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,2] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,2] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,2] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,2] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,2] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,2] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,2] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,2] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,2] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,2] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,2] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,2] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,2] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,2] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,2] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,2] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,2] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,2] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,2] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,2] + -45/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,2] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,2] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,2] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,2] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,2] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,2] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,2] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,2] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,2] + -51/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,2] + -51/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,2] + -9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,2] + -9/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,2] + 9/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,2] + -51/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,2] + -51/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,2] + -9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,2] + -9/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,2] + 9/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,2] + 3/16 * (self.MUpsilon)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif3,mif1] + 1/512 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif3,mif1] + 9/256 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif3,mif1] + 27/512 * self.epsilonbar * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif3,mif1] + 1/32 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif3,mif1] + 3/128 * self.epsilonbar * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif3,mif1] + 9/256 * self.epsilonbar * (self.g2)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif3,mif1] + 1/64 * self.epsilonbar * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif3,mif1] + -9/256 * self.epsilonbar * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif3,mif1] + -1/64 * self.epsilonbar * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif3,mif1] + 3/16 * (self.MUpsilon)**(-2) * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif3,mif1] + 1/512 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif3,mif1] + 9/256 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif3,mif1] + 27/512 * self.epsilonbar * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif3,mif1] + 1/32 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif3,mif1] + 3/128 * self.epsilonbar * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif3,mif1] + 9/256 * self.epsilonbar * (self.g2)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif3,mif1] + 1/64 * self.epsilonbar * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif3,mif1] + -9/256 * self.epsilonbar * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif3,mif1] + -1/64 * self.epsilonbar * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif3,mif1] + -9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[0,mif4] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif3,mif1] + -9/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[0,mif4] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif3,mif1] + 9/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilon[0,mif4] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif3,mif1] + -9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif3,mif1] + -9/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif3,mif1] + 9/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif3,mif1] + -9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif3,mif1] + -9/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif3,mif1] + 9/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif3,mif1] + -9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif3,mif1] + -9/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif3,mif1] + 9/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif3,mif1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,mif1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,mif1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif4] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,mif1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,mif1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,mif1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,mif1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,mif1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,mif1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,mif1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,mif1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,mif1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,mif1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,mif1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,mif1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,mif1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,mif1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,mif1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,mif1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,mif1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,mif1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,mif1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,1] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,mif1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,1] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,mif1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,1] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,mif1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,mif1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,mif1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,mif1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,mif1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,mif1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,mif1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,mif1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,mif1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,mif1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,mif1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,mif1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,mif1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,mif1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,mif1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,mif1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,mif1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,mif1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,mif1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,mif1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,mif1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,mif1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,mif1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,mif1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[0,mif4] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[0,mif4] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,0] * self.yUpsilon[0,mif4] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[1,mif4] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[1,mif4] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[1,mif4] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[1,mif4] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[1,mif4] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[1,mif4] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[2,mif4] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[2,mif4] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[2,mif4] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif4,1] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif4,1] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[mif4,1] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif4,2] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif4,2] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[mif4,2] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif3,mif1] + -15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif3,mif1] + -15/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif3,mif1] + 15/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif3,mif1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif3,mif1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif3,mif1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif3,mif1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif3,mif1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif3,mif1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif3,mif1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif3,mif1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif3,mif1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif3,mif1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif3,mif1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif3,mif1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif3,mif1] + -15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif3,mif1] + -15/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif3,mif1] + 15/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif3,mif1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif3,mif1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif3,mif1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif3,mif1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif3,mif1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif3,mif1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif3,mif1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif3,mif1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif3,mif1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif3,mif1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif3,mif1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif3,mif1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif3,mif1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,mif1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,mif1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif4] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,mif1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,mif1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,mif1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,mif1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,mif1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,mif1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,mif1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,mif1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,mif1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,mif1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,mif1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,mif1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,mif1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,0] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,mif1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,0] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,mif1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,0] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,mif1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,mif1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,mif1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,mif1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,mif1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,mif1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,mif1] + -9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif3,mif1] + -9/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif3,mif1] + 9/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif3,mif1] + -9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif3,mif1] + -9/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif3,mif1] + 9/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif3,mif1] + -9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif3,mif1] + -9/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif3,mif1] + 9/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif3,mif1] + -9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif3,mif1] + -9/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif3,mif1] + 9/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif3,mif1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,mif1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,mif1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,mif1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,mif1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,mif1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,mif1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,mif1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,mif1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,mif1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,mif1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,mif1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,mif1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,mif1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,mif1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,mif1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,mif1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,mif1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,mif1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,mif1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,mif1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,mif1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,mif1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,mif1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[0,mif4] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[0,mif4] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[0,mif4] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[1,0] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[1,0] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif4] * self.yUpsilon[1,0] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[1,mif4] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[1,mif4] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,1] * self.yUpsilon[1,mif4] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[2,mif4] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[2,mif4] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[2,mif4] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif4,0] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif4,0] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[mif4,0] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif4,2] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif4,2] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[mif4,2] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif3,mif1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif3,mif1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif3,mif1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif3,mif1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif3,mif1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif3,mif1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif3,mif1] + -15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif3,mif1] + -15/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif3,mif1] + 15/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif3,mif1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif3,mif1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif3,mif1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif3,mif1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif3,mif1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif3,mif1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif3,mif1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif3,mif1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif3,mif1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif3,mif1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif3,mif1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif3,mif1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif3,mif1] + -15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif3,mif1] + -15/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif3,mif1] + 15/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif3,mif1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif3,mif1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif3,mif1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif3,mif1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif3,mif1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif3,mif1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif3,mif1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,mif1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,mif1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,mif1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,mif1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,mif1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,mif1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,mif1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,mif1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,mif1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,mif1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,mif1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,mif1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,mif1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,mif1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,mif1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,mif1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,mif1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,mif1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,mif1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,mif1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,mif1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,mif1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,mif1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,mif1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,mif1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,mif1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,mif1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,mif1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,mif1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,mif1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,mif1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,mif1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,mif1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,mif1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,mif1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,mif1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,mif1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,mif1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,mif1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,mif1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,mif1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,mif1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,mif1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,mif1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,mif1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,mif1] + -9/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,mif1] + 9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,mif1] + -9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif3,mif1] + -9/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif3,mif1] + 9/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif3,mif1] + -9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif3,mif1] + -9/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif3,mif1] + 9/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif3,mif1] + -9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif3,mif1] + -9/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif3,mif1] + 9/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif3,mif1] + -9/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif3,mif1] + -9/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif3,mif1] + 9/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[0,mif4] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[0,mif4] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[0,mif4] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[2,0] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[2,0] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif4] * self.yUpsilon[2,0] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[2,1] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[2,1] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif4] * self.yUpsilon[2,1] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif3,mif1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif3,mif1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif3,mif1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif3,mif1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif3,mif1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif3,mif1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif3,mif1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif3,mif1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif3,mif1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif3,mif1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif3,mif1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif3,mif1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif3,mif1] + -15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif3,mif1] + -15/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif3,mif1] + 15/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif3,mif1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif3,mif1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif3,mif1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif3,mif1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif3,mif1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif3,mif1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif3,mif1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif3,mif1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif3,mif1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif3,mif1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif3,mif1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif3,mif1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif3,mif1] + -15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif3,mif1] + -15/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif3,mif1] + 15/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[0,mif4] * self.yUpsilonbar[mif2,0] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[0,mif4] * self.yUpsilonbar[mif2,0] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,0] * self.yUpsilon[0,mif4] * self.yUpsilonbar[mif2,0] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif2,0] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif2,0] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif2,0] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif2,0] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif2,0] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif2,0] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif2,0] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif2,0] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif2,0] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif2,0] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif2,0] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif2,0] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif2,0] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif2,0] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif2,0] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif2,0] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif2,0] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif2,0] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif2,0] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif2,0] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif2,0] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif2,0] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif2,0] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif2,0] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif2,0] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif2,0] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif2,0] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[0,mif4] * self.yUpsilonbar[mif2,1] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[0,mif4] * self.yUpsilonbar[mif2,1] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[0,mif4] * self.yUpsilonbar[mif2,1] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[1,0] * self.yUpsilonbar[mif2,1] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[1,0] * self.yUpsilonbar[mif2,1] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif4] * self.yUpsilon[1,0] * self.yUpsilonbar[mif2,1] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif2,1] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif2,1] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,1] * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif2,1] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif2,1] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif2,1] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif2,1] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif2,1] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif2,1] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif2,1] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif2,1] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif2,1] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif2,1] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif2,1] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif2,1] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif2,1] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif2,1] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif2,1] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif2,1] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif2,1] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif2,1] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif2,1] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif2,1] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif2,1] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif2,1] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[0,mif4] * self.yUpsilonbar[mif2,2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[0,mif4] * self.yUpsilonbar[mif2,2] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[0,mif4] * self.yUpsilonbar[mif2,2] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif2,2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif2,2] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif2,2] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[2,0] * self.yUpsilonbar[mif2,2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[2,0] * self.yUpsilonbar[mif2,2] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif4] * self.yUpsilon[2,0] * self.yUpsilonbar[mif2,2] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[2,1] * self.yUpsilonbar[mif2,2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[2,1] * self.yUpsilonbar[mif2,2] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif4] * self.yUpsilon[2,1] * self.yUpsilonbar[mif2,2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif2,2] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif2,2] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif2,2] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif2,2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif2,2] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif2,2] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif2,2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif2,2] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif2,2] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif2,2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif2,2] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif2,2] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif2,2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif2,2] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif2,2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif2,2] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif2,2] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif2,2] * self.yUpsilonbar[mif3,mif1] + -15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,0] + -15/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,0] + 15/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,0] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,0] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,0] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,0] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,0] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,0] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,0] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,0] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,0] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,0] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,0] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,0] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,0] + -15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,0] + -15/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,0] + 15/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,0] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,0] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,0] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,0] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,0] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,0] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,0] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,0] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,0] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,0] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,0] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,0] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,0] + -15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,0] + -15/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,0] + 15/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,0] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,0] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,0] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,0] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,0] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,0] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,0] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,0] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,0] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,0] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,0] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,0] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,0] + -15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,0] + -15/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,0] + 15/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,0] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,0] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,0] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,0] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,0] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,0] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,0] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,0] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,0] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,0] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,0] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,0] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,0] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,1] + -15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,1] + -15/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,1] + 15/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,1] + -15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,1] + -15/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,1] + 15/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,1] + -15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,1] + -15/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,1] + 15/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,1] + -15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,1] + -15/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,1] + 15/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,1] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,1] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,1] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,2] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,2] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,2] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,2] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,2] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,2] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,2] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,2] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,2] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,2] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,2] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,2] + -15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,2] + -15/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,2] + 15/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,2] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,2] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,2] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,2] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,2] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,2] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,2] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,2] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,2] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,2] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,2] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,2] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,2] + -15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,2] + -15/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,2] + 15/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,2] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,2] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,2] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,2] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,2] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,2] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,2] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,2] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,2] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,2] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,2] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,2] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,2] + -15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,2] + -15/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,2] + 15/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,2] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,2] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,2] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,2] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,2] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,2] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,2] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,2] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,2] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,2] + -15/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,2] + -15/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,2] + 15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,2] + -15/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,2] + -15/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,2] + 15/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,2])

    def alphaOqq3(self, mif1,mif2,mif3,mif4):
        return (-1/512 * (self.g3)**(4) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.kronecker_delta(mif2,mif3) + -1/320 * (self.g2)**(4) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 1/96 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + 1/192 * (self.g2)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + -1/192 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + 13/1536 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yUpsilon[0,mif4] * self.yUpsilonbar[0,mif1] + 1/256 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yUpsilon[0,mif4] * self.yUpsilonbar[0,mif1] + -1/256 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif4] * self.yUpsilonbar[0,mif1] + 1/96 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + 1/192 * (self.g2)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + -1/192 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + 13/1536 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif1] + 1/256 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif1] + -1/256 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,0] * self.yUpsilonbar[0,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,0] * self.yUpsilonbar[0,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,0] * self.yUpsilonbar[0,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,0] * self.yUpsilonbar[0,0] * self.yUpsilonbar[0,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,0] * self.yUpsilonbar[0,0] * self.yUpsilonbar[0,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,0] * self.yUpsilonbar[0,0] * self.yUpsilonbar[0,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,0] * self.yUpsilonbar[0,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,0] * self.yUpsilonbar[0,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,0] * self.yUpsilonbar[0,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,0] * self.yUpsilonbar[0,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,0] * self.yUpsilonbar[0,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif3,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,0] * self.yUpsilonbar[0,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[0,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[0,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[0,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,1] * self.yUpsilonbar[0,1] * self.yUpsilonbar[0,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,1] * self.yUpsilonbar[0,1] * self.yUpsilonbar[0,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,1] * self.yUpsilonbar[0,1] * self.yUpsilonbar[0,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[0,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[0,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[0,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[0,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[0,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif3,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[0,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[0,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[0,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[0,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[0,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[0,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[0,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[0,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[0,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[0,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[0,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[0,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif3,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[0,mif1] + 1/1536 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif3] + 1/256 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif3] + -1/256 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif3] + 1/128 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[0,mif4] * self.yUpsilonbar[0,mif3] + 1/192 * (self.g2)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[0,mif4] * self.yUpsilonbar[0,mif3] + -1/192 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif4] * self.yUpsilonbar[0,mif3] + 1/1536 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif3] + 1/256 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif3] + -1/256 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif3] + 1/128 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif3] + 1/192 * (self.g2)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif3] + -1/192 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,0] * self.yUpsilonbar[0,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,0] * self.yUpsilonbar[0,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,0] * self.yUpsilonbar[0,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,0] * self.yUpsilonbar[0,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,0] * self.yUpsilonbar[0,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,0] * self.yUpsilonbar[0,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,0] * self.yUpsilonbar[0,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,0] * self.yUpsilonbar[0,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,0] * self.yUpsilonbar[0,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,0] * self.yUpsilonbar[0,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,0] * self.yUpsilonbar[0,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,0] * self.yUpsilonbar[0,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[0,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[0,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[0,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[0,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[0,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[0,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[0,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[0,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[0,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[0,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[0,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[0,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[0,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[0,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[0,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[0,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[0,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[0,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[0,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[0,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[0,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[0,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[0,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[0,mif3] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[0,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[0,mif3] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[0,mif3] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[0,mif3] + -3/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[0,mif3] + 3/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[0,mif3] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[0,mif3] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[0,mif3] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[0,mif3] + -3/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[0,mif3] + 3/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[0,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[1,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[1,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[1,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,1] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[1,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,1] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[1,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,1] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[1,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[1,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[1,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[1,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[1,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[1,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif3,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[1,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[1,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[1,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[1,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[1,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[1,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[1,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[1,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[1,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[1,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[1,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[1,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[1,0] + 1/96 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + 1/192 * (self.g2)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + -1/192 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + 13/1536 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yUpsilon[1,mif4] * self.yUpsilonbar[1,mif1] + 1/256 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yUpsilon[1,mif4] * self.yUpsilonbar[1,mif1] + -1/256 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif4] * self.yUpsilonbar[1,mif1] + 1/96 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + 1/192 * (self.g2)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + -1/192 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + 13/1536 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,mif1] + 1/256 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,mif1] + -1/256 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[1,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[1,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[1,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,0] * self.yUpsilonbar[0,1] * self.yUpsilonbar[1,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,0] * self.yUpsilonbar[0,1] * self.yUpsilonbar[1,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,0] * self.yUpsilonbar[0,1] * self.yUpsilonbar[1,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[1,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[1,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[1,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[1,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[1,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif3,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[1,mif1] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[1,mif1] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[1,mif1] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[1,mif1] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[1,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[1,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[1,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[1,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[1,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[1,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[1,mif1] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[1,mif1] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[1,mif1] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[1,mif1] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,1] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[1,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[1,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[1,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[1,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[1,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[1,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[1,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,0] * self.yUpsilonbar[1,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,0] * self.yUpsilonbar[1,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,0] * self.yUpsilonbar[1,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,0] * self.yUpsilonbar[1,0] * self.yUpsilonbar[1,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,0] * self.yUpsilonbar[1,0] * self.yUpsilonbar[1,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,0] * self.yUpsilonbar[1,0] * self.yUpsilonbar[1,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[1,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[1,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[1,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[1,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[1,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif3,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[1,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,1] * self.yUpsilonbar[1,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,1] * self.yUpsilonbar[1,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,1] * self.yUpsilonbar[1,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,1] * self.yUpsilonbar[1,1] * self.yUpsilonbar[1,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,1] * self.yUpsilonbar[1,1] * self.yUpsilonbar[1,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,1] * self.yUpsilonbar[1,1] * self.yUpsilonbar[1,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,1] * self.yUpsilonbar[1,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,1] * self.yUpsilonbar[1,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,1] * self.yUpsilonbar[1,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,1] * self.yUpsilonbar[1,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,1] * self.yUpsilonbar[1,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif3,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,1] * self.yUpsilonbar[1,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[1,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[1,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[1,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[1,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[1,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[1,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[1,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[1,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[1,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[1,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[1,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif3,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[1,mif1] + 1/1536 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif3] + 1/256 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif3] + -1/256 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif3] + 1/128 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[1,mif4] * self.yUpsilonbar[1,mif3] + 1/192 * (self.g2)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[1,mif4] * self.yUpsilonbar[1,mif3] + -1/192 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif4] * self.yUpsilonbar[1,mif3] + 1/1536 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif3] + 1/256 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif3] + -1/256 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif3] + 1/128 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,mif3] + 1/192 * (self.g2)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,mif3] + -1/192 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[1,mif3] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[1,mif3] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[1,mif3] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[1,mif3] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[1,mif3] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[1,mif3] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[1,mif3] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[1,mif3] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,1] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,0] * self.yUpsilonbar[1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,0] * self.yUpsilonbar[1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,0] * self.yUpsilonbar[1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,0] * self.yUpsilonbar[1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,0] * self.yUpsilonbar[1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,0] * self.yUpsilonbar[1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,1] * self.yUpsilonbar[1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,1] * self.yUpsilonbar[1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,1] * self.yUpsilonbar[1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,1] * self.yUpsilonbar[1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,1] * self.yUpsilonbar[1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,1] * self.yUpsilonbar[1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,1] * self.yUpsilonbar[1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,1] * self.yUpsilonbar[1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,1] * self.yUpsilonbar[1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,1] * self.yUpsilonbar[1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,1] * self.yUpsilonbar[1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,1] * self.yUpsilonbar[1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[1,mif3] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[1,mif3] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[1,mif3] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[1,mif3] + -3/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[1,mif3] + 3/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[1,mif3] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[1,mif3] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[1,mif3] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[1,mif3] + -3/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[1,mif3] + 3/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[2,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[2,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[2,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[2,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[2,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[2,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[2,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[2,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[2,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[2,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[2,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif3,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[2,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[2,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[2,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[2,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[2,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[2,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[2,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[2,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[2,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[2,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[2,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[2,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[2,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[2,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[2,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[2,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[2,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[2,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[2,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[2,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[2,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[2,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[2,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[2,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif3,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[2,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[2,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[2,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[2,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[2,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[2,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[2,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[2,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[2,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[2,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[2,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[2,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[2,1] + 1/96 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + 1/192 * (self.g2)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + -1/192 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + 13/1536 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,mif1] + 1/256 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,mif1] + -1/256 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,mif1] + 1/96 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + 1/192 * (self.g2)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + -1/192 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + 13/1536 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,mif1] + 1/256 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,mif1] + -1/256 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[2,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[2,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[2,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,0] * self.yUpsilonbar[0,2] * self.yUpsilonbar[2,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,0] * self.yUpsilonbar[0,2] * self.yUpsilonbar[2,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,0] * self.yUpsilonbar[0,2] * self.yUpsilonbar[2,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[2,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[2,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[2,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[2,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[2,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif3,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[2,mif1] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[2,mif1] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[2,mif1] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[2,mif1] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[2,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[2,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[2,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[2,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[2,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[2,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[2,mif1] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[2,mif1] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[2,mif1] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[2,mif1] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[2,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[2,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[2,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[2,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[2,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[2,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[2,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[2,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[2,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[2,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,1] * self.yUpsilonbar[1,2] * self.yUpsilonbar[2,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,1] * self.yUpsilonbar[1,2] * self.yUpsilonbar[2,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,1] * self.yUpsilonbar[1,2] * self.yUpsilonbar[2,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[2,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[2,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[2,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[2,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[2,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif3,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[2,mif1] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[2,mif1] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[2,mif1] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[2,mif1] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[2,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[2,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[2,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[2,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[2,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[2,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[2,mif1] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[2,mif1] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[2,mif1] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[2,mif1] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,2] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[2,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[2,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[2,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[2,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[2,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[2,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[2,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,0] * self.yUpsilonbar[2,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,0] * self.yUpsilonbar[2,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,0] * self.yUpsilonbar[2,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,0] * self.yUpsilonbar[2,0] * self.yUpsilonbar[2,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,0] * self.yUpsilonbar[2,0] * self.yUpsilonbar[2,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,0] * self.yUpsilonbar[2,0] * self.yUpsilonbar[2,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[2,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[2,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[2,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[2,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[2,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif3,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[2,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,1] * self.yUpsilonbar[2,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,1] * self.yUpsilonbar[2,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,1] * self.yUpsilonbar[2,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,1] * self.yUpsilonbar[2,1] * self.yUpsilonbar[2,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,1] * self.yUpsilonbar[2,1] * self.yUpsilonbar[2,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,1] * self.yUpsilonbar[2,1] * self.yUpsilonbar[2,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[2,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[2,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[2,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[2,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[2,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif3,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[2,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,2] * self.yUpsilonbar[2,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,2] * self.yUpsilonbar[2,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,2] * self.yUpsilonbar[2,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[2,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[2,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[2,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[2,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[2,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[2,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[2,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[2,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif3,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[2,mif1] + 1/1536 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif3] + 1/256 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif3] + -1/256 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif3] + 1/128 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,mif3] + 1/192 * (self.g2)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,mif3] + -1/192 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,mif3] + 1/1536 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif3] + 1/256 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif3] + -1/256 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif3] + 1/128 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,mif3] + 1/192 * (self.g2)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,mif3] + -1/192 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[2,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[2,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[2,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[2,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[2,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[2,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[2,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[2,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[2,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[2,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[2,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[2,mif3] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[2,mif3] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[2,mif3] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[2,mif3] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[2,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[2,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[2,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[2,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[2,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[2,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[2,mif3] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[2,mif3] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[2,mif3] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[2,mif3] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[2,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[2,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[2,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[2,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[2,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[2,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[2,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[2,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[2,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[2,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[2,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[2,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[2,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[2,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[2,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[2,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[2,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[2,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[2,mif3] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[2,mif3] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[2,mif3] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[2,mif3] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[2,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[2,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[2,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[2,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[2,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[2,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[2,mif3] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[2,mif3] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[2,mif3] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[2,mif3] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[2,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[2,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[2,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[2,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[2,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[2,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[2,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,0] * self.yUpsilonbar[2,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,0] * self.yUpsilonbar[2,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,0] * self.yUpsilonbar[2,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,0] * self.yUpsilonbar[2,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,0] * self.yUpsilonbar[2,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,0] * self.yUpsilonbar[2,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[2,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[2,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[2,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[2,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[2,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[2,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,1] * self.yUpsilonbar[2,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,1] * self.yUpsilonbar[2,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,1] * self.yUpsilonbar[2,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,1] * self.yUpsilonbar[2,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,1] * self.yUpsilonbar[2,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,1] * self.yUpsilonbar[2,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[2,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[2,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[2,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[2,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[2,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[2,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,2] * self.yUpsilonbar[2,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,2] * self.yUpsilonbar[2,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,2] * self.yUpsilonbar[2,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,2] * self.yUpsilonbar[2,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,2] * self.yUpsilonbar[2,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,2] * self.yUpsilonbar[2,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[2,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[2,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[2,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[2,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[2,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[2,mif3] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[2,mif3] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[2,mif3] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[2,mif3] + -3/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[2,mif3] + 3/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[2,mif3] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[2,mif3] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[2,mif3] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[2,mif3] + -3/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[2,mif3] + 3/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[2,mif3] + 1/96 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + 1/192 * (self.g2)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + -1/192 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + 13/1536 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yUpsilon[0,mif4] * self.yUpsilonbar[mif1,0] + 1/256 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yUpsilon[0,mif4] * self.yUpsilonbar[mif1,0] + -1/256 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif4] * self.yUpsilonbar[mif1,0] + 1/96 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + 1/192 * (self.g2)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + -1/192 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + 13/1536 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif1,0] + 1/256 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif1,0] + -1/256 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif1,0] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif1,0] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif1,0] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif1,0] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,0] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif1,0] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,0] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif1,0] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,0] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif1,0] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif1,0] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif1,0] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif1,0] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif1,0] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif1,0] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif3,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif1,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,1] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,1] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,1] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif3,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif3,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,0] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[0,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,0] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,0] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,0] + -3/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,0] + 3/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,0] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,0] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,0] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,0] + -3/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,0] + 3/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,1] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,1] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,1] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif3,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,0] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,0] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,0] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,0] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,0] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,0] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,0] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,0] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,0] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,0] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,0] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,0] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,0] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,0] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,0] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,0] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,0] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,0] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,0] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,0] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,0] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif3,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,0] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,0] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,0] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,0] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,0] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,0] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,0] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,0] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,0] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,0] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,0] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,0] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,0] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,0] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,0] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,0] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,0] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,0] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,0] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,0] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,0] + 1/96 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + 1/192 * (self.g2)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + -1/192 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + 13/1536 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif1,1] + 1/256 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif1,1] + -1/256 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif1,1] + 1/96 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + 1/192 * (self.g2)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + -1/192 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + 13/1536 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif1,1] + 1/256 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif1,1] + -1/256 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif1,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,0] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,0] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,0] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif3,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,1] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,1] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,1] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,1] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,1] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,1] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,1] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,1] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,1] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,0] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,0] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,0] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif3,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif1,1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif1,1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif1,1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,1] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif1,1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,1] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif1,1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,1] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif1,1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif1,1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif1,1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif1,1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif1,1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif1,1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif3,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif1,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif3,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,1] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,1] + -3/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,1] + 3/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,1] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,1] + -3/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,1] + 3/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif3,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,1] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,1] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,1] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,1] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,1] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,1] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,1] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,1] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,1] + 1/96 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + 1/192 * (self.g2)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + -1/192 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + 13/1536 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif1,2] + 1/256 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif1,2] + -1/256 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif1,2] + 1/96 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] + 1/192 * (self.g2)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] + -1/192 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] + 13/1536 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif1,2] + 1/256 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif1,2] + -1/256 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif2,mif3) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif1,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,0] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,0] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,0] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif3,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,2] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,2] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,2] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,2] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,2] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,2] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,2] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,2] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,2] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,2] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,2] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,2] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,2] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,2] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,2] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,2] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,2] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,2] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,2] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,2] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif3] * self.yUpsilonbar[mif1,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,1] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,1] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,1] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif3,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,2] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,2] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,2] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,2] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,2] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,2] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,2] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,2] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,2] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,2] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,2] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,2] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,2] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,2] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,2] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,2] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,2] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,2] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,2] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,2] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,2] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif3] * self.yUpsilonbar[mif1,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,0] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,0] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,0] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif3,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,1] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,1] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,1] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif3,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,2] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif1,2] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif1,2] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif3] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif1,2] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif1,2] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif1,2] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,mif4] * self.yUpsilon[mif3,2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif1,2] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif1,2] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif1,2] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif3] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif1,2] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif1,2] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif3,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif1,2] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif3,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif1,2] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,2] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,2] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,2] + -3/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,2] + 3/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,2] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,2] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,2] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,2] + -3/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,2] + 3/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,mif3] * self.yUpsilonbar[mif1,2] + 1/16 * (self.MUpsilon)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,mif3] + 1/1536 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,mif3] + 3/256 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,mif3] + 9/512 * self.epsilonbar * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,mif3] + -3/128 * self.epsilonbar * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,mif3] + 3/256 * self.epsilonbar * (self.g2)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,mif3] + -1/64 * self.epsilonbar * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,mif3] + -3/256 * self.epsilonbar * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,mif3] + 1/64 * self.epsilonbar * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,mif3] + 1/16 * (self.MUpsilon)**(-2) * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,mif3] + 1/1536 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,mif3] + 3/256 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,mif3] + 9/512 * self.epsilonbar * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,mif3] + -3/128 * self.epsilonbar * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,mif3] + 3/256 * self.epsilonbar * (self.g2)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,mif3] + -1/64 * self.epsilonbar * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,mif3] + -3/256 * self.epsilonbar * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,mif3] + 1/64 * self.epsilonbar * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,mif3] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[0,mif4] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif1,mif3] + -3/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[0,mif4] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif1,mif3] + 3/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilon[0,mif4] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif1,mif3] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif1,mif3] + -3/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif1,mif3] + 3/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif1,mif3] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif1,mif3] + -3/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif1,mif3] + 3/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif1,mif3] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif1,mif3] + -3/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif1,mif3] + 3/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif4] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,1] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,1] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,1] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[0,mif4] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[0,mif4] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,0] * self.yUpsilon[0,mif4] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[1,mif4] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[1,mif4] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[1,mif4] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[1,mif4] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[1,mif4] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[1,mif4] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[2,mif4] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[2,mif4] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[2,mif4] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif4,1] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif4,1] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[mif4,1] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif4,2] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif4,2] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[mif4,2] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif4] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,0] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,0] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,0] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif1,mif3] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif1,mif3] + -3/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif1,mif3] + 3/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif1,mif3] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif1,mif3] + -3/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif1,mif3] + 3/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif1,mif3] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif1,mif3] + -3/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif1,mif3] + 3/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif1,mif3] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif1,mif3] + -3/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif1,mif3] + 3/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[0,mif4] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[0,mif4] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[0,mif4] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[1,0] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[1,0] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif4] * self.yUpsilon[1,0] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[1,mif4] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[1,mif4] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,1] * self.yUpsilon[1,mif4] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[2,mif4] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[2,mif4] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[2,mif4] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif4,0] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif4,0] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[mif4,0] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif4,2] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif4,2] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[mif4,2] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif1,mif3] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif1,mif3] + -3/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif1,mif3] + 3/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif1,mif3] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif1,mif3] + -3/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif1,mif3] + 3/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif1,mif3] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif1,mif3] + -3/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif1,mif3] + 3/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif1,mif3] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif1,mif3] + -3/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif1,mif3] + 3/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[0,mif4] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[0,mif4] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[0,mif4] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[2,0] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[2,0] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif4] * self.yUpsilon[2,0] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[2,1] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[2,1] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif4] * self.yUpsilon[2,1] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif1,mif3] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif1,mif3] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif1,mif3] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif1,mif3] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif1,mif3] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif1,mif3] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[0,mif4] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,0] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[0,mif4] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,0] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,0] * self.yUpsilon[0,mif4] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,0] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,0] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,0] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[0,mif4] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[0,mif4] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[0,mif4] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif4] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,1] * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[0,mif4] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[0,mif4] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[0,mif4] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif4] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif4] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,2] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,2] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,2] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,2] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,2] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,2] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif2,2] + 1/1536 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif3,0] + 1/256 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif3,0] + -1/256 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif3,0] + 1/128 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[0,mif4] * self.yUpsilonbar[mif3,0] + 1/192 * (self.g2)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[0,mif4] * self.yUpsilonbar[mif3,0] + -1/192 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif4] * self.yUpsilonbar[mif3,0] + 1/1536 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif3,0] + 1/256 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif3,0] + -1/256 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif3,0] + 1/128 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif3,0] + 1/192 * (self.g2)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif3,0] + -1/192 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif3,0] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif3,0] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif3,0] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif3,0] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif3,0] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif3,0] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif3,0] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif3,0] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif3,0] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif3,0] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif3,0] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif3,0] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif3,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,0] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[0,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,0] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,0] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,0] + -3/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,0] + 3/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,0] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,0] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,0] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,0] + -3/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,0] + 3/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,0] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,0] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,0] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,0] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,0] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,0] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,0] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,0] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,0] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,0] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,0] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,0] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,0] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,0] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,0] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,0] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,0] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,0] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,0] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,0] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,0] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,0] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,0] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,0] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,0] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,0] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,0] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,0] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,0] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,0] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,0] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,0] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,0] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,0] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,0] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,0] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,0] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,0] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,0] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,0] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,0] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,0] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[0,mif4] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,0] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,0] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,0] + -3/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,0] + 3/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,0] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,0] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,0] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,0] + -3/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,0] + 3/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,0] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,0] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,0] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,0] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,0] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,0] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,0] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,0] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,0] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,0] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,0] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,0] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,0] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,0] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,0] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,0] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,0] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,0] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,0] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,0] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,0] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,0] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,0] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,0] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,0] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,0] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,0] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,0] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,0] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,0] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,0] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,0] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,0] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,0] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,0] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,0] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,0] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,0] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,0] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,0] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,0] + 1/1536 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif3,1] + 1/256 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif3,1] + -1/256 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif3,1] + 1/128 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif3,1] + 1/192 * (self.g2)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif3,1] + -1/192 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif3,1] + 1/1536 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif3,1] + 1/256 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif3,1] + -1/256 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif3,1] + 1/128 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif3,1] + 1/192 * (self.g2)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif3,1] + -1/192 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif3,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,1] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,1] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,1] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,1] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,1] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,1] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,1] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,1] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,1] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif3,1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif3,1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif3,1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif3,1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif3,1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif3,1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif3,1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif3,1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif3,1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif3,1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif3,1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif3,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,1] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,1] + -3/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,1] + 3/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,1] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,1] + -3/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,1] + 3/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,1] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,1] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,1] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,1] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,1] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,1] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,1] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,1] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,1] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,1] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,1] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,1] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,1] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,1] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,1] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,1] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,1] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,1] + -3/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,1] + 3/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,1] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,1] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,1] + -3/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,1] + 3/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,1] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,1] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,1] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,1] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,1] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,1] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,1] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,1] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,1] + 1/1536 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif3,2] + 1/256 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif3,2] + -1/256 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif3,2] + 1/128 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif3,2] + 1/192 * (self.g2)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif3,2] + -1/192 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif3,2] + 1/1536 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif3,2] + 1/256 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif3,2] + -1/256 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif3,2] + 1/128 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif3,2] + 1/192 * (self.g2)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif3,2] + -1/192 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif3,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,2] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,2] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,2] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,2] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,2] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,2] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,2] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,2] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,2] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,2] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,2] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,2] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,2] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,2] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,2] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,2] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,2] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,2] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,2] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,2] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[0,mif1] * self.yUpsilonbar[mif3,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,2] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,2] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,2] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,2] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,2] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,2] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,2] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,2] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,2] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,2] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,2] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,2] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,2] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,2] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,2] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,2] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,2] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,2] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,2] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,2] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[1,mif1] * self.yUpsilonbar[mif3,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,2] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif3,2] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif3,2] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif3,2] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif3,2] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif3,2] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif3,2] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif3,2] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif3,2] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif3,2] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif3,2] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif3,2] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif3,2] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,2] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,2] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,2] + -3/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,2] + 3/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,2] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,2] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,2] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,2] + -3/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,2] + 3/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[2,mif1] * self.yUpsilonbar[mif3,2] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,2] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,2] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,2] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,2] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,2] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,2] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,2] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,2] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,2] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,2] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,2] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,2] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,2] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,2] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,2] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,2] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,2] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,2] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,2] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,0] * self.yUpsilonbar[mif3,2] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,2] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,2] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,2] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,2] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,2] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,2] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,2] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,2] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,2] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,2] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,2] + -5/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,2] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,2] + -1/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,2] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,2] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,2] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,2] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,2] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,2] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,1] * self.yUpsilonbar[mif3,2] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,2] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,2] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,2] + -3/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,2] + 3/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,2] * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,2] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,2] + -9/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,2] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,2] + -3/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,2] + 3/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,2] * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif1,2] * self.yUpsilonbar[mif3,2] + 1/16 * (self.MUpsilon)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif3,mif1] + 1/1536 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif3,mif1] + 3/256 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif3,mif1] + 9/512 * self.epsilonbar * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif3,mif1] + -3/128 * self.epsilonbar * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif3,mif1] + 3/256 * self.epsilonbar * (self.g2)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif3,mif1] + -1/64 * self.epsilonbar * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif3,mif1] + -3/256 * self.epsilonbar * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif3,mif1] + 1/64 * self.epsilonbar * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,mif4] * self.yUpsilonbar[mif3,mif1] + 1/16 * (self.MUpsilon)**(-2) * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif3,mif1] + 1/1536 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif3,mif1] + 3/256 * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif3,mif1] + 9/512 * self.epsilonbar * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif3,mif1] + -3/128 * self.epsilonbar * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif3,mif1] + 3/256 * self.epsilonbar * (self.g2)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif3,mif1] + -1/64 * self.epsilonbar * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif3,mif1] + -3/256 * self.epsilonbar * (self.g2)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif3,mif1] + 1/64 * self.epsilonbar * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif4,mif2] * self.yUpsilonbar[mif3,mif1] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[0,mif4] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif3,mif1] + -3/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[0,mif4] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif3,mif1] + 3/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilon[0,mif4] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif3,mif1] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif3,mif1] + -3/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif3,mif1] + 3/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif3,mif1] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif3,mif1] + -3/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif3,mif1] + 3/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif3,mif1] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif3,mif1] + -3/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif3,mif1] + 3/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,0] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif4] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,1] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,1] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,1] * self.yUpsilonbar[0,1] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,2] * self.yUpsilonbar[0,2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[0,mif4] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[0,mif4] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,0] * self.yUpsilon[0,mif4] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[1,mif4] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[1,mif4] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[1,mif4] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[1,mif4] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[1,mif4] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[1,mif4] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[2,mif4] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[2,mif4] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[2,mif4] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif4,1] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif4,1] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[mif4,1] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif4,2] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif4,2] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[mif4,2] * self.yUpsilonbar[0,mif2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif4] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif4] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,0] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,0] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,0] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,0] * self.yUpsilonbar[mif3,mif1] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif3,mif1] + -3/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif3,mif1] + 3/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif3,mif1] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif3,mif1] + -3/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif3,mif1] + 3/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif3,mif1] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif3,mif1] + -3/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif3,mif1] + 3/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif3,mif1] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif3,mif1] + -3/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif3,mif1] + 3/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,1] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,2] * self.yUpsilonbar[1,2] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[0,mif4] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[0,mif4] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[0,mif4] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[1,0] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[1,0] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif4] * self.yUpsilon[1,0] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[1,mif4] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[1,mif4] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,1] * self.yUpsilon[1,mif4] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[2,mif4] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[2,mif4] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[2,mif4] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif4,0] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif4,0] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[mif4,0] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif4,2] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif4,2] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[mif4,2] * self.yUpsilonbar[1,mif2] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif4] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,0] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,0] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif4] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,1] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,1] * self.yUpsilonbar[mif3,mif1] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif3,mif1] + -3/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif3,mif1] + 3/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif3,mif1] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif3,mif1] + -3/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif3,mif1] + 3/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif4] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif3,mif1] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif3,mif1] + -3/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif3,mif1] + 3/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif3,mif1] + -3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif3,mif1] + -3/256 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif3,mif1] + 3/256 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,2] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[0,mif4] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[0,mif4] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[0,mif4] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[2,0] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[2,0] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif4] * self.yUpsilon[2,0] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[2,1] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[2,1] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif4] * self.yUpsilon[2,1] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[2,mif2] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif4] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[0,mif4] * self.yUpsilonbar[mif2,0] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[0,mif4] * self.yUpsilonbar[mif2,0] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,0] * self.yUpsilon[0,mif4] * self.yUpsilonbar[mif2,0] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif2,0] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif2,0] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif2,0] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif2,0] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif2,0] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif2,0] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif2,0] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif2,0] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif2,0] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif2,0] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif2,0] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif2,0] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif2,0] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif2,0] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif2,0] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif2,0] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif2,0] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif2,0] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif2,0] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif2,0] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif2,0] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif2,0] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif2,0] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif2,0] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif2,0] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif2,0] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif2,0] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[0,mif4] * self.yUpsilonbar[mif2,1] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[0,mif4] * self.yUpsilonbar[mif2,1] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[0,mif4] * self.yUpsilonbar[mif2,1] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[1,0] * self.yUpsilonbar[mif2,1] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[1,0] * self.yUpsilonbar[mif2,1] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif4] * self.yUpsilon[1,0] * self.yUpsilonbar[mif2,1] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif2,1] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif2,1] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,1] * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif2,1] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif2,1] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif2,1] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif2,1] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif2,1] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif2,1] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif2,1] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif2,1] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif2,1] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif2,1] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif2,1] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif2,1] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif2,1] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif2,1] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif2,1] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif2,1] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif2,1] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif2,1] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif2,1] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif2,1] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif2,1] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif2,1] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[0,mif4] * self.yUpsilonbar[mif2,2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[0,mif4] * self.yUpsilonbar[mif2,2] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[0,mif4] * self.yUpsilonbar[mif2,2] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif2,2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif2,2] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[1,mif4] * self.yUpsilonbar[mif2,2] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[2,0] * self.yUpsilonbar[mif2,2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif4] * self.yUpsilon[2,0] * self.yUpsilonbar[mif2,2] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif4] * self.yUpsilon[2,0] * self.yUpsilonbar[mif2,2] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[2,1] * self.yUpsilonbar[mif2,2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif4] * self.yUpsilon[2,1] * self.yUpsilonbar[mif2,2] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif4] * self.yUpsilon[2,1] * self.yUpsilonbar[mif2,2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif2,2] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif2,2] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,2] * self.yUpsilon[2,mif4] * self.yUpsilonbar[mif2,2] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif2,2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif2,2] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif2,2] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif2,2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif2,2] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[mif4,0] * self.yUpsilonbar[mif2,2] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif2,2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif2,2] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif2,2] * self.yUpsilonbar[mif3,mif1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif2,2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif2,2] * self.yUpsilonbar[mif3,mif1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[mif4,1] * self.yUpsilonbar[mif2,2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif2,2] * self.yUpsilonbar[mif3,mif1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif2,2] * self.yUpsilonbar[mif3,mif1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,2] * self.yUpsilon[mif4,2] * self.yUpsilonbar[mif2,2] * self.yUpsilonbar[mif3,mif1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,0] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,0] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,0] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,0] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,0] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,0] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,0] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,0] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,0] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,0] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,0] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,0] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,0] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,0] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,0] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,1] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,1] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,1] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,1] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,1] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,1] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,1] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,1] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,2] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,2] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,2] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,2] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,2] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,2] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,mif3] * self.yUpsilonbar[mif4,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,2] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,2] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,2] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,2] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[0,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,2] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,0] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[1,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,2] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,2] + -3/2048 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,2] + -3/1024 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,2] + 3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,1] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,2] + -3/1024 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,2] + -3/512 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yUpsilon[2,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,2] + 3/512 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,2] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif3,mif1] * self.yUpsilonbar[mif4,2])

    def alphaOqu1(self, mif1,mif2,mif3,mif4):
        return (-1/2160 * (self.g1)**(4) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 17/864 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + 1/72 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + -1/72 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + -1/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif4] * self.yubar[0,mif3] * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif4] * self.yubar[0,mif3] * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,mif4] * self.yubar[0,mif3] * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + -1/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif4] * self.yubar[0,mif3] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif4] * self.yubar[0,mif3] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,mif4] * self.yubar[0,mif3] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif1] + -1/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif4] * self.yubar[0,mif3] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif4] * self.yubar[0,mif3] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,mif4] * self.yubar[0,mif3] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif1] + 17/864 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + 1/72 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + -1/72 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + -1/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif4] * self.yubar[0,mif3] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif4] * self.yubar[0,mif3] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,mif4] * self.yubar[0,mif3] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + -1/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif4] * self.yubar[0,mif3] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif4] * self.yubar[0,mif3] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,mif4] * self.yubar[0,mif3] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif1] + -1/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif4] * self.yubar[0,mif3] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif4] * self.yubar[0,mif3] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,mif4] * self.yubar[0,mif3] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif1] + -1/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif4] * self.yubar[1,mif3] * self.yUpsilon[0,mif2] * self.yUpsilonbar[1,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif4] * self.yubar[1,mif3] * self.yUpsilon[0,mif2] * self.yUpsilonbar[1,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,mif4] * self.yubar[1,mif3] * self.yUpsilon[0,mif2] * self.yUpsilonbar[1,mif1] + 17/864 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + 1/72 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + -1/72 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + -1/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif4] * self.yubar[1,mif3] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif4] * self.yubar[1,mif3] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,mif4] * self.yubar[1,mif3] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + -1/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif4] * self.yubar[1,mif3] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif4] * self.yubar[1,mif3] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,mif4] * self.yubar[1,mif3] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif1] + -1/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif4] * self.yubar[1,mif3] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif4] * self.yubar[1,mif3] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,mif4] * self.yubar[1,mif3] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif1] + 17/864 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + 1/72 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + -1/72 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + -1/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif4] * self.yubar[1,mif3] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif4] * self.yubar[1,mif3] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,mif4] * self.yubar[1,mif3] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + -1/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif4] * self.yubar[1,mif3] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif4] * self.yubar[1,mif3] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,mif4] * self.yubar[1,mif3] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif1] + -1/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif4] * self.yubar[2,mif3] * self.yUpsilon[0,mif2] * self.yUpsilonbar[2,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif4] * self.yubar[2,mif3] * self.yUpsilon[0,mif2] * self.yUpsilonbar[2,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,mif4] * self.yubar[2,mif3] * self.yUpsilon[0,mif2] * self.yUpsilonbar[2,mif1] + -1/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif4] * self.yubar[2,mif3] * self.yUpsilon[1,mif2] * self.yUpsilonbar[2,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif4] * self.yubar[2,mif3] * self.yUpsilon[1,mif2] * self.yUpsilonbar[2,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,mif4] * self.yubar[2,mif3] * self.yUpsilon[1,mif2] * self.yUpsilonbar[2,mif1] + 17/864 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + 1/72 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + -1/72 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + -1/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif4] * self.yubar[2,mif3] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif4] * self.yubar[2,mif3] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,mif4] * self.yubar[2,mif3] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + -1/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif4] * self.yubar[2,mif3] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif4] * self.yubar[2,mif3] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,mif4] * self.yubar[2,mif3] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif1] + -1/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif4] * self.yubar[2,mif3] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif4] * self.yubar[2,mif3] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,mif4] * self.yubar[2,mif3] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif1] + 17/864 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + 1/72 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + -1/72 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + -1/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif4] * self.yubar[2,mif3] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif4] * self.yubar[2,mif3] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,mif4] * self.yubar[2,mif3] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + 17/864 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + 1/72 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + -1/72 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + -1/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif4] * self.yubar[0,mif3] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif4] * self.yubar[0,mif3] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,mif4] * self.yubar[0,mif3] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + -1/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif4] * self.yubar[0,mif3] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,0] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif4] * self.yubar[0,mif3] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,mif4] * self.yubar[0,mif3] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,0] + -1/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif4] * self.yubar[0,mif3] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,0] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif4] * self.yubar[0,mif3] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,mif4] * self.yubar[0,mif3] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,0] + 17/864 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + 1/72 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + -1/72 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + -1/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif4] * self.yubar[0,mif3] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif4] * self.yubar[0,mif3] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,mif4] * self.yubar[0,mif3] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + -1/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif4] * self.yubar[0,mif3] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,0] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif4] * self.yubar[0,mif3] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,mif4] * self.yubar[0,mif3] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,0] + -1/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif4] * self.yubar[0,mif3] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,0] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif4] * self.yubar[0,mif3] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,mif4] * self.yubar[0,mif3] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,0] + -1/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif4] * self.yubar[1,mif3] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif4] * self.yubar[1,mif3] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,mif4] * self.yubar[1,mif3] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,1] + 17/864 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + 1/72 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + -1/72 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + -1/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif4] * self.yubar[1,mif3] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif4] * self.yubar[1,mif3] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,mif4] * self.yubar[1,mif3] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + -1/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif4] * self.yubar[1,mif3] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif4] * self.yubar[1,mif3] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,mif4] * self.yubar[1,mif3] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,1] + -1/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif4] * self.yubar[1,mif3] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif4] * self.yubar[1,mif3] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,mif4] * self.yubar[1,mif3] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,1] + 17/864 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + 1/72 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + -1/72 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + -1/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif4] * self.yubar[1,mif3] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif4] * self.yubar[1,mif3] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,mif4] * self.yubar[1,mif3] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + -1/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif4] * self.yubar[1,mif3] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,1] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif4] * self.yubar[1,mif3] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,mif4] * self.yubar[1,mif3] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,1] + -1/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif4] * self.yubar[2,mif3] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,2] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif4] * self.yubar[2,mif3] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,mif4] * self.yubar[2,mif3] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,2] + -1/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif4] * self.yubar[2,mif3] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,2] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif4] * self.yubar[2,mif3] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,mif4] * self.yubar[2,mif3] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,2] + 17/864 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + 1/72 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + -1/72 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + -1/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif4] * self.yubar[2,mif3] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif4] * self.yubar[2,mif3] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,mif4] * self.yubar[2,mif3] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + -1/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif4] * self.yubar[2,mif3] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,2] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif4] * self.yubar[2,mif3] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,mif4] * self.yubar[2,mif3] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,2] + -1/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif4] * self.yubar[2,mif3] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,2] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif4] * self.yubar[2,mif3] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,mif4] * self.yubar[2,mif3] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,2] + 17/864 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] + 1/72 * (self.g1)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] + -1/72 * (self.g1)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] + -1/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif4] * self.yubar[2,mif3] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] + -1/32 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif4] * self.yubar[2,mif3] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,mif4] * self.yubar[2,mif3] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2])

    def alphaOqu8(self, mif1,mif2,mif3,mif4):
        return (-1/64 * (self.g3)**(4) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 7/192 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + 1/32 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + -1/32 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + 3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif4] * self.yubar[0,mif3] * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + -3/64 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif4] * self.yubar[0,mif3] * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + 3/64 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,mif4] * self.yubar[0,mif3] * self.yUpsilon[0,mif2] * self.yUpsilonbar[0,mif1] + 3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif4] * self.yubar[0,mif3] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif1] + -3/64 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif4] * self.yubar[0,mif3] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif1] + 3/64 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,mif4] * self.yubar[0,mif3] * self.yUpsilon[1,mif2] * self.yUpsilonbar[0,mif1] + 3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif4] * self.yubar[0,mif3] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif1] + -3/64 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif4] * self.yubar[0,mif3] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif1] + 3/64 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,mif4] * self.yubar[0,mif3] * self.yUpsilon[2,mif2] * self.yUpsilonbar[0,mif1] + 7/192 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + 1/32 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + -1/32 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + 3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif4] * self.yubar[0,mif3] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + -3/64 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif4] * self.yubar[0,mif3] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + 3/64 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,mif4] * self.yubar[0,mif3] * self.yUpsilon[mif2,0] * self.yUpsilonbar[0,mif1] + 3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif4] * self.yubar[0,mif3] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif1] + -3/64 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif4] * self.yubar[0,mif3] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif1] + 3/64 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,mif4] * self.yubar[0,mif3] * self.yUpsilon[mif2,1] * self.yUpsilonbar[0,mif1] + 3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif4] * self.yubar[0,mif3] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif1] + -3/64 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif4] * self.yubar[0,mif3] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif1] + 3/64 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,mif4] * self.yubar[0,mif3] * self.yUpsilon[mif2,2] * self.yUpsilonbar[0,mif1] + 3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif4] * self.yubar[1,mif3] * self.yUpsilon[0,mif2] * self.yUpsilonbar[1,mif1] + -3/64 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif4] * self.yubar[1,mif3] * self.yUpsilon[0,mif2] * self.yUpsilonbar[1,mif1] + 3/64 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,mif4] * self.yubar[1,mif3] * self.yUpsilon[0,mif2] * self.yUpsilonbar[1,mif1] + 7/192 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + 1/32 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + -1/32 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + 3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif4] * self.yubar[1,mif3] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + -3/64 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif4] * self.yubar[1,mif3] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + 3/64 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,mif4] * self.yubar[1,mif3] * self.yUpsilon[1,mif2] * self.yUpsilonbar[1,mif1] + 3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif4] * self.yubar[1,mif3] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif1] + -3/64 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif4] * self.yubar[1,mif3] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif1] + 3/64 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,mif4] * self.yubar[1,mif3] * self.yUpsilon[2,mif2] * self.yUpsilonbar[1,mif1] + 3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif4] * self.yubar[1,mif3] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif1] + -3/64 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif4] * self.yubar[1,mif3] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif1] + 3/64 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,mif4] * self.yubar[1,mif3] * self.yUpsilon[mif2,0] * self.yUpsilonbar[1,mif1] + 7/192 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + 1/32 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + -1/32 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + 3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif4] * self.yubar[1,mif3] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + -3/64 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif4] * self.yubar[1,mif3] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + 3/64 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,mif4] * self.yubar[1,mif3] * self.yUpsilon[mif2,1] * self.yUpsilonbar[1,mif1] + 3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif4] * self.yubar[1,mif3] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif1] + -3/64 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif4] * self.yubar[1,mif3] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif1] + 3/64 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,mif4] * self.yubar[1,mif3] * self.yUpsilon[mif2,2] * self.yUpsilonbar[1,mif1] + 3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif4] * self.yubar[2,mif3] * self.yUpsilon[0,mif2] * self.yUpsilonbar[2,mif1] + -3/64 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif4] * self.yubar[2,mif3] * self.yUpsilon[0,mif2] * self.yUpsilonbar[2,mif1] + 3/64 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,mif4] * self.yubar[2,mif3] * self.yUpsilon[0,mif2] * self.yUpsilonbar[2,mif1] + 3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif4] * self.yubar[2,mif3] * self.yUpsilon[1,mif2] * self.yUpsilonbar[2,mif1] + -3/64 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif4] * self.yubar[2,mif3] * self.yUpsilon[1,mif2] * self.yUpsilonbar[2,mif1] + 3/64 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,mif4] * self.yubar[2,mif3] * self.yUpsilon[1,mif2] * self.yUpsilonbar[2,mif1] + 7/192 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + 1/32 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + -1/32 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + 3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif4] * self.yubar[2,mif3] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + -3/64 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif4] * self.yubar[2,mif3] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + 3/64 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,mif4] * self.yubar[2,mif3] * self.yUpsilon[2,mif2] * self.yUpsilonbar[2,mif1] + 3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif4] * self.yubar[2,mif3] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif1] + -3/64 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif4] * self.yubar[2,mif3] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif1] + 3/64 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,mif4] * self.yubar[2,mif3] * self.yUpsilon[mif2,0] * self.yUpsilonbar[2,mif1] + 3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif4] * self.yubar[2,mif3] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif1] + -3/64 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif4] * self.yubar[2,mif3] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif1] + 3/64 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,mif4] * self.yubar[2,mif3] * self.yUpsilon[mif2,1] * self.yUpsilonbar[2,mif1] + 7/192 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + 1/32 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + -1/32 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + 3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif4] * self.yubar[2,mif3] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + -3/64 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif4] * self.yubar[2,mif3] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + 3/64 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,mif4] * self.yubar[2,mif3] * self.yUpsilon[mif2,2] * self.yUpsilonbar[2,mif1] + 7/192 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + 1/32 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + -1/32 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + 3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif4] * self.yubar[0,mif3] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + -3/64 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif4] * self.yubar[0,mif3] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + 3/64 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,mif4] * self.yubar[0,mif3] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,0] + 3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif4] * self.yubar[0,mif3] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,0] + -3/64 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif4] * self.yubar[0,mif3] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,0] + 3/64 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,mif4] * self.yubar[0,mif3] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,0] + 3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif4] * self.yubar[0,mif3] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,0] + -3/64 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif4] * self.yubar[0,mif3] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,0] + 3/64 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,mif4] * self.yubar[0,mif3] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,0] + 7/192 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + 1/32 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + -1/32 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + 3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif4] * self.yubar[0,mif3] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + -3/64 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif4] * self.yubar[0,mif3] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + 3/64 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,mif4] * self.yubar[0,mif3] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,0] + 3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif4] * self.yubar[0,mif3] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,0] + -3/64 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif4] * self.yubar[0,mif3] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,0] + 3/64 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,mif4] * self.yubar[0,mif3] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,0] + 3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif4] * self.yubar[0,mif3] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,0] + -3/64 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif4] * self.yubar[0,mif3] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,0] + 3/64 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,mif4] * self.yubar[0,mif3] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,0] + 3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif4] * self.yubar[1,mif3] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,1] + -3/64 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif4] * self.yubar[1,mif3] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,1] + 3/64 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,mif4] * self.yubar[1,mif3] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,1] + 7/192 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + 1/32 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + -1/32 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + 3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif4] * self.yubar[1,mif3] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + -3/64 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif4] * self.yubar[1,mif3] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + 3/64 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,mif4] * self.yubar[1,mif3] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,1] + 3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif4] * self.yubar[1,mif3] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,1] + -3/64 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif4] * self.yubar[1,mif3] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,1] + 3/64 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,mif4] * self.yubar[1,mif3] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,1] + 3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif4] * self.yubar[1,mif3] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,1] + -3/64 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif4] * self.yubar[1,mif3] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,1] + 3/64 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,mif4] * self.yubar[1,mif3] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,1] + 7/192 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + 1/32 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + -1/32 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + 3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif4] * self.yubar[1,mif3] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + -3/64 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif4] * self.yubar[1,mif3] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + 3/64 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,mif4] * self.yubar[1,mif3] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,1] + 3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif4] * self.yubar[1,mif3] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,1] + -3/64 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif4] * self.yubar[1,mif3] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,1] + 3/64 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,mif4] * self.yubar[1,mif3] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,1] + 3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif4] * self.yubar[2,mif3] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,2] + -3/64 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif4] * self.yubar[2,mif3] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,2] + 3/64 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,mif4] * self.yubar[2,mif3] * self.yUpsilon[0,mif2] * self.yUpsilonbar[mif1,2] + 3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif4] * self.yubar[2,mif3] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,2] + -3/64 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif4] * self.yubar[2,mif3] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,2] + 3/64 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,mif4] * self.yubar[2,mif3] * self.yUpsilon[1,mif2] * self.yUpsilonbar[mif1,2] + 7/192 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + 1/32 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + -1/32 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + 3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif4] * self.yubar[2,mif3] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + -3/64 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif4] * self.yubar[2,mif3] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + 3/64 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,mif4] * self.yubar[2,mif3] * self.yUpsilon[2,mif2] * self.yUpsilonbar[mif1,2] + 3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif4] * self.yubar[2,mif3] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,2] + -3/64 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif4] * self.yubar[2,mif3] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,2] + 3/64 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[0,mif4] * self.yubar[2,mif3] * self.yUpsilon[mif2,0] * self.yUpsilonbar[mif1,2] + 3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif4] * self.yubar[2,mif3] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,2] + -3/64 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif4] * self.yubar[2,mif3] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,2] + 3/64 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[1,mif4] * self.yubar[2,mif3] * self.yUpsilon[mif2,1] * self.yUpsilonbar[mif1,2] + 7/192 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] + 1/32 * (self.g3)**(2) * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] + -1/32 * (self.g3)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif3,mif4) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] + 3/128 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif4] * self.yubar[2,mif3] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] + -3/64 * self.invepsilonbar * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif4] * self.yubar[2,mif3] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2] + 3/64 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * np.log((self.MUpsilon)**(2) * (self.mu)**(-2)) * self.yu[2,mif4] * self.yubar[2,mif3] * self.yUpsilon[mif2,2] * self.yUpsilonbar[mif1,2])

    def alphaOquqd1(self, mif1,mif2,mif3,mif4):
        return 0

    def alphaOquqd8(self, mif1,mif2,mif3,mif4):
        return 0

    def alphaOuB(self, mif1,mif2):
        return (-1/48 * self.g1 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yUpsilon[0,0] * self.yUpsilonbar[0,mif1] + -1/96 * self.g1 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[0,mif1] + -1/96 * self.g1 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[0,mif1] + -1/96 * self.g1 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[0,mif1] + -1/96 * self.g1 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[0,mif1] + -1/96 * self.g1 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[1,mif1] + -1/96 * self.g1 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[1,mif1] + -1/48 * self.g1 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yUpsilon[1,1] * self.yUpsilonbar[1,mif1] + -1/96 * self.g1 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[1,mif1] + -1/96 * self.g1 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[1,mif1] + -1/96 * self.g1 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[2,mif1] + -1/96 * self.g1 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[2,mif1] + -1/96 * self.g1 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[2,mif1] + -1/96 * self.g1 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[2,mif1] + -1/48 * self.g1 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yUpsilon[2,2] * self.yUpsilonbar[2,mif1] + -1/48 * self.g1 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yUpsilon[0,0] * self.yUpsilonbar[mif1,0] + -1/96 * self.g1 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,0] + -1/96 * self.g1 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,0] + -1/96 * self.g1 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,0] + -1/96 * self.g1 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,0] + -1/96 * self.g1 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,1] + -1/96 * self.g1 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,1] + -1/48 * self.g1 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yUpsilon[1,1] * self.yUpsilonbar[mif1,1] + -1/96 * self.g1 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,1] + -1/96 * self.g1 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,1] + -1/96 * self.g1 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,2] + -1/96 * self.g1 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,2] + -1/96 * self.g1 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,2] + -1/96 * self.g1 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,2] + -1/48 * self.g1 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yUpsilon[2,2] * self.yUpsilonbar[mif1,2])

    def alphaOud1(self, mif1,mif2,mif3,mif4):
        return 1/1080 * (self.g1)**(4) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4)

    def alphaOud8(self, mif1,mif2,mif3,mif4):
        return -1/64 * (self.g3)**(4) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4)

    def alphaOuG(self, mif1,mif2):
        return (-7/128 * self.g3 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yUpsilon[0,0] * self.yUpsilonbar[0,mif1] + -7/256 * self.g3 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[0,mif1] + -7/256 * self.g3 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[0,mif1] + -7/256 * self.g3 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[0,mif1] + -7/256 * self.g3 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[0,mif1] + -7/256 * self.g3 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[1,mif1] + -7/256 * self.g3 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[1,mif1] + -7/128 * self.g3 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yUpsilon[1,1] * self.yUpsilonbar[1,mif1] + -7/256 * self.g3 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[1,mif1] + -7/256 * self.g3 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[1,mif1] + -7/256 * self.g3 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[2,mif1] + -7/256 * self.g3 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[2,mif1] + -7/256 * self.g3 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[2,mif1] + -7/256 * self.g3 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[2,mif1] + -7/128 * self.g3 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yUpsilon[2,2] * self.yUpsilonbar[2,mif1] + -7/128 * self.g3 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yUpsilon[0,0] * self.yUpsilonbar[mif1,0] + -7/256 * self.g3 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,0] + -7/256 * self.g3 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,0] + -7/256 * self.g3 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,0] + -7/256 * self.g3 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,0] + -7/256 * self.g3 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,1] + -7/256 * self.g3 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,1] + -7/128 * self.g3 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yUpsilon[1,1] * self.yUpsilonbar[mif1,1] + -7/256 * self.g3 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,1] + -7/256 * self.g3 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,1] + -7/256 * self.g3 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,2] + -7/256 * self.g3 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,2] + -7/256 * self.g3 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,2] + -7/256 * self.g3 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,2] + -7/128 * self.g3 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yUpsilon[2,2] * self.yUpsilonbar[mif1,2])

    def alphaOuH(self, mif1,mif2):
        return (-1/160 * (self.g2)**(4) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif2] + 1/16 * (self.lambdaHatPrimeUpsilon)**(2) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[mif1,mif2] + 1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[0,0] * self.yUpsilon[0,0] * self.yUpsilonbar[0,0] + 1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[0,1] * self.yUpsilon[0,0] * self.yUpsilonbar[0,0] + 1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[0,2] * self.yUpsilon[0,0] * self.yUpsilonbar[0,0] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[0,0] * self.yUpsilon[0,1] * self.yUpsilonbar[0,0] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[0,1] * self.yUpsilon[0,1] * self.yUpsilonbar[0,0] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[0,2] * self.yUpsilon[0,1] * self.yUpsilonbar[0,0] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[0,0] * self.yUpsilon[0,2] * self.yUpsilonbar[0,0] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[0,1] * self.yUpsilon[0,2] * self.yUpsilonbar[0,0] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[0,2] * self.yUpsilon[0,2] * self.yUpsilonbar[0,0] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[0,0] * self.yUpsilon[1,0] * self.yUpsilonbar[0,0] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[0,1] * self.yUpsilon[1,0] * self.yUpsilonbar[0,0] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[0,2] * self.yUpsilon[1,0] * self.yUpsilonbar[0,0] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[0,0] * self.yUpsilon[2,0] * self.yUpsilonbar[0,0] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[0,1] * self.yUpsilon[2,0] * self.yUpsilonbar[0,0] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[0,2] * self.yUpsilon[2,0] * self.yUpsilonbar[0,0] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[1,0] * self.yUpsilon[0,0] * self.yUpsilonbar[0,1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[1,1] * self.yUpsilon[0,0] * self.yUpsilonbar[0,1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[1,2] * self.yUpsilon[0,0] * self.yUpsilonbar[0,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[0,0] * self.yUpsilon[0,1] * self.yUpsilonbar[0,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[0,1] * self.yUpsilon[0,1] * self.yUpsilonbar[0,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[0,2] * self.yUpsilon[0,1] * self.yUpsilonbar[0,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[1,0] * self.yUpsilon[0,1] * self.yUpsilonbar[0,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[1,1] * self.yUpsilon[0,1] * self.yUpsilonbar[0,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[1,2] * self.yUpsilon[0,1] * self.yUpsilonbar[0,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[1,0] * self.yUpsilon[0,2] * self.yUpsilonbar[0,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[1,1] * self.yUpsilon[0,2] * self.yUpsilonbar[0,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[1,2] * self.yUpsilon[0,2] * self.yUpsilonbar[0,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[0,0] * self.yUpsilon[1,0] * self.yUpsilonbar[0,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[0,1] * self.yUpsilon[1,0] * self.yUpsilonbar[0,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[0,2] * self.yUpsilon[1,0] * self.yUpsilonbar[0,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[1,0] * self.yUpsilon[1,0] * self.yUpsilonbar[0,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[1,1] * self.yUpsilon[1,0] * self.yUpsilonbar[0,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[1,2] * self.yUpsilon[1,0] * self.yUpsilonbar[0,1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[0,0] * self.yUpsilon[1,1] * self.yUpsilonbar[0,1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[0,1] * self.yUpsilon[1,1] * self.yUpsilonbar[0,1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[0,2] * self.yUpsilon[1,1] * self.yUpsilonbar[0,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[0,0] * self.yUpsilon[1,2] * self.yUpsilonbar[0,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[0,1] * self.yUpsilon[1,2] * self.yUpsilonbar[0,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[0,2] * self.yUpsilon[1,2] * self.yUpsilonbar[0,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[1,0] * self.yUpsilon[2,0] * self.yUpsilonbar[0,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[1,1] * self.yUpsilon[2,0] * self.yUpsilonbar[0,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[1,2] * self.yUpsilon[2,0] * self.yUpsilonbar[0,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[0,0] * self.yUpsilon[2,1] * self.yUpsilonbar[0,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[0,1] * self.yUpsilon[2,1] * self.yUpsilonbar[0,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[0,2] * self.yUpsilon[2,1] * self.yUpsilonbar[0,1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[2,0] * self.yUpsilon[0,0] * self.yUpsilonbar[0,2] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[2,1] * self.yUpsilon[0,0] * self.yUpsilonbar[0,2] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[2,2] * self.yUpsilon[0,0] * self.yUpsilonbar[0,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[2,0] * self.yUpsilon[0,1] * self.yUpsilonbar[0,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[2,1] * self.yUpsilon[0,1] * self.yUpsilonbar[0,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[2,2] * self.yUpsilon[0,1] * self.yUpsilonbar[0,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[0,0] * self.yUpsilon[0,2] * self.yUpsilonbar[0,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[0,1] * self.yUpsilon[0,2] * self.yUpsilonbar[0,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[0,2] * self.yUpsilon[0,2] * self.yUpsilonbar[0,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[2,0] * self.yUpsilon[0,2] * self.yUpsilonbar[0,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[2,1] * self.yUpsilon[0,2] * self.yUpsilonbar[0,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[2,2] * self.yUpsilon[0,2] * self.yUpsilonbar[0,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[2,0] * self.yUpsilon[1,0] * self.yUpsilonbar[0,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[2,1] * self.yUpsilon[1,0] * self.yUpsilonbar[0,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[2,2] * self.yUpsilon[1,0] * self.yUpsilonbar[0,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[0,0] * self.yUpsilon[1,2] * self.yUpsilonbar[0,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[0,1] * self.yUpsilon[1,2] * self.yUpsilonbar[0,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[0,2] * self.yUpsilon[1,2] * self.yUpsilonbar[0,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[0,0] * self.yUpsilon[2,0] * self.yUpsilonbar[0,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[0,1] * self.yUpsilon[2,0] * self.yUpsilonbar[0,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[0,2] * self.yUpsilon[2,0] * self.yUpsilonbar[0,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[2,0] * self.yUpsilon[2,0] * self.yUpsilonbar[0,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[2,1] * self.yUpsilon[2,0] * self.yUpsilonbar[0,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[2,2] * self.yUpsilon[2,0] * self.yUpsilonbar[0,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[0,0] * self.yUpsilon[2,1] * self.yUpsilonbar[0,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[0,1] * self.yUpsilon[2,1] * self.yUpsilonbar[0,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[0,2] * self.yUpsilon[2,1] * self.yUpsilonbar[0,2] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[0,0] * self.yUpsilon[2,2] * self.yUpsilonbar[0,2] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[0,1] * self.yUpsilon[2,2] * self.yUpsilonbar[0,2] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[0,2] * self.yUpsilon[2,2] * self.yUpsilonbar[0,2] + 1/8 * (2)**(-1/2) * self.lambdaHatPrimeUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yUpsilon[0,0] * self.yUpsilonbar[0,mif1] + 3/16 * self.lambdaHatUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yUpsilon[0,0] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.yu[0,mif2] * self.yUpsilon[0,0] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.yu[0,mif2] * self.yUpsilon[0,0] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,2] * self.yu[0,mif2] * self.yUpsilon[0,0] * self.yUpsilonbar[0,mif1] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yu[0,mif2] * self.yubar[0,0] * self.yUpsilon[0,0] * self.yUpsilonbar[0,mif1] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yu[0,mif2] * self.yubar[0,1] * self.yUpsilon[0,0] * self.yUpsilonbar[0,mif1] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yu[0,mif2] * self.yubar[0,2] * self.yUpsilon[0,0] * self.yUpsilonbar[0,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[0,0] * self.yu[0,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[0,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[0,1] * self.yu[0,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[0,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[0,2] * self.yu[0,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[0,mif1] + 1/16 * (2)**(-1/2) * self.lambdaHatPrimeUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[0,mif1] + 3/32 * self.lambdaHatUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[0,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.yu[1,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[0,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.yu[1,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[0,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,2] * self.yu[1,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[1,0] * self.yubar[0,0] * self.yUpsilon[0,1] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yu[1,mif2] * self.yubar[0,0] * self.yUpsilon[0,1] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[1,1] * self.yubar[0,1] * self.yUpsilon[0,1] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yu[1,mif2] * self.yubar[0,1] * self.yUpsilon[0,1] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[1,2] * self.yubar[0,2] * self.yUpsilon[0,1] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yu[1,mif2] * self.yubar[0,2] * self.yUpsilon[0,1] * self.yUpsilonbar[0,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[0,0] * self.yu[0,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[0,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[0,1] * self.yu[0,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[0,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[0,2] * self.yu[0,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[0,mif1] + 1/16 * (2)**(-1/2) * self.lambdaHatPrimeUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[0,mif1] + 3/32 * self.lambdaHatUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[0,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.yu[2,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[0,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.yu[2,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[0,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,2] * self.yu[2,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[2,0] * self.yubar[0,0] * self.yUpsilon[0,2] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yu[2,mif2] * self.yubar[0,0] * self.yUpsilon[0,2] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[2,1] * self.yubar[0,1] * self.yUpsilon[0,2] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yu[2,mif2] * self.yubar[0,1] * self.yUpsilon[0,2] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[2,2] * self.yubar[0,2] * self.yUpsilon[0,2] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yu[2,mif2] * self.yubar[0,2] * self.yUpsilon[0,2] * self.yUpsilonbar[0,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[0,0] * self.yu[0,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[0,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[0,1] * self.yu[0,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[0,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[0,2] * self.yu[0,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[0,mif1] + 1/16 * (2)**(-1/2) * self.lambdaHatPrimeUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[0,mif1] + 3/32 * self.lambdaHatUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[0,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.yu[1,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[0,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.yu[1,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[0,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,2] * self.yu[1,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[1,0] * self.yubar[0,0] * self.yUpsilon[1,0] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yu[1,mif2] * self.yubar[0,0] * self.yUpsilon[1,0] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[1,1] * self.yubar[0,1] * self.yUpsilon[1,0] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yu[1,mif2] * self.yubar[0,1] * self.yUpsilon[1,0] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[1,2] * self.yubar[0,2] * self.yUpsilon[1,0] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yu[1,mif2] * self.yubar[0,2] * self.yUpsilon[1,0] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[0,0] * self.yu[1,mif2] * self.yUpsilon[1,1] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[0,1] * self.yu[1,mif2] * self.yUpsilon[1,1] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[0,2] * self.yu[1,mif2] * self.yUpsilon[1,1] * self.yUpsilonbar[0,mif1] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yu[1,mif2] * self.yubar[0,0] * self.yUpsilon[1,1] * self.yUpsilonbar[0,mif1] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yu[1,mif2] * self.yubar[0,1] * self.yUpsilon[1,1] * self.yUpsilonbar[0,mif1] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yu[1,mif2] * self.yubar[0,2] * self.yUpsilon[1,1] * self.yUpsilonbar[0,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[0,0] * self.yu[1,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[0,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[0,1] * self.yu[1,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[0,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[0,2] * self.yu[1,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[0,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[0,0] * self.yu[2,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[0,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[0,1] * self.yu[2,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[0,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[0,2] * self.yu[2,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[2,0] * self.yubar[0,0] * self.yUpsilon[1,2] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yu[2,mif2] * self.yubar[0,0] * self.yUpsilon[1,2] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[2,1] * self.yubar[0,1] * self.yUpsilon[1,2] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yu[2,mif2] * self.yubar[0,1] * self.yUpsilon[1,2] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[2,2] * self.yubar[0,2] * self.yUpsilon[1,2] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yu[2,mif2] * self.yubar[0,2] * self.yUpsilon[1,2] * self.yUpsilonbar[0,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[0,0] * self.yu[0,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[0,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[0,1] * self.yu[0,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[0,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[0,2] * self.yu[0,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[0,mif1] + 1/16 * (2)**(-1/2) * self.lambdaHatPrimeUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[0,mif1] + 3/32 * self.lambdaHatUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[0,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.yu[2,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[0,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.yu[2,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[0,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,2] * self.yu[2,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[2,0] * self.yubar[0,0] * self.yUpsilon[2,0] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yu[2,mif2] * self.yubar[0,0] * self.yUpsilon[2,0] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[2,1] * self.yubar[0,1] * self.yUpsilon[2,0] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yu[2,mif2] * self.yubar[0,1] * self.yUpsilon[2,0] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[2,2] * self.yubar[0,2] * self.yUpsilon[2,0] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yu[2,mif2] * self.yubar[0,2] * self.yUpsilon[2,0] * self.yUpsilonbar[0,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[0,0] * self.yu[1,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[0,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[0,1] * self.yu[1,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[0,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[0,2] * self.yu[1,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[0,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[0,0] * self.yu[2,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[0,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[0,1] * self.yu[2,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[0,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[0,2] * self.yu[2,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[2,0] * self.yubar[0,0] * self.yUpsilon[2,1] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yu[2,mif2] * self.yubar[0,0] * self.yUpsilon[2,1] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[2,1] * self.yubar[0,1] * self.yUpsilon[2,1] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yu[2,mif2] * self.yubar[0,1] * self.yUpsilon[2,1] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[2,2] * self.yubar[0,2] * self.yUpsilon[2,1] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yu[2,mif2] * self.yubar[0,2] * self.yUpsilon[2,1] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[0,0] * self.yu[2,mif2] * self.yUpsilon[2,2] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[0,1] * self.yu[2,mif2] * self.yUpsilon[2,2] * self.yUpsilonbar[0,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[0,2] * self.yu[2,mif2] * self.yUpsilon[2,2] * self.yUpsilonbar[0,mif1] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yu[2,mif2] * self.yubar[0,0] * self.yUpsilon[2,2] * self.yUpsilonbar[0,mif1] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yu[2,mif2] * self.yubar[0,1] * self.yUpsilon[2,2] * self.yUpsilonbar[0,mif1] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yu[2,mif2] * self.yubar[0,2] * self.yUpsilon[2,2] * self.yUpsilonbar[0,mif1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[1,0] * self.yUpsilon[0,0] * self.yUpsilonbar[1,0] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[1,1] * self.yUpsilon[0,0] * self.yUpsilonbar[1,0] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[1,2] * self.yUpsilon[0,0] * self.yUpsilonbar[1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[0,0] * self.yUpsilon[0,1] * self.yUpsilonbar[1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[0,1] * self.yUpsilon[0,1] * self.yUpsilonbar[1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[0,2] * self.yUpsilon[0,1] * self.yUpsilonbar[1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[1,0] * self.yUpsilon[0,1] * self.yUpsilonbar[1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[1,1] * self.yUpsilon[0,1] * self.yUpsilonbar[1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[1,2] * self.yUpsilon[0,1] * self.yUpsilonbar[1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[1,0] * self.yUpsilon[0,2] * self.yUpsilonbar[1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[1,1] * self.yUpsilon[0,2] * self.yUpsilonbar[1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[1,2] * self.yUpsilon[0,2] * self.yUpsilonbar[1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[0,0] * self.yUpsilon[1,0] * self.yUpsilonbar[1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[0,1] * self.yUpsilon[1,0] * self.yUpsilonbar[1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[0,2] * self.yUpsilon[1,0] * self.yUpsilonbar[1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[1,0] * self.yUpsilon[1,0] * self.yUpsilonbar[1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[1,1] * self.yUpsilon[1,0] * self.yUpsilonbar[1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[1,2] * self.yUpsilon[1,0] * self.yUpsilonbar[1,0] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[0,0] * self.yUpsilon[1,1] * self.yUpsilonbar[1,0] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[0,1] * self.yUpsilon[1,1] * self.yUpsilonbar[1,0] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[0,2] * self.yUpsilon[1,1] * self.yUpsilonbar[1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[0,0] * self.yUpsilon[1,2] * self.yUpsilonbar[1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[0,1] * self.yUpsilon[1,2] * self.yUpsilonbar[1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[0,2] * self.yUpsilon[1,2] * self.yUpsilonbar[1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[1,0] * self.yUpsilon[2,0] * self.yUpsilonbar[1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[1,1] * self.yUpsilon[2,0] * self.yUpsilonbar[1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[1,2] * self.yUpsilon[2,0] * self.yUpsilonbar[1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[0,0] * self.yUpsilon[2,1] * self.yUpsilonbar[1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[0,1] * self.yUpsilon[2,1] * self.yUpsilonbar[1,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[0,2] * self.yUpsilon[2,1] * self.yUpsilonbar[1,0] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[1,0] * self.yUpsilon[0,1] * self.yUpsilonbar[1,1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[1,1] * self.yUpsilon[0,1] * self.yUpsilonbar[1,1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[1,2] * self.yUpsilon[0,1] * self.yUpsilonbar[1,1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[1,0] * self.yUpsilon[1,0] * self.yUpsilonbar[1,1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[1,1] * self.yUpsilon[1,0] * self.yUpsilonbar[1,1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[1,2] * self.yUpsilon[1,0] * self.yUpsilonbar[1,1] + 1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[1,0] * self.yUpsilon[1,1] * self.yUpsilonbar[1,1] + 1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[1,1] * self.yUpsilon[1,1] * self.yUpsilonbar[1,1] + 1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[1,2] * self.yUpsilon[1,1] * self.yUpsilonbar[1,1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[1,0] * self.yUpsilon[1,2] * self.yUpsilonbar[1,1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[1,1] * self.yUpsilon[1,2] * self.yUpsilonbar[1,1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[1,2] * self.yUpsilon[1,2] * self.yUpsilonbar[1,1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[1,0] * self.yUpsilon[2,1] * self.yUpsilonbar[1,1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[1,1] * self.yUpsilon[2,1] * self.yUpsilonbar[1,1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[1,2] * self.yUpsilon[2,1] * self.yUpsilonbar[1,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[2,0] * self.yUpsilon[0,1] * self.yUpsilonbar[1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[2,1] * self.yUpsilon[0,1] * self.yUpsilonbar[1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[2,2] * self.yUpsilon[0,1] * self.yUpsilonbar[1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[1,0] * self.yUpsilon[0,2] * self.yUpsilonbar[1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[1,1] * self.yUpsilon[0,2] * self.yUpsilonbar[1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[1,2] * self.yUpsilon[0,2] * self.yUpsilonbar[1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[2,0] * self.yUpsilon[1,0] * self.yUpsilonbar[1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[2,1] * self.yUpsilon[1,0] * self.yUpsilonbar[1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[2,2] * self.yUpsilon[1,0] * self.yUpsilonbar[1,2] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[2,0] * self.yUpsilon[1,1] * self.yUpsilonbar[1,2] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[2,1] * self.yUpsilon[1,1] * self.yUpsilonbar[1,2] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[2,2] * self.yUpsilon[1,1] * self.yUpsilonbar[1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[1,0] * self.yUpsilon[1,2] * self.yUpsilonbar[1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[1,1] * self.yUpsilon[1,2] * self.yUpsilonbar[1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[1,2] * self.yUpsilon[1,2] * self.yUpsilonbar[1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[2,0] * self.yUpsilon[1,2] * self.yUpsilonbar[1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[2,1] * self.yUpsilon[1,2] * self.yUpsilonbar[1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[2,2] * self.yUpsilon[1,2] * self.yUpsilonbar[1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[1,0] * self.yUpsilon[2,0] * self.yUpsilonbar[1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[1,1] * self.yUpsilon[2,0] * self.yUpsilonbar[1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[1,2] * self.yUpsilon[2,0] * self.yUpsilonbar[1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[1,0] * self.yUpsilon[2,1] * self.yUpsilonbar[1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[1,1] * self.yUpsilon[2,1] * self.yUpsilonbar[1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[1,2] * self.yUpsilon[2,1] * self.yUpsilonbar[1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[2,0] * self.yUpsilon[2,1] * self.yUpsilonbar[1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[2,1] * self.yUpsilon[2,1] * self.yUpsilonbar[1,2] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[2,2] * self.yUpsilon[2,1] * self.yUpsilonbar[1,2] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[1,0] * self.yUpsilon[2,2] * self.yUpsilonbar[1,2] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[1,1] * self.yUpsilon[2,2] * self.yUpsilonbar[1,2] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[1,2] * self.yUpsilon[2,2] * self.yUpsilonbar[1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[1,0] * self.yu[0,mif2] * self.yUpsilon[0,0] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[1,1] * self.yu[0,mif2] * self.yUpsilon[0,0] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[1,2] * self.yu[0,mif2] * self.yUpsilon[0,0] * self.yUpsilonbar[1,mif1] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yu[0,mif2] * self.yubar[1,0] * self.yUpsilon[0,0] * self.yUpsilonbar[1,mif1] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yu[0,mif2] * self.yubar[1,1] * self.yUpsilon[0,0] * self.yUpsilonbar[1,mif1] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yu[0,mif2] * self.yubar[1,2] * self.yUpsilon[0,0] * self.yUpsilonbar[1,mif1] + 1/16 * (2)**(-1/2) * self.lambdaHatPrimeUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[1,mif1] + 3/32 * self.lambdaHatUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[1,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.yu[0,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[1,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,1] * self.yu[0,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[1,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,2] * self.yu[0,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[1,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[1,0] * self.yu[1,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[1,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[1,1] * self.yu[1,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[1,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[1,2] * self.yu[1,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[1,0] * self.yubar[1,0] * self.yUpsilon[0,1] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yu[1,mif2] * self.yubar[1,0] * self.yUpsilon[0,1] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[1,1] * self.yubar[1,1] * self.yUpsilon[0,1] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yu[1,mif2] * self.yubar[1,1] * self.yUpsilon[0,1] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[1,2] * self.yubar[1,2] * self.yUpsilon[0,1] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yu[1,mif2] * self.yubar[1,2] * self.yUpsilon[0,1] * self.yUpsilonbar[1,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[1,0] * self.yu[0,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[1,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[1,1] * self.yu[0,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[1,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[1,2] * self.yu[0,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[1,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[1,0] * self.yu[2,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[1,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[1,1] * self.yu[2,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[1,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[1,2] * self.yu[2,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[2,0] * self.yubar[1,0] * self.yUpsilon[0,2] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yu[2,mif2] * self.yubar[1,0] * self.yUpsilon[0,2] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[2,1] * self.yubar[1,1] * self.yUpsilon[0,2] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yu[2,mif2] * self.yubar[1,1] * self.yUpsilon[0,2] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[2,2] * self.yubar[1,2] * self.yUpsilon[0,2] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yu[2,mif2] * self.yubar[1,2] * self.yUpsilon[0,2] * self.yUpsilonbar[1,mif1] + 1/16 * (2)**(-1/2) * self.lambdaHatPrimeUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[1,mif1] + 3/32 * self.lambdaHatUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[1,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.yu[0,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[1,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,1] * self.yu[0,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[1,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,2] * self.yu[0,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[1,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[1,0] * self.yu[1,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[1,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[1,1] * self.yu[1,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[1,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[1,2] * self.yu[1,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[1,0] * self.yubar[1,0] * self.yUpsilon[1,0] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yu[1,mif2] * self.yubar[1,0] * self.yUpsilon[1,0] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[1,1] * self.yubar[1,1] * self.yUpsilon[1,0] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yu[1,mif2] * self.yubar[1,1] * self.yUpsilon[1,0] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[1,2] * self.yubar[1,2] * self.yUpsilon[1,0] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yu[1,mif2] * self.yubar[1,2] * self.yUpsilon[1,0] * self.yUpsilonbar[1,mif1] + 1/8 * (2)**(-1/2) * self.lambdaHatPrimeUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yUpsilon[1,1] * self.yUpsilonbar[1,mif1] + 3/16 * self.lambdaHatUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yUpsilon[1,1] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.yu[1,mif2] * self.yUpsilon[1,1] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,1] * self.yu[1,mif2] * self.yUpsilon[1,1] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,2] * self.yu[1,mif2] * self.yUpsilon[1,1] * self.yUpsilonbar[1,mif1] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yu[1,mif2] * self.yubar[1,0] * self.yUpsilon[1,1] * self.yUpsilonbar[1,mif1] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yu[1,mif2] * self.yubar[1,1] * self.yUpsilon[1,1] * self.yUpsilonbar[1,mif1] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yu[1,mif2] * self.yubar[1,2] * self.yUpsilon[1,1] * self.yUpsilonbar[1,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[1,0] * self.yu[1,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[1,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[1,1] * self.yu[1,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[1,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[1,2] * self.yu[1,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[1,mif1] + 1/16 * (2)**(-1/2) * self.lambdaHatPrimeUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[1,mif1] + 3/32 * self.lambdaHatUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[1,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.yu[2,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[1,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,1] * self.yu[2,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[1,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,2] * self.yu[2,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[2,0] * self.yubar[1,0] * self.yUpsilon[1,2] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yu[2,mif2] * self.yubar[1,0] * self.yUpsilon[1,2] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[2,1] * self.yubar[1,1] * self.yUpsilon[1,2] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yu[2,mif2] * self.yubar[1,1] * self.yUpsilon[1,2] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[2,2] * self.yubar[1,2] * self.yUpsilon[1,2] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yu[2,mif2] * self.yubar[1,2] * self.yUpsilon[1,2] * self.yUpsilonbar[1,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[1,0] * self.yu[0,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[1,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[1,1] * self.yu[0,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[1,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[1,2] * self.yu[0,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[1,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[1,0] * self.yu[2,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[1,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[1,1] * self.yu[2,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[1,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[1,2] * self.yu[2,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[2,0] * self.yubar[1,0] * self.yUpsilon[2,0] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yu[2,mif2] * self.yubar[1,0] * self.yUpsilon[2,0] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[2,1] * self.yubar[1,1] * self.yUpsilon[2,0] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yu[2,mif2] * self.yubar[1,1] * self.yUpsilon[2,0] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[2,2] * self.yubar[1,2] * self.yUpsilon[2,0] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yu[2,mif2] * self.yubar[1,2] * self.yUpsilon[2,0] * self.yUpsilonbar[1,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[1,0] * self.yu[1,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[1,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[1,1] * self.yu[1,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[1,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[1,2] * self.yu[1,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[1,mif1] + 1/16 * (2)**(-1/2) * self.lambdaHatPrimeUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[1,mif1] + 3/32 * self.lambdaHatUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[1,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.yu[2,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[1,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,1] * self.yu[2,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[1,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,2] * self.yu[2,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[2,0] * self.yubar[1,0] * self.yUpsilon[2,1] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yu[2,mif2] * self.yubar[1,0] * self.yUpsilon[2,1] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[2,1] * self.yubar[1,1] * self.yUpsilon[2,1] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yu[2,mif2] * self.yubar[1,1] * self.yUpsilon[2,1] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[2,2] * self.yubar[1,2] * self.yUpsilon[2,1] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yu[2,mif2] * self.yubar[1,2] * self.yUpsilon[2,1] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[1,0] * self.yu[2,mif2] * self.yUpsilon[2,2] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[1,1] * self.yu[2,mif2] * self.yUpsilon[2,2] * self.yUpsilonbar[1,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[1,2] * self.yu[2,mif2] * self.yUpsilon[2,2] * self.yUpsilonbar[1,mif1] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yu[2,mif2] * self.yubar[1,0] * self.yUpsilon[2,2] * self.yUpsilonbar[1,mif1] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yu[2,mif2] * self.yubar[1,1] * self.yUpsilon[2,2] * self.yUpsilonbar[1,mif1] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yu[2,mif2] * self.yubar[1,2] * self.yUpsilon[2,2] * self.yUpsilonbar[1,mif1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[2,0] * self.yUpsilon[0,0] * self.yUpsilonbar[2,0] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[2,1] * self.yUpsilon[0,0] * self.yUpsilonbar[2,0] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[2,2] * self.yUpsilon[0,0] * self.yUpsilonbar[2,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[2,0] * self.yUpsilon[0,1] * self.yUpsilonbar[2,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[2,1] * self.yUpsilon[0,1] * self.yUpsilonbar[2,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[2,2] * self.yUpsilon[0,1] * self.yUpsilonbar[2,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[0,0] * self.yUpsilon[0,2] * self.yUpsilonbar[2,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[0,1] * self.yUpsilon[0,2] * self.yUpsilonbar[2,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[0,2] * self.yUpsilon[0,2] * self.yUpsilonbar[2,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[2,0] * self.yUpsilon[0,2] * self.yUpsilonbar[2,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[2,1] * self.yUpsilon[0,2] * self.yUpsilonbar[2,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[2,2] * self.yUpsilon[0,2] * self.yUpsilonbar[2,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[2,0] * self.yUpsilon[1,0] * self.yUpsilonbar[2,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[2,1] * self.yUpsilon[1,0] * self.yUpsilonbar[2,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[2,2] * self.yUpsilon[1,0] * self.yUpsilonbar[2,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[0,0] * self.yUpsilon[1,2] * self.yUpsilonbar[2,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[0,1] * self.yUpsilon[1,2] * self.yUpsilonbar[2,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[0,2] * self.yUpsilon[1,2] * self.yUpsilonbar[2,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[0,0] * self.yUpsilon[2,0] * self.yUpsilonbar[2,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[0,1] * self.yUpsilon[2,0] * self.yUpsilonbar[2,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[0,2] * self.yUpsilon[2,0] * self.yUpsilonbar[2,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[2,0] * self.yUpsilon[2,0] * self.yUpsilonbar[2,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[2,1] * self.yUpsilon[2,0] * self.yUpsilonbar[2,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[2,2] * self.yUpsilon[2,0] * self.yUpsilonbar[2,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[0,0] * self.yUpsilon[2,1] * self.yUpsilonbar[2,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[0,1] * self.yUpsilon[2,1] * self.yUpsilonbar[2,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[0,2] * self.yUpsilon[2,1] * self.yUpsilonbar[2,0] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[0,0] * self.yUpsilon[2,2] * self.yUpsilonbar[2,0] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[0,1] * self.yUpsilon[2,2] * self.yUpsilonbar[2,0] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[0,2] * self.yUpsilon[2,2] * self.yUpsilonbar[2,0] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[2,0] * self.yUpsilon[0,1] * self.yUpsilonbar[2,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[2,1] * self.yUpsilon[0,1] * self.yUpsilonbar[2,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[2,2] * self.yUpsilon[0,1] * self.yUpsilonbar[2,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[1,0] * self.yUpsilon[0,2] * self.yUpsilonbar[2,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[1,1] * self.yUpsilon[0,2] * self.yUpsilonbar[2,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[1,2] * self.yUpsilon[0,2] * self.yUpsilonbar[2,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[2,0] * self.yUpsilon[1,0] * self.yUpsilonbar[2,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[2,1] * self.yUpsilon[1,0] * self.yUpsilonbar[2,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[2,2] * self.yUpsilon[1,0] * self.yUpsilonbar[2,1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[2,0] * self.yUpsilon[1,1] * self.yUpsilonbar[2,1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[2,1] * self.yUpsilon[1,1] * self.yUpsilonbar[2,1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[2,2] * self.yUpsilon[1,1] * self.yUpsilonbar[2,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[1,0] * self.yUpsilon[1,2] * self.yUpsilonbar[2,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[1,1] * self.yUpsilon[1,2] * self.yUpsilonbar[2,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[1,2] * self.yUpsilon[1,2] * self.yUpsilonbar[2,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[2,0] * self.yUpsilon[1,2] * self.yUpsilonbar[2,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[2,1] * self.yUpsilon[1,2] * self.yUpsilonbar[2,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[2,2] * self.yUpsilon[1,2] * self.yUpsilonbar[2,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[1,0] * self.yUpsilon[2,0] * self.yUpsilonbar[2,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[1,1] * self.yUpsilon[2,0] * self.yUpsilonbar[2,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[1,2] * self.yUpsilon[2,0] * self.yUpsilonbar[2,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[1,0] * self.yUpsilon[2,1] * self.yUpsilonbar[2,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[1,1] * self.yUpsilon[2,1] * self.yUpsilonbar[2,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[1,2] * self.yUpsilon[2,1] * self.yUpsilonbar[2,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[2,0] * self.yUpsilon[2,1] * self.yUpsilonbar[2,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[2,1] * self.yUpsilon[2,1] * self.yUpsilonbar[2,1] + 1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[2,2] * self.yUpsilon[2,1] * self.yUpsilonbar[2,1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[1,0] * self.yUpsilon[2,2] * self.yUpsilonbar[2,1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[1,1] * self.yUpsilon[2,2] * self.yUpsilonbar[2,1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[1,2] * self.yUpsilon[2,2] * self.yUpsilonbar[2,1] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[2,0] * self.yUpsilon[0,2] * self.yUpsilonbar[2,2] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[2,1] * self.yUpsilon[0,2] * self.yUpsilonbar[2,2] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[2,2] * self.yUpsilon[0,2] * self.yUpsilonbar[2,2] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[2,0] * self.yUpsilon[1,2] * self.yUpsilonbar[2,2] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[2,1] * self.yUpsilon[1,2] * self.yUpsilonbar[2,2] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[2,2] * self.yUpsilon[1,2] * self.yUpsilonbar[2,2] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,0] * self.yubar[2,0] * self.yUpsilon[2,0] * self.yUpsilonbar[2,2] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,1] * self.yubar[2,1] * self.yUpsilon[2,0] * self.yUpsilonbar[2,2] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[mif1,2] * self.yubar[2,2] * self.yUpsilon[2,0] * self.yUpsilonbar[2,2] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,0] * self.yubar[2,0] * self.yUpsilon[2,1] * self.yUpsilonbar[2,2] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,1] * self.yubar[2,1] * self.yUpsilon[2,1] * self.yUpsilonbar[2,2] + 1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[mif1,2] * self.yubar[2,2] * self.yUpsilon[2,1] * self.yUpsilonbar[2,2] + 1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,0] * self.yubar[2,0] * self.yUpsilon[2,2] * self.yUpsilonbar[2,2] + 1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,1] * self.yubar[2,1] * self.yUpsilon[2,2] * self.yUpsilonbar[2,2] + 1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yu[mif1,2] * self.yubar[2,2] * self.yUpsilon[2,2] * self.yUpsilonbar[2,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[2,0] * self.yu[0,mif2] * self.yUpsilon[0,0] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[2,1] * self.yu[0,mif2] * self.yUpsilon[0,0] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[2,2] * self.yu[0,mif2] * self.yUpsilon[0,0] * self.yUpsilonbar[2,mif1] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yu[0,mif2] * self.yubar[2,0] * self.yUpsilon[0,0] * self.yUpsilonbar[2,mif1] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yu[0,mif2] * self.yubar[2,1] * self.yUpsilon[0,0] * self.yUpsilonbar[2,mif1] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yu[0,mif2] * self.yubar[2,2] * self.yUpsilon[0,0] * self.yUpsilonbar[2,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[2,0] * self.yu[0,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[2,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[2,1] * self.yu[0,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[2,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[2,2] * self.yu[0,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[2,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[2,0] * self.yu[1,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[2,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[2,1] * self.yu[1,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[2,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[2,2] * self.yu[1,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[1,0] * self.yubar[2,0] * self.yUpsilon[0,1] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yu[1,mif2] * self.yubar[2,0] * self.yUpsilon[0,1] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[1,1] * self.yubar[2,1] * self.yUpsilon[0,1] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yu[1,mif2] * self.yubar[2,1] * self.yUpsilon[0,1] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[1,2] * self.yubar[2,2] * self.yUpsilon[0,1] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yu[1,mif2] * self.yubar[2,2] * self.yUpsilon[0,1] * self.yUpsilonbar[2,mif1] + 1/16 * (2)**(-1/2) * self.lambdaHatPrimeUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[2,mif1] + 3/32 * self.lambdaHatUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[2,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,0] * self.yu[0,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[2,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,1] * self.yu[0,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[2,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,2] * self.yu[0,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[2,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[2,0] * self.yu[2,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[2,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[2,1] * self.yu[2,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[2,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[2,2] * self.yu[2,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[2,0] * self.yubar[2,0] * self.yUpsilon[0,2] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yu[2,mif2] * self.yubar[2,0] * self.yUpsilon[0,2] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[2,1] * self.yubar[2,1] * self.yUpsilon[0,2] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yu[2,mif2] * self.yubar[2,1] * self.yUpsilon[0,2] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[2,2] * self.yubar[2,2] * self.yUpsilon[0,2] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yu[2,mif2] * self.yubar[2,2] * self.yUpsilon[0,2] * self.yUpsilonbar[2,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[2,0] * self.yu[0,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[2,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[2,1] * self.yu[0,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[2,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[2,2] * self.yu[0,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[2,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[2,0] * self.yu[1,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[2,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[2,1] * self.yu[1,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[2,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[2,2] * self.yu[1,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[1,0] * self.yubar[2,0] * self.yUpsilon[1,0] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yu[1,mif2] * self.yubar[2,0] * self.yUpsilon[1,0] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[1,1] * self.yubar[2,1] * self.yUpsilon[1,0] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yu[1,mif2] * self.yubar[2,1] * self.yUpsilon[1,0] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[1,2] * self.yubar[2,2] * self.yUpsilon[1,0] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yu[1,mif2] * self.yubar[2,2] * self.yUpsilon[1,0] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[2,0] * self.yu[1,mif2] * self.yUpsilon[1,1] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[2,1] * self.yu[1,mif2] * self.yUpsilon[1,1] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[2,2] * self.yu[1,mif2] * self.yUpsilon[1,1] * self.yUpsilonbar[2,mif1] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yu[1,mif2] * self.yubar[2,0] * self.yUpsilon[1,1] * self.yUpsilonbar[2,mif1] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yu[1,mif2] * self.yubar[2,1] * self.yUpsilon[1,1] * self.yUpsilonbar[2,mif1] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yu[1,mif2] * self.yubar[2,2] * self.yUpsilon[1,1] * self.yUpsilonbar[2,mif1] + 1/16 * (2)**(-1/2) * self.lambdaHatPrimeUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[2,mif1] + 3/32 * self.lambdaHatUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[2,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,0] * self.yu[1,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[2,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,1] * self.yu[1,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[2,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,2] * self.yu[1,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[2,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[2,0] * self.yu[2,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[2,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[2,1] * self.yu[2,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[2,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[2,2] * self.yu[2,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[2,0] * self.yubar[2,0] * self.yUpsilon[1,2] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yu[2,mif2] * self.yubar[2,0] * self.yUpsilon[1,2] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[2,1] * self.yubar[2,1] * self.yUpsilon[1,2] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yu[2,mif2] * self.yubar[2,1] * self.yUpsilon[1,2] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[2,2] * self.yubar[2,2] * self.yUpsilon[1,2] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yu[2,mif2] * self.yubar[2,2] * self.yUpsilon[1,2] * self.yUpsilonbar[2,mif1] + 1/16 * (2)**(-1/2) * self.lambdaHatPrimeUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[2,mif1] + 3/32 * self.lambdaHatUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[2,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,0] * self.yu[0,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[2,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,1] * self.yu[0,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[2,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,2] * self.yu[0,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[2,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[2,0] * self.yu[2,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[2,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[2,1] * self.yu[2,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[2,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[2,2] * self.yu[2,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[2,0] * self.yubar[2,0] * self.yUpsilon[2,0] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yu[2,mif2] * self.yubar[2,0] * self.yUpsilon[2,0] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[2,1] * self.yubar[2,1] * self.yUpsilon[2,0] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yu[2,mif2] * self.yubar[2,1] * self.yUpsilon[2,0] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[2,2] * self.yubar[2,2] * self.yUpsilon[2,0] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yu[2,mif2] * self.yubar[2,2] * self.yUpsilon[2,0] * self.yUpsilonbar[2,mif1] + 1/16 * (2)**(-1/2) * self.lambdaHatPrimeUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[2,mif1] + 3/32 * self.lambdaHatUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[2,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,0] * self.yu[1,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[2,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,1] * self.yu[1,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[2,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,2] * self.yu[1,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[2,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[2,0] * self.yu[2,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[2,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[2,1] * self.yu[2,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[2,mif1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[2,2] * self.yu[2,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[2,0] * self.yubar[2,0] * self.yUpsilon[2,1] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yu[2,mif2] * self.yubar[2,0] * self.yUpsilon[2,1] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[2,1] * self.yubar[2,1] * self.yUpsilon[2,1] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yu[2,mif2] * self.yubar[2,1] * self.yUpsilon[2,1] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[2,2] * self.yubar[2,2] * self.yUpsilon[2,1] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yu[2,mif2] * self.yubar[2,2] * self.yUpsilon[2,1] * self.yUpsilonbar[2,mif1] + 1/8 * (2)**(-1/2) * self.lambdaHatPrimeUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yUpsilon[2,2] * self.yUpsilonbar[2,mif1] + 3/16 * self.lambdaHatUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yUpsilon[2,2] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,0] * self.yu[2,mif2] * self.yUpsilon[2,2] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,1] * self.yu[2,mif2] * self.yUpsilon[2,2] * self.yUpsilonbar[2,mif1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,2] * self.yu[2,mif2] * self.yUpsilon[2,2] * self.yUpsilonbar[2,mif1] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yu[2,mif2] * self.yubar[2,0] * self.yUpsilon[2,2] * self.yUpsilonbar[2,mif1] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yu[2,mif2] * self.yubar[2,1] * self.yUpsilon[2,2] * self.yUpsilonbar[2,mif1] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yu[2,mif2] * self.yubar[2,2] * self.yUpsilon[2,2] * self.yUpsilonbar[2,mif1] + 1/8 * (2)**(-1/2) * self.lambdaHatPrimeUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yUpsilon[0,0] * self.yUpsilonbar[mif1,0] + 3/16 * self.lambdaHatUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yUpsilon[0,0] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.yu[0,mif2] * self.yUpsilon[0,0] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.yu[0,mif2] * self.yUpsilon[0,0] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,2] * self.yu[0,mif2] * self.yUpsilon[0,0] * self.yUpsilonbar[mif1,0] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yu[0,mif2] * self.yubar[0,0] * self.yUpsilon[0,0] * self.yUpsilonbar[mif1,0] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yu[0,mif2] * self.yubar[0,1] * self.yUpsilon[0,0] * self.yUpsilonbar[mif1,0] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yu[0,mif2] * self.yubar[0,2] * self.yUpsilon[0,0] * self.yUpsilonbar[mif1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[0,0] * self.yu[0,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[0,1] * self.yu[0,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[0,2] * self.yu[0,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,0] + 1/16 * (2)**(-1/2) * self.lambdaHatPrimeUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,0] + 3/32 * self.lambdaHatUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.yu[1,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.yu[1,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,2] * self.yu[1,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[1,0] * self.yubar[0,0] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yu[1,mif2] * self.yubar[0,0] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[1,1] * self.yubar[0,1] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yu[1,mif2] * self.yubar[0,1] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[1,2] * self.yubar[0,2] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yu[1,mif2] * self.yubar[0,2] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[0,0] * self.yu[0,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[0,1] * self.yu[0,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[0,2] * self.yu[0,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,0] + 1/16 * (2)**(-1/2) * self.lambdaHatPrimeUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,0] + 3/32 * self.lambdaHatUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.yu[2,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.yu[2,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,2] * self.yu[2,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[2,0] * self.yubar[0,0] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yu[2,mif2] * self.yubar[0,0] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[2,1] * self.yubar[0,1] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yu[2,mif2] * self.yubar[0,1] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[2,2] * self.yubar[0,2] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yu[2,mif2] * self.yubar[0,2] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[0,0] * self.yu[0,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[0,1] * self.yu[0,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[0,2] * self.yu[0,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,0] + 1/16 * (2)**(-1/2) * self.lambdaHatPrimeUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,0] + 3/32 * self.lambdaHatUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.yu[1,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.yu[1,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,2] * self.yu[1,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[1,0] * self.yubar[0,0] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yu[1,mif2] * self.yubar[0,0] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[1,1] * self.yubar[0,1] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yu[1,mif2] * self.yubar[0,1] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[1,2] * self.yubar[0,2] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yu[1,mif2] * self.yubar[0,2] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[0,0] * self.yu[1,mif2] * self.yUpsilon[1,1] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[0,1] * self.yu[1,mif2] * self.yUpsilon[1,1] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[0,2] * self.yu[1,mif2] * self.yUpsilon[1,1] * self.yUpsilonbar[mif1,0] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yu[1,mif2] * self.yubar[0,0] * self.yUpsilon[1,1] * self.yUpsilonbar[mif1,0] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yu[1,mif2] * self.yubar[0,1] * self.yUpsilon[1,1] * self.yUpsilonbar[mif1,0] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yu[1,mif2] * self.yubar[0,2] * self.yUpsilon[1,1] * self.yUpsilonbar[mif1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[0,0] * self.yu[1,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[0,1] * self.yu[1,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[0,2] * self.yu[1,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[0,0] * self.yu[2,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[0,1] * self.yu[2,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[0,2] * self.yu[2,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[2,0] * self.yubar[0,0] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yu[2,mif2] * self.yubar[0,0] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[2,1] * self.yubar[0,1] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yu[2,mif2] * self.yubar[0,1] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[2,2] * self.yubar[0,2] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yu[2,mif2] * self.yubar[0,2] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[0,0] * self.yu[0,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[0,1] * self.yu[0,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[0,2] * self.yu[0,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,0] + 1/16 * (2)**(-1/2) * self.lambdaHatPrimeUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,0] + 3/32 * self.lambdaHatUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[0,0] * self.yu[2,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[0,1] * self.yu[2,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[0,2] * self.yu[2,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[2,0] * self.yubar[0,0] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yu[2,mif2] * self.yubar[0,0] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[2,1] * self.yubar[0,1] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yu[2,mif2] * self.yubar[0,1] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[2,2] * self.yubar[0,2] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yu[2,mif2] * self.yubar[0,2] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[0,0] * self.yu[1,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[0,1] * self.yu[1,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[0,2] * self.yu[1,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[0,0] * self.yu[2,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[0,1] * self.yu[2,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,0] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[0,2] * self.yu[2,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[2,0] * self.yubar[0,0] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yu[2,mif2] * self.yubar[0,0] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[2,1] * self.yubar[0,1] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yu[2,mif2] * self.yubar[0,1] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[2,2] * self.yubar[0,2] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yu[2,mif2] * self.yubar[0,2] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[0,0] * self.yu[2,mif2] * self.yUpsilon[2,2] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[0,1] * self.yu[2,mif2] * self.yUpsilon[2,2] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[0,2] * self.yu[2,mif2] * self.yUpsilon[2,2] * self.yUpsilonbar[mif1,0] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yu[2,mif2] * self.yubar[0,0] * self.yUpsilon[2,2] * self.yUpsilonbar[mif1,0] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yu[2,mif2] * self.yubar[0,1] * self.yUpsilon[2,2] * self.yUpsilonbar[mif1,0] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yu[2,mif2] * self.yubar[0,2] * self.yUpsilon[2,2] * self.yUpsilonbar[mif1,0] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[1,0] * self.yu[0,mif2] * self.yUpsilon[0,0] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[1,1] * self.yu[0,mif2] * self.yUpsilon[0,0] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[1,2] * self.yu[0,mif2] * self.yUpsilon[0,0] * self.yUpsilonbar[mif1,1] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yu[0,mif2] * self.yubar[1,0] * self.yUpsilon[0,0] * self.yUpsilonbar[mif1,1] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yu[0,mif2] * self.yubar[1,1] * self.yUpsilon[0,0] * self.yUpsilonbar[mif1,1] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yu[0,mif2] * self.yubar[1,2] * self.yUpsilon[0,0] * self.yUpsilonbar[mif1,1] + 1/16 * (2)**(-1/2) * self.lambdaHatPrimeUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,1] + 3/32 * self.lambdaHatUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.yu[0,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,1] * self.yu[0,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,2] * self.yu[0,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[1,0] * self.yu[1,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[1,1] * self.yu[1,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[1,2] * self.yu[1,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[1,0] * self.yubar[1,0] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yu[1,mif2] * self.yubar[1,0] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[1,1] * self.yubar[1,1] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yu[1,mif2] * self.yubar[1,1] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[1,2] * self.yubar[1,2] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yu[1,mif2] * self.yubar[1,2] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[1,0] * self.yu[0,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[1,1] * self.yu[0,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[1,2] * self.yu[0,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[1,0] * self.yu[2,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[1,1] * self.yu[2,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[1,2] * self.yu[2,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[2,0] * self.yubar[1,0] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yu[2,mif2] * self.yubar[1,0] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[2,1] * self.yubar[1,1] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yu[2,mif2] * self.yubar[1,1] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[2,2] * self.yubar[1,2] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yu[2,mif2] * self.yubar[1,2] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,1] + 1/16 * (2)**(-1/2) * self.lambdaHatPrimeUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,1] + 3/32 * self.lambdaHatUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.yu[0,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,1] * self.yu[0,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,2] * self.yu[0,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[1,0] * self.yu[1,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[1,1] * self.yu[1,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[1,2] * self.yu[1,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[1,0] * self.yubar[1,0] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yu[1,mif2] * self.yubar[1,0] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[1,1] * self.yubar[1,1] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yu[1,mif2] * self.yubar[1,1] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[1,2] * self.yubar[1,2] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yu[1,mif2] * self.yubar[1,2] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,1] + 1/8 * (2)**(-1/2) * self.lambdaHatPrimeUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yUpsilon[1,1] * self.yUpsilonbar[mif1,1] + 3/16 * self.lambdaHatUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yUpsilon[1,1] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.yu[1,mif2] * self.yUpsilon[1,1] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,1] * self.yu[1,mif2] * self.yUpsilon[1,1] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,2] * self.yu[1,mif2] * self.yUpsilon[1,1] * self.yUpsilonbar[mif1,1] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yu[1,mif2] * self.yubar[1,0] * self.yUpsilon[1,1] * self.yUpsilonbar[mif1,1] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yu[1,mif2] * self.yubar[1,1] * self.yUpsilon[1,1] * self.yUpsilonbar[mif1,1] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yu[1,mif2] * self.yubar[1,2] * self.yUpsilon[1,1] * self.yUpsilonbar[mif1,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[1,0] * self.yu[1,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[1,1] * self.yu[1,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[1,2] * self.yu[1,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,1] + 1/16 * (2)**(-1/2) * self.lambdaHatPrimeUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,1] + 3/32 * self.lambdaHatUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.yu[2,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,1] * self.yu[2,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,2] * self.yu[2,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[2,0] * self.yubar[1,0] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yu[2,mif2] * self.yubar[1,0] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[2,1] * self.yubar[1,1] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yu[2,mif2] * self.yubar[1,1] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[2,2] * self.yubar[1,2] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yu[2,mif2] * self.yubar[1,2] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[1,0] * self.yu[0,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[1,1] * self.yu[0,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[1,2] * self.yu[0,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[1,0] * self.yu[2,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[1,1] * self.yu[2,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[1,2] * self.yu[2,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[2,0] * self.yubar[1,0] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yu[2,mif2] * self.yubar[1,0] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[2,1] * self.yubar[1,1] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yu[2,mif2] * self.yubar[1,1] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[2,2] * self.yubar[1,2] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yu[2,mif2] * self.yubar[1,2] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[1,0] * self.yu[1,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[1,1] * self.yu[1,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[1,2] * self.yu[1,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,1] + 1/16 * (2)**(-1/2) * self.lambdaHatPrimeUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,1] + 3/32 * self.lambdaHatUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[1,0] * self.yu[2,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[1,1] * self.yu[2,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,1] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[1,2] * self.yu[2,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[2,0] * self.yubar[1,0] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yu[2,mif2] * self.yubar[1,0] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[2,1] * self.yubar[1,1] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yu[2,mif2] * self.yubar[1,1] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[2,2] * self.yubar[1,2] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yu[2,mif2] * self.yubar[1,2] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[1,0] * self.yu[2,mif2] * self.yUpsilon[2,2] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[1,1] * self.yu[2,mif2] * self.yUpsilon[2,2] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[1,2] * self.yu[2,mif2] * self.yUpsilon[2,2] * self.yUpsilonbar[mif1,1] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yu[2,mif2] * self.yubar[1,0] * self.yUpsilon[2,2] * self.yUpsilonbar[mif1,1] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yu[2,mif2] * self.yubar[1,1] * self.yUpsilon[2,2] * self.yUpsilonbar[mif1,1] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yu[2,mif2] * self.yubar[1,2] * self.yUpsilon[2,2] * self.yUpsilonbar[mif1,1] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[2,0] * self.yu[0,mif2] * self.yUpsilon[0,0] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[2,1] * self.yu[0,mif2] * self.yUpsilon[0,0] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[2,2] * self.yu[0,mif2] * self.yUpsilon[0,0] * self.yUpsilonbar[mif1,2] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yu[0,mif2] * self.yubar[2,0] * self.yUpsilon[0,0] * self.yUpsilonbar[mif1,2] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yu[0,mif2] * self.yubar[2,1] * self.yUpsilon[0,0] * self.yUpsilonbar[mif1,2] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yu[0,mif2] * self.yubar[2,2] * self.yUpsilon[0,0] * self.yUpsilonbar[mif1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[2,0] * self.yu[0,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[2,1] * self.yu[0,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[2,2] * self.yu[0,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[2,0] * self.yu[1,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[2,1] * self.yu[1,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[2,2] * self.yu[1,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[1,0] * self.yubar[2,0] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yu[1,mif2] * self.yubar[2,0] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[1,1] * self.yubar[2,1] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yu[1,mif2] * self.yubar[2,1] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[1,2] * self.yubar[2,2] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yu[1,mif2] * self.yubar[2,2] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,2] + 1/16 * (2)**(-1/2) * self.lambdaHatPrimeUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,2] + 3/32 * self.lambdaHatUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,0] * self.yu[0,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,1] * self.yu[0,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,2] * self.yu[0,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[2,0] * self.yu[2,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[2,1] * self.yu[2,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[2,2] * self.yu[2,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[2,0] * self.yubar[2,0] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yu[2,mif2] * self.yubar[2,0] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[2,1] * self.yubar[2,1] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yu[2,mif2] * self.yubar[2,1] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[2,2] * self.yubar[2,2] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yu[2,mif2] * self.yubar[2,2] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[2,0] * self.yu[0,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[2,1] * self.yu[0,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[2,2] * self.yu[0,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[2,0] * self.yu[1,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[2,1] * self.yu[1,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[2,2] * self.yu[1,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[1,0] * self.yubar[2,0] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yu[1,mif2] * self.yubar[2,0] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[1,1] * self.yubar[2,1] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yu[1,mif2] * self.yubar[2,1] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[1,2] * self.yubar[2,2] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yu[1,mif2] * self.yubar[2,2] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[2,0] * self.yu[1,mif2] * self.yUpsilon[1,1] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[2,1] * self.yu[1,mif2] * self.yUpsilon[1,1] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[2,2] * self.yu[1,mif2] * self.yUpsilon[1,1] * self.yUpsilonbar[mif1,2] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yu[1,mif2] * self.yubar[2,0] * self.yUpsilon[1,1] * self.yUpsilonbar[mif1,2] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yu[1,mif2] * self.yubar[2,1] * self.yUpsilon[1,1] * self.yUpsilonbar[mif1,2] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yu[1,mif2] * self.yubar[2,2] * self.yUpsilon[1,1] * self.yUpsilonbar[mif1,2] + 1/16 * (2)**(-1/2) * self.lambdaHatPrimeUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,2] + 3/32 * self.lambdaHatUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,0] * self.yu[1,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,1] * self.yu[1,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,2] * self.yu[1,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[2,0] * self.yu[2,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[2,1] * self.yu[2,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[2,2] * self.yu[2,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[2,0] * self.yubar[2,0] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yu[2,mif2] * self.yubar[2,0] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[2,1] * self.yubar[2,1] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yu[2,mif2] * self.yubar[2,1] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[2,2] * self.yubar[2,2] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yu[2,mif2] * self.yubar[2,2] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,2] + 1/16 * (2)**(-1/2) * self.lambdaHatPrimeUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,2] + 3/32 * self.lambdaHatUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,0] * self.yu[0,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,1] * self.yu[0,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,2] * self.yu[0,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,0] * self.ydbar[2,0] * self.yu[2,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,1] * self.ydbar[2,1] * self.yu[2,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[0,2] * self.ydbar[2,2] * self.yu[2,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[2,0] * self.yubar[2,0] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,0] * self.yu[2,mif2] * self.yubar[2,0] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[2,1] * self.yubar[2,1] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,1] * self.yu[2,mif2] * self.yubar[2,1] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yu[2,2] * self.yubar[2,2] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,2] * self.yu[2,mif2] * self.yubar[2,2] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,2] + 1/16 * (2)**(-1/2) * self.lambdaHatPrimeUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,2] + 3/32 * self.lambdaHatUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,0] * self.yu[1,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,1] * self.yu[1,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,2] * self.yu[1,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,0] * self.ydbar[2,0] * self.yu[2,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,1] * self.ydbar[2,1] * self.yu[2,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,2] + -1/32 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[1,2] * self.ydbar[2,2] * self.yu[2,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[2,0] * self.yubar[2,0] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,0] * self.yu[2,mif2] * self.yubar[2,0] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[2,1] * self.yubar[2,1] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,1] * self.yu[2,mif2] * self.yubar[2,1] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yu[2,2] * self.yubar[2,2] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,2] * self.yu[2,mif2] * self.yubar[2,2] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,2] + 1/8 * (2)**(-1/2) * self.lambdaHatPrimeUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yUpsilon[2,2] * self.yUpsilonbar[mif1,2] + 3/16 * self.lambdaHatUpsilon * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yUpsilon[2,2] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,0] * self.ydbar[2,0] * self.yu[2,mif2] * self.yUpsilon[2,2] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,1] * self.ydbar[2,1] * self.yu[2,mif2] * self.yUpsilon[2,2] * self.yUpsilonbar[mif1,2] + -1/16 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yd[2,2] * self.ydbar[2,2] * self.yu[2,mif2] * self.yUpsilon[2,2] * self.yUpsilonbar[mif1,2] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,0] * self.yu[2,mif2] * self.yubar[2,0] * self.yUpsilon[2,2] * self.yUpsilonbar[mif1,2] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,1] * self.yu[2,mif2] * self.yubar[2,1] * self.yUpsilon[2,2] * self.yUpsilonbar[mif1,2] + -1/8 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,2] * self.yu[2,mif2] * self.yubar[2,2] * self.yUpsilon[2,2] * self.yUpsilonbar[mif1,2])

    def alphaOuu(self, mif1,mif2,mif3,mif4):
        return (-1/256 * (self.g3)**(4) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif4) * self.kronecker_delta(mif2,mif3) + -1/1080 * (self.g1)**(4) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4) + 1/768 * (self.g3)**(4) * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.kronecker_delta(mif1,mif2) * self.kronecker_delta(mif3,mif4))

    def alphaOuW(self, mif1,mif2):
        return (-1/32 * self.g2 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yUpsilon[0,0] * self.yUpsilonbar[0,mif1] + -1/64 * self.g2 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[0,mif1] + -1/64 * self.g2 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[0,mif1] + -1/64 * self.g2 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[0,mif1] + -1/64 * self.g2 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[0,mif1] + -1/64 * self.g2 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[1,mif1] + -1/64 * self.g2 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[1,mif1] + -1/32 * self.g2 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yUpsilon[1,1] * self.yUpsilonbar[1,mif1] + -1/64 * self.g2 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[1,mif1] + -1/64 * self.g2 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[1,mif1] + -1/64 * self.g2 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[2,mif1] + -1/64 * self.g2 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[2,mif1] + -1/64 * self.g2 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[2,mif1] + -1/64 * self.g2 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[2,mif1] + -1/32 * self.g2 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yUpsilon[2,2] * self.yUpsilonbar[2,mif1] + -1/32 * self.g2 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yUpsilon[0,0] * self.yUpsilonbar[mif1,0] + -1/64 * self.g2 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,0] + -1/64 * self.g2 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,0] + -1/64 * self.g2 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,0] + -1/64 * self.g2 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,0] + -1/64 * self.g2 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yUpsilon[0,1] * self.yUpsilonbar[mif1,1] + -1/64 * self.g2 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yUpsilon[1,0] * self.yUpsilonbar[mif1,1] + -1/32 * self.g2 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yUpsilon[1,1] * self.yUpsilonbar[mif1,1] + -1/64 * self.g2 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,1] + -1/64 * self.g2 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,1] + -1/64 * self.g2 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yUpsilon[0,2] * self.yUpsilonbar[mif1,2] + -1/64 * self.g2 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yUpsilon[1,2] * self.yUpsilonbar[mif1,2] + -1/64 * self.g2 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[0,mif2] * self.yUpsilon[2,0] * self.yUpsilonbar[mif1,2] + -1/64 * self.g2 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[1,mif2] * self.yUpsilon[2,1] * self.yUpsilonbar[mif1,2] + -1/32 * self.g2 * (self.MUpsilon)**(-2) * self.onelooporder * (np.pi)**(-2) * self.yu[2,mif2] * self.yUpsilon[2,2] * self.yUpsilonbar[mif1,2])

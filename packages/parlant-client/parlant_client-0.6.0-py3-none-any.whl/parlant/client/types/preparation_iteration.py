# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
from .preparation_iteration_generations import PreparationIterationGenerations
import typing
from .guideline_proposition import GuidelineProposition
from .tool_call import ToolCall
from .term import Term
from .context_variable_and_value import ContextVariableAndValue
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class PreparationIteration(UniversalBaseModel):
    generations: PreparationIterationGenerations
    guideline_propositions: typing.List[GuidelineProposition]
    tool_calls: typing.List[ToolCall]
    terms: typing.List[Term]
    context_variables: typing.List[ContextVariableAndValue]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow

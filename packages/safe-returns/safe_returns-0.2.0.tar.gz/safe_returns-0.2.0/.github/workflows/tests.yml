name: Tests
concurrency:
    group: test-${{ github.head_ref }}
    cancel-in-progress: true

on:
  pull_request:
    branches: ["master"]
    paths-ignore: ["docs/**", "README.md", "LICENSE"]

  push:
    branches: ["master"]
    paths-ignore: ["docs/**", "README.md", "LICENSE"]


jobs:
  run:
    name: Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.11", "3.12", "3.13"]

    steps:
    - name: Checkout Code Repository
      uses: actions/checkout@v4
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        enable-cache: true
        cache-dependency-glob: uv.lock
    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}
    - name: Setup cache
      uses: actions/cache@v4
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ matrix.python-version}}-${{ hashFiles('uv.lock') }}
        restore-keys: venv-${{ runner.os }}-${{ matrix.python-version}}
    - name: Create venv, install dependencies
      run: |
        uv sync
        source .venv/bin/activate
        echo "$VIRTUAL_ENV/bin" >> $GITHUB_PATH
        echo "VIRTUAL_ENV=$VIRTUAL_ENV" >> $GITHUB_ENV
    - name: Test with pytest
      run: |
        uv run -m pytest --cov-config=pyproject.toml
        uv run -m coverage lcov
    - name: Submit coverage data to coveralls.io
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        path-to-lcov: "coverage.lcov"

{"version":3,"file":"lib_index_js.1856c2125c057d65f9c8.js","mappings":";;;;;;;;;;;;;;;;;;;AAKiC;AACsB;AACJ;AACnD,uDAAuD;AACvD,4DAA4D;AAC5D,4DAA4D;AAC5D,gDAAgD;AAChD,mDAAmD;AACnD,6CAA6C;AAC7C,oDAAoD;AACpD,uDAAuD;AACvD,mEAAmE;AAEnE;;;;;;;;;GASG;AAEH,KAAK,UAAU,QAAQ,CACrB,GAAoB,EACpB,OAAwB,EACxB,QAAgC,EAChC,SAAqB,EACrB,MAAe;;IAEf,OAAO,CAAC,GAAG,CAAC,sDAAsD,CAAC,CAAC;IAEpE,aAAa;IACb,IAAI,CAAC,MAAM,EAAE;QACX,OAAO,CAAC,KAAK,CACX,yEAAyE,CAC1E,CAAC;QACF,OAAO;KACR;IAED,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,MAAM,CAAC,CAAC;IAEtC,SAAS;IACT,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE;QAChC,OAAO,CAAC,GAAG,CAAC,+BAA+B,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;IAC1D,CAAC,CAAC,CAAC;IAEH,WAAW;IACX,UAAU,CAAC,GAAG,EAAE;;QACd,OAAO,CAAC,GAAG,CACT,wBAAwB,EACxB,aAAM,CAAC,OAAO,0CAAE,IAAI,KAAI,iBAAiB,CAC1C,CAAC;IACJ,CAAC,EAAE,IAAI,CAAC,CAAC;IAET,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,aAAM,CAAC,OAAO,0CAAE,IAAI,KAAI,iBAAiB,CAAC,CAAC;IAEzE,YAAY;IACZ,OAAO,CAAC,GAAG,CAAC,+DAA+D,CAAC,CAAC;AAC/E,CAAC;AAED,MAAM,QAAQ,GAAgC;IAC5C,EAAE,EAAE,oBAAoB;IACxB,WAAW,EAAE,6BAA6B;IAC1C,SAAS,EAAE,IAAI;IACf,QAAQ,EAAE,CAAC,iEAAe,EAAE,oEAAe,EAAE,4DAAO,CAAC;IACrD,QAAQ,EAAE,CAAC,6DAAU,CAAC;IACtB,QAAQ,EAAE,QAAQ;CACnB,CAAC;AAEF,MAAM,OAAO,GAAG,CAAC,QAAQ,CAAC,CAAC;AAC3B,iEAAe,OAAO,EAAC","sources":["webpack://ln-jupyter-extra/./src/index.ts"],"sourcesContent":["import {\n  ILayoutRestorer,\n  JupyterFrontEnd,\n  JupyterFrontEndPlugin,\n  IRouter\n} from '@jupyterlab/application';\nimport { ICommandPalette } from '@jupyterlab/apputils';\nimport { IStatusBar } from '@jupyterlab/statusbar';\nimport createVersion from './widgets/createVersion';\nimport VersionListSidebarWidget from './widgets/version';\nimport DataSetListSidebarWidget from './widgets/dataset';\nimport UsageTimeWidget from './widgets/time';\n// import LogMonitorWidget from './widgets/log';\nimport TitleWidget from './widgets/title';\nimport { getProjectDetail } from './api/project';\nimport { Notification } from '@jupyterlab/apputils';\n// import VariableInspectorPlugins from './widgets/variable/index';\n\n/**\n * Activate the ln-notebook extension.\n *\n * @param app - The JupyterLab Application instance\n * @param palette - The command palette instance\n * @param restorer - The application layout restorer\n * @param statusBar - The status bar instance\n *\n * @returns A promise that resolves when the extension has been activated\n */\n\nasync function activate(\n  app: JupyterFrontEnd,\n  palette: ICommandPalette,\n  restorer: ILayoutRestorer | null,\n  statusBar: IStatusBar | null,\n  router: IRouter | undefined\n): Promise<void> {\n  console.log('Activating ln-jupyter-extra extension...');\n\n  if (!router) {\n    console.error(\n      'Router is undefined. Ensure IRouter is properly declared in \"requires\".'\n    );\n    return;\n  }\n\n  try {\n    console.log('Initial route:', router.current?.path || 'Route not ready');\n\n    if (typeof router.routed?.connect === 'function') {\n      router.routed.connect((_, args) => {\n        console.log('Route initialized or changed:', args.path);\n      });\n    } else {\n      console.warn('Router connect method is unavailable.');\n    }\n\n    // 插件其他初始化逻辑\n    const projectId = localStorage.getItem('projectId');\n    const projectData = await getProjectDetail(projectId || '');\n\n    const timeWidget = new UsageTimeWidget();\n    timeWidget.install(app);\n\n    const sidebarWidget = new VersionListSidebarWidget();\n    sidebarWidget.install(app);\n\n    const sidebarDataSet = new DataSetListSidebarWidget({ projectData });\n    sidebarDataSet.install(app);\n\n    const titleWidget = new TitleWidget({ projectData });\n    titleWidget.install(app);\n\n    const createVersionBtn = new createVersion(app);\n    createVersionBtn.install(app);\n\n    console.log('ln-jupyter-extra extension activated successfully!');\n  } catch (error) {\n    console.error('Error during activation:', error);\n    Notification.error('插件激活失败');\n  }\n}\n\nconst lnPlugin: JupyterFrontEndPlugin<void> = {\n  id: 'ln-notebook:plugin',\n  description: 'leinao extra jupyter plugin',\n  autoStart: true,\n  requires: [ICommandPalette, ILayoutRestorer, IRouter],\n  optional: [IStatusBar],\n  activate: activate\n};\n\nconst plugins = [lnPlugin];\nexport default plugins;\n"],"names":[],"sourceRoot":""}
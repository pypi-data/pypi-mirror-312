Metadata-Version: 2.3
Name: django-pyhub-ai
Version: 0.1.4
Summary: Django app library for AI integration
Author-email: Chinseok Lee <me@pyhub.kr>
License: MIT
Classifier: Development Status :: 4 - Beta
Classifier: Framework :: Django
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Requires-Python: >=3.9
Requires-Dist: channels
Requires-Dist: daphne
Requires-Dist: django-cotton
Requires-Dist: django-ninja
Requires-Dist: django-ninja-extra
Requires-Dist: django>=4.0.0
Requires-Dist: httpx
Requires-Dist: langchain-community
Requires-Dist: langchain-core
Requires-Dist: langchain-experimental
Requires-Dist: langchain-openai
Requires-Dist: matplotlib
Requires-Dist: numpy
Requires-Dist: pandas
Requires-Dist: pillow
Requires-Dist: pydantic
Requires-Dist: pyyaml
Requires-Dist: seaborn
Requires-Dist: tabulate
Provides-Extra: dev
Requires-Dist: black; extra == 'dev'
Requires-Dist: django-debug-toolbar; extra == 'dev'
Requires-Dist: isort; extra == 'dev'
Requires-Dist: ruff; extra == 'dev'
Provides-Extra: test
Requires-Dist: pytest; extra == 'test'
Requires-Dist: pytest-asyncio; extra == 'test'
Requires-Dist: pytest-django; extra == 'test'
Requires-Dist: pytest-testdox; extra == 'test'
Description-Content-Type: text/markdown

# django-pyhub-ai

Django의 DRY(Don't Repeat Yourself) 철학을 기반으로 반복적이고 번거로운 작업을 제거하고, 효율적인 에이전트 기반 채팅 서비스를 손쉽게 구축할 수 있도록 돕는 라이브러리입니다.

이 라이브러리는 Django 프로젝트에 자연스럽게 통합되며, OpenAI API와 같은 최신 AI 기술을 활용한 기능들을 간단하게 구현할 수 있는 도구들을 제공합니다. 복잡한 설정이나 반복적인 코드를 작성할 필요 없이, django-pyhub-ai를 통해 에이전트 채팅 서비스 개발을 더욱 간편하고 직관적으로 만들어보세요.

## 주요 특징

- **DRY 철학 준수**: 반복적인 코드 작성 없이 간결한 서비스 구축 가능
- **빠른 통합**: Django 프레임워크와 원활한 통합 지원
- **유연한 API 활용**: OpenAI API 및 기타 AI 서비스와 쉽게 연동
- **구성 요소 제공**: 에이전트 정의, 메시지 처리, 대화 흐름 관리 등 필수 기능 내장
- **토큰 추적**: input/output 토큰 수를 실시간으로 추적하여 채팅 화면에 표시
- **메시지 관리**: 모든 채팅 메시지를 자동으로 저장하고 관리
- **Tools 통합**: 외부 Tools 호출 및 실행 결과를 자동으로 저장하고 추적

django-pyhub-ai와 함께라면 개발자는 비효율적인 반복 작업에서 벗어나 비즈니스 로직에 집중할 수 있습니다.

## 지원 모델

현재 다음과 같은 OpenAI 모델들을 지원합니다:

- **gpt-4o**: 가장 강력한 GPT-4 기반 모델로, 복잡한 추론과 전문적인 작업에 적합
- **gpt-4o-mini**: 경량화된 GPT-4 모델로, 빠른 응답과 효율적인 리소스 사용이 필요한 경우에 적합
- **gpt-4o-turbo**: 향상된 처리 속도와 최적화된 성능을 제공하는 터보 버전 모델

> **Note**: 현재는 위 OpenAI 모델들만 지원하고 있으며, 향후 Anthropic의 Claude를 비롯한 다양한 AI 모델들을 순차적으로 추가할 예정입니다. 지속적인 업데이트를 통해 더 많은 선택지를 제공하도록 하겠습니다.

## 시작하기

1. 라이브러리 설치: `pip install django-pyhub-ai`
2. 프로젝트에 추가 및 설정
3. 간단한 구성으로 에이전트 채팅 서비스 구현

Django 기반 AI 서비스 개발, 이제 django-pyhub-ai로 시작하세요!

Django의 철학 아래 번거로운 부분은 `django-pyhub-ai` 라이브러리에서 지원해드리고, 여러분은 손쉽게 AI 채팅 서비스를 구축하실 수 있도록 도와드리겠습니다.

## 라이선스

본 프로젝트는 [Apache License 2.0](https://www.apache.org/licenses/LICENSE-2.0) 라이선스를 따릅니다.

모든 권리는 저작권자에게 있으며, help@pyhub.kr로 문의주세요.

Metadata-Version: 2.1
Name: underdogcowboy
Version: 0.1.14.13
Summary: Underdog Cowboy (UC): Wrangle Your LLMs with a Smile
License: MIT
Requires-Python: >=3.7
Description-Content-Type: text/markdown
Requires-Dist: vertexai
Requires-Dist: prompt_toolkit
Requires-Dist: python-dotenv
Requires-Dist: keyring
Requires-Dist: groq
Requires-Dist: langsmith
Requires-Dist: reportlab
Requires-Dist: pillow
Requires-Dist: requests-mock
Requires-Dist: rich
Requires-Dist: mdformat
Requires-Dist: textual
Requires-Dist: pyyaml
Requires-Dist: pyperclip
Requires-Dist: uccli>=0.0.5.1



<link rel="icon" type="image/png" href="favicon.png">

<h1 align="center">
<img src="Underdog Cowboy.jpg" width="300">
</h1><br>



# Underdog Cowboy (UC): Wrangle Your LLMs with a Smile ðŸ¤ 

UC is less of a framework and more of a "howdy, partner" approach to getting things done in the wild west of LLMs. It's about letting your agents roam free while you keep a watchful eye, ready to lend a hand when things get a little too... *unpredictable*.

## Here's the gist:

* **Round up your agents:** UC doesn't judge. Got a "Dewey Decimal Classifier" sharing a saloon with a "Shakespearean Sonnet Writer"? No problem. Define their interactions and let them loose.
* **Interventions: Your secret weapon:** Sometimes those agents need a little nudge in the right direction (or maybe a firm talking to). UC lets you step in at any point, review the situation, and whisper sweet nothings (or stern warnings) to your AI companions.
* **Timeline's the limit:** UC keeps a record of all the chit-chat, so you can always rewind, replay, and figure out what went right (or hilariously wrong).

## Think of it as...

* Collaborative storytelling with an AI twist.
* Giving your LLMs a gentle (or not-so-gentle) guiding hand.
* Adding a touch of human intuition to the AI rodeo.

## Why We Use UC:

* **Saddle Up New Riders:** UC is our trusty steed for introducing folks to the exciting world of agentic development. Its simplicity makes it easy to learn, while its flexibility lets creativity run wild.
* **Wrangling Our Own Herd:** Internally, we use UC to build and manage complex AI-powered workflows. It's how we keep our agents in line and ensure they're workin' smarter, not harder.
* **Partners in Progress:** UC helps us empower our clients too. Whether they're just starting their LLM journey or looking for expert assistance, we use UC to build bespoke solutions together.

## The UC Philosophy: Riding the Wave of AI Evolution

At the heart of UC lies a powerful principle:

> As AI capabilities advance, complex tasks will be compressed into simpler operations, allowing us to construct and manage increasingly sophisticated processes by chaining these AI-simplified tasks together.

Here's how this philosophy shapes UC:

1. **Adaptive Task Breakdown:** UC recognizes that the way we break down tasks evolves with AI capabilities. What once required multiple steps might now be accomplished in a single bound. UC's flexible architecture allows you to adjust your workflows as AI grows more capable.

2. **Scalable Complexity:** As simpler tasks become one-step operations for AI, UC helps you chain these together into more complex, higher-level processes. It's like watching your cattle drive grow from a small herd to a mighty stampede!

3. **Future-Proofing:** UC is designed with the future in mind. As AI capabilities expand, UC's intervention system allows you to gradually reduce human oversight where it's no longer needed, while still maintaining control over the big picture.

4. **Meta-Level Evolution:** UC encourages thinking beyond individual tasks. It supports the creation of workflows that can themselves become components of even larger, more ambitious projects. It's not just about herding cattle anymore â€“ it's about managing entire ranches!

5. **Efficiency Through Compression:** By leveraging advanced AI capabilities, UC helps you compress complex workflows into simpler, more manageable chunks. This means you can tackle increasingly sophisticated challenges without getting bogged down in the details.

Ready to saddle up and ride the frontier of AI task management? Check out the code and see what kind of stories you can wrangle with UC!

**Note:** UC is open-source under the MIT License. Feel free to rustle up your own adventures with it.

---

## Frozen Segments Feature

This project includes a "frozen segments" feature in the Timeline and CommandProcessor classes, which is designed to allow for partial preservation and manipulation of conversation history. While this feature is integrated into the codebase, it is not yet fully implemented or actively used in the current release. We've retained it to maintain code coherence and to allow for future development and community contributions. Users should be aware that this feature may undergo changes or full implementation in future releases. If you're interested in contributing to or expanding this feature, please check our Issues page for related tasks or create a new Issue to discuss potential improvements.

[tool.poetry]
name = "algoseek-connector"
version = "2.1.5"
description = "A library for fetching Algoseek datasets using SQL-like queries"
authors = ["algoseek <support@algoseek.com>"]
license = "Apache-2.0"
readme = "README.md"
packages = [{ include = "algoseek_connector", from = "src" }]
include = ["LICENSE", "NOTICE"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: SQL",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Database",
    "Topic :: Software Development",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

[tool.poetry.urls]
"GitHub" = "https://github.com/algoseekgit/algoseek-connector/"
"Documentation" = "https://algoseek-connector.readthedocs.io/"

[tool.poetry.dependencies]
python = "^3.10"
requests = "^2.31.0"
pandas = "^2.0.2"
clickhouse-sqlalchemy = "^0.2.4"
sqlalchemy = "^1.4"
clickhouse-connect = "^0.6.6"
sqlparse = "^0.5.0"
boto3 = "^1.28.11"
botocore = "^1.31.12"
tomli = "^2.0.1"
pendulum = "^3.0.0"
pydantic = "^2.7.1"
pydantic-settings = "^2.2.1"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
pre-commit = "^4.0.0"
pytest-cov = "^5.0.0"
ruff = "^0.7.2"
jupyter = "^1.1.1"
commitizen = "^3.30.0"
notebook = "^7.2.2"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
sphinx = "^7.4.7"
sphinx-copybutton = "^0.5.2"
sphinx-toggleprompt = "^0.5.2"
numpydoc = "^1.8.0"
sphinx-design = "^0.6.1"
autodoc-pydantic = "^2.2.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 119
lint.select = ["F", "W", "E", "I", "D"]
lint.ignore = ["D105", "D107", "D203", "D212", "D213"]
exclude = ["docs/"]

[tool.ruff.lint.extend-per-file-ignores]
"tests/*" = ["D100", "D101", "D102", "D103", "D104"]

[tool.coverage.report]
exclude_also = ["if TYPE_CHECKING:", "class .*\\bProtocol\\):"]

[tool.pytest.ini_options]
testpaths = ["src/tests/unit"]

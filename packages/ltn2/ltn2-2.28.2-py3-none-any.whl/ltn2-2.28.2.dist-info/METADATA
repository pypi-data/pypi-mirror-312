Metadata-Version: 2.1
Name: ltn2
Version: 2.28.2
Summary: A parser for FOL that utilizes NLTK Logic Module to parse and fuzzify FOL rules.
License: Apache 2.0
Author: Emre Kuru
Author-email: emre.kuru@ozu.edu.tr
Requires-Python: >=3.9.0,<4.0.0
Classifier: License :: Other/Proprietary License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Requires-Dist: hyperopt (>=0.2.7,<0.3.0)
Requires-Dist: nbconvert (>=7.16.4,<8.0.0)
Requires-Dist: nbformat (>=5.10.4,<6.0.0)
Requires-Dist: pykeen (>=1.10.2,<2.0.0)
Requires-Dist: pyparsing (>=3.1.2,<4.0.0)
Requires-Dist: pyyaml (>=6.0.2,<7.0.0)
Requires-Dist: seaborn (>=0.13.2,<0.14.0)
Requires-Dist: setuptools (>=75.0.0,<76.0.0)
Requires-Dist: tatsu (>=5.6.1,<6.0.0)
Requires-Dist: torch (>=2.3.1,<3.0.0)
Requires-Dist: torchviz (>=0.0.2,<0.0.3)
Requires-Dist: ucimlrepo (>=0.0.7,<0.0.8)
Description-Content-Type: text/markdown

# LTN_Imp


## Project structure
Overview:

```bash
<root directory>
├── ltn_imp/             # main package (should be named after your project)
│   ├── __init__.py         # python package marker
│   └── __main__.py         # application entry point
│   └── fuzzy_operators     # folder for all of the fuzzy operators
│   └── parsing             # folder for the parser utilizing NLTK Logic and all the needed files
│   
├── test/                   # test package contains unit tests
│   ├── parsing_tests       # folder for unit tests for parser
│   └── learning_tests      # folder for unit tests for fuzzy operators in optimization
│   
├── .github/                # configuration of GitHub CI
│   └── workflows/          # configuration of GitHub Workflows
│       └──  check.yml       # runs tests on multiple OS and versions of Python
│
├── LICENSE                 # license file (Apache 2.0 by default)
├── pyproject.toml          # declares build dependencies
└── poetry.toml             # Poetry settings
```

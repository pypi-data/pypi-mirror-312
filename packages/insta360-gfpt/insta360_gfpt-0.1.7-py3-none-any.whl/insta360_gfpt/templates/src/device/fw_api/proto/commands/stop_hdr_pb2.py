# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: commands/stop_hdr.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import proto.video_pb2 as video__pb2
import proto.extra_info_pb2 as extra__info__pb2

from proto.video_pb2 import *
from proto.extra_info_pb2 import *

DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x17\x63ommands/stop_hdr.proto\x12\x11insta360.messages\x1a\x0bvideo.proto\x1a\x10\x65xtra_info.proto\"C\n\x07StopHdr\x12\x38\n\x0e\x65xtra_metadata\x18\x01 \x01(\x0b\x32 .insta360.messages.ExtraMetadata\"6\n\x0bStopHdrResp\x12\'\n\x05video\x18\x01 \x01(\x0b\x32\x18.insta360.messages.VideoB\x08\xa2\x02\x05INSPBP\x00P\x01\x62\x06proto3')



_STOPHDR = DESCRIPTOR.message_types_by_name['StopHdr']
_STOPHDRRESP = DESCRIPTOR.message_types_by_name['StopHdrResp']
StopHdr = _reflection.GeneratedProtocolMessageType('StopHdr', (_message.Message,), {
  'DESCRIPTOR' : _STOPHDR,
  '__module__' : 'commands.stop_hdr_pb2'
  # @@protoc_insertion_point(class_scope:insta360.messages.StopHdr)
  })
_sym_db.RegisterMessage(StopHdr)

StopHdrResp = _reflection.GeneratedProtocolMessageType('StopHdrResp', (_message.Message,), {
  'DESCRIPTOR' : _STOPHDRRESP,
  '__module__' : 'commands.stop_hdr_pb2'
  # @@protoc_insertion_point(class_scope:insta360.messages.StopHdrResp)
  })
_sym_db.RegisterMessage(StopHdrResp)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\242\002\005INSPB'
  _STOPHDR._serialized_start=77
  _STOPHDR._serialized_end=144
  _STOPHDRRESP._serialized_start=146
  _STOPHDRRESP._serialized_end=200
# @@protoc_insertion_point(module_scope)

# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: commands/sd_card_speed.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x1c\x63ommands/sd_card_speed.proto\x12\x11insta360.messages\"F\n\x0fTestSDCardSpeed\x12\x12\n\nblock_size\x18\x01 \x01(\r\x12\x10\n\x08\x64uration\x18\x02 \x01(\r\x12\r\n\x05times\x18\x03 \x01(\r\"+\n\x13TestSDCardSpeedResp\x12\x14\n\x0cwrite_speeds\x18\x01 \x03(\x01\x42\x08\xa2\x02\x05INSPBb\x06proto3')



_TESTSDCARDSPEED = DESCRIPTOR.message_types_by_name['TestSDCardSpeed']
_TESTSDCARDSPEEDRESP = DESCRIPTOR.message_types_by_name['TestSDCardSpeedResp']
TestSDCardSpeed = _reflection.GeneratedProtocolMessageType('TestSDCardSpeed', (_message.Message,), {
  'DESCRIPTOR' : _TESTSDCARDSPEED,
  '__module__' : 'commands.sd_card_speed_pb2'
  # @@protoc_insertion_point(class_scope:insta360.messages.TestSDCardSpeed)
  })
_sym_db.RegisterMessage(TestSDCardSpeed)

TestSDCardSpeedResp = _reflection.GeneratedProtocolMessageType('TestSDCardSpeedResp', (_message.Message,), {
  'DESCRIPTOR' : _TESTSDCARDSPEEDRESP,
  '__module__' : 'commands.sd_card_speed_pb2'
  # @@protoc_insertion_point(class_scope:insta360.messages.TestSDCardSpeedResp)
  })
_sym_db.RegisterMessage(TestSDCardSpeedResp)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\242\002\005INSPB'
  _TESTSDCARDSPEED._serialized_start=51
  _TESTSDCARDSPEED._serialized_end=121
  _TESTSDCARDSPEEDRESP._serialized_start=123
  _TESTSDCARDSPEEDRESP._serialized_end=166
# @@protoc_insertion_point(module_scope)

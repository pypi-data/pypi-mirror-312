import unittest
import os
from LocalFinder.commands.visualize_tracks import main as visualize_main
import argparse

class TestVisualizeTracks(unittest.TestCase):
    def test_visualize_tracks(self):
        # Input files generated by test_calculate_correlation_FC.py
        input_files = [
            'tests/data_bin_tracks/E071-H3K4me1.pval.signal.chr20.binSize1000000.bedgraph',
            'tests/data_bin_tracks/E100-H3K4me1.pval.signal.chr20.binSize1000000.bedgraph'
        ]
        output_file = 'tests/data_visualize_tracks/visualization.png'  # Output file in tests/data

        # Construct the list of arguments as if from the command line
        args_list = [
            '--input_files', *input_files,
            '--output_file', output_file,
            '--method', 'pyGenomeTracks',
            '--chroms', 'chr20',
            '--region_info', 'chr20', str(0), str(63000000),
        ]

        # Run the command
        visualize_main(args_list)

        # Check that output file exists
        self.assertTrue(os.path.exists(output_file))

    # @classmethod
    # def tearDownClass(cls):
    #     # Remove the generated output file after test
    #     output_file = 'tests/data/visualization.html'
    #     if os.path.exists(output_file):
    #         os.remove(output_file)

if __name__ == '__main__':
    unittest.main()

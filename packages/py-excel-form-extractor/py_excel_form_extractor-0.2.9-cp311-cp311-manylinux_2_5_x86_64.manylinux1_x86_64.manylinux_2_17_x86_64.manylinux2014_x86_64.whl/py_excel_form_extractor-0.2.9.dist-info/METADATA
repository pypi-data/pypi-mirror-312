Metadata-Version: 2.1
Name: py-excel-form-extractor
Version: 0.2.9
Summary: Extract excel form content into structured data.
Home-page: https://github.com/adhadse/excelFormExtractor
Author: Anurag Dhadse
Author-email: hello@adhadse.com
License: 
        The MIT License (MIT)
        
        Copyright (c) 2018 GitHub, Inc. and contributors
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in
        all copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
        THE SOFTWARE.
        
Keywords: go,golang,python,excel,xlsx,form,extractor
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Description-Content-Type: text/markdown
License-File: LICENSE

# Excel extractor
Extract excel form content into structured data.

## Usage

1. SECCF extraction: supplier export control classification Form/declaration

```python
from py_excel_form_extractor import extractor, go

company_names = extractor.CompanyNameList()  # the company name which can be mentioned in the file
for company_name in ["Boeing", "Boeing Ltd"]:
    company_names.append(company_name)

extr = extractor.MakeSECCFExtractor("Example.xlsx", company_names)
extraction = extr.Extract()

# convert to JSON string
extr_json = extr.ToJson()
```

## BUILD

1. Building the go binary
```bash
go build -o gobinary ./cmd/excelExtractor
```

2. Running the program without building the binary
```bash
go build -o ./bin/excel-extrator ./cmd/excelFormExtractor/main.go
```
3. Run the binary:
```bash
./bin/excel-extrator
```

## Local Python bindings generation and installation

```bash
pip3 install pybindgen wheel
gopy build --output=py_excel_form_extractor -vm=python3 ./pkg/*
RELEASE_VERSION=YOUR_UPDATED_PACKAGE_VERSION python3 setup.py bdist_wheel --force

# install wheel file
wheel_file=$(ls dist/*.whl | head -n1); pip3 install $wheel_file
```

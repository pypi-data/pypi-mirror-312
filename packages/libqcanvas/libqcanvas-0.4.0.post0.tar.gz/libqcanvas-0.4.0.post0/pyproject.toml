[tool.poetry]
name = "libqcanvas"
version = "0.4.0.post0"
description = "Does most of the heavy lifting for qcanvas"
authors = ["QCanvas <QCanvas@noreply.codeberg.org>"]
readme = "README.md"
exclude = [
    "qcanvas_backend/gql_queries/*.gql",
    "qcanvas_backend/gql_queries/*.graphql",
    "qcanvas_backend/gql_queries/canvas_introspection.json",
    "qcanvas_backend/gql_queries/graphql.config.yml",
]

[tool.poetry.dependencies]
python = "^3.10"
SQLAlchemy = "^2.0.29"
gql = "^3.5.0"
beautifulsoup4 = "^4.12.3"
asynctaskpool = "^0.2.0"
libqcanvas-clients = "^0.5.1"
pydantic = "^2.7.0"
httpx = "^0.28.0"
yt-dlp = ">=2024.4.9"
asynchronize = "^0.0.1"
alembic = "^1.13.3"
aiofile = "^3.9.0"

[tool.poetry.group.dev-tools]
optional = true

[tool.poetry.group.dev-tools.dependencies]
qenerate-custom = "^0.7.0"
rich = "^13.7.1"
pre-commit = "^3.8.0"
aiosqlite = "^0.20.0"
shelved_cache_fixed = "^0.3.1"
cachetools = "^5.3.3"

[tool.poetry.group.local-deps]
optional = true

[tool.poetry.group.local-deps.dependencies]
#asynctaskpool = { path = "../TaskPool/", develop = true }
#libqcanvas-clients = { path = "../libqcanvas_clients/", develop = true }

[tool.poetry.group.test.dependencies]
pytest = "^8.1.1"
pytest-asyncio = "^0.23.7"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = "black"

[tool.pytest.ini_options]
log_cli = true
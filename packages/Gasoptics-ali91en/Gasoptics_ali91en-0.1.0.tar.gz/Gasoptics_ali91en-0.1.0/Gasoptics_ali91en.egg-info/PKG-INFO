Metadata-Version: 2.1
Name: Gasoptics-ali91en
Version: 0.1.0
Summary: A library for thermodynamic and transport property calculations of gases.
Home-page: https://github.com/karimialii/gasoptics
Author: Ali Karimi
Author-email: karimi1991ali@gmail.com
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Requires-Python: >=3.6
Description-Content-Type: text/markdown
License-File: LICENSE.txt

```markdown
# Gasoptics

Gasoptics is a Python library for calculating thermodynamic and transport properties of gases. It includes functions for calculating specific heat, viscosity, thermal conductivity, and other properties using both ideal and real gas models.

## Features

- **Thermodynamics**: Includes functions for calculating specific heat, enthalpy, entropy, and more.
- **Transport Properties**: Includes functions for calculating viscosity, thermal conductivity, and kinematic viscosity.
- **Equations of State**: Includes Peng-Robinson and other equations for gas density calculations.
- **Utility Functions**: Helper functions for various thermodynamic and transport property calculations.

## Installation

To install **Gasoptics**, you can clone the repository or install it directly from a source distribution.

### Option 1: Install from source

1. Clone the repository:

   ```bash
   git clone https://github.com/yourusername/gasoptics.git
   ```

2. Navigate into the project directory:

   ```bash
   cd gasoptics
   ```

3. Install the package using pip:

   ```bash
   pip install .
   ```

### Option 2: Install via PyPI (Coming soon)

Once the package is published on PyPI, you can install it via pip:

```bash
pip install gasoptics
```

## Requirements

- Python 3.x
- NumPy
- Matplotlib (for plotting)
- CoolProp (for fluid properties)

## Usage

Here’s an example of how to use the library to calculate thermodynamic and transport properties:

```python
from gasoptics import calculate_specific_heat_cp, calculate_dynamic_viscosity, calculate_thermal_conductivity

# Define temperature in Kelvin
T = 300  # K

# Calculate specific heat at constant pressure (Cp)
Cp = calculate_specific_heat_cp(T)
print(f"Specific Heat at Constant Pressure (Cp): {Cp} J/kg·K")

# Calculate dynamic viscosity
mu = calculate_dynamic_viscosity(T)
print(f"Dynamic Viscosity: {mu} Pa·s")

# Calculate thermal conductivity
k = calculate_thermal_conductivity(T)
print(f"Thermal Conductivity: {k} W/m·K")
```

### State of the Gas (Vapor, Liquid, Saturated)

You can also determine if the gas is in the vapor, liquid, or saturated state using the `get_air_state` function:

```python
P = 101325  # Pressure in Pascals
T = 300     # Temperature in Kelvin

state = get_air_state(P, T)
print(f"The state of the gas is: {state}")
```

## Tests

The package includes tests for all the core functions to ensure correctness. To run the tests, use the following command:

```bash
pytest tests/
```

## Contributing

Contributions are welcome! Please fork the repository and submit pull requests for any improvements or bug fixes.

1. Fork the repository.
2. Create a new branch (`git checkout -b feature/your-feature`).
3. Make your changes and commit (`git commit -am 'Add new feature'`).
4. Push to your branch (`git push origin feature/your-feature`).
5. Submit a pull request.

## License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.

## Acknowledgments

- This package relies on **CoolProp** for fluid property calculations. 
- Thanks to the contributors and maintainers of **NumPy** and **Matplotlib**.
```

### How to Use:
1. **Clone the Repository**: You can clone the repository using the provided `git clone` command.
2. **Install Dependencies**: Make sure you have all dependencies like NumPy, Matplotlib, and CoolProp installed.
3. **Usage Example**: The README includes an example for using the library's functions for calculating properties like specific heat, viscosity, and thermal conductivity.
4. **Running Tests**: Run tests using `pytest` to ensure that the library works as expected.
5. **Contributing**: The contributing section provides instructions for how others can contribute to the project.

This README will serve as a guide for anyone looking to use or contribute to the `gasoptics` library.

Let me know if you need any modifications!

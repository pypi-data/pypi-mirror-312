Metadata-Version: 2.1
Name: janito
Version: 0.2.0
Summary: Language-Driven Software Development Assistant powered by Claude AI
Home-page: https://github.com/joaompinto/janito
Author: João M. Pinto
Author-email: "João M. Pinto" <lamego.pinto@gmail.com>
License: MIT
Project-URL: Homepage, https://github.com/joaompinto/janito
Project-URL: Documentation, https://github.com/joaompinto/janito#readme
Project-URL: Repository, https://github.com/joaompinto/janito.git
Keywords: ai,development,claude,assistant,code
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: anthropic
Requires-Dist: prompt_toolkit
Requires-Dist: rich
Requires-Dist: typer
Requires-Dist: watchdog
Requires-Dist: pytest


Janito is an open source Language-Driven Software Development Assistant powered by Claude AI. It helps developers understand, modify, and improve their Python code through natural language interaction.

## Features

- Natural language code interactions
- File system monitoring and auto-restart
- Interactive command-line interface 
- Workspace management and visualization
- History and session management
- Debug mode for troubleshooting
- Syntax error detection and fixing
- Python file execution
- File editing with system editor

## Installation

```bash
# Install package
pip install janito
```

## Usage

Start Janito in your project directory:

```bash
python -m janito
```

Or launch with options:

```bash 
python -m janito --debug  # Enable debug mode
python -m janito --no-watch  # Disable file watching
```

### Commands

- `.help [command]` - Show help information. Specify a command for details.
- `.exit` - Exit the console
- `.clear` - Clear console output 
- `.debug` - Toggle debug mode
- `.workspace [--missing]` - Show workspace structure. Use --missing to show excluded files.
- `.last` - Show last Claude response
- `.show <file>` - Show file content with syntax highlighting
- `.check` - Check workspace Python files for syntax errors
- `.p <file>` - Run a Python file
- `.python <file>` - Run a Python file (alias for .p)
- `.edit <file>` - Open file in system editor
- `.missing` - Show files excluded from the workspace based on patterns
- `.edit <file>` - Open file in system editor

### Input Formats

- `!request` - Request file changes (e.g. '!add logging to utils.py')  
- `request?` - Get information and analysis without changes
- `request` - General discussion and queries
- `$command` - Execute shell commands

## Configuration

Requires an Anthropic API key set via environment variable:

```bash
export ANTHROPIC_API_KEY='your_api_key_here'
```

## Development

The package consists of several modules:

- `janito.py` - Core functionality and CLI interface
- `change.py` - File modification and change tracking 
- `claude.py` - Claude API interaction
- `console.py` - Interactive console and command handling
- `commands.py` - Command implementations
- `prompts.py` - Prompt templates and builders
- `watcher.py` - File system monitoring
- `workspace.py` - Workspace analysis and management
- `xmlchangeparser.py` - XML parser for file changes
- `watcher.py` - File system monitoring

## License

MIT License

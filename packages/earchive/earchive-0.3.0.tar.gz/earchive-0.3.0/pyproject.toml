[tool.poetry]
name = "earchive"
version = "0.3.0"
description = "Set of tools for electronic archivists"
authors = ["Matteo Bouvier <matteo.bouvier@hotmail.fr>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
rich = "^13.7.0"
natsort = "^8.4.0"
click = "^8.1.7"
psutil = "^6.1.0"
typing-extensions = "^4.12.2"

# optional
pytest = { version = "^7.4.4", optional=true }
vulture = { version = "^2.11", optional=true }
pre-commit = { version = "^3.6.0", optional=true }
mypy = { version = "^1.8.0", optional=true }
scalene = { version = "^1.5.45", optional=true }
ruff = { version = "^0.6.9", optional=true }
yelp-gprof2dot = { version = "^1.2.0", optional=true }
types-psutil = {version = "^6.1.0.20241102", optional=true }

[tool.poetry.extras]
dev = ["pre-commit", "scalene", "yelp-gprof2dot"]
ci = ["pytest", "vulture", "mypy", "ruff", "types-psutil"]

[tool.poetry.scripts]
earchive = "earchive.main:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 120
exclude = [
    "vulture_whitelist.py",
]

[tool.vulture]
exclude = [
    "earchive/lib"
]
paths = [
    "earchive", 
    "vulture_whitelist.py",
]

[tool.mypy]
exclude = [
    "earchive/lib"
]

[tool.pyright]
include = ["earchive", "tests"]

reportAny = false
reportExplicitAny = false
reportUnusedCallResult = false

# SPDX-License-Identifier: CC0-1.0
# SPDX-FileCopyrightText: 2024 Anna <cyber@sysrq.in>

[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "find-work-pkgcheck"
version = "1.0.0"
authors = [
    {name = "Anna", email = "cyber@sysrq.in"},
]
dynamic = ["description"]
readme = "README.md"
license = {text = "WTFPL"}
requires-python = ">=3.11"
dependencies = [
    "click",
    "click-aliases",
    "find-work<2,>=1",
    "pkgcheck",
    "pkgcore",
    "pydantic<3,>=2",
    "sortedcontainers",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Framework :: Pydantic",
    "Framework :: Pydantic :: 2",
    "Intended Audience :: Developers",
    "License :: DFSG approved",
    "Operating System :: POSIX",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: System :: Software Distribution",
    "Topic :: Utilities",
    "Typing :: Typed",
]
keywords = ["gentoo", "ebuild", "repository", "maintainer", "pkgcheck"]

[project.optional-dependencies]
test = [
    "pytest",
    "pytest-import-check",
]

[project.entry-points."find_work.plugins.v1"]
pkgcheck = "find_work.plugins.pkgcheck_scan"

[project.urls]
Home = "https://find-work.sysrq.in/"
Source = "https://git.sysrq.in/find-work-plugins"
Issues = "https://bugs.sysrq.in/enter_bug.cgi?product=Software&component=find-work"
Changelog = "https://git.sysrq.in/find-work-plugins/plain/find-work-pkgcheck/ChangeLog"

[tool.flit.module]
name = "find_work.plugins.pkgcheck_scan"

[tool.flit.sdist]
include = [
    "ChangeLog",
    "man/",
]

[tool.pytest.ini_options]
addopts = "--doctest-modules --import-check"

[tool.mypy]
disallow_untyped_defs = true
no_implicit_optional = true

[[tool.mypy.overrides]]
module = [
    "tests.*",
]
# requiring explicit types for all test methods would be cumbersome
disallow_untyped_defs = false
check_untyped_defs = true

[[tool.mypy.overrides]]
module = [
    "click_aliases",
    "pkgcheck",
    "pkgcore",
    "pkgcore.*",
]
ignore_missing_imports = true

[tool.tox]
requires = ["tox>=4.21"]
min_version = "4.21"
env_list = ["3.11", "3.12", "3.13", "lint"]

[tool.tox.env_run_base]
description = "run the tests + mypy under {base_python}"
ignore_errors = true
deps = [
    "mypy",
    "sortedcontainers-stubs",
]
extras = [
    "test",
]
commands = [
    ["pytest", "-vv", "{tty:--color=yes}", "{posargs:find_work}"],
    ["mypy", "--explicit-package-bases", "{posargs:find_work}"],
]

[tool.tox.env.lint]
description = "run the linters"
ignore_errors = true
skip_install = true
deps = [
    "bandit",
    "pycodestyle",
    "pyflakes",
]
commands = [
    ["pyflakes", "{posargs:find_work}"],
    ["pycodestyle", "{posargs:find_work}"],
    ["bandit", "-r", "{posargs:find_work}"],
]

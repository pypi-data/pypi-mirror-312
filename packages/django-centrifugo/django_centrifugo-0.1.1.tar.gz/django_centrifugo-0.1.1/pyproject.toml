[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "django-centrifugo"
dynamic = ["version"]
description = "Implementation of an outbox model for Centrifugo"
readme = "README.md"
requires-python = ">=3.10, <3.14"
license = "MIT"
keywords = [
  "django",
  "centrifugo",
  "outbox",
  "centrifugo-outbox",
]
authors = [
  { name = "Sergei Pikhovkin", email = "s@pikhovkin.ru" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Environment :: Web Environment",
  "Framework :: Django :: 4.0",
  "Framework :: Django :: 4.1",
  "Framework :: Django :: 4.2",
  "Framework :: Django :: 5.0",
  "Framework :: Django :: 5.1",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: System :: Monitoring",
  "Topic :: Utilities",
]
dependencies = [
  "Django>=4.0, <5.2",
]

[project.urls]
Documentation = "https://github.com/pikhovkin/django-centrifugo#readme"
Issues = "https://github.com/pikhovkin/django-centrifugo/issues"
Source = "https://github.com/pikhovkin/django-centrifugo"

[tool.hatch.version]
path = "django_centrifugo/__about__.py"

[tool.hatch.build]
include = [
  "django_centrifugo/",
  "README.md",
  "LICENSE",
  "pyproject.toml",
]

[tool.hatch.envs.default]
python = "3.11"
dependencies = [
  "coverage[toml]>=6.5",
  "pytest",
  "pytest-django",
]
[tool.hatch.envs.default.scripts]
test = "pytest {args:django_centrifugo/tests.py}"
test-cov = "coverage run -m pytest {args:django_centrifugo/tests.py}"
cov-report = [
  "- coverage combine",
  "coverage report",
  "coverage json",
]
cov = [
  "test-cov",
  "cov-report",
]

[tool.hatch.envs.all.overrides]
matrix.django.dependencies = [
  {value="Django~=4.0.0", if=["4.0"]},
  {value="Django~=4.1.0", if=["4.1"]},
  {value="Django~=4.2.0", if=["4.2"]},
  {value="Django~=5.0.0", if=["5.0"]},
  {value="Django~=5.1.0", if=["5.1"]},
]

[[tool.hatch.envs.all.matrix]]
python = ["3.10", "3.11", "3.12", "3.13"]
django = ["4.0", "4.1", "4.2", "5.0", "5.1"]

[tool.hatch.envs.typing]
dependecies = [
  "django-stubs[compatible-mypy]",
]

[tool.hatch.envs.lint]
python = "3.11"
#detached = true
template = "default"
dependencies = [
  "black>=23.1.0",
  "isort>=5.13.2",
  "mypy>=1.10, <1.11",
  "ruff>=0.4.2, <0.4.3",
  "django-stubs[compatible-mypy]",
]
[tool.hatch.envs.lint.scripts]
typing = "mypy --install-types --non-interactive {args:django_centrifugo}"
style = [
  "isort {args:django_centrifugo}",
  "ruff {args:django_centrifugo}",
  "black --check --diff {args:django_centrifugo}",
]
fmt = [
  "black {args:django_centrifugo}",
  "ruff --fix {args:django_centrifugo}",
  "style",
]
all = [
  "fmt",
  "style",
  "typing",
]

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "tests.conf.settings"

[tool.mypy]
plugins = ["mypy_django_plugin.main"]

[tool.django-stubs]
django_settings_module = "tests.conf.settings"

[tool.black]
target-version = ["py311"]
line-length = 120
skip-string-normalization = true

[tool.ruff]
src = [
  "django_centrifugo",
]
target-version = "py311"
line-length = 120
indent-width = 4
lint.select = [
  "A",
  "ARG",
  "B",
  "C",
  "DTZ",
  "E",
  "EM",
  "F",
  "FBT",
  "I",
  "ICN",
  "ISC",
  "N",
  "PLC",
  "PLE",
  "PLR",
  "PLW",
  "Q",
  "RUF",
  "S",
  "T",
  "TID",
  "UP",
  "W",
  "YTT",
]
lint.ignore = [
  "Q000",  # Single quotes found but double quotes preferred
#  "C408",
#  "T201",
  # Allow non-abstract empty methods in abstract base classes
  "B027",
  # Allow boolean positional values in function calls, like `dict.get(... True)`
  "FBT003",
  # Ignore checks for possible passwords
  "S105", "S106", "S107",
  # Ignore complexity
  "C901", "PLR0911", "PLR0912", "PLR0913", "PLR0915",
]
lint.unfixable = [
  # Don't touch unused imports
  "F401",
]
extend-exclude = [
  "*/migrations*",
  "manage.py",
]

[tool.ruff.format]
quote-style = "single"
indent-style = "space"
line-ending = "auto"

[tool.ruff.lint.isort]
known-first-party = ["rx_base"]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.flake8-quotes]
inline-quotes="single"

[tool.ruff.lint.per-file-ignores]
# Tests can use magic values, assertions, and relative imports
"tests/**/*" = ["PLR2004", "S101", "TID252"]

[tool.coverage.run]
source_pkgs = ["django_centrifugo"]
branch = true
parallel = true
omit = [
  "django_centrifugo/__about__.py",
]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]
